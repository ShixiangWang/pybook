{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4ea4\u4e92\u7684 Python\uff08Interactive Python\uff09 \u00b6 \u4e00\u672c Python \u6570\u636e\u5206\u6790\u5165\u95e8\u56fe\u4e66\uff0c2020 \u5e74 7 \u6708\u51fa\u7248\uff0c \u4eac\u4e1c \u548c \u5f53\u5f53 \u7b49\u5e73\u53f0\u6709\u552e\uff0c\u611f\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u8d2d\u4e70\u3002\u672c\u4ed3\u5e93\u5b58\u50a8\u4e86\u51fa\u7248\u6821\u5bf9\u524d\u7684\u7248\u672c\uff08\u53ef\u80fd\u5b58\u5728\u672a\u6821\u5bf9\u7684\u95ee\u9898\u548c\u9519\u8bef\uff09\uff0c\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7 Markdown/docx \u6587\u4ef6\u6216\u8005 GitHub \u63d0\u4f9b\u7684\u7f51\u9875 \u9605\u8bfb\u3002 \u8bf7\u52ff\u6076\u610f\u5206\u4eab\u548c\u4f20\u64ad\uff0c\u8fdd\u6743\u5fc5\u7a76\uff01","title":"\u9605\u8bfb\u8bf4\u660e"},{"location":"#pythoninteractive-python","text":"\u4e00\u672c Python \u6570\u636e\u5206\u6790\u5165\u95e8\u56fe\u4e66\uff0c2020 \u5e74 7 \u6708\u51fa\u7248\uff0c \u4eac\u4e1c \u548c \u5f53\u5f53 \u7b49\u5e73\u53f0\u6709\u552e\uff0c\u611f\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u8d2d\u4e70\u3002\u672c\u4ed3\u5e93\u5b58\u50a8\u4e86\u51fa\u7248\u6821\u5bf9\u524d\u7684\u7248\u672c\uff08\u53ef\u80fd\u5b58\u5728\u672a\u6821\u5bf9\u7684\u95ee\u9898\u548c\u9519\u8bef\uff09\uff0c\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7 Markdown/docx \u6587\u4ef6\u6216\u8005 GitHub \u63d0\u4f9b\u7684\u7f51\u9875 \u9605\u8bfb\u3002 \u8bf7\u52ff\u6076\u610f\u5206\u4eab\u548c\u4f20\u64ad\uff0c\u8fdd\u6743\u5fc5\u7a76\uff01","title":"\u4ea4\u4e92\u7684 Python\uff08Interactive Python\uff09"},{"location":"0-%E5%89%8D%E8%A8%80/","text":"\u524d\u8a00 \u00b6 \u7f16\u5199\u80cc\u666f \u00b6 \u5982\u4eca\uff0c\u6765\u81ea\u624b\u673a\u3001\u4e92\u8054\u7f51\u3001\u7269\u8054\u7f51\u3001\u79d1\u5b66\u5b9e\u9a8c\u3001\u65b0\u95fb\u7b49\u5404\u5904\u7684\u4fe1\u606f\u6bcf\u5929\u521b\u9020\u7740\u6570\u4ee5\u4e07\u4ebf\u5b57\u8282\u7684\u6570\u636e\u3002\u5728\u8fd9\u4e07\u7269\u4e92\u8054\u7684\u65f6\u4ee3\uff0c\u4fe1\u606f\u6280\u672f\u5c06\u4eba\u7c7b\u5bf9\u6570\u636e\u7684\u521b\u9020\u529b\u4e00\u6ce2\u53c8\u4e00\u6ce2\u5730\u63a8\u5411\u65b0\u7684\u5dc5\u5cf0\u3002\u6211\u4eec\u5bf9\u8ba1\u7b97\u673a\u3001\u624b\u673a\u4e2d\u5404\u79cd App \u7684\u6bcf\u4e00\u6b21\u70b9\u51fb\u4e0e\u5b57\u7b26\u8f93\u5165\uff0c\u5bf9\u6b4c\u66f2\u3001\u6587\u7ae0\u7684\u6bcf\u4e00\u6b21\u70b9\u8d5e\u3001\u559c\u6b22\u3001\u8bc4\u8bba\u7b49\u64cd\u4f5c\u90fd\u5c06\u96f6\u6563\u5355\u8584\u7684\u6570\u636e\u6c47\u5165\u4e86\u4fe1\u606f\u7684\u6d77\u6d0b\uff0c\u5728\u5927\u6570\u636e\u3001\u4eba\u5de5\u667a\u80fd\u6280\u672f\u7684\u8fd0\u7528\u4e0b\u6fc0\u8361\u51fa\u65b0\u7684\u6d6a\u82b1\u3002\u800c\u5728\u8fd9\u7247\u6c6a\u6d0b\u5927\u6d77\u4e0b\uff0c\u6570\u636e\u79d1\u5b66\u6210\u4e3a\u6c89\u6dc0\u4e0b\u6765\u7684\u7406\u8bba\u4e0e\u79d1\u5b66\u57fa\u7840\u3002 \u4f5c\u4e3a\u5f53\u524d\u6700\u6d41\u884c\u7684\u7f16\u7a0b\u8bed\u8a00\u4e4b\u4e00\uff0cPython\u5728\u8fc7\u53bb\u51e0\u5341\u5e74\u5df2\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7cfb\u7edf\u7ba1\u7406\u4efb\u52a1\u7684\u5904\u7406\u548c\u7f51\u7edc\u7f16\u7a0b\u7b49\u9886\u57df\uff0c\u63a5\u89e6\u8fc7\u7f51\u7edc Web \u7f16\u7a0b\u8bfb\u8005\u60f3\u5fc5\u5f88\u719f\u6089\u57fa\u4e8ePython\u8bed\u8a00\u7684 Django \u6846\u67b6\u3002\u5f97\u76ca\u4e8e\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u7684\u5174\u8d77\uff0c\u8fd1\u4e9b\u5e74 Python \u5728\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\u7efd\u653e\u51fa\u65b0\u7684\u5149\u8292\u3002\u5728 IEEE \u53d1\u5e03\u7684 2017 \u5e74\u7f16\u7a0b\u8bed\u8a00\u6392\u884c\u699c\u4e2d\uff0cPython \u9ad8\u5c45\u9996\u4f4d\u3002\u4e0d\u540c\u4e8e MATLAB \u7b49\u5546\u4e1a\u8f6f\u4ef6\uff0cPython \u662f\u5b8c\u5168\u514d\u8d39\u548c\u5f00\u6e90\u7684\uff1b\u4e0d\u540c\u4e8e R \u7b49\u4e3b\u8981\u7528\u4e8e\u7edf\u8ba1\u5206\u6790\u4e0e\u5efa\u6a21\u7684\u5f00\u6e90\u8f6f\u4ef6\u6bd4\u8f83\u96be\u4ee5\u5c06\u6210\u679c\u6269\u5c55\u4e3a\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f\uff0cPython \u6709\u7740\u975e\u5e38\u4e30\u5bcc\u7684\u6269\u5c55\u5e93\uff08\u6a21\u5757\uff09\uff0c\u53ef\u4ee5\u8f7b\u677e\u5b8c\u6210\u5404\u79cd\u9ad8\u7ea7\u4efb\u52a1\uff0c\u5c06\u9879\u76ee\u7684\u6240\u6709\u9700\u6c42\u4e00\u8d77\u5b9e\u73b0\u3002 \u7136\u800c\uff0c\u56fd\u5185\u5c11\u6709\u805a\u7126\u4e8e\u6570\u636e\u5206\u6790\u9886\u57df\u7684 Python \u56fe\u4e66\uff0c\u6765\u81ea\u56fd\u5916\u7684\u8bd1\u4f5c\u5927\u591a\u8d77\u70b9\u8f83\u9ad8\uff0c\u5e76\u4e0d\u5341\u5206\u9002\u5408\u96f6\u57fa\u7840\u7684\u8bfb\u8005\u5b66\u4e60\u548c\u4f7f\u7528\u3002\u56e0\u6b64\uff0c\u6211\u5199\u4f5c\u4e86\u672c\u4e66\u2014\u2014\u300a\u4ea4\u4e92\u7684 Python\uff1a\u6570\u636e\u5206\u6790\u5165\u95e8\u300b\u3002\u201c\u4ea4\u4e92\u201d\u4e00\u8bcd\u53ef\u80fd\u66f4\u5bb9\u6613\u8ba9\u4eba\u4eec\u8054\u60f3\u5230\u201c\u4eba\u673a\u4ea4\u4e92\u201d\uff0c\u767e\u5ea6\u767e\u79d1\u4e2d\u7684\u89e3\u91ca\u4e3a\u201c\u4e00\u95e8\u7814\u7a76\u7cfb\u7edf\u4e0e\u7528\u6237\u4e4b\u95f4\u4ea4\u4e92\u5173\u7cfb\u7684\u5b66\u95ee\u201d\u3002\u4e0e\u666e\u901a\u7684 Python \u7f16\u7a0b\u6216\u5176\u4ed6\u7f16\u7a0b\uff08\u201c\u7f16\u8f91-\u7f16\u8bd1-\u8fd0\u884c\u201d\u7684\u5de5\u4f5c\u6a21\u5f0f\uff09\u6709\u6240\u4e0d\u540c\uff0c\u5229\u7528 Python \u5904\u7406\u6570\u636e\u65f6\uff0c\u7528\u6237\u80fd\u591f\u611f\u53d7\u5230\u4e00\u79cd\u6781\u5f3a\u7684\u4ea4\u4e92\u6027\uff0c\u5728\u6570\u636e\u5206\u6790\u65f6\u6211\u4eec\u5e38\u5e38\u7f3a\u4e4f\u660e\u786e\u7684\u76ee\u7684\u548c\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u800c\u4e0d\u65ad\u5730\u5c1d\u8bd5\u5404\u79cd\u5206\u6790\u2014\u2014\u952e\u5165\u4ee3\u7801\u3001\u67e5\u770b\u7ed3\u679c\u3001\u4fee\u6b63\u3001\u91cd\u65b0\u8fd0\u884c\u67e5\u770b\u7ed3\u679c\uff0c\u8fd9\u4e00\u4e0d\u65ad\u5faa\u73af\u7684\u8fc7\u7a0b\u5f80\u5f80\u662f\u57fa\u4e8e\u63a2\u7d22\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u7b80\u5316\u4e3a\u201c\u8fd0\u884c-\u63a2\u7d22\u201d\u7684\u5de5\u4f5c\u6a21\u5f0f\u3002\u9664\u6b64\u4e4b\u5916\uff0c \u52a8\u6001\u6587\u6863 \u662f\u6570\u636e\u5206\u6790\u7684\u4e00\u4e2a\u65b0\u7684\u6d41\u884c\u8d8b\u52bf\uff0c\u666e\u901a\u7684\u7f16\u7a0b\u662f\u8fdb\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\uff0c\u6570\u636e\u5206\u6790\u5219\u662f\u8fdb\u884c\u6570\u636e\u7684\u63a2\u7d22\u4ee5\u53ca\u751f\u6210\u76f8\u5173\u62a5\u8868\u4f9b\u7528\u6237\u9605\u8bfb\u548c\u7814\u7a76\u3002\u6240\u4ee5\u5728\u672c\u4e66\u7684\u7ed3\u6784\u5b89\u6392\u4e0a\uff0c\u6211\u6dfb\u52a0\u4e86\u5173\u4e8e Markdown \u6807\u8bb0\u8bed\u8a00\u7684\u5185\u5bb9\u3002 \u6570\u636e\u5206\u6790\u8fc7\u7a0b\uff0c\u5c31\u5e94\u5f53\u50cf\u5199\u6587\u7ae0\u4e00\u6837 \u3002 \u8c01\u5f53\u9605\u8bfb\u6b64\u4e66 \u00b6 \u672c\u4e66\u662f Python\u6570\u636e\u5206\u6790\u7684\u5165\u95e8\u6559\u7a0b\uff0c \u4e3b\u8981\u4e3a\u65b0\u624b\u8bbe\u8ba1 \uff0c\u4e5f\u540c\u6837\u9002\u7528\u4e8e\u60f3\u8981\u4e86\u89e3\u6216\u8005\u6253\u7b97\u8fdb\u5165\u6570\u636e\u5206\u6790\u9886\u57df\u7684\u7a0b\u5e8f\u5458\u3002\u6ce8\u610f\uff0c \u672c\u4e66\u7edd\u4e0d\u662f\u4e00\u672c\u6280\u672f\u624b\u518c \uff0c\u5176\u4e2d\u6ca1\u6709\u8bb2\u89e3\u5173\u4e8e Python \u7684\u6240\u6709\u9886\u57df\u7684\u77e5\u8bc6\uff0c\u6bd4\u5982\u7f51\u7edc\u7f16\u7a0b\u3001\u6e38\u620f\u7f16\u7a0b\u3001\u754c\u9762\u8bbe\u8ba1\u7b49\uff1b\u4e5f\u4e0d\u4f1a\u4e8b\u65e0\u5de8\u7ec6\u5730\u8bb2\u89e3 Python \u7684\u6240\u6709\u57fa\u7840\u77e5\u8bc6\uff0c\u800c\u662f\u4fa7\u91cd\u4e8e\u89e3\u8bfb\u6570\u636e\u5206\u6790\u548c\u79d1\u5b66\u8ba1\u7b97\u77e5\u8bc6\u3002 \u672c\u4e66\u7279\u8272 \u00b6 \u5b9e\u4f8b\u4e30\u5bcc\uff0c\u7b80\u5355\u6613\u61c2\u3002\u4ece\u7b80\u5355\u7684\u6570\u636e\u51fa\u53d1\uff0c\u8ba9\u8bfb\u8005\u805a\u7126\u4e8e\u601d\u8003\u3001\u7406\u89e3\u548c\u638c\u63e1\u5206\u6790\u903b\u8f91\uff0c\u7b80\u5355\u6613\u5b66\uff0c\u4e8b\u534a\u529f\u500d\u3002 \u5faa\u5e8f\u6e10\u8fdb\uff0c\u6df1\u5165\u6d45\u51fa\u3002\u672c\u4e66\u7684\u7ae0\u8282\u5b89\u6392\u7531\u6613\u5230\u96be\uff0c\u7531\u6d45\u53ca\u6df1\uff0c\u4e3b\u8981\u91c7\u7528 IPython Shell \u5c55\u793a\u4ee3\u7801\uff0c\u4ee3\u7801\u7b80\u6d01\u4f18\u7f8e\uff0c\u8f93\u5165\u8f93\u51fa\u6e05\u6670\u6613\u61c2\u3002 \u5185\u5bb9\u5145\u5b9e\uff0c\u5168\u9762\u8986\u76d6\u3002\u6db5\u76d6 Python \u57fa\u7840\u77e5\u8bc6\u3001\u6570\u636e\u5bfc\u5165\u3001\u6570\u636e\u5206\u6790\u548c\u53ef\u89c6\u5316\u7b49\u65b9\u9762\u7684\u57fa\u7840\u77e5\u8bc6\u3002 \u968f\u5b66\u968f\u7528\uff0c\u4e3e\u4e00\u53cd\u4e09\u3002\u4ece\u7b80\u5355\u7684\u9700\u6c42\u51fa\u53d1\uff0c\u9610\u8ff0\u903b\u8f91\uff0c\u5b9e\u4f8b\u65b9\u6848\u53ef\u4ee5\u4f5c\u4e3a\u6a21\u677f\u521d\u6b65\u5e94\u7528\u5230\u5b9e\u9645\u5de5\u4f5c\u573a\u666f\u3002\u672c\u4e66\u5c06 Markdown \u4f5c\u4e3a\u7f16\u7a0b\u57fa\u7840\u7684\u4e00\u90e8\u5206\u52a0\u4ee5\u4ecb\u7ecd\uff0c\u4ee5\u4f7f\u8bfb\u8005\u5b66\u4f1a\u8bb0\u5f55\u548c\u5206\u4eab\u77e5\u8bc6\u3002 \u5185\u5bb9\u7b80\u4ecb \u00b6 \u672c\u4e66\u5171\u5206\u4e3a 15 \u7ae0\u3002 \u7b2c 1 \u7ae0\u4ecb\u7ecd Python \u8f6f\u4ef6\u7684\u5b89\u88c5\u4e0e\u914d\u7f6e\u3002 \u7b2c 2 \u7ae0\u4ecb\u7ecd Python \u7684\u57fa\u672c\u7f16\u7a0b\u65b9\u5f0f\u548c\u6570\u636e\u7c7b\u578b\u3002 \u7b2c 3 \u7ae0\u4ecb\u7ecd Python \u6838\u5fc3\u6570\u636e\u7ed3\u6784\u7684\u4f7f\u7528\uff0c\u5305\u62ec\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u548c\u96c6\u5408\u3002 \u7b2c 4 \u7ae0\u4ecb\u7ecd Python \u7684\u6761\u4ef6\u5224\u65ad\u4e0e\u5faa\u73af\u63a7\u5236\uff0c\u8fd9\u662f\u4efb\u4f55\u8bed\u8a00\u90fd\u5177\u5907\u7684\u6838\u5fc3\u8bed\u6cd5\uff0c\u5e76\u7b80\u5355\u4ecb\u7ecd\u5982\u4f55\u64cd\u4f5c\u6587\u4ef6\u3002 \u7b2c 5 \u7ae0\u4ecb\u7ecd Python \u51fd\u6570\u7684\u521b\u5efa\u548c\u4f7f\u7528\u3001\u6a21\u5757\u7684\u4e0b\u8f7d\u548c\u4f7f\u7528\u3002 \u7b2c 6 \u7ae0\u4ecb\u7ecd NumPy \u5e93\u53ca\u5176\u6838\u5fc3\u6570\u636e\u7ed3\u6784 ndarrary \u7684\u64cd\u4f5c\u65b9\u6cd5\u3002 \u7b2c 7 \u7ae0\u4ecb\u7ecd Matplotlib \u5e93\u7684\u5e94\u7528\u573a\u666f\u548c\u57fa\u672c\u56fe\u5f62\u7684\u7ed8\u5236\u65b9\u6cd5\u3002 \u7b2c 8 \u7ae0\u4ecb\u7ecd Pandas \u5e93\u53ca\u5176\u6838\u5fc3\u6570\u636e\u7ed3\u6784 Series \u548c DataFrame \u7684\u57fa\u672c\u64cd\u4f5c\u65b9\u6cd5\uff0c\u5e76\u8bb2\u89e3\u5982\u4f55\u8fdb\u884c\u7b80\u5355\u7684\u7edf\u8ba1\u5206\u6790\u3002 \u7b2c 9 \u7ae0\u4ecb\u7ecd Markdown \u7684\u8bed\u6cd5\u548c\u4f7f\u7528\uff0c Jupyter Notebook \u7684\u4f7f\u7528\u3001\u8bb0\u5f55\u548c\u7f16\u7a0b\u77e5\u8bc6\u3002 \u7b2c 10 \u7ae0\u4ecb\u7ecd\u5982\u4f55\u5c06\u6570\u636e\u5bfc\u5165 Python \u4e2d\uff0c\u5305\u62ec\u5e38\u89c1\u7684 CSV\u3001Excel \u6587\u4ef6\uff0c\u7f51\u7edc\u6570\u636e\u5e38\u7528\u7684 JSON \u6587\u4ef6\u548c\u6570\u636e\u5e93\u3002 \u7b2c 11 \u7ae0\u4ecb\u7ecd\u4e00\u4e9b\u6280\u5de7\u6027\u548c\u9ad8\u7ea7\u7f16\u7a0b\u77e5\u8bc6\uff0c\u5305\u62ec\u5f02\u5e38\u6355\u83b7\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\u7b49\u5185\u5bb9\uff0c\u4ee5\u4fbf\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3 Python\uff0c\u7f16\u5199\u5b89\u5168\u9ad8\u6548\u7684\u4ee3\u7801\u3002 \u7b2c 12 \u7ae0\u6df1\u5165\u4ecb\u7ecd Pandas \u7684\u6570\u636e\u7ed3\u6784\u548c\u64cd\u4f5c\uff0c\u8bb2\u89e3\u5982\u4f55\u8fdb\u884c\u51fd\u6570\u8ba1\u7b97\u3001\u6570\u636e\u6e05\u6d17\u548c\u7b80\u5355\u7684\u53ef\u89c6\u5316\u3002 \u7b2c 13 \u7ae0\u7b80\u5355\u4ecb\u7ecd 3 \u4e2a\u9ad8\u7ea7\u7684\u53ef\u89c6\u5316\u5e93 Seaborn\u3001Plotnine \u548c Bokeh \uff0c\u5e76\u8bb2\u89e3\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u7ed8\u5236\u5e38\u89c1\u7684\u56fe\u5f62\u3002 \u7b2c 14 \u7ae0\u7b80\u5355\u4ecb\u7ecd\u7edf\u8ba1\u5206\u6790\u7684\u57fa\u7840\u7406\u8bba\u77e5\u8bc6\uff0c\u5305\u62ec\u6570\u636e\u7684\u63cf\u8ff0\u6027\u7edf\u8ba1\u3001\u5206\u5e03\u548c\u5047\u8bbe\u68c0\u9a8c\u3002 \u7b2c 15 \u7ae0\u8865\u5145\u4ecb\u7ecd\u4e00\u4e9b\u5185\u5bb9\uff0c\u5305\u62ec IPython \u7684\u9b54\u672f\u547d\u4ee4\u548c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u77e5\u8bc6\u3002 \u5efa\u8bae\u548c\u53cd\u9988 \u00b6 \u5199\u4e66\u662f\u4e00\u9879\u7e41\u7410\u7684\u5de5\u4f5c\uff0c\u5c3d\u7ba1\u6211\u5df2\u529b\u6c42\u672c\u4e66\u5185\u5bb9\u7b80\u660e\u3001\u751f\u52a8\u3001\u51c6\u786e\uff0c\u4f46\u9650\u4e8e\u4e2a\u4eba\u6c34\u5e73\uff0c\u96be\u514d\u6709\u9519\u6f0f\u4e4b\u5904\uff0c\u6073\u8bf7\u5404\u4f4d\u8bfb\u8005\u6279\u8bc4\u6307\u6b63\u3002\u8bfb\u8005\u82e5\u6709\u4efb\u4f55\u5173\u4e8e\u672c\u4e66\u7684\u53cd\u9988\u610f\u89c1\uff0c\u8bf7\u63d0\u4ea4\u81f3\u5f02\u6b65\u793e\u533a\u7684\u672c\u4e66\u9875\u9762\u4e2d\uff0c\u8fd9\u5c06\u6709\u5229\u4e8e\u6211\u6539\u8fdb\u672c\u4e66\uff0c\u4f7f\u66f4\u591a\u8bfb\u8005\u53d7\u76ca\u3002 \u81f4\u8c22 \u00b6 \u672c\u4e66\u7684\u5185\u5bb9\u57fa\u4e8e Python \u548c\u8bf8\u591a\u7b2c\u4e09\u65b9\u5e93\uff0c\u5728\u6b64\u611f\u8c22 Python \u79ef\u6781\u6d3b\u8dc3\u7684\u6570\u636e\u79d1\u5b66\u751f\u6001\uff0c\u7cfb\u7edf\u4ee5\u53ca NumPy\u3001Pandas\u3001Matplotlib\u3001Plotnine \u548c Seaborn \u7b49\u7b2c\u4e09\u65b9\u5e93\u7684\u4f5c\u8005\u4eec\u3002 \u611f\u8c22\u51fa\u7248\u793e\u7684\u5f20\u723d\u7f16\u8f91\uff0c\u5979\u5bf9\u4e8e\u672c\u4e66\u5185\u5bb9\u7684\u628a\u63e1\u548c\u7ec6\u8282\u7684\u91cd\u89c6\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u672c\u4e66\u7684\u8d28\u91cf\u3002 \u611f\u8c22\u7b80\u4e66\u7684\u6bdb\u6653\u79cb\u5973\u58eb\u548c\u5176\u4ed6\u5de5\u4f5c\u4eba\u5458\uff0c\u5982\u679c\u4e0d\u662f\u4ed6\u4eec\u7684\u52aa\u529b\u548c\u9f13\u52b1\uff0c\u672c\u4e66\u53ef\u80fd\u5f88\u96be\u4e0e\u4f17\u4f4d\u8bfb\u8005\u89c1\u9762\u3002 \u6700\u540e\uff0c\u611f\u8c22\u6211\u7684\u5973\u670b\u53cb\uff0c\u5982\u679c\u4e0d\u662f\u5979\u65f6\u523b\u7684\u6566\u4fc3\uff0c\u6211\u4e5f\u8bb8\u65e0\u6cd5\u521b\u4f5c\u4e00\u672c\u4e66\u6295\u5165\u6301\u7eed\u7684\u70ed\u60c5\u548c\u7cbe\u529b\uff1b\u611f\u8c22\u6211\u7684\u5bb6\u4eba\uff0c\u4ed6\u4eec\u5728\u8fdc\u65b9\u7684\u966a\u4f34\uff0c\u662f\u6211\u80fd\u591f\u5199\u4f5c\u7684\u6700\u575a\u5b9e\u7684\u52a8\u529b\u3002 \u738b\u8bd7\u7fd4 2020\u5e741\u6708\u4e8e\u4e0a\u6d77","title":"\u524d\u8a00"},{"location":"0-%E5%89%8D%E8%A8%80/#_1","text":"","title":"\u524d\u8a00"},{"location":"0-%E5%89%8D%E8%A8%80/#_2","text":"\u5982\u4eca\uff0c\u6765\u81ea\u624b\u673a\u3001\u4e92\u8054\u7f51\u3001\u7269\u8054\u7f51\u3001\u79d1\u5b66\u5b9e\u9a8c\u3001\u65b0\u95fb\u7b49\u5404\u5904\u7684\u4fe1\u606f\u6bcf\u5929\u521b\u9020\u7740\u6570\u4ee5\u4e07\u4ebf\u5b57\u8282\u7684\u6570\u636e\u3002\u5728\u8fd9\u4e07\u7269\u4e92\u8054\u7684\u65f6\u4ee3\uff0c\u4fe1\u606f\u6280\u672f\u5c06\u4eba\u7c7b\u5bf9\u6570\u636e\u7684\u521b\u9020\u529b\u4e00\u6ce2\u53c8\u4e00\u6ce2\u5730\u63a8\u5411\u65b0\u7684\u5dc5\u5cf0\u3002\u6211\u4eec\u5bf9\u8ba1\u7b97\u673a\u3001\u624b\u673a\u4e2d\u5404\u79cd App \u7684\u6bcf\u4e00\u6b21\u70b9\u51fb\u4e0e\u5b57\u7b26\u8f93\u5165\uff0c\u5bf9\u6b4c\u66f2\u3001\u6587\u7ae0\u7684\u6bcf\u4e00\u6b21\u70b9\u8d5e\u3001\u559c\u6b22\u3001\u8bc4\u8bba\u7b49\u64cd\u4f5c\u90fd\u5c06\u96f6\u6563\u5355\u8584\u7684\u6570\u636e\u6c47\u5165\u4e86\u4fe1\u606f\u7684\u6d77\u6d0b\uff0c\u5728\u5927\u6570\u636e\u3001\u4eba\u5de5\u667a\u80fd\u6280\u672f\u7684\u8fd0\u7528\u4e0b\u6fc0\u8361\u51fa\u65b0\u7684\u6d6a\u82b1\u3002\u800c\u5728\u8fd9\u7247\u6c6a\u6d0b\u5927\u6d77\u4e0b\uff0c\u6570\u636e\u79d1\u5b66\u6210\u4e3a\u6c89\u6dc0\u4e0b\u6765\u7684\u7406\u8bba\u4e0e\u79d1\u5b66\u57fa\u7840\u3002 \u4f5c\u4e3a\u5f53\u524d\u6700\u6d41\u884c\u7684\u7f16\u7a0b\u8bed\u8a00\u4e4b\u4e00\uff0cPython\u5728\u8fc7\u53bb\u51e0\u5341\u5e74\u5df2\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7cfb\u7edf\u7ba1\u7406\u4efb\u52a1\u7684\u5904\u7406\u548c\u7f51\u7edc\u7f16\u7a0b\u7b49\u9886\u57df\uff0c\u63a5\u89e6\u8fc7\u7f51\u7edc Web \u7f16\u7a0b\u8bfb\u8005\u60f3\u5fc5\u5f88\u719f\u6089\u57fa\u4e8ePython\u8bed\u8a00\u7684 Django \u6846\u67b6\u3002\u5f97\u76ca\u4e8e\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u7684\u5174\u8d77\uff0c\u8fd1\u4e9b\u5e74 Python \u5728\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\u7efd\u653e\u51fa\u65b0\u7684\u5149\u8292\u3002\u5728 IEEE \u53d1\u5e03\u7684 2017 \u5e74\u7f16\u7a0b\u8bed\u8a00\u6392\u884c\u699c\u4e2d\uff0cPython \u9ad8\u5c45\u9996\u4f4d\u3002\u4e0d\u540c\u4e8e MATLAB \u7b49\u5546\u4e1a\u8f6f\u4ef6\uff0cPython \u662f\u5b8c\u5168\u514d\u8d39\u548c\u5f00\u6e90\u7684\uff1b\u4e0d\u540c\u4e8e R \u7b49\u4e3b\u8981\u7528\u4e8e\u7edf\u8ba1\u5206\u6790\u4e0e\u5efa\u6a21\u7684\u5f00\u6e90\u8f6f\u4ef6\u6bd4\u8f83\u96be\u4ee5\u5c06\u6210\u679c\u6269\u5c55\u4e3a\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f\uff0cPython \u6709\u7740\u975e\u5e38\u4e30\u5bcc\u7684\u6269\u5c55\u5e93\uff08\u6a21\u5757\uff09\uff0c\u53ef\u4ee5\u8f7b\u677e\u5b8c\u6210\u5404\u79cd\u9ad8\u7ea7\u4efb\u52a1\uff0c\u5c06\u9879\u76ee\u7684\u6240\u6709\u9700\u6c42\u4e00\u8d77\u5b9e\u73b0\u3002 \u7136\u800c\uff0c\u56fd\u5185\u5c11\u6709\u805a\u7126\u4e8e\u6570\u636e\u5206\u6790\u9886\u57df\u7684 Python \u56fe\u4e66\uff0c\u6765\u81ea\u56fd\u5916\u7684\u8bd1\u4f5c\u5927\u591a\u8d77\u70b9\u8f83\u9ad8\uff0c\u5e76\u4e0d\u5341\u5206\u9002\u5408\u96f6\u57fa\u7840\u7684\u8bfb\u8005\u5b66\u4e60\u548c\u4f7f\u7528\u3002\u56e0\u6b64\uff0c\u6211\u5199\u4f5c\u4e86\u672c\u4e66\u2014\u2014\u300a\u4ea4\u4e92\u7684 Python\uff1a\u6570\u636e\u5206\u6790\u5165\u95e8\u300b\u3002\u201c\u4ea4\u4e92\u201d\u4e00\u8bcd\u53ef\u80fd\u66f4\u5bb9\u6613\u8ba9\u4eba\u4eec\u8054\u60f3\u5230\u201c\u4eba\u673a\u4ea4\u4e92\u201d\uff0c\u767e\u5ea6\u767e\u79d1\u4e2d\u7684\u89e3\u91ca\u4e3a\u201c\u4e00\u95e8\u7814\u7a76\u7cfb\u7edf\u4e0e\u7528\u6237\u4e4b\u95f4\u4ea4\u4e92\u5173\u7cfb\u7684\u5b66\u95ee\u201d\u3002\u4e0e\u666e\u901a\u7684 Python \u7f16\u7a0b\u6216\u5176\u4ed6\u7f16\u7a0b\uff08\u201c\u7f16\u8f91-\u7f16\u8bd1-\u8fd0\u884c\u201d\u7684\u5de5\u4f5c\u6a21\u5f0f\uff09\u6709\u6240\u4e0d\u540c\uff0c\u5229\u7528 Python \u5904\u7406\u6570\u636e\u65f6\uff0c\u7528\u6237\u80fd\u591f\u611f\u53d7\u5230\u4e00\u79cd\u6781\u5f3a\u7684\u4ea4\u4e92\u6027\uff0c\u5728\u6570\u636e\u5206\u6790\u65f6\u6211\u4eec\u5e38\u5e38\u7f3a\u4e4f\u660e\u786e\u7684\u76ee\u7684\u548c\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u800c\u4e0d\u65ad\u5730\u5c1d\u8bd5\u5404\u79cd\u5206\u6790\u2014\u2014\u952e\u5165\u4ee3\u7801\u3001\u67e5\u770b\u7ed3\u679c\u3001\u4fee\u6b63\u3001\u91cd\u65b0\u8fd0\u884c\u67e5\u770b\u7ed3\u679c\uff0c\u8fd9\u4e00\u4e0d\u65ad\u5faa\u73af\u7684\u8fc7\u7a0b\u5f80\u5f80\u662f\u57fa\u4e8e\u63a2\u7d22\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u7b80\u5316\u4e3a\u201c\u8fd0\u884c-\u63a2\u7d22\u201d\u7684\u5de5\u4f5c\u6a21\u5f0f\u3002\u9664\u6b64\u4e4b\u5916\uff0c \u52a8\u6001\u6587\u6863 \u662f\u6570\u636e\u5206\u6790\u7684\u4e00\u4e2a\u65b0\u7684\u6d41\u884c\u8d8b\u52bf\uff0c\u666e\u901a\u7684\u7f16\u7a0b\u662f\u8fdb\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\uff0c\u6570\u636e\u5206\u6790\u5219\u662f\u8fdb\u884c\u6570\u636e\u7684\u63a2\u7d22\u4ee5\u53ca\u751f\u6210\u76f8\u5173\u62a5\u8868\u4f9b\u7528\u6237\u9605\u8bfb\u548c\u7814\u7a76\u3002\u6240\u4ee5\u5728\u672c\u4e66\u7684\u7ed3\u6784\u5b89\u6392\u4e0a\uff0c\u6211\u6dfb\u52a0\u4e86\u5173\u4e8e Markdown \u6807\u8bb0\u8bed\u8a00\u7684\u5185\u5bb9\u3002 \u6570\u636e\u5206\u6790\u8fc7\u7a0b\uff0c\u5c31\u5e94\u5f53\u50cf\u5199\u6587\u7ae0\u4e00\u6837 \u3002","title":"\u7f16\u5199\u80cc\u666f"},{"location":"0-%E5%89%8D%E8%A8%80/#_3","text":"\u672c\u4e66\u662f Python\u6570\u636e\u5206\u6790\u7684\u5165\u95e8\u6559\u7a0b\uff0c \u4e3b\u8981\u4e3a\u65b0\u624b\u8bbe\u8ba1 \uff0c\u4e5f\u540c\u6837\u9002\u7528\u4e8e\u60f3\u8981\u4e86\u89e3\u6216\u8005\u6253\u7b97\u8fdb\u5165\u6570\u636e\u5206\u6790\u9886\u57df\u7684\u7a0b\u5e8f\u5458\u3002\u6ce8\u610f\uff0c \u672c\u4e66\u7edd\u4e0d\u662f\u4e00\u672c\u6280\u672f\u624b\u518c \uff0c\u5176\u4e2d\u6ca1\u6709\u8bb2\u89e3\u5173\u4e8e Python \u7684\u6240\u6709\u9886\u57df\u7684\u77e5\u8bc6\uff0c\u6bd4\u5982\u7f51\u7edc\u7f16\u7a0b\u3001\u6e38\u620f\u7f16\u7a0b\u3001\u754c\u9762\u8bbe\u8ba1\u7b49\uff1b\u4e5f\u4e0d\u4f1a\u4e8b\u65e0\u5de8\u7ec6\u5730\u8bb2\u89e3 Python \u7684\u6240\u6709\u57fa\u7840\u77e5\u8bc6\uff0c\u800c\u662f\u4fa7\u91cd\u4e8e\u89e3\u8bfb\u6570\u636e\u5206\u6790\u548c\u79d1\u5b66\u8ba1\u7b97\u77e5\u8bc6\u3002","title":"\u8c01\u5f53\u9605\u8bfb\u6b64\u4e66"},{"location":"0-%E5%89%8D%E8%A8%80/#_4","text":"\u5b9e\u4f8b\u4e30\u5bcc\uff0c\u7b80\u5355\u6613\u61c2\u3002\u4ece\u7b80\u5355\u7684\u6570\u636e\u51fa\u53d1\uff0c\u8ba9\u8bfb\u8005\u805a\u7126\u4e8e\u601d\u8003\u3001\u7406\u89e3\u548c\u638c\u63e1\u5206\u6790\u903b\u8f91\uff0c\u7b80\u5355\u6613\u5b66\uff0c\u4e8b\u534a\u529f\u500d\u3002 \u5faa\u5e8f\u6e10\u8fdb\uff0c\u6df1\u5165\u6d45\u51fa\u3002\u672c\u4e66\u7684\u7ae0\u8282\u5b89\u6392\u7531\u6613\u5230\u96be\uff0c\u7531\u6d45\u53ca\u6df1\uff0c\u4e3b\u8981\u91c7\u7528 IPython Shell \u5c55\u793a\u4ee3\u7801\uff0c\u4ee3\u7801\u7b80\u6d01\u4f18\u7f8e\uff0c\u8f93\u5165\u8f93\u51fa\u6e05\u6670\u6613\u61c2\u3002 \u5185\u5bb9\u5145\u5b9e\uff0c\u5168\u9762\u8986\u76d6\u3002\u6db5\u76d6 Python \u57fa\u7840\u77e5\u8bc6\u3001\u6570\u636e\u5bfc\u5165\u3001\u6570\u636e\u5206\u6790\u548c\u53ef\u89c6\u5316\u7b49\u65b9\u9762\u7684\u57fa\u7840\u77e5\u8bc6\u3002 \u968f\u5b66\u968f\u7528\uff0c\u4e3e\u4e00\u53cd\u4e09\u3002\u4ece\u7b80\u5355\u7684\u9700\u6c42\u51fa\u53d1\uff0c\u9610\u8ff0\u903b\u8f91\uff0c\u5b9e\u4f8b\u65b9\u6848\u53ef\u4ee5\u4f5c\u4e3a\u6a21\u677f\u521d\u6b65\u5e94\u7528\u5230\u5b9e\u9645\u5de5\u4f5c\u573a\u666f\u3002\u672c\u4e66\u5c06 Markdown \u4f5c\u4e3a\u7f16\u7a0b\u57fa\u7840\u7684\u4e00\u90e8\u5206\u52a0\u4ee5\u4ecb\u7ecd\uff0c\u4ee5\u4f7f\u8bfb\u8005\u5b66\u4f1a\u8bb0\u5f55\u548c\u5206\u4eab\u77e5\u8bc6\u3002","title":"\u672c\u4e66\u7279\u8272"},{"location":"0-%E5%89%8D%E8%A8%80/#_5","text":"\u672c\u4e66\u5171\u5206\u4e3a 15 \u7ae0\u3002 \u7b2c 1 \u7ae0\u4ecb\u7ecd Python \u8f6f\u4ef6\u7684\u5b89\u88c5\u4e0e\u914d\u7f6e\u3002 \u7b2c 2 \u7ae0\u4ecb\u7ecd Python \u7684\u57fa\u672c\u7f16\u7a0b\u65b9\u5f0f\u548c\u6570\u636e\u7c7b\u578b\u3002 \u7b2c 3 \u7ae0\u4ecb\u7ecd Python \u6838\u5fc3\u6570\u636e\u7ed3\u6784\u7684\u4f7f\u7528\uff0c\u5305\u62ec\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u548c\u96c6\u5408\u3002 \u7b2c 4 \u7ae0\u4ecb\u7ecd Python \u7684\u6761\u4ef6\u5224\u65ad\u4e0e\u5faa\u73af\u63a7\u5236\uff0c\u8fd9\u662f\u4efb\u4f55\u8bed\u8a00\u90fd\u5177\u5907\u7684\u6838\u5fc3\u8bed\u6cd5\uff0c\u5e76\u7b80\u5355\u4ecb\u7ecd\u5982\u4f55\u64cd\u4f5c\u6587\u4ef6\u3002 \u7b2c 5 \u7ae0\u4ecb\u7ecd Python \u51fd\u6570\u7684\u521b\u5efa\u548c\u4f7f\u7528\u3001\u6a21\u5757\u7684\u4e0b\u8f7d\u548c\u4f7f\u7528\u3002 \u7b2c 6 \u7ae0\u4ecb\u7ecd NumPy \u5e93\u53ca\u5176\u6838\u5fc3\u6570\u636e\u7ed3\u6784 ndarrary \u7684\u64cd\u4f5c\u65b9\u6cd5\u3002 \u7b2c 7 \u7ae0\u4ecb\u7ecd Matplotlib \u5e93\u7684\u5e94\u7528\u573a\u666f\u548c\u57fa\u672c\u56fe\u5f62\u7684\u7ed8\u5236\u65b9\u6cd5\u3002 \u7b2c 8 \u7ae0\u4ecb\u7ecd Pandas \u5e93\u53ca\u5176\u6838\u5fc3\u6570\u636e\u7ed3\u6784 Series \u548c DataFrame \u7684\u57fa\u672c\u64cd\u4f5c\u65b9\u6cd5\uff0c\u5e76\u8bb2\u89e3\u5982\u4f55\u8fdb\u884c\u7b80\u5355\u7684\u7edf\u8ba1\u5206\u6790\u3002 \u7b2c 9 \u7ae0\u4ecb\u7ecd Markdown \u7684\u8bed\u6cd5\u548c\u4f7f\u7528\uff0c Jupyter Notebook \u7684\u4f7f\u7528\u3001\u8bb0\u5f55\u548c\u7f16\u7a0b\u77e5\u8bc6\u3002 \u7b2c 10 \u7ae0\u4ecb\u7ecd\u5982\u4f55\u5c06\u6570\u636e\u5bfc\u5165 Python \u4e2d\uff0c\u5305\u62ec\u5e38\u89c1\u7684 CSV\u3001Excel \u6587\u4ef6\uff0c\u7f51\u7edc\u6570\u636e\u5e38\u7528\u7684 JSON \u6587\u4ef6\u548c\u6570\u636e\u5e93\u3002 \u7b2c 11 \u7ae0\u4ecb\u7ecd\u4e00\u4e9b\u6280\u5de7\u6027\u548c\u9ad8\u7ea7\u7f16\u7a0b\u77e5\u8bc6\uff0c\u5305\u62ec\u5f02\u5e38\u6355\u83b7\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\u7b49\u5185\u5bb9\uff0c\u4ee5\u4fbf\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3 Python\uff0c\u7f16\u5199\u5b89\u5168\u9ad8\u6548\u7684\u4ee3\u7801\u3002 \u7b2c 12 \u7ae0\u6df1\u5165\u4ecb\u7ecd Pandas \u7684\u6570\u636e\u7ed3\u6784\u548c\u64cd\u4f5c\uff0c\u8bb2\u89e3\u5982\u4f55\u8fdb\u884c\u51fd\u6570\u8ba1\u7b97\u3001\u6570\u636e\u6e05\u6d17\u548c\u7b80\u5355\u7684\u53ef\u89c6\u5316\u3002 \u7b2c 13 \u7ae0\u7b80\u5355\u4ecb\u7ecd 3 \u4e2a\u9ad8\u7ea7\u7684\u53ef\u89c6\u5316\u5e93 Seaborn\u3001Plotnine \u548c Bokeh \uff0c\u5e76\u8bb2\u89e3\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u7ed8\u5236\u5e38\u89c1\u7684\u56fe\u5f62\u3002 \u7b2c 14 \u7ae0\u7b80\u5355\u4ecb\u7ecd\u7edf\u8ba1\u5206\u6790\u7684\u57fa\u7840\u7406\u8bba\u77e5\u8bc6\uff0c\u5305\u62ec\u6570\u636e\u7684\u63cf\u8ff0\u6027\u7edf\u8ba1\u3001\u5206\u5e03\u548c\u5047\u8bbe\u68c0\u9a8c\u3002 \u7b2c 15 \u7ae0\u8865\u5145\u4ecb\u7ecd\u4e00\u4e9b\u5185\u5bb9\uff0c\u5305\u62ec IPython \u7684\u9b54\u672f\u547d\u4ee4\u548c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u77e5\u8bc6\u3002","title":"\u5185\u5bb9\u7b80\u4ecb"},{"location":"0-%E5%89%8D%E8%A8%80/#_6","text":"\u5199\u4e66\u662f\u4e00\u9879\u7e41\u7410\u7684\u5de5\u4f5c\uff0c\u5c3d\u7ba1\u6211\u5df2\u529b\u6c42\u672c\u4e66\u5185\u5bb9\u7b80\u660e\u3001\u751f\u52a8\u3001\u51c6\u786e\uff0c\u4f46\u9650\u4e8e\u4e2a\u4eba\u6c34\u5e73\uff0c\u96be\u514d\u6709\u9519\u6f0f\u4e4b\u5904\uff0c\u6073\u8bf7\u5404\u4f4d\u8bfb\u8005\u6279\u8bc4\u6307\u6b63\u3002\u8bfb\u8005\u82e5\u6709\u4efb\u4f55\u5173\u4e8e\u672c\u4e66\u7684\u53cd\u9988\u610f\u89c1\uff0c\u8bf7\u63d0\u4ea4\u81f3\u5f02\u6b65\u793e\u533a\u7684\u672c\u4e66\u9875\u9762\u4e2d\uff0c\u8fd9\u5c06\u6709\u5229\u4e8e\u6211\u6539\u8fdb\u672c\u4e66\uff0c\u4f7f\u66f4\u591a\u8bfb\u8005\u53d7\u76ca\u3002","title":"\u5efa\u8bae\u548c\u53cd\u9988"},{"location":"0-%E5%89%8D%E8%A8%80/#_7","text":"\u672c\u4e66\u7684\u5185\u5bb9\u57fa\u4e8e Python \u548c\u8bf8\u591a\u7b2c\u4e09\u65b9\u5e93\uff0c\u5728\u6b64\u611f\u8c22 Python \u79ef\u6781\u6d3b\u8dc3\u7684\u6570\u636e\u79d1\u5b66\u751f\u6001\uff0c\u7cfb\u7edf\u4ee5\u53ca NumPy\u3001Pandas\u3001Matplotlib\u3001Plotnine \u548c Seaborn \u7b49\u7b2c\u4e09\u65b9\u5e93\u7684\u4f5c\u8005\u4eec\u3002 \u611f\u8c22\u51fa\u7248\u793e\u7684\u5f20\u723d\u7f16\u8f91\uff0c\u5979\u5bf9\u4e8e\u672c\u4e66\u5185\u5bb9\u7684\u628a\u63e1\u548c\u7ec6\u8282\u7684\u91cd\u89c6\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u672c\u4e66\u7684\u8d28\u91cf\u3002 \u611f\u8c22\u7b80\u4e66\u7684\u6bdb\u6653\u79cb\u5973\u58eb\u548c\u5176\u4ed6\u5de5\u4f5c\u4eba\u5458\uff0c\u5982\u679c\u4e0d\u662f\u4ed6\u4eec\u7684\u52aa\u529b\u548c\u9f13\u52b1\uff0c\u672c\u4e66\u53ef\u80fd\u5f88\u96be\u4e0e\u4f17\u4f4d\u8bfb\u8005\u89c1\u9762\u3002 \u6700\u540e\uff0c\u611f\u8c22\u6211\u7684\u5973\u670b\u53cb\uff0c\u5982\u679c\u4e0d\u662f\u5979\u65f6\u523b\u7684\u6566\u4fc3\uff0c\u6211\u4e5f\u8bb8\u65e0\u6cd5\u521b\u4f5c\u4e00\u672c\u4e66\u6295\u5165\u6301\u7eed\u7684\u70ed\u60c5\u548c\u7cbe\u529b\uff1b\u611f\u8c22\u6211\u7684\u5bb6\u4eba\uff0c\u4ed6\u4eec\u5728\u8fdc\u65b9\u7684\u966a\u4f34\uff0c\u662f\u6211\u80fd\u591f\u5199\u4f5c\u7684\u6700\u575a\u5b9e\u7684\u52a8\u529b\u3002 \u738b\u8bd7\u7fd4 2020\u5e741\u6708\u4e8e\u4e0a\u6d77","title":"\u81f4\u8c22"},{"location":"00-%E5%86%85%E5%AE%B9%E6%8F%90%E8%A6%81/","text":"\u5185\u5bb9\u63d0\u8981 \u00b6 Python \u5177\u6709\u5f3a\u5927\u7684\u5e94\u7528\u80fd\u529b\uff0c\u4ee5\u53ca\u4fbf\u6377\u9ad8\u6548\u7684\u6570\u636e\u5206\u6790\u548c\u53ef\u89c6\u5316\u62d3\u5c55\u5305\u7cfb\u7edf\u3002\u672c\u4e66\u91cd\u70b9\u8bb2\u89e3 Python \u6570\u636e\u5206\u6790\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4f7f\u8bfb\u8005\u901a\u8fc7 Python \u7406\u89e3\u6570\u636e\u5206\u6790\u7684\u903b\u8f91\uff0c\u5e76\u638c\u63e1\u57fa\u672c\u7684 Python \u7f16\u7a0b\u77e5\u8bc6\u548c\u5206\u6790\u5b9e\u73b0\u65b9\u6cd5\u3002\u672c\u4e66\u7cfb\u7edf\u5168\u9762\u3001\u5faa\u5e8f\u6e10\u8fdb\u5730\u4ecb\u7ecd\u4e86 Python \u7f16\u7a0b\u57fa\u7840\u3001\u6570\u636e\u5bfc\u5165\u3001\u6570\u636e\u5206\u6790\u548c\u53ef\u89c6\u5316\uff0c\u4f8b\u5982\u6761\u4ef6\u5224\u65ad\u4e0e\u5faa\u73af\u63a7\u5236\u3001\u4ece Excel \u4e2d\u5bfc\u5165\u6570\u636e\u3001\u4f7f\u7528 Pandas \u5e93\u8fdb\u884c\u6570\u636e\u7684\u8f6c\u6362\u548c\u8ba1\u7b97\uff0c\u4ee5\u53ca\u4f7f\u7528 Plotnine \u5e93\u7ed8\u5236 ggplot \u98ce\u683c\u7684\u56fe\u5f62\u7b49\u3002\u6b64\u5916\uff0c\u672c\u4e66\u8fd8\u6d89\u53ca Markdown \u3001\u57fa\u672c\u7684\u7edf\u8ba1\u7406\u8bba\u548c IPython \u9b54\u672f\u547d\u4ee4\u7b49\u6280\u5de7\u6027\u5185\u5bb9\u3002 \u672c\u4e66\u53ef\u4ee5\u4f5c\u4e3a Python \u7f16\u7a0b\u548c\u6570\u636e\u5206\u6790\u5165\u95e8\u7ea7\u8bfb\u8005\u7684\u5b66\u4e60\u7528\u4e66\uff0c\u4e5f\u9002\u7528\u4e8e\u6570\u636e\u5206\u6790\u76f8\u5173\u4ece\u4e1a\u4eba\u5458\u9605\u8bfb\uff0c\u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u9ad8\u7b49\u9662\u6821\u8ba1\u7b97\u673a\u3001\u7edf\u8ba1\u53ca\u76f8\u5173\u4e13\u4e1a\u7684\u5e08\u751f\u7528\u4e66\u548c\u57f9\u8bad\u5b66\u6821\u7684\u6559\u6750\u3002","title":"\u5185\u5bb9\u63d0\u8981"},{"location":"00-%E5%86%85%E5%AE%B9%E6%8F%90%E8%A6%81/#_1","text":"Python \u5177\u6709\u5f3a\u5927\u7684\u5e94\u7528\u80fd\u529b\uff0c\u4ee5\u53ca\u4fbf\u6377\u9ad8\u6548\u7684\u6570\u636e\u5206\u6790\u548c\u53ef\u89c6\u5316\u62d3\u5c55\u5305\u7cfb\u7edf\u3002\u672c\u4e66\u91cd\u70b9\u8bb2\u89e3 Python \u6570\u636e\u5206\u6790\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4f7f\u8bfb\u8005\u901a\u8fc7 Python \u7406\u89e3\u6570\u636e\u5206\u6790\u7684\u903b\u8f91\uff0c\u5e76\u638c\u63e1\u57fa\u672c\u7684 Python \u7f16\u7a0b\u77e5\u8bc6\u548c\u5206\u6790\u5b9e\u73b0\u65b9\u6cd5\u3002\u672c\u4e66\u7cfb\u7edf\u5168\u9762\u3001\u5faa\u5e8f\u6e10\u8fdb\u5730\u4ecb\u7ecd\u4e86 Python \u7f16\u7a0b\u57fa\u7840\u3001\u6570\u636e\u5bfc\u5165\u3001\u6570\u636e\u5206\u6790\u548c\u53ef\u89c6\u5316\uff0c\u4f8b\u5982\u6761\u4ef6\u5224\u65ad\u4e0e\u5faa\u73af\u63a7\u5236\u3001\u4ece Excel \u4e2d\u5bfc\u5165\u6570\u636e\u3001\u4f7f\u7528 Pandas \u5e93\u8fdb\u884c\u6570\u636e\u7684\u8f6c\u6362\u548c\u8ba1\u7b97\uff0c\u4ee5\u53ca\u4f7f\u7528 Plotnine \u5e93\u7ed8\u5236 ggplot \u98ce\u683c\u7684\u56fe\u5f62\u7b49\u3002\u6b64\u5916\uff0c\u672c\u4e66\u8fd8\u6d89\u53ca Markdown \u3001\u57fa\u672c\u7684\u7edf\u8ba1\u7406\u8bba\u548c IPython \u9b54\u672f\u547d\u4ee4\u7b49\u6280\u5de7\u6027\u5185\u5bb9\u3002 \u672c\u4e66\u53ef\u4ee5\u4f5c\u4e3a Python \u7f16\u7a0b\u548c\u6570\u636e\u5206\u6790\u5165\u95e8\u7ea7\u8bfb\u8005\u7684\u5b66\u4e60\u7528\u4e66\uff0c\u4e5f\u9002\u7528\u4e8e\u6570\u636e\u5206\u6790\u76f8\u5173\u4ece\u4e1a\u4eba\u5458\u9605\u8bfb\uff0c\u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u9ad8\u7b49\u9662\u6821\u8ba1\u7b97\u673a\u3001\u7edf\u8ba1\u53ca\u76f8\u5173\u4e13\u4e1a\u7684\u5e08\u751f\u7528\u4e66\u548c\u57f9\u8bad\u5b66\u6821\u7684\u6559\u6750\u3002","title":"\u5185\u5bb9\u63d0\u8981"},{"location":"01-introduction/","text":"\u7b2c 1 \u7ae0 Python \u4ecb\u7ecd\u53ca\u5b66\u4e60\u524d\u7684\u51c6\u5907 \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : Python \u662f\u4ec0\u4e48 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 Python \u8fdb\u884c\u6570\u636e\u5206\u6790 \u79d1\u5b66\u8ba1\u7b97\u6838\u5fc3\u5e93\u7b80\u4ecb \u8f6f\u4ef6\u5b89\u88c5\u4e0e\u914d\u7f6e \u672c\u4e66\u5728\u6b63\u5f0f\u5411\u8bfb\u8005\u4ecb\u7ecd Python \u7684\u57fa\u672c\u8bed\u6cd5\u4e0e\u64cd\u4f5c\u4e4b\u524d\uff0c\u901a\u8fc7\u672c\u7ae0\u5411\u8bfb\u8005\u7b80\u8981\u4ecb\u7ecd Python \u7684\u5b9a\u4e49\u4e0e\u5229\u7528 Python \u8fdb\u884c\u6570\u636e\u5904\u7406\u7684\u4f18\u52bf\uff0c\u8be6\u8ff0\u5b66\u4e60 Python \u4e4b\u524d\u76f8\u5173\u8f6f\u4ef6\u7684\u5b89\u88c5\u4e0e\u914d\u7f6e\u3002 1.1 Python \u662f\u4ec0\u4e48 \u00b6 \u5728 IEEE \u53d1\u5e03\u7684 2017 \u5e74\u7f16\u7a0b\u8bed\u8a00\u6392\u884c\u699c\u4e2d\uff0cPython \u9ad8\u5c45\u9996\u4f4d\u3002\u5bf9\u4e8e\u8fd9\u6837\u4e00\u95e8\u6d41\u884c\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c \u5f88\u591a\u7684 Python \u5165\u95e8\u56fe\u4e66\u90fd\u7ed9\u5b83\u8fdb\u884c\u5b9a\u4e49\uff0c\u4f46\u672c\u4e66\u4f5c\u8005\u8ba4\u4e3a\uff0c\u8f83\u4e3a\u6e05\u6670\u660e\u4e86\u7684\u5b9a\u4e49\u6765\u81ea\u7ef4\u57fa\u767e\u79d1\uff1a Python \u662f\u4e00\u79cd\u5e7f\u6cdb\u4f7f\u7528\u7684\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u5c5e\u4e8e\u901a\u7528\u578b\u7f16\u7a0b\u8bed\u8a00\uff0c\u7531\u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6\u521b\u9020\uff0c\u7b2c\u4e00\u7248\u53d1\u5e03\u4e8e 1991 \u5e74\u3002Python \u53ef\u4ee5\u88ab\u89c6\u4e4b\u4e3a\u4e00\u79cd\u6539\u826f(\u52a0\u5165\u4e00\u4e9b\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u7684\u4f18\u70b9\uff0c\u5982\u9762\u5411\u5bf9\u8c61) \u7684 LISP\u3002\u4f5c\u4e3a\u4e00\u79cd\u89e3\u91ca\u578b\u8bed\u8a00\uff0cPython \u7684\u8bbe\u8ba1\u54f2\u5b66\u5f3a\u8c03\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7b80\u6d01\u7684\u8bed\u6cd5\uff08\u5c24\u5176\u662f\u4f7f\u7528\u7a7a\u683c\u7f29\u8fdb\u5212\u5206\u4ee3\u7801\u5757\uff0c\u800c\u975e\u4f7f\u7528\u5927\u62ec\u53f7\u6216\u8005\u5173\u952e\u8bcd\uff09\u3002\u76f8\u6bd4\u4e8e C++ \u6216 Java\uff0cPython \u8ba9\u5f00\u53d1\u8005\u80fd\u591f\u7528\u66f4\u5c11\u7684\u4ee3\u7801\u8868\u8fbe\u60f3\u6cd5\u3002\u65e0\u8bba\u662f\u5c0f\u578b\u8fd8\u662f\u5927\u578b\u7a0b\u5e8f\uff0cPython \u90fd\u8bd5\u56fe\u8ba9\u7a0b\u5e8f\u7684\u7ed3\u6784\u6e05\u6670\u660e\u4e86\u3002 \u8fd9\u6bb5\u6587\u5b57\u56ca\u62ec\u4e86\u8bfb\u8005\u9700\u8981\u4e86\u89e3\u7684\u5173\u4e8e Python \u7684\u57fa\u672c\u4fe1\u606f\u3002 Python \u76ee\u524d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002 Python \u5c5e\u4e8e\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u8fd9\u533a\u522b\u4e8e C \u8bed\u8a00\u8fd9\u6837\u7684\u4e2d\u7ea7\u8bed\u8a00\u6216\u662f\u5e95\u5c42\u7684\u786c\u4ef6\u7f16\u7a0b\u3001\u6c47\u7f16\u7b49\u8bed\u8a00\u3002 Python \u7531\u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6\u521b\u9020\uff0c\u4e8e1991\u5e74\u53d1\u5e03\u3002 Python \u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08Object-Oriented Programming\uff0cOOP\uff09\u3002 Python \u5c5e\u4e8e\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u89e3\u91ca\u578b\u8bed\u8a00\u4ee5\u6587\u672c\u7684\u65b9\u5f0f\u5b58\u50a8\u7a0b\u5e8f\u4ee3\u7801\uff0c\u4e0d\u9700\u8981\u5728\u8fd0\u884c\u524d\u8fdb\u884c\u7f16\u8bd1\uff08\u4e3a\u5927\u4f17\u6240\u719f\u77e5\u7684 C \u8bed\u8a00\u5c31\u4e0d\u662f\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u5728\u8fd0\u884c\u524d\u5fc5\u987b\u7f16\u8bd1\u4e3a\u673a\u5668\u8bc6\u522b\u7684\u8bed\u8a00\uff09\u3002 \u5f3a\u8c03\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7b80\u6d01\u7684\u8bed\u6cd5\u662f Python \u7684\u8bbe\u8ba1\u54f2\u5b66\uff0c\u8fd9\u4e00\u70b9\u5c24\u5176\u9700\u8981\u6ce8\u610f\u548c\u7406\u89e3\uff0c\u56e0\u4e3a\u8fd9\u662f Python \u5728\u5f62\u5f0f\u4e0a\u6700\u6709\u522b\u4e8e\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u4e4b\u5904\u3002Python \u4f7f\u7528\u7a7a\u683c\u7684\u7f29\u8fdb\u6765\u5212\u5206\u4e0d\u540c\u7684\u4ee3\u7801\u5757\uff0c\u5176\u4ed6\u4e00\u4e9b\u5e38\u89c1\u8bed\u8a00\u4e00\u822c\u4f7f\u7528\u5927\u62ec\u53f7\u6216\u8005\u5173\u952e\u5b57\uff0c\u6b63\u662f\u8fd9\u4e2a\u7279\u70b9\uff0c\u8ba9 Python \u4ee3\u7801\u65e0\u8bba\u5927\u5c0f\u957f\u77ed\u90fd\u770b\u8d77\u6765\u975e\u5e38\u7b80\u5355\u6e05\u6670\uff0c\u6613\u4e8e\u4f7f\u7528\uff08\u8bfb\u8005\u5c06\u4f1a\u5728\u672c\u4e66\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\u6df1\u5165\u7406\u89e3\u8fd9\u4e00\u7279\u70b9\uff09\u3002 \u4e86\u89e3\u4e00\u95e8\u8bed\u8a00\u7684\u5386\u53f2\u548c\u7279\u70b9\u6709\u52a9\u4e8e\u63d0\u5347\u8bfb\u8005\u5bf9\u5176\u8bed\u6cd5\u7684\u7406\u89e3\u548c\u5feb\u901f\u5e94\u7528\u80fd\u529b\u3002\u8bfb\u8005\u6709\u95f2\u6687\u4e0d\u59a8\u901a\u8fc7\u641c\u7d22\u5f15\u64ce\u67e5\u67e5 Python \u8bbe\u8ba1\u7684\u521d\u8877\u548c\u4e00\u4e9b Python \u5f00\u53d1\u7684\u8457\u540d\u9879\u76ee\u3002 1.2 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 Python \u8fdb\u884c\u6570\u636e\u5206\u6790 \u00b6 \u5728\u6210\u4e3a\u6570\u636e\u5206\u6790\u548c\u4eba\u5de5\u667a\u80fd\u7b49\u9886\u57df\u7684\u5934\u53f7\u9009\u624b\u4e4b\u524d\uff0cPython \u65e9\u5c31\u56e0\u5176\u5927\u91cf\u7684 Web \u6846\u67b6\u3001\u4e30\u5bcc\u7684\u6807\u51c6\u5e93\u4ee5\u53ca\u4f17\u591a\u7684\u6269\u5c55\u5e93\u7b49\u7279\u70b9\u6210\u4e3a\u7f51\u7edc\u5efa\u7ad9\u3001\u7cfb\u7edf\u7ba1\u7406\u3001\u4fe1\u606f\u5b89\u5168\u7b49\u9886\u57df\u7684\u70ed\u95e8\u65b9\u6848\u3002\u4f8b\u5982\uff0c\u6709\u540d\u7684\u8c46\u74e3\u7f51\u7ad9\u5c31\u662f\u57fa\u4e8e Python \u5f00\u53d1\uff0cLinux \u6240\u6709\u7684\u53d1\u884c\u7248\u90fd\u9ed8\u8ba4\u5b89\u88c5\u4e86 Python\u3002 \u8fd1\u5e74\u6765\uff0cPython \u7684\u79d1\u5b66\u8ba1\u7b97\u5e93\uff08\u5982\u7ed3\u6784\u5316\u6570\u636e\u64cd\u4f5c\u5e93 Pandas\u3001\u673a\u5668\u5b66\u4e60\u5e93 scikit-learn\uff09\u4e0d\u65ad\u8fdb\u884c\u6539\u826f\uff0c\u4f7f\u5f97\u5229\u7528 Python \u6765\u8fdb\u884c\u6570\u636e\u5206\u6790\u6210\u4e86\u4f18\u9009\u65b9\u6848\u3002Python \u8fd8\u6709\u4e00\u4e2a\u80f6\u6c34\u8bed\u8a00\u7684\u5916\u53f7\uff0c\u8fd9\u6765\u6e90\u4e8e\u5b83\u80fd\u591f\u975e\u5e38\u8f7b\u677e\u5730\u96c6\u6210 C\u3001C++ \u7b49\u5e95\u5c42\u4ee3\u7801\uff0c\u8fdb\u884c\u8ba1\u7b97\u4f18\u5316\u3002\u4e0e SAS \u548c R \u7b49\u5206\u6790\u5efa\u6a21\u9886\u57df\u7279\u5b9a\u7f16\u7a0b\u8bed\u8a00\u76f8\u6bd4\uff0cPython \u53ef\u4ee5\u540c\u65f6\u7528\u4e8e\u9879\u76ee\u539f\u578b\u7684\u6784\u5efa\u548c\u751f\u4ea7\uff08\u524d\u8005\u5219\u4e3b\u8981\u7528\u4e8e\u9879\u76ee\u539f\u578b\u7684\u6784\u5efa\uff09\uff0c\u4ece\u800c\u907f\u514d\u4e86\u4f7f\u7528\u591a\u4e2a\u8bed\u8a00\u7684\u9ebb\u70e6\u3002\u52a0\u4e0aPython \u672c\u8eab\u591a\u5e74\u6765\u4e0d\u65ad\u63d0\u5347\u7684\u5f3a\u5927\u7f16\u7a0b\u80fd\u529b\uff0c\u7528\u6237\u53ea\u9700\u8981\u4f7f\u7528 Python \u5c31\u53ef\u4ee5\u5b8c\u6210\u4ee5\u6570\u636e\u4e3a\u4e2d\u5fc3\u7684\u5efa\u6a21\u3001\u5206\u6790\u4e0e\u5e94\u7528\u3002 \u53ef\u4ee5\u8bf4\uff0cPython \u5728\u6570\u636e\u5206\u6790\u9886\u57df\u7684\u8fc5\u731b\u53d1\u5c55\u4e0e\u5176\u672c\u8eab\u975e\u5e38\u6210\u719f\u4e14\u5e7f\u6cdb\u5e94\u7528\u662f\u5206\u4e0d\u5f00\u7684\uff0cPython \u5f00\u6e90\u3001\u7b80\u660e\u6613\u7528\u7684\u7279\u70b9\u4e5f\u8ba9\u5f00\u53d1\u8005\u548c\u4f7f\u7528\u8005\u81ea\u89c9\u503e\u6ce8\u7cbe\u529b\u5171\u540c\u7ef4\u62a4\u793e\u533a\u73af\u5883\uff0c\u6784\u5efa\u4e86\u6574\u4e2a Python \u8ba1\u7b97\u5206\u6790\u9886\u57df\u7684\u826f\u597d\u751f\u6001\u7cfb\u7edf\u3002 1.3 \u79d1\u5b66\u8ba1\u7b97\u6838\u5fc3\u5e93\u7b80\u4ecb \u00b6 Python \u62e5\u6709\u7740\u4f17\u591a\u7684\u8f6f\u4ef6\u5305/\u5e93\uff0c\u672c\u4e66\u96be\u4ee5\u5168\u90e8\u6d89\u53ca\uff0c\u8fd9\u91cc\u4ec5\u4ecb\u7ecd\u51e0\u4e2a\u6784\u6210 Python \u79d1\u5b66\u8ba1\u7b97\u751f\u6001\u7cfb\u7edf\u7684\u6838\u5fc3\u6210\u5458\u3002 NumPy\uff1aNumPy \u662f Numerical Python \u7684\u7b80\u79f0\u3002NumPy \u662f Python \u79d1\u5b66\u8ba1\u7b97\u6700\u57fa\u7840\u7684\u5e93\uff0c\u57fa\u672c\u4e0a\u6d89\u53ca\u6570\u636e\u5206\u6790\u7684\u8f6f\u4ef6\u5305\u90fd\u57fa\u4e8e\u5b83\u6784\u5efa\u3002 Pandas\uff1aPandas \u7684\u540d\u5b57\u6765\u6e90\u4e8e Python \u6570\u636e\u5206\u6790\uff08Python data analysis\uff09\u548c\u9762\u677f\u6570\u636e\uff08Panel data\uff09\u7684\u7ed3\u5408\u3002\u8be5\u5e93\u63d0\u4f9b\u4e86\u591a\u4e2a\u6570\u636e\u5b58\u50a8\u5bf9\u8c61\uff0c\u5176\u4e2d\u7684 DataFrame \u5bf9\u8c61\u53ef\u4ee5\u8868\u5f81\u6570\u636e\u5206\u6790\u5e38\u89c1\u7684\u4e8c\u7ef4\u8868\u683c\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u8fd8\u63d0\u4f9b\u4e86\u975e\u5e38\u591a\u4fbf\u6377\u5904\u7406\u7ed3\u6784\u5316\u6570\u636e\u7684\u51fd\u6570\u3002 Matplotlib\uff1aMatplotlib \u8d77\u6e90\u4e8e\u77e9\u9635\u5b9e\u9a8c\u5ba4 MATLAB \u4e2d\u7684\u7ed8\u56fe\u51fd\u6570\uff0c\u662f Python \u4e2d\u975e\u5e38\u6d41\u884c\u7684\u7ed8\u56fe\u5e93\uff0c\u53ef\u4ee5\u8f7b\u677e\u8fdb\u884c\u4e8c\u7ef4\u6570\u636e\u751a\u81f3\u591a\u7ef4\u6570\u636e\u53ef\u89c6\u5316\u3002 SciPy\uff1aSciPy \u5e93\u63d0\u4f9b\u4e86\u4e00\u7ec4\u4e13\u95e8\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u4e2d\u5404\u79cd\u6807\u51c6\u95ee\u9898\u5305\uff0c\u5982\u6570\u503c\u79ef\u5206\u3001\u5fae\u5206\u3001\u4fe1\u53f7\u5904\u7406\u3001\u7edf\u8ba1\u5206\u6790\uff0c\u5b83\u4e0e NumPy \u7684\u7ed3\u5408\u53ef\u4ee5\u5904\u7406\u8bf8\u591a\u79d1\u5b66\u8ba1\u7b97\u95ee\u9898\u3002 Jupyter\uff1aJupyter \u662f\u4e00\u4e2a\u4ea4\u4e92\u548c\u63a2\u7d22\u5f0f\u8ba1\u7b97\u7684\u9ad8\u6548\u73af\u5883\u3002\u5176\u4e2d\u4e24\u4e2a\u7ec4\u4ef6\u8f83\u4e3a\u5e38\u7528\uff0c\u4e00\u662f IPython\uff0c\u7528\u4e8e\u7f16\u5199\u3001\u6d4b\u8bd5\u548c\u8c03\u8bd5 Python \u4ee3\u7801\uff1b\u4e8c\u662f Jupyter Notebook\uff0c\u5b83\u662f\u4e00\u4e2a\u591a\u8bed\u8a00\u4ea4\u4e92\u5f0f\u7684 Web \u7b14\u8bb0\u672c\uff0c\u73b0\u5728\u652f\u6301\u8fd0\u884c Python\u3001R \u7b49\u591a\u79cd\u8bed\u8a00\uff0cJupyter Notebook \u4e2d\u4ee3\u7801\u4e0e Markdown \u7684\u7ed3\u5408\u53ef\u4ee5\u521b\u5efa\u826f\u597d\u3001\u53ef\u91cd\u590d\u7684\u52a8\u6001\u6587\u6863\u3002\u8fd9\u4e5f\u662f\u8bfb\u8005\u8fdb\u884c Python \u6570\u636e\u5206\u6790\u7684\u5b66\u4e60\u73af\u5883\u3002 1.4 \u642d\u5efa\u73af\u5883 \u00b6 Python \u5b58\u5728 Python2\uff08\u73b0\u5728\u4e00\u822c\u6307 Python2.7\uff09\u548c Python3\uff08\u73b0\u5728\u4e00\u822c\u6307 Python3.5 \u53ca\u4ee5\u4e0a\uff09\u4e24\u4e2a\u4e0d\u540c\u7684\u5927\u7248\u672c\u3002Python \u5b98\u65b9\u5ba3\u5e03\u4e8e 2020 \u5e74\u505c\u6b62 Python2 \u7684\u66f4\u65b0\u548c\u7ef4\u62a4\uff0c\u5168\u9762\u8fdb\u5165 Python3 \u65f6\u4ee3\u3002\u8003\u8651\u5230\u5b66\u4e60\u548c\u5e94\u7528\u7684\u666e\u9002\u6027\uff0c\u672c\u4e66\u7684\u4ecb\u7ecd\u4ee5 Python3 \u7248\u672c\u4e3a\u57fa\u7840\u3002 \u76ee\u524d\u6d41\u884c\u7684 Python \u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\u6709\u5f88\u591a\uff0c\u5982 PyCharm\u3001Sublime Text\u3001Eclipse+PyDev \u548c Anaconda \u4e2d\u7684 Spyder\u3002\u4e0d\u540c\u7684\u8f6f\u4ef6\u3001\u7cfb\u7edf\u7684\u5b89\u88c5\u548c\u914d\u7f6e\u65b9\u5f0f\u5404\u4e0d\u76f8\u540c\uff0c\u672c\u4e66\u4f7f\u7528 Anaconda \u5e73\u53f0\u7684 Jupyter Notebook \u5bf9 Python \u8fdb\u884c\u4ecb\u7ecd\u3002Anaconda \u662f\u975e\u5e38\u5f3a\u5927\u7684\u8de8\u7cfb\u7edf\u5f00\u6e90\u8ba1\u7b97\u5e73\u53f0\uff0c\u652f\u6301\u4e2a\u4eba PC \u4f7f\u7528\u7684 Windows\u3001Linux \u548c macOS\uff0c\u63d0\u4f9b\u7684\u8fd1 1000 \u4e2a\u5f00\u6e90\u8f6f\u4ef6\u5305\u57fa\u672c\u4e0a\u53ef\u4ee5\u6ee1\u8db3\u4e2a\u4eba\u6216\u56e2\u961f\u8fdb\u884c\u6570\u636e\u5904\u7406\u7684\u9700\u6c42\u3002 \u4e3a\u4e86\u6ee1\u8db3\u4e0d\u540c\u8bfb\u8005\u7684\u9700\u6c42\uff0c\u672c\u4e66\u4ecb\u7ecd\u4e24\u79cd Python \u7ebf\u4e0a\u5e73\u53f0\u3001\u4ee5\u53ca\u672c\u5730\u673a\u5668\u73af\u5883\u4e0b\u76f8\u5173\u8f6f\u4ef6\u7684\u5b89\u88c5\u548c\u914d\u7f6e\uff0c\u8bfb\u8005\u53ef\u4efb\u610f\u9009\u62e9\u4f7f\u7528\u3002 1.4.1 \u7ebf\u4e0a\u5e73\u53f0 \u00b6 \u7f51\u7edc\u4e0a\u73b0\u5728\u6709\u5f88\u591a\u5728\u7ebf\u7684 Python \u89e3\u91ca\u5668\uff0c\u8bfb\u8005\u53ef\u4ee5\u5728\u8ba1\u7b97\u673a\u6709\u7f51\u7edc\u670d\u52a1\u7684\u60c5\u51b5\u4e0b\u901a\u8fc7\u6d4f\u89c8\u5668\u8fd0\u884c\u4ee3\u7801\u3002\u56e0\u4e3a\u8f6f\u4ef6\u5305\u7684\u5bfc\u5165\u548c\u8ba1\u7b97\u90fd\u5728\u670d\u52a1\u5668\u7aef\uff0c\u6240\u4ee5\u8bfb\u8005\u4e0d\u9700\u8981\u8f83\u9ad8\u914d\u7f6e\u7684\u8ba1\u7b97\u673a\u5c31\u80fd\u8fdb\u884c Python \u7684\u5b66\u4e60\u548c\u6570\u636e\u5206\u6790\u3002 \u672c\u4e66\u63a8\u8350\u4e24\u4e2a\u514d\u8d39\u7684 Jupyter Notebook \u7f51\u7ad9\uff0c\u8bfb\u8005\u53ef\u7ed3\u5408\u81ea\u5df1\u8ba1\u7b97\u673a\u7684\u914d\u7f6e\u548c\u7f51\u7edc\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u3002 Jupyter \u5b98\u65b9\u63d0\u4f9b\u7684 Try Jupyter \u7f51\u7ad9 \uff08 https://jupyter.org/try \uff09\uff0c\u8be5\u7f51\u7ad9\u5305\u542b\u5b66\u4e60\u5728 Jupyter \u4e2d\u4f7f\u7528 Python \u548c\u6587\u672c\u4e66\u5199\u7684\u4f8b\u5b50\u548c\u7ec3\u4e60\uff0c\u8bfb\u8005\u53ef\u4ee5\u5728 Try Python with Jupyter \u7684\u4e3b\u9875\uff08\u5728 Try Jupyter \u7f51\u7ad9\u9009\u62e9\u4f7f\u7528 Python\uff09\u8fd0\u884c\u3001\u8c03\u8bd5\u4ee3\u7801\uff0c\u5e76\u4e0b\u8f7d Jupyter \u7b14\u8bb0\u672c\u5230\u672c\u5730\u5b58\u50a8\u3002 \u5fae\u8f6f\u516c\u53f8\u63d0\u4f9b\u7684 Jupyter \u6570\u636e\u63a2\u7d22\u5b66\u4e60\u5e73\u53f0 Azure\uff08 https://notebooks.azure.com/ \uff09\uff0c\u5982\u56fe1-2\u6240\u793a\uff0c\u652f\u6301\u5728\u7ebf\u8fd0\u884c\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u6570\u5b66\u79d1\u5b66\u63a2\u7d22\uff0c\u5176\u4e2d\u6bd4\u8f83\u5e38\u7528\u7684\u662f Python \u548c R\u3002\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u5fae\u8f6f\u8d26\u6237\u521b\u5efa\u4ed3\u5e93\uff0c\u65b0\u5efa Jupyter Notebook \u5e76\u4e66\u5199\u4ee3\u7801\u548c\u63a2\u7d22\u6570\u636e\uff0c\u5b8c\u6210\u540e\u53ef\u4ee5\u4fdd\u5b58\u3001\u4e0e\u4ed6\u4eba\u5206\u4eab\uff08\u4f7f\u7528\u8fc7 GitHub \u7b49\u5f00\u6e90\u4ed3\u5e93\u7684\u8bfb\u8005\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u5e73\u53f0\u7684\u64cd\u4f5c\u548c\u5b83\u4eec\u6781\u4e3a\u76f8\u4f3c\uff09\u3002 \u672c\u4e66\u4f5c\u8005\u63a8\u8350\u8bfb\u8005\u4f7f\u7528 Azure \u5e73\u53f0\uff0c\u56e0\u4e3a\u5176\u5728\u521b\u5efa\u3001\u4f7f\u7528\u3001\u4fdd\u5b58\u4e0e\u5206\u4eab\u65b9\u9762\u5360\u6709\u4f18\u52bf\uff0c\u4e0d\u8fc7\u8bfb\u8005\u9996\u5148\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u5fae\u8f6f\u8d26\u53f7\u3002 \u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u4eec\u76f8\u4fe1\u4f1a\u6709\u8d8a\u6765\u8d8a\u591a\u7684\u7ebf\u4e0a Jupyter Notebook \u5e73\u53f0\uff0c\u611f\u5174\u8da3\u7684\u8bfb\u8005\u4e0d\u59a8\u641c\u7d22\u6c47\u603b\u5e76\u9009\u62e9\u6700\u9002\u5408\u81ea\u5df1\u5b66\u4e60\u548c\u4f7f\u7528\u7684\u5e73\u53f0\u3002 1.4.2 \u672c\u5730\u673a\u5668\u73af\u5883\u4e0b\u76f8\u5173\u8f6f\u4ef6\u7684\u5b89\u88c5 \u00b6 \u8bfb\u8005\u5982\u679c\u60f3\u8981\u5728\u672c\u5730\u90e8\u7f72\u5b66\u4e60\u73af\u5883\uff0c\u90a3\u4e48\u53ef\u4ee5\u9009\u62e9\u5b89\u88c5\u4e24\u6b3e\u8f6f\u4ef6\u3002\u7b2c\u4e00\u6b3e\u8f6f\u4ef6\u662f\u4e0a\u6587\u5df2\u7ecf\u63d0\u5230\u7684 Anaconda\uff0c\u5176\u4e3a\u5fc5\u9700\u8f6f\u4ef6\uff1b\u7b2c\u4e8c\u6b3e\u8f6f\u4ef6\u4e3a nteract\uff08 https://nteract.io/ \uff09\uff0c\u89c1\u56fe1-3\uff0c\u4e3a\u53ef\u9009\u8f6f\u4ef6\u3002\u4e0e Anaconda \u9ed8\u8ba4\u63d0\u4f9b\u7684 Jupyter Notebook \u4e0d\u540c\uff0cnteract \u50cf\u6211\u4eec\u5e38\u7528\u7684\u6587\u5b57\u7f16\u8f91\u5668\u4e00\u6837\uff0c\u754c\u9762\u975e\u5e38\u7b80\u6d01\u9177\u723d\uff0c\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u5730\u7f16\u8f91 Jupyter Notebook \u6587\u4ef6\uff08\u6587\u4ef6\u6269\u5c55\u540d\u4e3a .ipynb \uff09\u3002\u672c\u4e66\u4f5c\u8005\u63a8\u8350\u8bfb\u8005\u4f7f\u7528 nteract\uff0c\u672c\u4e66\u540e\u7eed\u7684\u4ee3\u7801\u548c\u6587\u6863\u5c55\u793a\u90fd\u4f1a\u4f7f\u7528\u5230\u5b83\uff0c\u867d\u7136 nteract \u76ee\u524d\u53ea\u6709 alpha \u7248\u672c\uff08\u6d4b\u8bd5\u7248\uff09\uff0c\u529f\u80fd\u8fd8\u5728\u4e0d\u65ad\u5b8c\u5584\u4e2d\uff0c\u4f46\u662f\u8fd9\u4e0d\u4f1a\u5f71\u54cd\u8bfb\u8005\u4f7f\u7528\u5b83\u5b66\u4e60 Python\u3002\u5176\u5b9e\uff0c\u7531\u4e8e Jupyter Notebook \u4e0e nteract \u8fd0\u884c Python \u90fd\u662f\u57fa\u4e8e IPython \u5185\u6838 ipykernel\uff0c\u9664\u4e86\u754c\u9762\u3001\u663e\u793a\u6548\u679c\u548c\u4e00\u4e9b\u7ec6\u5fae\u4e4b\u5904\uff0c\u4e24\u8005\u5728\u4f7f\u7528\u4e0a\u5e76\u6ca1\u6709\u592a\u591a\u7684\u4e0d\u540c\uff0c\u56e0\u6b64\u8bfb\u8005\u4e0d\u7528\u62c5\u5fc3\u662f\u9009\u62e9\u4f7f\u7528\u9ed8\u8ba4 Jupyter Notebook \u8fd8\u662f nteract \u8fdb\u884c Python \u5b66\u4e60\u7684\u95ee\u9898\u3002 Anaconda \u7684\u4e0b\u8f7d\u4e0e\u5b89\u88c5 \u00b6 \u8bfb\u8005\u9700\u8981\u5230Anaconda\u5b98\u7f51\u4e0b\u8f7d\u5730\u5740\uff08 https://www.anaconda.com/download/ \uff09\u4e0b\u8f7d\u5bf9\u5e94\u64cd\u4f5c\u7cfb\u7edf\u7684 Python3 \u7248\u672c Anaconda\u3002 \u5728\u641c\u7d22\u5f15\u64ce\u952e\u5165\u5173\u952e\u5b57 Anaconda \u4e5f\u53ef\u4ee5\u8f7b\u677e\u5730\u627e\u5230 Anaconda \u5b98\u7f51\u5730\u5740\uff0c\u5982\u56fe1-4\u6240\u793a\u3002 Anaconda \u4e0b\u8f7d\u9875\u9762\u4f1a\u6839\u636e\u8bfb\u8005\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\uff08Windows\u3001Linux\u3001macOS\uff09\u81ea\u52a8\u63a8\u8350\u76f8\u5e94\u7684\u5b89\u88c5\u5305\uff0c\u5982\u56fe1-5\u6240\u793a\uff0c\u8bfb\u8005\u6839\u636e\u81ea\u5df1\u7684\u64cd\u4f5c\u7cfb\u7edf\u4f4d\u6570\uff08\u76ee\u524d\u5e02\u9762\u4e0a\u7684\u8ba1\u7b97\u673a\u4ee5 64 \u4f4d\u4e3a\u4e3b\uff09\u70b9\u51fb\u5de6\u4fa7 Download \u4e0b\u65b9\u7684\u4e0b\u8f7d\u94fe\u63a5\u8fdb\u884c\u4e0b\u8f7d\u3002 \u5982\u679c\u8bfb\u8005\u9605\u8bfb\u672c\u4e66\u65f6\uff0cAnaconda \u7684 Python \u7248\u672c\u4e0e\u56fe1-5\u6240\u793a\u7684 Python3.7 \u6709\u6240\u4e0d\u540c\uff0c\u8bfb\u8005\u53ef\u4ee5\u9009\u62e9\u66f4\u65b0\u7684\u7248\u672c\u6216\u8005\u5728\u7f51\u7edc\u4e0a\u5bfb\u627e Python3.7 \u7248\u672c Anaconda \u8fdb\u884c\u4e0b\u8f7d\u3002\u7531\u4e8e Python \u7684\u5411\u4e0b\u517c\u5bb9\u6027\uff0c\u4f7f\u7528\u66f4\u65b0\u7684\u7248\u672c\u672c\u4e66\u6240\u6709\u793a\u4f8b\u4ee3\u7801\u4e0d\u51fa\u610f\u5916\u4e5f\u90fd\u80fd\u6210\u529f\u8fd0\u884c\u3002 Anaconda \u5728 Windows \u4e0e macOS \u7cfb\u7edf\u4e0a\u7684\u5b89\u88c5 \u00b6 Windows \u4e0e macOS \u7cfb\u7edf\u4e2d Anaconda \u5b89\u88c5\u90fd\u662f\u56fe\u5f62\u5316\u7684\uff0c\u4e0e\u666e\u901a\u529e\u516c\u8f6f\u4ef6\u7684\u5b89\u88c5\u7c7b\u4f3c\uff0c\u975e\u5e38\u7b80\u5355\u3002 \u4e0b\u9762\u4ee5 Windows \u7cfb\u7edf\u4e0b\u7684\u5b89\u88c5\u4e3a\u4f8b\u8fdb\u884c\u8be6\u7ec6\u8bf4\u660e\u3002 \u9996\u5148\u53cc\u51fb\u4e0b\u8f7d\u7684 Anaconda \u5b89\u88c5\u5668\uff0c\u70b9\u51fb Next \uff0c\u5982\u56fe1-6\u6240\u793a\u3002 \u7a0b\u5e8f\u4f1a\u5f39\u51fa\u8bb8\u53ef\u534f\u8bae\u754c\u9762\uff0c\u70b9\u51fb I Agree \uff0c\u5982\u56fe1-7\u6240\u793a\u3002 \u63a5\u4e0b\u6765\u7a0b\u5e8f\u8981\u6c42\u9009\u62e9\u5b89\u88c5\u7c7b\u578b\uff1a\u8bfb\u8005\u662f\u4e3a\u8ba1\u7b97\u673a\u7684\u6bcf\u4e00\u4f4d\u7528\u6237\uff08\u7b2c\u4e8c\u9879\uff09\u8fd8\u662f\u4ec5\u4ec5\u5f53\u524d\u7528\u6237\uff08\u7b2c\u4e00\u9879\uff09\u5b89\u88c5 Anaconda\u3002\u5982\u679c\u8bfb\u8005\u4e0d\u786e\u5b9a\uff0c\u9009\u62e9\u9ed8\u8ba4\u9009\u9879\uff0c\u70b9\u51fb Next \u5373\u53ef\uff0c\u5982\u56fe1-8\u6240\u793a\u3002 \u63a5\u4e0b\u6765\u8bfb\u8005\u9700\u8981\u4e3a Anaconda \u9009\u62e9\u5408\u9002\u7684\u5b89\u88c5\u4f4d\u7f6e\u3002\u672c\u4e66\u4f5c\u8005\u63a8\u8350\u8bfb\u8005\u5c06 Anaconda \u5b89\u88c5\u5728\u7528\u6237\u76ee\u5f55\u7684 Anaconda3 \u76ee\u5f55\uff08\u5982\u679c\u4e0d\u5b58\u5728\u53ef\u4ee5\u65b0\u5efa\uff09\u4e0b\uff0c\u5982\u56fe1-9\u3002\u5982\u679c\u8bfb\u8005\u9009\u62e9\u5176\u4ed6\u76ee\u5f55\uff0c\u8bf7\u5c3d\u91cf\u907f\u514d\u5b89\u88c5\u8def\u5f84\u542b\u4e2d\u6587\u540d\u79f0\u3002 \u63a5\u4e0b\u6765\u4e00\u6b65\u662f\u8bbe\u5b9a\u9ad8\u7ea7\u5b89\u88c5\u9009\u9879\uff1a\u73af\u5883\u53d8\u91cf\u3002\u867d\u7136 Anaconda \u9ed8\u8ba4\u4e0d\u63a8\u8350\u5c06 Anaconda \u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\uff0c\u4f46\u672c\u4e66\u4f5c\u8005\u63a8\u8350\u8bfb\u8005\u52fe\u9009\u8be5\u9009\u9879\uff0c\u5982\u56fe1-10 \u6240\u793a\u3002\u52fe\u9009\u8be5\u9009\u9879\u7684\u597d\u5904\u662f\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u7ec8\u7aef\uff08Windows \u4e2d\u7684 cmd\uff09\u8bbf\u95ee\u6240\u6709\u7684 Anaconda \u7ec4\u4ef6\uff0c\u5305\u62ec Python\u3001Spyder\u3001Jupyter Notebook \u7b49\u3002 \u70b9\u51fb Install \u8fdb\u884c\u5b89\u88c5\u3002\u7531\u4e8e\u5b89\u88c5\u7684\u4e1c\u897f\u5f88\u591a\uff0c\u6574\u4e2a\u5b89\u88c5\u8fc7\u7a0b\u8017\u65f6\u8f83\u957f\uff0c\u4e00\u822c\u9700\u8981\u534a\u5c0f\u65f6\u5de6\u53f3\uff0c\u8bf7\u8bfb\u8005\u8010\u5fc3\u7b49\u5f85\u3002 \u5b89\u88c5\u8fdb\u5ea6\u6761\u5b8c\u6210\u540e\u70b9\u51fb Next \u3002 Anaconda \u63a8\u8350\u5b89\u88c5 VS Code \u4ee3\u7801\u7f16\u8f91\u5668\uff0c\u8be5\u8f6f\u4ef6\u53ef\u88c5\u53ef\u4e0d\u88c5\uff0c\u8bfb\u8005\u81ea\u884c\u9009\u62e9\u3002\u5982\u679c\u4e0d\u5b89\u88c5\uff0c\u70b9\u51fb Skip \u8df3\u8fc7\u5373\u53ef\uff0c\u5982\u56fe1-13\u6240\u793a\u3002 \u6700\u540e\u70b9\u51fb Finish \u5b8c\u6210\u5b89\u88c5\u8fc7\u7a0b\u3002 Anaconda \u7684 Linux \u7248\u672c\u7684\u5b89\u88c5 \u00b6 \u5728 Linux \u7cfb\u7edf\u4e0a\u5b89\u88c5 Anaconda \u662f\u4f7f\u7528\u547d\u4ee4\u884c\u65b9\u5f0f\u8fdb\u884c\u7684\uff08macOS \u4e5f\u53ef\u4ee5\uff09\uff0c\u4e0b\u8f7d\u5b8c Anaconda \u7684 Linux \u7248\u672c\u540e\uff0c\u6253\u5f00\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u5e76\u5728\u8be5\u76ee\u5f55\u4e0b\u6253\u5f00\u7ec8\u7aef\uff08\u4e5f\u53ef\u4ee5\u4ece\u5176\u4ed6\u76ee\u5f55\u4f7f\u7528 cd \u547d\u4ee4\u5207\u6362\uff09\u3002 \u7136\u540e\uff0c\u8f93\u5165\u547d\u4ee4\uff1a # \u9664\u4e86\u4f7f\u7528\u6d4f\u89c8\u5668\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ec8\u7aef\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4e0b\u8f7d Anaconda # wget -c https://repo.anaconda.com/archive/Anaconda3-2018.12-Linux-x86_64.sh # \u6dfb\u52a0\u6267\u884c\u6743\u9650 chmod u+x Anaconda3-2018.12-Linux-x86_64.sh # \u6267\u884c\u5b89\u88c5 ./Anaconda3-2018.12-Linux-x86_64.sh # \u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528Bash\u8fdb\u884c\u5b89\u88c5 bash Anaconda3-2018.12-Linux-x86_64.sh \u63a5\u7740\u6309\u7167\u63d0\u793a\u6309\u56de\u8f66\u952e\u6216 Yes \u3002\u6ce8\u610f\u6700\u540e\u5b89\u88c5\u7a0b\u5e8f\u63d0\u793a\u662f\u5426\u5c06 Anaconda \u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u65f6\u4e00\u5b9a\u8981\u952e\u5165 Yes \u540c\u610f\u3002 \u6700\u540e\u6d4b\u8bd5\u4e0b Anaconda \u662f\u5426\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u3002\u65b0\u5efa\u4e00\u4e2a\u7ec8\u7aef\uff0c\u952e\u5165\u4e0b\u9762\u547d\u4ee4\u5c06\u4f1a\u6253\u5f00 Jupyter Notebook\uff08\u5728 Windows \u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528 \u7ec4\u5408\u952e\uff0c\u7136\u540e\u8f93\u5165 cmd \uff09\u3002 jupyter notebook \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6d4f\u89c8\u5668\u4f1a\u81ea\u52a8\u6253\u5f00\uff0c\u8df3\u8f6c\u5230\u4e3b\u9875\u9762\uff0c\u5982\u56fe1-14\u3002 \u5982\u679c\u8bfb\u8005\u8fd8\u60f3\u8981\u8fdb\u4e00\u6b65\u4e86\u89e3 Anaconda \u53ca\u5176\u5b89\u88c5\u3001Jupyter Notebook \u76f8\u5173\u77e5\u8bc6\uff0c\u4e0d\u59a8\u591a\u67e5\u9605\u7f51\u7edc\u4e0a\u7684\u8d44\u6599\uff0c\u76ee\u524d\u7f51\u4e0a\u76f8\u5173\u7684\u4ecb\u7ecd\u548c\u95ee\u9898\u89e3\u7b54\u975e\u5e38\u4e30\u5bcc\u3002 nteract \u4e0b\u8f7d\u4e0e\u5b89\u88c5 \u00b6 \u8bfb\u8005\u53ef\u4ee5\u5230 nteract \u5b98\u7f51\uff08 https://nteract.io/ \uff09\u4e0b\u8f7d\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u5e94\u7684\u8f6f\u4ef6\u7248\u672c\uff0cWindows\u3001macOS \u4e0e Linux\u4e0a \u90fd\u53ef\u4ee5\u76f4\u63a5\u70b9\u51fb\u5b89\u88c5\u3002 \u5b89\u88c5\u540e\u76f4\u63a5\u70b9\u51fb\u8f6f\u4ef6\u56fe\u6807\u6253\u5f00\uff0c\u8f6f\u4ef6\u4e3b\u754c\u9762\u5982\u56fe1-15\u6240\u793a\u3002 \u5355\u51fb\u83dc\u5355\u680f\u4e2d\u7684 Runtime \uff0c\u5982\u679c\u51fa\u73b0 Python \u5b57\u6837\uff0c\u90a3\u4e48\u8bf4\u660e nteract \u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\uff0c\u540c\u65f6\u5de6\u4e0b\u65b9\u4e5f\u4f1a\u51fa\u73b0 python3 \u6807\u8bb0\u3002\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u4e0a\u8ff0\u5185\u5bb9\uff0c\u90a3\u4e48\u8bfb\u8005\u9700\u8981\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u6210\u529f\u5b89\u88c5 Anaconda \u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u3002 \u5230\u6b64\u4e3a\u6b62\uff0c\u8bfb\u8005\u5df2\u7ecf\u6210\u529f\u5730\u642d\u5efa Python \u7684\u5b66\u4e60\u73af\u5883\uff0c\u8fc8\u51fa\u4e86\u5b66\u4e60 Python \u6570\u636e\u5206\u6790\u7684\u7b2c\u4e00\u6b65\u3002\u4ece\u4e0b\u4e00\u7ae0\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u6b63\u5f0f\u8fdb\u5165 Python \u57fa\u672c\u8bed\u6cd5\u4e0e\u64cd\u4f5c\u7684\u5b66\u4e60\u3002 1.5 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 \u672c\u7ae0\u5411\u8bfb\u8005\u7b80\u8981\u4ecb\u7ecd\u4e86 Python \u7684\u5b9a\u4e49\u3001\u4f7f\u7528 Python \u8fdb\u884c\u6570\u636e\u5206\u6790\u7684\u4f18\u52bf\u3001\u8fdb\u884c\u79d1\u5b66\u8ba1\u7b97\u7684\u51e0\u4e2a\u91cd\u8981\u5e93\uff08\u8f6f\u4ef6\u5305\uff09\u4ee5\u53ca\u7ebf\u4e0a Python \u5e73\u53f0\u3001\u672c\u5730 Python \u5b66\u4e60\u73af\u5883\u7684\u5b89\u88c5\u3002\u672c\u4e66\u63a8\u8350\u8bfb\u8005\u4f7f\u7528 Anaconda\uff08\u5fc5\u5907\uff09\u4e0e nteract\uff08\u53ef\u9009\uff09\u4f5c\u4e3a\u8bfb\u8005\u7684 Python \u5b66\u4e60\u5e73\u53f0\u3002 Anaconda \u5df2\u7ecf\u5728\u6570\u636e\u5206\u6790\u9886\u57df\u4e2d\u5e7f\u4e3a\u6d41\u884c\uff0c\u5176\u4e2d Jupyter \u662f\u6838\u5fc3\u5de5\u5177\u3002Jupyter Notebook \u548c nteract \u90fd\u662f\u57fa\u4e8e Jupyter \u5e95\u5c42\u6838\u5fc3\u7684\u56fe\u5f62\u754c\u9762\uff0c\u8bfb\u8005\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u7075\u6d3b\u9009\u62e9\u548c\u4f7f\u7528\u3002\u9664\u6b64\u4e4b\u5916\uff0cPython \u6d41\u884c\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08Integrated development environment\uff0cIDE\uff09\u6216\u4ee3\u7801\u7f16\u8f91\u5668\u5f88\u591a\uff0c\u5404\u6709\u7279\u8272\uff0c\u503e\u5411\u4f7f\u7528\u5176\u4ed6 IDE \u6216\u7f16\u8f91\u5668\u7684\u8bfb\u8005\u4e0d\u59a8\u53c2\u8003\u7f51\u7edc\u8d44\u6599\u8fdb\u884c Python \u73af\u5883\u7684\u914d\u7f6e\u3002 Anaconda \u5e73\u53f0\u9664\u4e86 Jupyter\uff0c\u8fd8\u5305\u542b\u4e00\u4e9b\u5176\u4ed6\u7684\u91cd\u8981\u8f6f\u4ef6\u548c\u63d2\u4ef6\uff08\u5982Spyder\u3001Jupyter Lab\uff09\u3002\u56e0\u4e3a\u5bf9\u5b83\u4eec\u7684\u4ecb\u7ecd\u4e0d\u662f\u672c\u4e66\u6838\u5fc3\u5185\u5bb9\uff0c\u6240\u4ee5\u6ca1\u6709\u5728\u672c\u7ae0\u4e00\u4e00\u7f57\u5217\uff0c\u611f\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u8d44\u6599\u8fdb\u884c\u4e86\u89e3\u548c\u5b66\u4e60\u3002","title":"\u7b2c 1 \u7ae0 Python \u4ecb\u7ecd\u53ca\u5b66\u4e60\u524d\u7684\u51c6\u5907"},{"location":"01-introduction/#1-python","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : Python \u662f\u4ec0\u4e48 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 Python \u8fdb\u884c\u6570\u636e\u5206\u6790 \u79d1\u5b66\u8ba1\u7b97\u6838\u5fc3\u5e93\u7b80\u4ecb \u8f6f\u4ef6\u5b89\u88c5\u4e0e\u914d\u7f6e \u672c\u4e66\u5728\u6b63\u5f0f\u5411\u8bfb\u8005\u4ecb\u7ecd Python \u7684\u57fa\u672c\u8bed\u6cd5\u4e0e\u64cd\u4f5c\u4e4b\u524d\uff0c\u901a\u8fc7\u672c\u7ae0\u5411\u8bfb\u8005\u7b80\u8981\u4ecb\u7ecd Python \u7684\u5b9a\u4e49\u4e0e\u5229\u7528 Python \u8fdb\u884c\u6570\u636e\u5904\u7406\u7684\u4f18\u52bf\uff0c\u8be6\u8ff0\u5b66\u4e60 Python \u4e4b\u524d\u76f8\u5173\u8f6f\u4ef6\u7684\u5b89\u88c5\u4e0e\u914d\u7f6e\u3002","title":"\u7b2c 1 \u7ae0 Python \u4ecb\u7ecd\u53ca\u5b66\u4e60\u524d\u7684\u51c6\u5907"},{"location":"01-introduction/#11-python","text":"\u5728 IEEE \u53d1\u5e03\u7684 2017 \u5e74\u7f16\u7a0b\u8bed\u8a00\u6392\u884c\u699c\u4e2d\uff0cPython \u9ad8\u5c45\u9996\u4f4d\u3002\u5bf9\u4e8e\u8fd9\u6837\u4e00\u95e8\u6d41\u884c\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c \u5f88\u591a\u7684 Python \u5165\u95e8\u56fe\u4e66\u90fd\u7ed9\u5b83\u8fdb\u884c\u5b9a\u4e49\uff0c\u4f46\u672c\u4e66\u4f5c\u8005\u8ba4\u4e3a\uff0c\u8f83\u4e3a\u6e05\u6670\u660e\u4e86\u7684\u5b9a\u4e49\u6765\u81ea\u7ef4\u57fa\u767e\u79d1\uff1a Python \u662f\u4e00\u79cd\u5e7f\u6cdb\u4f7f\u7528\u7684\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u5c5e\u4e8e\u901a\u7528\u578b\u7f16\u7a0b\u8bed\u8a00\uff0c\u7531\u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6\u521b\u9020\uff0c\u7b2c\u4e00\u7248\u53d1\u5e03\u4e8e 1991 \u5e74\u3002Python \u53ef\u4ee5\u88ab\u89c6\u4e4b\u4e3a\u4e00\u79cd\u6539\u826f(\u52a0\u5165\u4e00\u4e9b\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u7684\u4f18\u70b9\uff0c\u5982\u9762\u5411\u5bf9\u8c61) \u7684 LISP\u3002\u4f5c\u4e3a\u4e00\u79cd\u89e3\u91ca\u578b\u8bed\u8a00\uff0cPython \u7684\u8bbe\u8ba1\u54f2\u5b66\u5f3a\u8c03\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7b80\u6d01\u7684\u8bed\u6cd5\uff08\u5c24\u5176\u662f\u4f7f\u7528\u7a7a\u683c\u7f29\u8fdb\u5212\u5206\u4ee3\u7801\u5757\uff0c\u800c\u975e\u4f7f\u7528\u5927\u62ec\u53f7\u6216\u8005\u5173\u952e\u8bcd\uff09\u3002\u76f8\u6bd4\u4e8e C++ \u6216 Java\uff0cPython \u8ba9\u5f00\u53d1\u8005\u80fd\u591f\u7528\u66f4\u5c11\u7684\u4ee3\u7801\u8868\u8fbe\u60f3\u6cd5\u3002\u65e0\u8bba\u662f\u5c0f\u578b\u8fd8\u662f\u5927\u578b\u7a0b\u5e8f\uff0cPython \u90fd\u8bd5\u56fe\u8ba9\u7a0b\u5e8f\u7684\u7ed3\u6784\u6e05\u6670\u660e\u4e86\u3002 \u8fd9\u6bb5\u6587\u5b57\u56ca\u62ec\u4e86\u8bfb\u8005\u9700\u8981\u4e86\u89e3\u7684\u5173\u4e8e Python \u7684\u57fa\u672c\u4fe1\u606f\u3002 Python \u76ee\u524d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002 Python \u5c5e\u4e8e\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u8fd9\u533a\u522b\u4e8e C \u8bed\u8a00\u8fd9\u6837\u7684\u4e2d\u7ea7\u8bed\u8a00\u6216\u662f\u5e95\u5c42\u7684\u786c\u4ef6\u7f16\u7a0b\u3001\u6c47\u7f16\u7b49\u8bed\u8a00\u3002 Python \u7531\u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6\u521b\u9020\uff0c\u4e8e1991\u5e74\u53d1\u5e03\u3002 Python \u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08Object-Oriented Programming\uff0cOOP\uff09\u3002 Python \u5c5e\u4e8e\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u89e3\u91ca\u578b\u8bed\u8a00\u4ee5\u6587\u672c\u7684\u65b9\u5f0f\u5b58\u50a8\u7a0b\u5e8f\u4ee3\u7801\uff0c\u4e0d\u9700\u8981\u5728\u8fd0\u884c\u524d\u8fdb\u884c\u7f16\u8bd1\uff08\u4e3a\u5927\u4f17\u6240\u719f\u77e5\u7684 C \u8bed\u8a00\u5c31\u4e0d\u662f\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u5728\u8fd0\u884c\u524d\u5fc5\u987b\u7f16\u8bd1\u4e3a\u673a\u5668\u8bc6\u522b\u7684\u8bed\u8a00\uff09\u3002 \u5f3a\u8c03\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7b80\u6d01\u7684\u8bed\u6cd5\u662f Python \u7684\u8bbe\u8ba1\u54f2\u5b66\uff0c\u8fd9\u4e00\u70b9\u5c24\u5176\u9700\u8981\u6ce8\u610f\u548c\u7406\u89e3\uff0c\u56e0\u4e3a\u8fd9\u662f Python \u5728\u5f62\u5f0f\u4e0a\u6700\u6709\u522b\u4e8e\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u4e4b\u5904\u3002Python \u4f7f\u7528\u7a7a\u683c\u7684\u7f29\u8fdb\u6765\u5212\u5206\u4e0d\u540c\u7684\u4ee3\u7801\u5757\uff0c\u5176\u4ed6\u4e00\u4e9b\u5e38\u89c1\u8bed\u8a00\u4e00\u822c\u4f7f\u7528\u5927\u62ec\u53f7\u6216\u8005\u5173\u952e\u5b57\uff0c\u6b63\u662f\u8fd9\u4e2a\u7279\u70b9\uff0c\u8ba9 Python \u4ee3\u7801\u65e0\u8bba\u5927\u5c0f\u957f\u77ed\u90fd\u770b\u8d77\u6765\u975e\u5e38\u7b80\u5355\u6e05\u6670\uff0c\u6613\u4e8e\u4f7f\u7528\uff08\u8bfb\u8005\u5c06\u4f1a\u5728\u672c\u4e66\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\u6df1\u5165\u7406\u89e3\u8fd9\u4e00\u7279\u70b9\uff09\u3002 \u4e86\u89e3\u4e00\u95e8\u8bed\u8a00\u7684\u5386\u53f2\u548c\u7279\u70b9\u6709\u52a9\u4e8e\u63d0\u5347\u8bfb\u8005\u5bf9\u5176\u8bed\u6cd5\u7684\u7406\u89e3\u548c\u5feb\u901f\u5e94\u7528\u80fd\u529b\u3002\u8bfb\u8005\u6709\u95f2\u6687\u4e0d\u59a8\u901a\u8fc7\u641c\u7d22\u5f15\u64ce\u67e5\u67e5 Python \u8bbe\u8ba1\u7684\u521d\u8877\u548c\u4e00\u4e9b Python \u5f00\u53d1\u7684\u8457\u540d\u9879\u76ee\u3002","title":"1.1 Python \u662f\u4ec0\u4e48"},{"location":"01-introduction/#12-python","text":"\u5728\u6210\u4e3a\u6570\u636e\u5206\u6790\u548c\u4eba\u5de5\u667a\u80fd\u7b49\u9886\u57df\u7684\u5934\u53f7\u9009\u624b\u4e4b\u524d\uff0cPython \u65e9\u5c31\u56e0\u5176\u5927\u91cf\u7684 Web \u6846\u67b6\u3001\u4e30\u5bcc\u7684\u6807\u51c6\u5e93\u4ee5\u53ca\u4f17\u591a\u7684\u6269\u5c55\u5e93\u7b49\u7279\u70b9\u6210\u4e3a\u7f51\u7edc\u5efa\u7ad9\u3001\u7cfb\u7edf\u7ba1\u7406\u3001\u4fe1\u606f\u5b89\u5168\u7b49\u9886\u57df\u7684\u70ed\u95e8\u65b9\u6848\u3002\u4f8b\u5982\uff0c\u6709\u540d\u7684\u8c46\u74e3\u7f51\u7ad9\u5c31\u662f\u57fa\u4e8e Python \u5f00\u53d1\uff0cLinux \u6240\u6709\u7684\u53d1\u884c\u7248\u90fd\u9ed8\u8ba4\u5b89\u88c5\u4e86 Python\u3002 \u8fd1\u5e74\u6765\uff0cPython \u7684\u79d1\u5b66\u8ba1\u7b97\u5e93\uff08\u5982\u7ed3\u6784\u5316\u6570\u636e\u64cd\u4f5c\u5e93 Pandas\u3001\u673a\u5668\u5b66\u4e60\u5e93 scikit-learn\uff09\u4e0d\u65ad\u8fdb\u884c\u6539\u826f\uff0c\u4f7f\u5f97\u5229\u7528 Python \u6765\u8fdb\u884c\u6570\u636e\u5206\u6790\u6210\u4e86\u4f18\u9009\u65b9\u6848\u3002Python \u8fd8\u6709\u4e00\u4e2a\u80f6\u6c34\u8bed\u8a00\u7684\u5916\u53f7\uff0c\u8fd9\u6765\u6e90\u4e8e\u5b83\u80fd\u591f\u975e\u5e38\u8f7b\u677e\u5730\u96c6\u6210 C\u3001C++ \u7b49\u5e95\u5c42\u4ee3\u7801\uff0c\u8fdb\u884c\u8ba1\u7b97\u4f18\u5316\u3002\u4e0e SAS \u548c R \u7b49\u5206\u6790\u5efa\u6a21\u9886\u57df\u7279\u5b9a\u7f16\u7a0b\u8bed\u8a00\u76f8\u6bd4\uff0cPython \u53ef\u4ee5\u540c\u65f6\u7528\u4e8e\u9879\u76ee\u539f\u578b\u7684\u6784\u5efa\u548c\u751f\u4ea7\uff08\u524d\u8005\u5219\u4e3b\u8981\u7528\u4e8e\u9879\u76ee\u539f\u578b\u7684\u6784\u5efa\uff09\uff0c\u4ece\u800c\u907f\u514d\u4e86\u4f7f\u7528\u591a\u4e2a\u8bed\u8a00\u7684\u9ebb\u70e6\u3002\u52a0\u4e0aPython \u672c\u8eab\u591a\u5e74\u6765\u4e0d\u65ad\u63d0\u5347\u7684\u5f3a\u5927\u7f16\u7a0b\u80fd\u529b\uff0c\u7528\u6237\u53ea\u9700\u8981\u4f7f\u7528 Python \u5c31\u53ef\u4ee5\u5b8c\u6210\u4ee5\u6570\u636e\u4e3a\u4e2d\u5fc3\u7684\u5efa\u6a21\u3001\u5206\u6790\u4e0e\u5e94\u7528\u3002 \u53ef\u4ee5\u8bf4\uff0cPython \u5728\u6570\u636e\u5206\u6790\u9886\u57df\u7684\u8fc5\u731b\u53d1\u5c55\u4e0e\u5176\u672c\u8eab\u975e\u5e38\u6210\u719f\u4e14\u5e7f\u6cdb\u5e94\u7528\u662f\u5206\u4e0d\u5f00\u7684\uff0cPython \u5f00\u6e90\u3001\u7b80\u660e\u6613\u7528\u7684\u7279\u70b9\u4e5f\u8ba9\u5f00\u53d1\u8005\u548c\u4f7f\u7528\u8005\u81ea\u89c9\u503e\u6ce8\u7cbe\u529b\u5171\u540c\u7ef4\u62a4\u793e\u533a\u73af\u5883\uff0c\u6784\u5efa\u4e86\u6574\u4e2a Python \u8ba1\u7b97\u5206\u6790\u9886\u57df\u7684\u826f\u597d\u751f\u6001\u7cfb\u7edf\u3002","title":"1.2 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 Python \u8fdb\u884c\u6570\u636e\u5206\u6790"},{"location":"01-introduction/#13","text":"Python \u62e5\u6709\u7740\u4f17\u591a\u7684\u8f6f\u4ef6\u5305/\u5e93\uff0c\u672c\u4e66\u96be\u4ee5\u5168\u90e8\u6d89\u53ca\uff0c\u8fd9\u91cc\u4ec5\u4ecb\u7ecd\u51e0\u4e2a\u6784\u6210 Python \u79d1\u5b66\u8ba1\u7b97\u751f\u6001\u7cfb\u7edf\u7684\u6838\u5fc3\u6210\u5458\u3002 NumPy\uff1aNumPy \u662f Numerical Python \u7684\u7b80\u79f0\u3002NumPy \u662f Python \u79d1\u5b66\u8ba1\u7b97\u6700\u57fa\u7840\u7684\u5e93\uff0c\u57fa\u672c\u4e0a\u6d89\u53ca\u6570\u636e\u5206\u6790\u7684\u8f6f\u4ef6\u5305\u90fd\u57fa\u4e8e\u5b83\u6784\u5efa\u3002 Pandas\uff1aPandas \u7684\u540d\u5b57\u6765\u6e90\u4e8e Python \u6570\u636e\u5206\u6790\uff08Python data analysis\uff09\u548c\u9762\u677f\u6570\u636e\uff08Panel data\uff09\u7684\u7ed3\u5408\u3002\u8be5\u5e93\u63d0\u4f9b\u4e86\u591a\u4e2a\u6570\u636e\u5b58\u50a8\u5bf9\u8c61\uff0c\u5176\u4e2d\u7684 DataFrame \u5bf9\u8c61\u53ef\u4ee5\u8868\u5f81\u6570\u636e\u5206\u6790\u5e38\u89c1\u7684\u4e8c\u7ef4\u8868\u683c\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u8fd8\u63d0\u4f9b\u4e86\u975e\u5e38\u591a\u4fbf\u6377\u5904\u7406\u7ed3\u6784\u5316\u6570\u636e\u7684\u51fd\u6570\u3002 Matplotlib\uff1aMatplotlib \u8d77\u6e90\u4e8e\u77e9\u9635\u5b9e\u9a8c\u5ba4 MATLAB \u4e2d\u7684\u7ed8\u56fe\u51fd\u6570\uff0c\u662f Python \u4e2d\u975e\u5e38\u6d41\u884c\u7684\u7ed8\u56fe\u5e93\uff0c\u53ef\u4ee5\u8f7b\u677e\u8fdb\u884c\u4e8c\u7ef4\u6570\u636e\u751a\u81f3\u591a\u7ef4\u6570\u636e\u53ef\u89c6\u5316\u3002 SciPy\uff1aSciPy \u5e93\u63d0\u4f9b\u4e86\u4e00\u7ec4\u4e13\u95e8\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u4e2d\u5404\u79cd\u6807\u51c6\u95ee\u9898\u5305\uff0c\u5982\u6570\u503c\u79ef\u5206\u3001\u5fae\u5206\u3001\u4fe1\u53f7\u5904\u7406\u3001\u7edf\u8ba1\u5206\u6790\uff0c\u5b83\u4e0e NumPy \u7684\u7ed3\u5408\u53ef\u4ee5\u5904\u7406\u8bf8\u591a\u79d1\u5b66\u8ba1\u7b97\u95ee\u9898\u3002 Jupyter\uff1aJupyter \u662f\u4e00\u4e2a\u4ea4\u4e92\u548c\u63a2\u7d22\u5f0f\u8ba1\u7b97\u7684\u9ad8\u6548\u73af\u5883\u3002\u5176\u4e2d\u4e24\u4e2a\u7ec4\u4ef6\u8f83\u4e3a\u5e38\u7528\uff0c\u4e00\u662f IPython\uff0c\u7528\u4e8e\u7f16\u5199\u3001\u6d4b\u8bd5\u548c\u8c03\u8bd5 Python \u4ee3\u7801\uff1b\u4e8c\u662f Jupyter Notebook\uff0c\u5b83\u662f\u4e00\u4e2a\u591a\u8bed\u8a00\u4ea4\u4e92\u5f0f\u7684 Web \u7b14\u8bb0\u672c\uff0c\u73b0\u5728\u652f\u6301\u8fd0\u884c Python\u3001R \u7b49\u591a\u79cd\u8bed\u8a00\uff0cJupyter Notebook \u4e2d\u4ee3\u7801\u4e0e Markdown \u7684\u7ed3\u5408\u53ef\u4ee5\u521b\u5efa\u826f\u597d\u3001\u53ef\u91cd\u590d\u7684\u52a8\u6001\u6587\u6863\u3002\u8fd9\u4e5f\u662f\u8bfb\u8005\u8fdb\u884c Python \u6570\u636e\u5206\u6790\u7684\u5b66\u4e60\u73af\u5883\u3002","title":"1.3 \u79d1\u5b66\u8ba1\u7b97\u6838\u5fc3\u5e93\u7b80\u4ecb"},{"location":"01-introduction/#14","text":"Python \u5b58\u5728 Python2\uff08\u73b0\u5728\u4e00\u822c\u6307 Python2.7\uff09\u548c Python3\uff08\u73b0\u5728\u4e00\u822c\u6307 Python3.5 \u53ca\u4ee5\u4e0a\uff09\u4e24\u4e2a\u4e0d\u540c\u7684\u5927\u7248\u672c\u3002Python \u5b98\u65b9\u5ba3\u5e03\u4e8e 2020 \u5e74\u505c\u6b62 Python2 \u7684\u66f4\u65b0\u548c\u7ef4\u62a4\uff0c\u5168\u9762\u8fdb\u5165 Python3 \u65f6\u4ee3\u3002\u8003\u8651\u5230\u5b66\u4e60\u548c\u5e94\u7528\u7684\u666e\u9002\u6027\uff0c\u672c\u4e66\u7684\u4ecb\u7ecd\u4ee5 Python3 \u7248\u672c\u4e3a\u57fa\u7840\u3002 \u76ee\u524d\u6d41\u884c\u7684 Python \u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\u6709\u5f88\u591a\uff0c\u5982 PyCharm\u3001Sublime Text\u3001Eclipse+PyDev \u548c Anaconda \u4e2d\u7684 Spyder\u3002\u4e0d\u540c\u7684\u8f6f\u4ef6\u3001\u7cfb\u7edf\u7684\u5b89\u88c5\u548c\u914d\u7f6e\u65b9\u5f0f\u5404\u4e0d\u76f8\u540c\uff0c\u672c\u4e66\u4f7f\u7528 Anaconda \u5e73\u53f0\u7684 Jupyter Notebook \u5bf9 Python \u8fdb\u884c\u4ecb\u7ecd\u3002Anaconda \u662f\u975e\u5e38\u5f3a\u5927\u7684\u8de8\u7cfb\u7edf\u5f00\u6e90\u8ba1\u7b97\u5e73\u53f0\uff0c\u652f\u6301\u4e2a\u4eba PC \u4f7f\u7528\u7684 Windows\u3001Linux \u548c macOS\uff0c\u63d0\u4f9b\u7684\u8fd1 1000 \u4e2a\u5f00\u6e90\u8f6f\u4ef6\u5305\u57fa\u672c\u4e0a\u53ef\u4ee5\u6ee1\u8db3\u4e2a\u4eba\u6216\u56e2\u961f\u8fdb\u884c\u6570\u636e\u5904\u7406\u7684\u9700\u6c42\u3002 \u4e3a\u4e86\u6ee1\u8db3\u4e0d\u540c\u8bfb\u8005\u7684\u9700\u6c42\uff0c\u672c\u4e66\u4ecb\u7ecd\u4e24\u79cd Python \u7ebf\u4e0a\u5e73\u53f0\u3001\u4ee5\u53ca\u672c\u5730\u673a\u5668\u73af\u5883\u4e0b\u76f8\u5173\u8f6f\u4ef6\u7684\u5b89\u88c5\u548c\u914d\u7f6e\uff0c\u8bfb\u8005\u53ef\u4efb\u610f\u9009\u62e9\u4f7f\u7528\u3002","title":"1.4 \u642d\u5efa\u73af\u5883"},{"location":"01-introduction/#141","text":"\u7f51\u7edc\u4e0a\u73b0\u5728\u6709\u5f88\u591a\u5728\u7ebf\u7684 Python \u89e3\u91ca\u5668\uff0c\u8bfb\u8005\u53ef\u4ee5\u5728\u8ba1\u7b97\u673a\u6709\u7f51\u7edc\u670d\u52a1\u7684\u60c5\u51b5\u4e0b\u901a\u8fc7\u6d4f\u89c8\u5668\u8fd0\u884c\u4ee3\u7801\u3002\u56e0\u4e3a\u8f6f\u4ef6\u5305\u7684\u5bfc\u5165\u548c\u8ba1\u7b97\u90fd\u5728\u670d\u52a1\u5668\u7aef\uff0c\u6240\u4ee5\u8bfb\u8005\u4e0d\u9700\u8981\u8f83\u9ad8\u914d\u7f6e\u7684\u8ba1\u7b97\u673a\u5c31\u80fd\u8fdb\u884c Python \u7684\u5b66\u4e60\u548c\u6570\u636e\u5206\u6790\u3002 \u672c\u4e66\u63a8\u8350\u4e24\u4e2a\u514d\u8d39\u7684 Jupyter Notebook \u7f51\u7ad9\uff0c\u8bfb\u8005\u53ef\u7ed3\u5408\u81ea\u5df1\u8ba1\u7b97\u673a\u7684\u914d\u7f6e\u548c\u7f51\u7edc\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u3002 Jupyter \u5b98\u65b9\u63d0\u4f9b\u7684 Try Jupyter \u7f51\u7ad9 \uff08 https://jupyter.org/try \uff09\uff0c\u8be5\u7f51\u7ad9\u5305\u542b\u5b66\u4e60\u5728 Jupyter \u4e2d\u4f7f\u7528 Python \u548c\u6587\u672c\u4e66\u5199\u7684\u4f8b\u5b50\u548c\u7ec3\u4e60\uff0c\u8bfb\u8005\u53ef\u4ee5\u5728 Try Python with Jupyter \u7684\u4e3b\u9875\uff08\u5728 Try Jupyter \u7f51\u7ad9\u9009\u62e9\u4f7f\u7528 Python\uff09\u8fd0\u884c\u3001\u8c03\u8bd5\u4ee3\u7801\uff0c\u5e76\u4e0b\u8f7d Jupyter \u7b14\u8bb0\u672c\u5230\u672c\u5730\u5b58\u50a8\u3002 \u5fae\u8f6f\u516c\u53f8\u63d0\u4f9b\u7684 Jupyter \u6570\u636e\u63a2\u7d22\u5b66\u4e60\u5e73\u53f0 Azure\uff08 https://notebooks.azure.com/ \uff09\uff0c\u5982\u56fe1-2\u6240\u793a\uff0c\u652f\u6301\u5728\u7ebf\u8fd0\u884c\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u6570\u5b66\u79d1\u5b66\u63a2\u7d22\uff0c\u5176\u4e2d\u6bd4\u8f83\u5e38\u7528\u7684\u662f Python \u548c R\u3002\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u5fae\u8f6f\u8d26\u6237\u521b\u5efa\u4ed3\u5e93\uff0c\u65b0\u5efa Jupyter Notebook \u5e76\u4e66\u5199\u4ee3\u7801\u548c\u63a2\u7d22\u6570\u636e\uff0c\u5b8c\u6210\u540e\u53ef\u4ee5\u4fdd\u5b58\u3001\u4e0e\u4ed6\u4eba\u5206\u4eab\uff08\u4f7f\u7528\u8fc7 GitHub \u7b49\u5f00\u6e90\u4ed3\u5e93\u7684\u8bfb\u8005\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u5e73\u53f0\u7684\u64cd\u4f5c\u548c\u5b83\u4eec\u6781\u4e3a\u76f8\u4f3c\uff09\u3002 \u672c\u4e66\u4f5c\u8005\u63a8\u8350\u8bfb\u8005\u4f7f\u7528 Azure \u5e73\u53f0\uff0c\u56e0\u4e3a\u5176\u5728\u521b\u5efa\u3001\u4f7f\u7528\u3001\u4fdd\u5b58\u4e0e\u5206\u4eab\u65b9\u9762\u5360\u6709\u4f18\u52bf\uff0c\u4e0d\u8fc7\u8bfb\u8005\u9996\u5148\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u5fae\u8f6f\u8d26\u53f7\u3002 \u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u4eec\u76f8\u4fe1\u4f1a\u6709\u8d8a\u6765\u8d8a\u591a\u7684\u7ebf\u4e0a Jupyter Notebook \u5e73\u53f0\uff0c\u611f\u5174\u8da3\u7684\u8bfb\u8005\u4e0d\u59a8\u641c\u7d22\u6c47\u603b\u5e76\u9009\u62e9\u6700\u9002\u5408\u81ea\u5df1\u5b66\u4e60\u548c\u4f7f\u7528\u7684\u5e73\u53f0\u3002","title":"1.4.1 \u7ebf\u4e0a\u5e73\u53f0"},{"location":"01-introduction/#142","text":"\u8bfb\u8005\u5982\u679c\u60f3\u8981\u5728\u672c\u5730\u90e8\u7f72\u5b66\u4e60\u73af\u5883\uff0c\u90a3\u4e48\u53ef\u4ee5\u9009\u62e9\u5b89\u88c5\u4e24\u6b3e\u8f6f\u4ef6\u3002\u7b2c\u4e00\u6b3e\u8f6f\u4ef6\u662f\u4e0a\u6587\u5df2\u7ecf\u63d0\u5230\u7684 Anaconda\uff0c\u5176\u4e3a\u5fc5\u9700\u8f6f\u4ef6\uff1b\u7b2c\u4e8c\u6b3e\u8f6f\u4ef6\u4e3a nteract\uff08 https://nteract.io/ \uff09\uff0c\u89c1\u56fe1-3\uff0c\u4e3a\u53ef\u9009\u8f6f\u4ef6\u3002\u4e0e Anaconda \u9ed8\u8ba4\u63d0\u4f9b\u7684 Jupyter Notebook \u4e0d\u540c\uff0cnteract \u50cf\u6211\u4eec\u5e38\u7528\u7684\u6587\u5b57\u7f16\u8f91\u5668\u4e00\u6837\uff0c\u754c\u9762\u975e\u5e38\u7b80\u6d01\u9177\u723d\uff0c\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u5730\u7f16\u8f91 Jupyter Notebook \u6587\u4ef6\uff08\u6587\u4ef6\u6269\u5c55\u540d\u4e3a .ipynb \uff09\u3002\u672c\u4e66\u4f5c\u8005\u63a8\u8350\u8bfb\u8005\u4f7f\u7528 nteract\uff0c\u672c\u4e66\u540e\u7eed\u7684\u4ee3\u7801\u548c\u6587\u6863\u5c55\u793a\u90fd\u4f1a\u4f7f\u7528\u5230\u5b83\uff0c\u867d\u7136 nteract \u76ee\u524d\u53ea\u6709 alpha \u7248\u672c\uff08\u6d4b\u8bd5\u7248\uff09\uff0c\u529f\u80fd\u8fd8\u5728\u4e0d\u65ad\u5b8c\u5584\u4e2d\uff0c\u4f46\u662f\u8fd9\u4e0d\u4f1a\u5f71\u54cd\u8bfb\u8005\u4f7f\u7528\u5b83\u5b66\u4e60 Python\u3002\u5176\u5b9e\uff0c\u7531\u4e8e Jupyter Notebook \u4e0e nteract \u8fd0\u884c Python \u90fd\u662f\u57fa\u4e8e IPython \u5185\u6838 ipykernel\uff0c\u9664\u4e86\u754c\u9762\u3001\u663e\u793a\u6548\u679c\u548c\u4e00\u4e9b\u7ec6\u5fae\u4e4b\u5904\uff0c\u4e24\u8005\u5728\u4f7f\u7528\u4e0a\u5e76\u6ca1\u6709\u592a\u591a\u7684\u4e0d\u540c\uff0c\u56e0\u6b64\u8bfb\u8005\u4e0d\u7528\u62c5\u5fc3\u662f\u9009\u62e9\u4f7f\u7528\u9ed8\u8ba4 Jupyter Notebook \u8fd8\u662f nteract \u8fdb\u884c Python \u5b66\u4e60\u7684\u95ee\u9898\u3002","title":"1.4.2 \u672c\u5730\u673a\u5668\u73af\u5883\u4e0b\u76f8\u5173\u8f6f\u4ef6\u7684\u5b89\u88c5"},{"location":"01-introduction/#15","text":"\u672c\u7ae0\u5411\u8bfb\u8005\u7b80\u8981\u4ecb\u7ecd\u4e86 Python \u7684\u5b9a\u4e49\u3001\u4f7f\u7528 Python \u8fdb\u884c\u6570\u636e\u5206\u6790\u7684\u4f18\u52bf\u3001\u8fdb\u884c\u79d1\u5b66\u8ba1\u7b97\u7684\u51e0\u4e2a\u91cd\u8981\u5e93\uff08\u8f6f\u4ef6\u5305\uff09\u4ee5\u53ca\u7ebf\u4e0a Python \u5e73\u53f0\u3001\u672c\u5730 Python \u5b66\u4e60\u73af\u5883\u7684\u5b89\u88c5\u3002\u672c\u4e66\u63a8\u8350\u8bfb\u8005\u4f7f\u7528 Anaconda\uff08\u5fc5\u5907\uff09\u4e0e nteract\uff08\u53ef\u9009\uff09\u4f5c\u4e3a\u8bfb\u8005\u7684 Python \u5b66\u4e60\u5e73\u53f0\u3002 Anaconda \u5df2\u7ecf\u5728\u6570\u636e\u5206\u6790\u9886\u57df\u4e2d\u5e7f\u4e3a\u6d41\u884c\uff0c\u5176\u4e2d Jupyter \u662f\u6838\u5fc3\u5de5\u5177\u3002Jupyter Notebook \u548c nteract \u90fd\u662f\u57fa\u4e8e Jupyter \u5e95\u5c42\u6838\u5fc3\u7684\u56fe\u5f62\u754c\u9762\uff0c\u8bfb\u8005\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u7075\u6d3b\u9009\u62e9\u548c\u4f7f\u7528\u3002\u9664\u6b64\u4e4b\u5916\uff0cPython \u6d41\u884c\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08Integrated development environment\uff0cIDE\uff09\u6216\u4ee3\u7801\u7f16\u8f91\u5668\u5f88\u591a\uff0c\u5404\u6709\u7279\u8272\uff0c\u503e\u5411\u4f7f\u7528\u5176\u4ed6 IDE \u6216\u7f16\u8f91\u5668\u7684\u8bfb\u8005\u4e0d\u59a8\u53c2\u8003\u7f51\u7edc\u8d44\u6599\u8fdb\u884c Python \u73af\u5883\u7684\u914d\u7f6e\u3002 Anaconda \u5e73\u53f0\u9664\u4e86 Jupyter\uff0c\u8fd8\u5305\u542b\u4e00\u4e9b\u5176\u4ed6\u7684\u91cd\u8981\u8f6f\u4ef6\u548c\u63d2\u4ef6\uff08\u5982Spyder\u3001Jupyter Lab\uff09\u3002\u56e0\u4e3a\u5bf9\u5b83\u4eec\u7684\u4ecb\u7ecd\u4e0d\u662f\u672c\u4e66\u6838\u5fc3\u5185\u5bb9\uff0c\u6240\u4ee5\u6ca1\u6709\u5728\u672c\u7ae0\u4e00\u4e00\u7f57\u5217\uff0c\u611f\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u8d44\u6599\u8fdb\u884c\u4e86\u89e3\u548c\u5b66\u4e60\u3002","title":"1.5 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"02-base/","text":"\u7b2c 2 \u7ae0 Python \u5165\u95e8\u793a\u4f8b\u53ca\u57fa\u7840\u77e5\u8bc6 \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : Python \u89e3\u91ca\u5668 \u7f16\u5199\u7b2c\u4e00\u884c Python \u4ee3\u7801 Notebook \u521d\u4f7f\u7528 \u5229\u7528 Python \u8fdb\u884c\u6570\u5b66\u8fd0\u7b97 \u53d8\u91cf\u7684\u547d\u540d\u548c\u4f7f\u7528 Python \u57fa\u672c\u6570\u636e\u7c7b\u578b \u672c\u7ae0\u9996\u5148\u4ecb\u7ecd Python \u7684\u89e3\u91ca\u5668\uff0c\u7136\u540e\u5c55\u793a Python \u7684\u4e00\u4e2a\u5165\u95e8\u793a\u4f8b\uff0c\u5e76\u7b80\u5355\u4ecb\u7ecd nteract \u8f6f\u4ef6\u7684\u4f7f\u7528\uff0c\u63a5\u7740\u4ecb\u7ecd Python \u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec Python \u7684\u57fa\u672c\u64cd\u4f5c\u7b26\u3001\u53d8\u91cf\u7684\u547d\u540d\u4e0e\u4f7f\u7528\u3001Python \u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7b49\u3002\u5bf9\u4e8e\u57fa\u7840\u77e5\u8bc6\u7684\u4ecb\u7ecd\uff0c\u672c\u4e66\u5c06\u901a\u8fc7\u5b9e\u4f8b\u5c55\u793a\u3001\u89e3\u6790\u5176\u542b\u4e49\u5e76\u8fdb\u884c\u5ef6\u4f38\u3002\u590d\u6742\u7684\u4ee3\u7801\u603b\u662f\u53ef\u4ee5\u62c6\u89e3\u4e3a\u4e00\u5c0f\u5757\u4e00\u5c0f\u5757\u57fa\u672c\u64cd\u4f5c\u7684\u96c6\u5408\uff0cPython \u6613\u8bfb\u6613\u61c2\u7684\u8bed\u8a00\u7279\u6027\u8ba9\u8fd9\u4e00\u6982\u5ff5\u66f4\u4e3a\u5f62\u8c61\u3002 2.1 Python \u89e3\u91ca\u5668\u4e0e IPython \u00b6 \u76f8\u6bd4\u4e8e C\u3001C++\u3001Java \u7b49\u7f16\u7a0b\u8bed\u8a00\uff0cPython \u4ee3\u7801\u7684\u8fd0\u884c\u5e76\u4e0d\u9700\u8981\u63d0\u524d\u8fdb\u884c\u7f16\u8bd1\uff0c\u800c\u662f\u901a\u8fc7 Python \u89e3\u91ca\u5668\u8fdb\u884c\u89e3\u91ca\u548c\u6267\u884c\uff0c\u6240\u89c1\u5373\u6240\u5f97\u3002\u4e13\u4e1a\u672f\u8bed\u79f0\u62e5\u6709\u8fd9\u79cd\u7279\u6027\u7684\u7f16\u7a0b\u8bed\u8a00\u4e3a\u89e3\u91ca\u6027\u6216\u52a8\u6001\u8bed\u8a00\u3002 2.1.1 \u6807\u51c6 Python \u89e3\u91ca\u5668 \u00b6 \u8bfb\u8005\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 python \u547d\u4ee4\u6253\u5f00\u6807\u51c6\u7684\u4ea4\u4e92 Python \u89e3\u91ca\u5668\u3002\u5982\u679c\u8bfb\u8005\u4f7f\u7528 Windows \u64cd\u4f5c\u7cfb\u7edf\uff0c\u70b9\u51fb\u5f00\u59cb\uff0d>\u8fd0\u884c\uff0d>\u952e\u5165 cmd \u5373\u53ef\u8fdb\u884c\u547d\u4ee4\u73af\u5883\u3002\u5982\u679c\u8bfb\u8005\u4f7f\u7528 macOS \u6216 Linux \u7cfb\u7edf\uff0c\u8bf7\u76f4\u63a5\u6253\u5f00\u7ec8\u7aef\u3002\u8f93\u5165 python \u540e\u8bfb\u8005\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e0b\u9762\u7684\u8f93\u51fa\uff08\u6b64\u5904\u4ee5 macOS \u7cfb\u7edf\u4e3a\u4f8b\uff09\uff1a Python 3.7.0 (default, Jun 28 2018, 07:39:16) [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> \u4e0a\u9762\u8f93\u51fa\u4e2d\u524d\u51e0\u884c\u663e\u793a\u4e86 Python \u7684\u7248\u672c\u4fe1\u606f\u3001\u4f7f\u7528\u7684\u662f C \u8bed\u8a00\u7f16\u8bd1\u5668 Clang\uff08Python \u8bed\u8a00\u672c\u8eab\u7684\u5e95\u5c42\u5b9e\u73b0\u6807\u51c6\u662fC\u8bed\u8a00\uff09\u4ee5\u53ca\u8be5 Python \u7531 Anaconda \u516c\u53f8\u53d1\u5e03\u3002 >>> \u662f\u547d\u4ee4\u63d0\u793a\u7b26\uff0c\u8bfb\u8005\u53ef\u4ee5\u5728\u540e\u9762\u8f93\u5165\u547d\u4ee4\u5e76\u6309\u4e0b\u56de\u8f66\u952e\uff0cPython \u89e3\u91ca\u5668\u4f1a\u5bf9\u547d\u4ee4\u8fdb\u884c\u89e3\u91ca\u5e76\u8fd4\u56de\u7ed3\u679c\u3002\u8bfb\u8005\u5982\u679c\u8981\u9000\u51fa Python \u89e3\u91ca\u5668\u8fd4\u56de\u7ec8\u7aef\uff0c\u90a3\u4e48\u8f93\u5165 exit() \u6216\u6309 \u3002\u6574\u4e2a\u8fc7\u7a0b\u5c31\u50cf\u4e00\u573a\u4eba\u673a\u5bf9\u8bdd\uff0c\u7528\u6237\u5728\u547d\u4ee4\u63d0\u793a\u7b26\u540e\u8f93\u5165\u6307\u4ee4\uff0cPython \u4f1a\u5fe0\u5b9e\u5730\u6267\u884c\u5e76\u8fd4\u56de\u7ed3\u679c\u4ee5\u4f9b\u7a0b\u5e8f\u5458\u9605\u8bfb\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e00\u5207\u90fd\u57fa\u4e8e\u8bfb\u8005\u719f\u7ec3\u638c\u63e1 Python \u57fa\u7840\u8bed\u6cd5\u3002 2.1.2 IPython \u00b6 \u5927\u90e8\u5206 Python \u7a0b\u5e8f\u5458\u90fd\u662f\u901a\u8fc7\u4e0a\u8ff0\u65b9\u5f0f\u6267\u884c Python \u547d\u4ee4\u7684\uff0c\u4f46\u4ece\u4e8b\u6570\u636e\u5206\u6790\u548c\u79d1\u5b66\u8ba1\u7b97\u7684\u4e13\u4e1a\u4eba\u58eb\u66f4\u559c\u6b22\u4f7f\u7528 IPython \u6216 Jupyter Notebook\u3002IPython \u662f\u4e00\u4e2a\u5f3a\u5316\u7684 Python \u89e3\u91ca\u5668\u3002Jupyter Notebook\u5219\u662f\u4e00\u4e2a\u7f51\u9875\u4ee3\u7801\u7b14\u8bb0\u672c\uff0c\u5b83\u539f\u662f IPython \u7684\u4e00\u4e2a\u5b50\u9879\u76ee\u3002\u8bfb\u8005\u53ef\u4ee5\u7b80\u5355\u5c06 Jupyter Notebook \u770b\u505a\u4e00\u4e2a\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684 IPython \u56fe\u5f62\u754c\u9762\uff0c\u4f7f\u7528\u8d77\u6765\u66f4\u52a0\u76f4\u89c2\u548c\u4f18\u5316\uff0c\u5e76\u4e14\u652f\u6301\u6587\u672c\u548c\u56fe\u50cf\u7684\u5d4c\u5165\u3002nteract \u8f6f\u4ef6\u5219\u53ef\u4ee5\u770b\u505a Jupyter Notebook \u7684\u672c\u5730\u7248\u672c\uff0c\u4f7f\u7528\u8ddf Jupyter Notebook \u57fa\u672c\u4e00\u81f4\u3002Jupyter Notebook \u548c nteract \u521b\u5efa\u548c\u4fdd\u5b58\u7684\u6587\u4ef6\u90fd\u662f Jupyter \u7b14\u8bb0\u672c\uff0c\u6587\u4ef6\u6269\u5c55\u540d\u4e3a .ipynb \uff0c\u56e0\u6b64\u4e24\u4e2a\u8f6f\u4ef6\u7f16\u8f91\u7684\u5185\u5bb9\u662f\u53ef\u4ee5\u901a\u7528\u7684\u3002\u8003\u8651\u5230\u672c\u5730\u6d4f\u89c8\u5668\u4f7f\u7528 Jupyter Notebook \u53ef\u80fd\u4f1a\u51fa\u73b0\u4e0d\u7a33\u5b9a\u7684\u60c5\u51b5\uff0c\u672c\u4e66\u9009\u62e9 nteract \u8f6f\u4ef6\u8fdb\u884c\u4e00\u4e9b\u7ed3\u679c\u7684\u5c55\u793a\uff0c\u5e76\u63a8\u8350\u8bfb\u8005\u4f7f\u7528\u3002 \u8bfb\u8005\u5982\u679c\u66f4\u559c\u6b22\u6587\u672c\u5f0f\u6837\u7684\u7ec8\u7aef\u754c\u9762\u8fdb\u884c Python \u547d\u4ee4\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 ipython \u8fdb\u5165 IPython \u89e3\u91ca\u5668\uff08\u4e5f\u79f0\u4e3a IPython Shell\uff09\uff0c\u5982\u4e0b\u6240\u793a\uff1a Python 3.7.0 (default, Jun 28 2018, 07:39:16) Type 'copyright', 'credits' or 'license' for more information IPython 6.5.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: \u521d\u5b66\u8005\u4f1a\u7acb\u523b\u53d1\u73b0 Python \u6807\u51c6\u89e3\u91ca\u5668\u4e0e IPython \u89e3\u91ca\u5668\u5f62\u5f0f\u4e0a\u7684\u4e00\u4e2a\u91cd\u8981\u533a\u522b\u662f IPython \u4f7f\u7528\u4ee3\u7801\u6267\u884c\u7684\u6b21\u5e8f\u4f5c\u4e3a\u547d\u4ee4\u63d0\u793a\u7b26\u3002 In [1]: \u8868\u793a\u7b49\u5f85\u7528\u6237\u8f93\u5165\u7b2c\u4e00\u6761\u8bed\u53e5\uff0c\u8f93\u51fa\u7ed3\u679c\u4e00\u822c\u4f1a\u4ee5\u7c7b\u4f3c Out [1] \u7684\u65b9\u5f0f\u6807\u8bb0\uff0c\u4e5f\u53ef\u80fd\u6ca1\u6709\uff08\u540e\u9762\u7684\u5b66\u4e60\u4e2d\u8bfb\u8005\u4f1a\u770b\u5230\uff09\u3002IPython \u6709\u975e\u5e38\u591a\u6bd4 Python \u6807\u51c6\u89e3\u91ca\u5668\u66f4\u5f3a\u5927\u7684\u529f\u80fd\u4e0e\u7279\u6027\uff0c\u50cf\u81ea\u52a8\u8865\u5168\uff0c\u8f93\u51fa\u4f18\u5316\uff0c\u9b54\u672f\u547d\u4ee4\u7b49\uff0c\u8fd9\u4e9b\u90fd\u7b49\u5f85\u8bfb\u8005\u53d1\u6398\u548c\u4f53\u9a8c\u3002 \u5728\u540e\u7eed\u7684\u7ae0\u8282\u4e2d\uff0c\u672c\u4e66\u5bf9 Python \u7684\u4ecb\u7ecd\u90fd\u662f\u57fa\u4e8e IPython \u89e3\u91ca\u5668\u3002Python \u547d\u4ee4\u7684\u64cd\u4f5c\u65e0\u8bba\u662f\u901a\u8fc7 IPython Shell \u8fd8\u662f\u56fe\u5f62\u754c\u9762\uff08\u5373 Jupyter Notebook\u3001nteract\uff09\u90fd\u53ef\u4ee5\u5b9e\u73b0\uff0c\u8bfb\u8005\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u559c\u6b22\u7684\u64cd\u4f5c\u65b9\u5f0f\u3002 2.2 Python \u5165\u95e8\u793a\u4f8b \u00b6 \u5728\u5f88\u591a\u7684\u7f16\u7a0b\u5b66\u4e60\u4e66\u7c4d\u6216\u8005\u6559\u5b66\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u4ee3\u7801\u5b9e\u73b0\u901a\u5e38\u662f\u5411\u5c4f\u5e55\u8f93\u51fa Hello World! \uff0c\u8ba9\u7a0b\u5e8f\u5411\u4e16\u754c\u95ee\u597d\u3002\u672c\u4e66\u662f\u4e00\u672c\u4e2d\u6587\u4e66\u7c4d\uff0c\u4e0b\u9762\u5c31\u5411\u8bfb\u8005\u4ecb\u7ecd\u5982\u4f55\u7528 Python \u5b9e\u73b0\u8f93\u51fa\u5b83\u7684\u4e2d\u6587\u7248\u672c \u4f60\u597d\u554a\uff0c\u4e16\u754c\uff01 \u3002 \u9996\u5148\uff0c\u6253\u5f00\u8f6f\u4ef6 nteract\u3002\u5728 nteract \u8f93\u5165\u6846\u4e2d\u8f93\u5165 print(\u2018\u4f60\u597d\u554a\uff0c\u4e16\u754c!\u2019) \uff0c\u7136\u540e\u6309\u4e0b\u5feb\u6377\u952e \uff08\u5728 macOS \u7cfb\u7edf\u4e2d\uff0c\u5c06 \\ \u952e\u6362\u4e3a \\ \u952e\u5373\u53ef\uff09\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u56fe2-1\u6240\u793a\u3002 \u9664\u4e86\u4f7f\u7528\u5feb\u6377\u952e\uff0c\u8bfb\u8005\u8fd8\u53ef\u4ee5\u5355\u51fb\u8f93\u5165\u6846\u53f3\u4e0a\u89d2\u7684\u4e09\u89d2\u5f62\u56fe\u6807\u6309\u94ae\u8fd0\u884c\u7a0b\u5e8f\u3002 \u8bfb\u8005\u5982\u679c\u4f7f\u7528 Jupyter Notebook\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 jupyter notebook \u5373\u53ef\u6253\u5f00\u8f6f\u4ef6\u3002\u5728\u591a\u6570\u5e73\u53f0\u4e0a\uff0cJupyter \u4f1a\u81ea\u52a8\u6253\u5f00\u9ed8\u8ba4\u7684\u6d4f\u89c8\u5668\uff08\u9664\u975e\u6307\u5b9a\u4e86 \u2013no-browser \uff09\u3002\u6216\u8005\uff0c\u53ef\u4ee5\u5728\u542f\u52a8 Jupyter Notebook \u4e4b\u540e\uff0c\u624b\u52a8\u6253\u5f00\u7f51\u9875 http://localhost:8888/ \u3002\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\u5feb\u6377\u952e \u53ef\u4ee5\u9000\u51fa Jupyter Notebook\u3002\u5982\u679c\u8981\u65b0\u5efa\u4e00\u4e2a Python \u7b14\u8bb0\u672c\uff0c\u70b9\u51fb\u6309\u94ae New \uff0c\u9009\u62e9 Python3 \uff0c\u8bfb\u8005\u4f1a\u770b\u5230\u4e0e\u56fe2-1\u7c7b\u4f3c\u7684\u754c\u9762\u548c\u8f93\u5165\u6846\u3002Jupyter Notebook \u7684\u8fd0\u884c\u7684\u5feb\u6377\u952e\u4e0e nteract \u4e00\u81f4\uff0c\u8fd0\u884c\u6807\u5fd7\u4f4d\u4e8e\u6d4f\u89c8\u5668\u4e0a\u65b9\u7684\u5de5\u5177\u680f\u4e2d\u3002 \u8fd9\u884c\u4ee3\u7801\u4ec5\u5305\u542b 16 \u4e2a\u5b57\u7b26\uff0c\u5176\u4e2d 7 \u4e2a\u5b57\u7b26\u662f\u8bfb\u8005\u90fd\u8ba4\u8bc6\u7684\u4e2d\u6587 \u4f60\u597d\u554a\uff0c\u4e16\u754c\uff01 \uff0c\u6beb\u65e0\u7591\u95ee\u662f\u8f93\u51fa\u7684\u6587\u5b57\u3002\u5176\u4ed6 9 \u4e2a\u5b57\u7b26\u662f\u6709\u4e9b\u8bfb\u8005\u6682\u65f6\u8fd8\u4e0d\u7406\u89e3\u7684 print \u3001 () \u548c \u2018\u2019 \uff0c\u5b83\u4eec\u5206\u522b\u6709\u4ec0\u4e48\u542b\u4e49\u5462\uff1f print \u662f Python \u63d0\u4f9b\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7684\u529f\u80fd\u662f\u5411\u5c4f\u5e55\u8f93\u51fa\u7528\u6237\u5b9a\u4e49\u7684\u5b57\u7b26\uff08\u4e32\uff09\u3002Python \u51fd\u6570\u4f9d\u8d56\u82f1\u6587\u62ec\u53f7 () \u6765\u533a\u5206\u7528\u6237\u8f93\u5165\u7684\u5185\u5bb9\u4e2d\u4ec0\u4e48\u662f\u5b83\u8981\u5904\u7406\u7684\u5bf9\u8c61\uff0c\u800c\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u662f\u7531\u5355\u5f15\u53f7 \u2018\u2019 \u62ec\u8d77\u6765\u7684\u6587\u5b57\u3002 \u4e3a\u4e86\u8bc1\u660e\u4e0a\u8ff0\u8bf4\u660e\u7684\u6b63\u786e\u6027\uff0c\u4e0b\u9762\u5411\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9\u8fdb\u884c\u6d4b\u8bd5\uff1a print('\u4f60\u597d\u554a\uff0c\u4e16\u754c\uff01) print('\u4f60\u597d\u554a\uff0c\u4e16\u754c')! \u7ed3\u679c\u5982\u56fe2-2\u6240\u793a\u3002 \u663e\u7136\uff0c\u8fd9\u4e24\u53e5\u4ee3\u7801\u5b58\u5728\u95ee\u9898\uff0c\u547d\u4ee4\u6ca1\u6709\u6210\u529f\u8fd0\u884c\uff0c\u7a0b\u5e8f\u629b\u51fa\u4e86 SyntaxError \uff0c\u5373\u8bed\u6cd5\u9519\u8bef\u3002 \u7531\u6b64\u53ef\u89c1\uff0c\u9075\u5b88 Python \u7684\u8bed\u6cd5\u89c4\u5219\u975e\u5e38\u91cd\u8981\uff0c\u672c\u4e66\u540e\u7eed\u5185\u5bb9\u4f1a\u5bf9\u5176\u9010\u6b65\u8fdb\u884c\u4ecb\u7ecd\u3002 2.3 nteract \u8f6f\u4ef6\u4f7f\u7528\u7b80\u4ecb \u00b6 \u901a\u8fc7\u56fe2-1\u548c\u56fe2-2\uff0c\u8bfb\u8005\u5e94\u8be5\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e00\u884c\u4ee3\u7801\u548c\u5bf9\u5e94\u7684\u8f93\u51fa\u7ed3\u679c\u5728 nteract \u8f6f\u4ef6\u754c\u9762\u4e2d\u90fd\u5355\u72ec\u5b58\u5728\u4e8e\u4e00\u4e2a\u5757\u4e2d\uff0c\u6bcf\u4e00\u5757\u90fd\u662f\u4e00\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u4ee3\u7801\u5355\u5143\uff0c\u8fd9\u4e2a\u4ee3\u7801\u5355\u5143\u53ef\u4ee5\u79f0\u4e3a\u5355\u5143\u683c\uff08Cell\uff09\uff0c\u5982\u56fe2-3\u6240\u793a\u3002 \u5355\u5143\u683c\u4e2d\u5448\u73b0\u7684\u6240\u6709\u4fe1\u606f\u5b9e\u9645\u4e0a\u90fd\u4f1a\u88ab\u5b58\u50a8\u4e3a Jupyter \u7b14\u8bb0\u672c\uff0c\u5b83\u4ee5\u7279\u5b9a\u7684 .ipynb \u4f5c\u4e3a\u6587\u4ef6\u6269\u5c55\u540d\uff0c\u5982\u56fe2-4 \u6240\u793a\u3002nteract \u8f6f\u4ef6\u4fdd\u5b58\u7684 Jupyter \u7b14\u8bb0\u672c\u4e0e\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684 Jupyter Notebook \u521b\u5efa/\u4fdd\u5b58\u7684\u7b14\u8bb0\u672c\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u53ea\u662f\u4ee5\u4e24\u79cd\u4e0d\u540c\u7684\u5f62\u5f0f\u5c55\u73b0\u51fa\u6765\uff08\u5c31\u50cf\u540c\u4e00\u5f20\u56fe\u7247\u8bfb\u8005\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u8f6f\u4ef6\u6253\u5f00\u3001\u67e5\u770b\u548c\u7f16\u8f91\uff09\u3002\u56e0\u6b64\uff0c\u8bfb\u8005\u5b8c\u5168\u53ef\u4ee5\u5c06\u7528 nteract \u8f6f\u4ef6\u521b\u5efa\u7684\u7b14\u8bb0\u672c\u4e0a\u4f20\u5230\u7f51\u7edc\u4e0a\uff08\u6bd4\u5982\u5f00\u6e90\u4ed3\u5e93 GitHub\uff09\u5e76\u7528 Jupyter \u7684 nbviewer\uff08 http://nbviewer.jupyter.org/ \uff09\u67e5\u770b\uff0c\u6216\u8005\u4e0a\u4f20\u4fdd\u5b58\u5230\u5fae\u8f6f\u7684\u6570\u636e\u5206\u6790\u5e73\u53f0\uff08 https://notebooks.azure.com/ \uff09\u8fdb\u884c\u67e5\u9605\u3001\u7f16\u8f91\u548c\u5206\u4eab\u3002\u540c\u6837\u5730\uff0c\u8bfb\u8005\u4e5f\u53ef\u4ee5\u5c06\u7f51\u7edc\u4e0a\u4f18\u79c0\u7684 Jupyter \u7b14\u8bb0\u672c\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u4f7f\u7528 nteract \u6253\u5f00\uff0c\u5e76\u8fdb\u884c\u5b66\u4e60\u548c\u5206\u6790\u3002 nteract \u8f6f\u4ef6\u9664\u4e86\u73b0\u5728\u754c\u9762\u8bed\u8a00\u53ea\u6709\u82f1\u6587\u8fd9\u4e2a\u7f3a\u9677\u4ee5\u5916\uff0c\u5176\u4ed6\u529f\u80fd\u90fd\u8bbe\u8ba1\u5f97\u975e\u5e38\u597d\u3002\u8bfb\u8005\u53ef\u4ee5\u50cf\u5e73\u5e38\u4f7f\u7528 Windows \u7cfb\u7edf\u4e2d\u7684\u8f6f\u4ef6\u4e00\u6837\uff0c\u7528\u9f20\u6807\u5bf9\u5355\u5143\u683c\u8fdb\u884c\u64cd\u4f5c\uff0c\u5e38\u89c1\u7684\u8fd0\u884c\u3001\u5220\u9664\u90fd\u4ee5\u56fe\u6807\u7684\u65b9\u5f0f\u663e\u793a\u5728\u5355\u5143\u683c\u7684\u53f3\u4e0a\u89d2\uff0c\u4f7f\u7528\u8d77\u6765\u5f88\u65b9\u4fbf\u3002\u4e60\u60ef\u4e8e\u4f7f\u7528\u5feb\u6377\u952e\u7684\u7528\u6237\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u83dc\u5355\u680f\u4e2d\u7684\u5404\u4e2a\u9009\u9879\u4e86\u89e3\u5feb\u6377\u952e\u7684\u4f7f\u7528\u3002 \u5728\u8fd0\u884c\u4ee3\u7801\u65f6\uff0c\u5e38\u89c1\u7684\u4e24\u4e2a\u5feb\u6377\u952e\u662f \u53ca \u952e\u3002\u524d\u8005\u8fd0\u884c\u5f53\u524d\u5355\u5143\u683c\uff0c\u540e\u8005\u5148\u8fd0\u884c\u5355\u5143\u683c\uff0c\u7136\u540e\u65b0\u5efa\u4e00\u4e2a\u5355\u5143\u683c\u3002\u76f8\u5bf9\u800c\u8a00\uff0c\u540e\u8005\u66f4\u4e3a\u4fbf\u5229\uff0c\u4f7f\u7528\u4e5f\u76f8\u5bf9\u9891\u7e41\u4e9b\u3002 nteract \u4e2d\u6bcf\u4e2a\u5355\u5143\u683c\u5de6\u4fa7\u90fd\u6709\u65b9\u62ec\u53f7 [] \u6807\u8bb0\uff0c\u5728\u4ee3\u7801\u8fd0\u884c\u540e\uff0c\u4e2d\u95f4\u4f1a\u51fa\u73b0\u6570\u5b57\uff0c\u8be5\u6570\u5b57\u6807\u8bb0\u4e86\u5355\u5143\u683c\u8fd0\u884c\u7684\u6b21\u5e8f\uff08\u4ece 1 \u5f00\u59cb\uff09\u3002\u5982\u679c\u4e0d\u540c\u5355\u5143\u683c\u7684\u4ee3\u7801\u8fd0\u884c\u6b21\u5e8f\u4f1a\u5bf9\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\uff0c\u8bfb\u8005\u9700\u8981\u5173\u6ce8\u4e0b\u8fd0\u884c\u6b21\u5e8f\uff0c\u5426\u5219\u5728\u4e00\u822c\u7684\u60c5\u51b5\u4e0b\uff0c\u8bfb\u8005\u53ef\u4ee5\u5ffd\u7565\u5b83\u7684\u5b58\u5728\u3002 2.4 \u7b97\u672f\u8fd0\u7b97 \u00b6 \u7b97\u672f\u8fd0\u7b97\u662f\u6570\u636e\u5206\u6790\u7684\u57fa\u7840\u3002\u672c\u8282\u4ecb\u7ecd Python \u4e2d\u7684\u7b97\u672f\u8fd0\u7b97\u7b26\uff0c\u5e76\u7ed9\u51fa\u8ba1\u7b97\u8eab\u4f53\u8d28\u91cf\u6307\u6570\u7684\u793a\u4f8b\u3002 2.4.1 \u7b80\u5355\u6570\u5b66\u8fd0\u7b97 \u00b6 \u5728\u5b8c\u6210\u7b2c\u4e00\u4e2a Python \u4ee3\u7801\u540e\uff0c\u8bfb\u8005\u662f\u4e0d\u662f\u8feb\u5207\u60f3\u4e86\u89e3 Python \u662f\u5982\u4f55\u5b9e\u73b0\u6570\u636e\u7684\u8ba1\u7b97\u7684\u5462\uff1f\u4e0b\u9762\u4ece\u7b80\u5355\u7684\u56db\u5219\u8fd0\u7b97\u5f00\u59cb\u4ecb\u7ecd Python \u4e2d\u7684\u7b97\u672f\u8fd0\u7b97\u64cd\u4f5c\u7b26\uff0c\u5982\u56fe2-5\u6240\u793a\u3002 \u56fe\u4e2d\u4ee3\u7801\u8bed\u53e5\u53ea\u6709\u6570\u5b571\u548c\u7b97\u672f\u8fd0\u7b97\u64cd\u4f5c\u7b26\uff0c\u53ef\u89c1 + \u3001 - \u3001 * \u3001 / \u5206\u522b\u5bf9\u5e94\u65e5\u5e38\u7684\u56db\u5219\u8fd0\u7b97\u7b26\u53f7\u3002 1 / 1 \u7684\u7ed3\u679c\u600e\u4e48\u662f 1.0 \uff1f\u4e0d\u5e94\u8be5\u662f 1 \u5417\uff1f \u8fd9\u662f\u56e0\u4e3a\u5728 Python\u7684 \u9664\u6cd5\u8fd0\u7b97\u4e2d\uff0c\u8fd0\u7b97\u7b26 / \u8fdb\u884c\u7684\u662f\u6d6e\u70b9\u9664\u6cd5\u64cd\u4f5c\uff0c\u800c\u8fd0\u7b97\u7b26 // \u8fdb\u884c\u7684\u662f\u6574\u9664\u64cd\u4f5c\uff0c\u7ed3\u679c\u5982\u56fe2-6\u3002\u53e6\u5916\uff0cPython \u8fd8\u63d0\u4f9b\u4e86\u6c42\u4f59\u64cd\u4f5c\u7b26 % \u3002 Python \u4e2d\u6bd4\u8f83\u5b8c\u6574\u7684\u7b97\u672f\u8fd0\u7b97\u64cd\u4f5c\u6c47\u603b\u5982\u4e0b\uff1a 3 + 2 # \u52a0\u6cd5 3 / 2 # \u6d6e\u70b9\u6570\u9664\u6cd5 3 // 2 # \u6574\u9664 3 * 2 # \u4e58\u6cd5 3 ** 2 # \u6307\u6570\uff08\u5e42\uff09 3 % 2 # \u6c42\u4f59 abs(a) # \u7edd\u5bf9\u503c 2.4.2 \u4ee3\u7801\u7ea6\u5b9a \u00b6 \u901a\u8fc7\u4e0a\u9762\u7684\u793a\u4f8b\u672c\u4e66\u5411\u8bfb\u8005\u7b80\u5355\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528 nteract \u521b\u5efa\u548c\u4f7f\u7528 Jupyter Notebook \u5e76\u7528\u5b83\u8f93\u5165 Python \u4ee3\u7801\u3002\u4e3a\u4e86\u63d0\u5347\u672c\u4e66\u4f5c\u8005\u4ee3\u7801\u4e66\u5199\u7684\u6548\u7387\uff0c\u672c\u4e66\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u5185\u5bb9\u5c3d\u91cf\u4f7f\u7528\u6587\u672c\u7684\u5f62\u5f0f\u5c55\u793a\u4ee3\u7801\u548c\u7ed3\u679c\uff0c\u8bfb\u8005\u53ef\u4ee5\u6839\u636e\u524d\u6587\u7684\u4ecb\u7ecd\u64cd\u4f5c nteract \u6216 Jupyter Notebook \u56fe\u5f62\u754c\u9762\u8fdb\u884c\u5b66\u4e60\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 IPython Shell \u64cd\u4f5c\u6587\u672c\u754c\u9762\u5b66\u4e60\u3002 \u4f8b\u5982\uff0c\u5173\u4e8e\u56fe2-5\u4e2d\u7684\u51e0\u4e2a\u8fd0\u7b97\u64cd\u4f5c\uff0c\u672c\u4e66\u4f7f\u7528\u4e0b\u5217\u4ee3\u7801\u884c\u4ee3\u66ff\u3002 In [3]: 1 + 1 Out[3]: 2 In [4]: 1 - 1 Out[4]: 0 In [5]: 1 * 1 Out[5]: 1 In [6]: 1 / 1 Out[6]: 1.0 \u4ee3\u7801\u5de6\u4fa7\u7684 3 \u3001 4 \u6807\u5b9a\u4e86\u4f5c\u8005\u5728 IPython Shell \u4e2d\u8fd0\u884c\u4ee3\u7801\u7684\u6b21\u5e8f\uff0c\u8fd9\u5e76\u4e0d\u662f\u6307\u5fc5\u987b\u5728 [3] \u8fd0\u884c\u540e\u624d\u80fd\u8fd0\u884c [4] \u3002 2.4.3 \u8ba1\u7b97\u8eab\u4f53\u8d28\u91cf\u6307\u6570 \u00b6 \u4e0a\u6587\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 Python \u8fdb\u884c\u7b80\u5355\u7684\u8ba1\u7b97\uff0c\u90a3\u4e48\u73b0\u5728\u628a\u6240\u5b66\u7684\u77e5\u8bc6\u7528\u6765\u505a\u4e00\u4ef6\u66f4\u6709\u5b9e\u9645\u610f\u4e49\u7684\u4e8b\u60c5\u2014\u2014\u8ba1\u7b97\u81ea\u5df1\u7684\u8eab\u4f53\u8d28\u91cf\u6307\u6570\u3002 \u8eab\u4f53\u8d28\u91cf\u6307\u6570\uff08BMI\uff09\u662f\u76ee\u524d\u56fd\u9645\u4e0a\u5e38\u7528\u7684\u8861\u91cf\u4eba\u4f53\u80d6\u7626\u7a0b\u5ea6\u4ee5\u53ca\u662f\u5426\u5065\u5eb7\u7684\u4e00\u4e2a\u6807\u51c6\uff0c\u76f8\u4fe1\u4e0d\u5c11\u8bfb\u8005\u5728\u8fdb\u884c\u4f53\u68c0\u65f6\u90fd\u4f1a\u6d4b\u91cf\u8fd9\u4e2a\u6307\u6807\uff0c\u5b83\u662f\u7528\u4f53\u91cd\u516c\u65a4\u6570\u9664\u4ee5\u8eab\u9ad8\u7c73\u6570\u7684\u5e73\u65b9\u5f97\u51fa\u7684\u6570\u5b57\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u77e5\u9053\u81ea\u5df1\u7684\u8eab\u9ad8\u548c\u4f53\u91cd\uff0c\u5c31\u53ef\u4ee5\u81ea\u5df1\u8ba1\u7b97 BMI\u3002 \u4f8b\u5982\u4f5c\u8005\u672c\u4eba\uff0c\u8eab\u9ad8 1.82m\uff0c\u4f53\u91cd 70kg \u5de6\u53f3\uff0c\u8ba1\u7b97\u540e\u7684 BMI \u6307\u6570\u4e3a\uff1a In [11]: 70 / 1.82 ** 2 Out[11]: 21.132713440405748 nteract \u7ed3\u679c\u663e\u793a\u5982\u56fe2-7\u3002 \u6709\u65f6\uff0c\u5f53\u7528\u6237\u5c06\u81ea\u5df1\u7f16\u5199\u7684\u4ee3\u7801\u53d1\u7ed9\u5176\u4ed6\u4eba\u65f6\uff0c\u5176\u4ed6\u4eba\u53ef\u80fd\u5b8c\u5168\u4e0d\u61c2\u4ee3\u7801\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u6b64\u65f6\u8be5\u600e\u4e48\u529e\u5462\uff1f \u89e3\u51b3\u7684\u529e\u6cd5\u662f\u7ed9\u4ee3\u7801\u52a0\u4e0a\u4e2d\u6587/\u82f1\u6587\u6ce8\u91ca\uff0c\u8fd9\u6837\u5176\u4ed6\u4eba\u5c31\u80fd\u591f\u901a\u8fc7\u6ce8\u91ca\u6765\u7406\u89e3\u8fd9\u4e9b\u6570\u5b66\u7b26\u53f7\u6240\u4ee3\u8868\u7684\u542b\u4e49\u3002\u5728 Python \u4e2d\uff0c\u4f7f\u7528\u4e95\u53f7\u952e # \u53ef\u4ee5\u5f15\u5bfc\u4e00\u884c\u6ce8\u91ca\uff0c\u56e0\u6b64\u4e0a\u8ff0\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca\u540e\u7684\u6548\u679c\u4e3a\uff1a In [12]: 70 / 1.82 ** 2 # \u8ba1\u7b97\u6211\u7684 BMI Out[12]: 21.132713440405748 \u6ce8\u91ca\u4e5f\u53ef\u4ee5\u51fa\u73b0\u5728\u5bf9\u5e94\u4ee3\u7801\u7684\u524d\u4e00\u884c\uff0c\u4f46\u4e0d\u80fd\u51fa\u73b0\u5728\u5bf9\u5e94\u4ee3\u7801\u7684\u524d\u9762\uff0c\u4e0d\u7136\u4ee3\u7801\u81ea\u8eab\u4e5f\u4f1a\u88ab\u5f53\u4f5c\u6ce8\u91ca\u800c\u65e0\u6cd5\u8fd0\u884c\u3002 In [13]: # \u8ba1\u7b97\u6211\u7684 BMI In [14]: 70 / 1.82 ** 2 Out[14]: 21.132713440405748 In [15]: # \u8ba1\u7b97\u6211\u7684 BMI 70 / 1.82 ** 2 \u6807\u8bb0\u4e3a 13 \u548c 15 \u7684\u4e24\u884c\u6ca1\u6709\u5bf9\u5e94\u7684\u8f93\u51fa\u6807\u8bb0\uff0c\u5b83\u4eec\u5e76\u6ca1\u6709\u88ab Python \u6267\u884c\uff0c\u56e0\u800c\u6ca1\u6709\u76f8\u5e94\u7684\u8f93\u51fa\u7ed3\u679c\u3002\u5b9e\u9645\u4e0a\uff0cPython \u4f1a\u5728\u8fd0\u884c\u524d\u68c0\u67e5\u8f93\u5165\u7684\u8bed\u53e5\u5757\uff0c\u82e5\u53d1\u73b0\u5b83\u662f\u4ee5 # \u5f00\u5934\u7684\u8bed\u53e5\uff0c\u90a3\u4e48\u8df3\u8fc7\u53bb\uff08\u4e0d\u6267\u884c\uff09\uff1b\u82e5\u4ee3\u7801\u5b58\u5728\u8bed\u6cd5\u9519\u8bef\uff0c\u90a3\u4e48 Python \u4f1a\u505c\u6b62\u8fd0\u884c\u5e76\u7ed9\u51fa\u76f8\u5e94\u7684\u9519\u8bef\u548c\u63d0\u793a\uff0c\u4f8b\u5982\uff1a In [16]: \u8ba1\u7b97\u6211\u7684 BMI \u6307\u6570 70 / 1.82 ** 2 File \"<ipython-input-16-b7d966d13e1f>\", line 1 \u8ba1\u7b97\u6211\u7684 BMI \u6307\u6570 70 / 1.82 ** 2 ^ SyntaxError: invalid syntax \u4e3a\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca\u662f\u4e00\u4e2a\u7f16\u5199\u7a0b\u5e8f\u65f6\u7684\u826f\u597d\u4e60\u60ef\u3002\u6ce8\u91ca\u53ef\u4ee5\u4f7f\u5f97\u4ee3\u7801\u4fbf\u4e8e\u8ffd\u6eaf\u5e76\u4e14\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u53ef\u8bfb\u6027\u3002\u826f\u597d\u7684\u4ee3\u7801\u6ce8\u91ca\u80fd\u591f\u5e2e\u52a9\u81ea\u5df1\u6216\u4ed6\u4eba\u5feb\u901f\u7406\u89e3\u548c\u91cd\u7528\u7a0b\u5e8f\u6216\u4ee3\u7801\u5757\uff0c\u63d0\u5347\u7f16\u7a0b\u7684\u6548\u7387\u548c\u80fd\u529b\u3002 2.5 \u53d8\u91cf\u7b80\u4ecb \u00b6 2.5.1 \u4ec0\u4e48\u662f\u53d8\u91cf \u00b6 \u4ec5\u4ec5\u4f7f\u7528\u5b57\u9762\u610f\u4e49\u4e0a\u7684 70\u30011.82 \u8fd9\u4e9b\u6570\u5b57\u5f88\u5feb\u5c31\u4f1a\u5f15\u53d1\u70e6\u607c\uff0c\u6bd4\u5982\u5f53\u8bfb\u8005\u4e0e\u670b\u53cb\u7684 BMI \u8fdb\u884c\u6bd4\u8f83\u65f6\uff0c\u4f1a\u5f88\u5feb\u5bf9\u8f93\u5165\u6570\u5b57\u611f\u5230\u70e6\u7410\uff0c\u751a\u81f3\u5bf9\u7f16\u5199\u7a0b\u5e8f\u5931\u53bb\u5174\u8da3\u3002\u53e6\u5916\uff0c\u4e00\u65e6\u64cd\u4f5c\u6d89\u53ca\u8f83\u591a\u7684\u8fd0\u7b97\u7b26\uff0c\u5b83\u6240\u5c55\u73b0\u7684\u610f\u601d\u5df2\u7ecf\u4e0d\u90a3\u4e48\u660e\u663e\u4e86\u3002 In [9]: # \u4e0e\u670b\u53cb\u6bd4\u8f83 BMI \u6307\u6570 In [10]: 70 / 1.82 ** 2 Out[10]: 21.132713440405748 In [11]: 48 / 1.64 ** 2 Out[11]: 17.846519928613922 In [12]: 70 / 1.82 ** 2 - 48 / 1.64 ** 2 Out[12]: 3.2861935117918257 \u6211\u4eec\u9700\u8981\u4e00\u79cd\u65e2\u53ef\u4ee5\u50a8\u5b58\u4fe1\u606f\uff0c\u53c8\u53ef\u4ee5\u5bf9\u5b83\u4eec\u8fdb\u884c\u64cd\u4f5c\u7684\u65b9\u6cd5\u3002\u8fd9\u6b63\u662f\u53d8\u91cf\u5b58\u5728\u7684\u610f\u4e49\u3002\u53d8\u91cf\u662f\u4e00\u79cd\u8fd9\u6837\u7684\u4e1c\u897f\u2014\u2014\u5b83\u4eec\u7684\u503c\u53ef\u4ee5\u53d8\u5316\uff0c\u56e0\u800c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528\u53d8\u91cf\u5b58\u50a8\u4efb\u4f55\u4fe1\u606f\uff0c\u5982\u8eab\u9ad8\u3001\u4f53\u91cd\u3001\u65e5\u671f\u3001\u5929\u6c14\u60c5\u51b5\u3001\u624b\u673a\u53f7\u7801\u7b49\u7b49\u3002\u53d8\u91cf\u672c\u8eab\u53ea\u662f\u8ba1\u7b97\u673a\u4e2d\u5b58\u50a8\u4fe1\u606f\u7684\u4e00\u90e8\u5206\u5185\u5b58\uff0c\u4e3a\u4e86\u8bbf\u95ee\u5b83\u5b58\u50a8\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u9700\u8981\u7ed9\u53d8\u91cf\u547d\u540d\u3002\u800c\u5c06\u4fe1\u606f\uff08\u6570\u636e\uff09\u5b58\u4e3a\u53d8\u91cf\u7684\u64cd\u4f5c\uff0c\u79f0\u4e3a\u8d4b\u503c\u3002 \u4f8b\u5982\uff0c\u5c06\u8eab\u9ad8\u548c\u4f53\u91cd\u5b58\u50a8\u4e3a\u53d8\u91cf\uff1a In [13]: height = 1.82 In [14]: weight = 70 \u5176\u4e2d = \u662f\u8d4b\u503c\u64cd\u4f5c\u7b26\uff0c\u6ce8\u610f\uff0c\u5b83\u4e0d\u662f\u8868\u793a\u76f8\u7b49\uff01 height = 1.82 \u7684\u8bed\u4e49\u4e3a\uff1a\u5c06\u6570\u5b57 1.82 \u8d4b\u503c\u7ed9\u53d8\u91cf height\u3002 \u53ef\u4ee5\u901a\u8fc7 print() \u51fd\u6570\u6216\u8005\u76f4\u63a5\u8f93\u5165\u53d8\u91cf\u540d\u6765\u8f93\u51fa\u53d8\u91cf\u4fdd\u5b58\u7684\u4fe1\u606f\uff1a In [15]: print(height) Out[15]: 1.82 In [16]: print(weight) Out[16]: 70 In [17]: height Out[17]: 1.82 In [18]: weight Out[18]: 70 \u56e0\u800c\u4e0e\u670b\u53cb\u6bd4\u8f83 BMI \u6307\u6570\u53ef\u4ee5\u5199\u4e3a\uff1a In [19]: myBMI = 70 / 1.82 ** 2 # \u6211\u7684 BMI In [20]: friendBMI = 48 / 1.64 ** 2 # \u670b\u53cb\u7684 BMI In [21]: myBMI - friendBMI # \u6211\u4e0e\u670b\u53cb\u7684 BMI \u503c\u7684\u5dee\u5f02 Out[21]: 3.2861935117918257 2.5.2 \u53d8\u91cf\u7684\u547d\u540d \u00b6 \u53d8\u91cf\u7684\u547d\u540d\u9700\u8981\u9075\u5faa\u4e0b\u5217\u7684\u89c4\u5219\uff1a \u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f\u5b57\u6bcd\u8868\u4e2d\u7684\u5b57\u6bcd\uff08\u5927\u5199\u6216\u5c0f\u5199\uff09\u6216\u8005\u4e00\u4e2a\u4e0b\u5212\u7ebf _ \u3002 \u5176\u4ed6\u90e8\u5206\u53ef\u4ee5\u7531\u5b57\u6bcd\uff08\u5927\u5199\u6216\u5c0f\u5199\uff09\u3001\u4e0b\u5212\u7ebf _ \u6216\u6570\u5b57\uff080~9\uff09\u7ec4\u6210\u3002 \u53d8\u91cf\u540d\u79f0\u662f\u5927\u5c0f\u5199\u654f\u611f\u7684\u3002\u4f8b\u5982\uff0cmyname \u548c myName \u4e0d\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\u3002\u6ce8\u610f\u524d\u8005\u4e2d\u7684\u5c0f\u5199 n \u548c\u540e\u8005\u4e2d\u7684\u5927\u5199 N\u3002 i\u3001__my_name\u3001name_23 \u548c a1b2_c3\u662f\u6709\u6548\u7684\u53d8\u91cf\u540d\u79f0\u30022things\u3001this is spaced out \u548c my-name \u662f\u65e0\u6548\u7684\u53d8\u91cf\u540d\u79f0\u3002 \u4e0b\u9762\u4e3e\u4e2a\u4ee3\u7801\uff1a In [22]: __myName = \"ShixiangWang\" In [23]: my-name = \"ShixiangWang\" File \"<ipython-input-23-1b106abe1308>\", line 1 my-name = \"ShixiangWang\" ^ SyntaxError: can't assign to operator \u7ed9\u53d8\u91cf\u547d\u540d\u662f\u7f16\u7a0b\u7684\u57fa\u7840\u3002\u65b0\u624b\u5f80\u5f80\u5728\u5904\u7406\u7b80\u5355\u95ee\u9898\u65f6\u5f80\u5f80\u4f1a\u9009\u62e9 a\u3001b\u3001c \u8fd9\u6837\u7684\u540d\u5b57\uff0c\u82e5\u6709\u591a\u7ec4\u53d8\u91cf\uff0c\u53ef\u80fd\u8fd8\u4f1a\u4f7f\u7528 a1\u3001a2\u3001a3 \u8fd9\u6837\u7684\u65b9\u5f0f\u547d\u540d\u3002\u8fd9\u6837\u7b80\u5355\u7684\u547d\u540d\u65b9\u5f0f\u662f\u4e0d\u63a8\u8350\u7684\uff0c\u53d8\u91cf\u7684\u540d\u5b57\u5e94\u8be5\u5177\u6709\u975e\u5e38\u6e05\u6670\u7684\u542b\u4e49\u3002\u5bf9\u4e8e\u6211\u4eec\u73b0\u5b9e\u4e2d\u7684\u4e8b\u7269\uff0c\u5982\u5c0f\u72d7\uff0c\u6211\u4eec\u7ed9\u5c0f\u72d7\u53d6\u4e00\u4e2a\u597d\u540d\u5b57\u56fa\u7136\u91cd\u8981\uff0c\u4f46\u5b83\u5e76\u4e0d\u4f1a\u6539\u53d8\u5c0f\u72d7\u672c\u8eab\u3002\u4f46\u53d8\u91cf\u4e0d\u662f\u8fd9\u6837\u7684\uff0c\u53d8\u91cf\u548c\u53d8\u91cf\u540d\u672c\u8d28\u4e0a\u662f\u540c\u4e00\u4e2a\u4e8b\u7269\uff0c\u56e0\u6b64\uff0c\u53d8\u91cf\u7684\u597d\u4e0e\u574f\u5c31\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u5b83\u7684\u547d\u540d\u7684\u597d\u4e0e\u574f\u3002 \u8bfb\u8005\u60f3\u8981\u83b7\u5f97\u597d\u7684\u53d8\u91cf\u540d\uff0c\u6ce8\u610f\u5982\u4e0b\u4e8b\u9879\uff1a \u9996\u5148\u9700\u8981\u8003\u8651\u7684\u4e8b\u9879\u662f\uff0c\u8be5\u53d8\u91cf\u540d\u8981\u5b8c\u5168\u3001\u51c6\u786e\u5730\u63cf\u8ff0\u51fa\u8be5\u53d8\u91cf\u6240\u4ee3\u8868\u7684\u4e8b\u7269\u3002 \u4e00\u4e2a\u597d\u7684\u53d8\u91cf\u540d\u901a\u5e38\u8868\u8fbe\u7684\u662f \u4ec0\u4e48 \uff08what\uff09\uff0c\u800c\u4e0d\u662f \u5982\u4f55 \uff08how\uff09\u3002\u901a\u5e38\u800c\u8a00\uff0c\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u540d\u53cd\u6620\u4e86\u8ba1\u7b97\u7684\u67d0\u4e9b\u65b9\u9762\u800c\u4e0d\u662f\u95ee\u9898\u672c\u8eab\uff0c\u90a3\u4e48\u5b83\u53cd\u6620\u7684\u5c31\u662f \u5982\u4f55 \uff0c\u800c\u975e \u4ec0\u4e48 \u3002\u4f8b\u5982\uff0c\u540c\u6837\u4e00\u4e2a\u547d\u540d\uff0ccalcVal \u6bd4 sum \u66f4\u504f\u5411\u4e8e \u5982\u4f55 \uff0c\u56e0\u6b64\u4e0d\u63d0\u5021\u3002 \u9002\u5408\u7684\u53d8\u91cf\u540d\u957f\u5ea6\uff1a10~16 \u5b57\u7b26\u4e4b\u95f4\u3002\u4f46\u66f4\u91cd\u8981\u7684\u662f\u957f\u5ea6\u548c\u6e05\u6670\u5ea6\u4e4b\u95f4\u7684\u5e73\u8861\uff0c\u901a\u5e38\u8f83\u77ed\u7684\u540d\u79f0\u9002\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf\u6216\u8005\u5faa\u73af\u53d8\u91cf\uff0c\u8f83\u957f\u7684\u540d\u79f0\u9002\u7528\u4e8e\u5f88\u5c11\u7528\u5230\u7684\u53d8\u91cf\u6216\u8005\u5168\u5c40\u53d8\u91cf\uff08\u5168\u5c40\u53d8\u91cf\u4e0e\u5c40\u90e8\u53d8\u91cf\u4f1a\u5728\u540e\u9762\u7684\u7ae0\u8282\u4ecb\u7ecd\uff09\u3002 \u53d8\u91cf\u4e2d\u7684\u8ba1\u7b97\u503c\u9650\u5b9a\u8bcd\uff1a\u8868\u793a\u8ba1\u7b97\u7ed3\u679c\u7684\u8bcd\uff0c\u5982\u603b\u989d\u3001\u5e73\u5747\u503c\u3001\u6700\u5927\u503c\u3001\u7b49\u7b49\uff0c\u5982\u679c\u8bfb\u8005\u8981\u7528\u7c7b\u4f3c\u4e8e Total\u3001Sum\u3001Average\u3001Max\u3001Min\u3001Record \u8fd9\u6837\u7684\u9650\u5b9a\u8bcd\u6765\u4fee\u9970\u67d0\u4e2a\u540d\u79f0\uff0c\u90a3\u4e48\u53ef\u4ee5\u628a\u9650\u5b9a\u8bcd\u52a0\u5230\u540d\u5b57\u7684\u6700\u540e\uff0c\u5982 revenueTotal\u3001expenseAverage \u7b49\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u5c06\u4e3a\u8fd9\u4e00\u53d8\u91cf\u8d4b\u4e88\u4e3b\u8981\u542b\u4e49\u7684\u90e8\u5206\u653e\u5230\u6700\u524d\u9762\uff0c\u63d0\u9ad8\u53ef\u8bfb\u6027\u3002 \u4e0a\u8ff0\u662f\u5bf9\u300a\u4ee3\u7801\u5927\u5168\u300b\u4e2d \u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u597d\u7684\u53d8\u91cf\u540d \u90e8\u5206\u7684\u5f52\u7eb3\uff0c\u8bfb\u8005\u5728\u5f00\u59cb\u65f6\u5e76\u4e0d\u4e00\u5b9a\u80fd\u5b8c\u5168\u7406\u89e3\u548c\u719f\u7ec3\u4f7f\u7528\u5b83\uff0c\u4f46\u9700\u8981\u8bb0\u4f4f\u4e00\u4e2a\u601d\u60f3\uff1a\u7ed9\u53d8\u91cf\u547d\u540d\u662f\u4e00\u4ef6\u975e\u5e38\u91cd\u8981\u7684\u4e8b\u60c5\u3002\u5728\u884c\u52a8\u4e0a\uff0c\u6bcf\u6b21\u5bf9\u53d8\u91cf\u547d\u540d\u540e\u5e94\u5f53\u6709\u610f\u8bc6\u5730\u601d\u8003\u4e00\u4e0b\u8be5\u540d\u5b57\u662f\u5426\u80fd\u51c6\u786e\u5730\u63cf\u8ff0\u51fa\u53d8\u91cf\u6240\u4ee3\u8868\u7684\u4e8b\u7269\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u9700\u8981\u91cd\u65b0\u53d6\u4e00\u4e2a\u65b0\u7684\u540d\u5b57\u3002\u5173\u4e8e\u53d8\u91cf\u7684\u547d\u540d\uff0c\u672c\u4e66\u63a8\u8350\u4e00\u4e2a\u534f\u52a9\u5de5\u5177\u2014\u2014CODELF\uff08 http://unbug.github.io/codelf/ \uff09\u3002 2.6 \u57fa\u672c\u6570\u636e\u7c7b\u578b \u00b6 \u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f \uff0c\u8fd9\u662f 1984 \u5e74\u56fe\u7075\u5956\u7684\u83b7\u5f97\u8005 Niklaus E. Wirth \u9610\u8ff0\u7684\u4e00\u4e2a\u7ecf\u5178\u89c2\u70b9\u3002\u8f83\u4e3a\u6570\u636e\u7684\u7ed3\u6784\u5e38\u5e38\u7531\u591a\u4e2a\u6570\u636e\u7c7b\u578b\u7ec4\u6210\uff0c\u5176\u4e2d\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u4e0e\u5e03\u5c14\u503c\u662f Python \u57fa\u672c\u7684\u5185\u7f6e\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u4eec\u662f\u6570\u636e\u8868\u8fbe\u3001\u5b58\u50a8\u7684\u57fa\u7840\u3002\u800c Python \u4e2d\u5176\u4ed6\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982\u4e0b\u4e00\u7ae0\u4f1a\u5b66\u4e60\u548c\u4f7f\u7528\u7684\u5217\u8868\uff0c\u662f\u57fa\u4e8e\u8fd9 3 \u79cd\u6570\u636e\u7c7b\u578b\u7684\u7ec4\u5408\u6784\u5efa\u7684\u65b0\u7c7b\u578b\u3002 2.6.1 \u6570\u5b57 \u00b6 \u5728 Python \u4e2d\uff0c\u6570\u5b57\u5305\u62ec 4 \u79cd\u7c7b\u578b\uff1a\u6574\u6570\u3001\u957f\u6574\u6570\u3001\u6d6e\u70b9\u6570\u548c\u590d\u6570\u3002 \u6b64\u5904\u6240\u6307\u7684\u6574\u6570\u548c\u6570\u5b66\u4e2d\u7684\u6574\u6570\u662f\u5bf9\u5e94\u7684\uff0c\u5982 1\u30012\u30013\u30014 \u7b49\u3002 \u957f\u6574\u6570\u662f\u6307\u5927\u4e00\u4e9b\u7684\u6574\u6570\u3002 3.23 \u548c 5E-4 \u662f\u6d6e\u70b9\u6570\u7684\u4f8b\u5b50\u3002E \u6807\u8bb0\u8868\u793a 10 \u7684\u5e42\uff0c\u662f\u4e00\u79cd\u79d1\u5b66\u8ba1\u6570\u6cd5\u3002\u5728\u8fd9\u91cc\uff0c5E-4 \u8868\u793a 5 \u4e58\u4ee5 10 \u7684 -4 \u6b21\u65b9\uff0c\u5373 0.0005\u3002 (-5+4j) \u548c (2.3-4.6j) \u662f\u590d\u6570\u7684\u4f8b\u5b50\u3002 2.6.2 \u5b57\u7b26\u4e32 \u00b6 \u5b57\u7b26\u4e32\u662f\u5b57\u7b26\u7684\u5e8f\u5217\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u4e00\u4e32\u5b57\u6bcd\u3001\u6570\u5b57\u6216\u7b26\u53f7\u7684\u7ec4\u5408\u3002 \u4e0b\u9762\u5217\u51fa\u5b57\u7b26\u4e32\u7684\u4f7f\u7528\u65b9\u6cd5\u3002 \u53ef\u4ee5\u4f7f\u7528\u82f1\u6587\u5355\u5f15\u53f7 \u2018\u2019 \u6307\u793a\u5b57\u7b26\u4e32\uff0c\u5982 \u2018Quote me on this\u2019 \u3002\u6240\u6709\u7684\u7a7a\u767d\uff0c\u5305\u62ec\u7a7a\u683c\u548c\u5236\u8868\u7b26\u90fd\u7167\u539f\u6837\u4fdd\u7559\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528\u53cc\u5f15\u53f7 \u201c\u201d \u6765\u6307\u5b9a\u5b57\u7b26\u4e32\uff0c\u5b83\u7684\u65b9\u5f0f\u4e0e\u82f1\u6587\u5355\u5f15\u53f7\u4e2d\u7684\u5b57\u7b26\u4e32\u7684\u4f7f\u7528\u5b8c\u5168\u76f8\u540c\uff0c\u5982 \u201cWhat\u2019s your name?\u201d \u3002 \u5229\u7528\u4e09\u5f15\u53f7 \u2018\u2019\u2018 \u6216 \u201c\u201d\u201d \u53ef\u4ee5\u6307\u793a\u4e00\u4e2a\u591a\u884c\u7684\u5b57\u7b26\u4e32\u3002\u8bfb\u8005\u53ef\u4ee5\u5728\u4e09\u5f15\u53f7\u4e2d\u81ea\u7531\u5730\u4f7f\u7528\u82f1\u6587\u5355\u5f15\u53f7\u548c\u82f1\u6587\u53cc\u5f15\u53f7\u3002\u4f8b\u5982\uff1a python '''This is a multi-line string. This is the first line. This is the second line. \"What's your name?,\" I asked. He said \"Bond, James Bond.\" ''' \u8f6c\u4e49\u7b26 \u00b6 \u5047\u8bbe\u8bfb\u8005\u60f3\u8981\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u4e00\u4e2a\u82f1\u6587\u5355\u5f15\u53f7\uff0c\u90a3\u4e48\u8be5\u600e\u4e48\u6307\u793a\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff1f\u4f8b\u5982\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f What\u2019s your name? \u3002 \u2018What\u2019s your name?\u2019 \u80af\u5b9a\u662f\u9519\u8bef\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u56e0\u4e3a Python \u4f1a\u5f04\u4e0d\u660e\u767d\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4ece\u4f55\u5904\u5f00\u59cb\uff0c\u4f55\u5904\u7ed3\u675f\u3002\u6b64\u65f6\uff0c\u8bfb\u8005\u9700\u8981\u544a\u8bc9 Python \u7b2c 2 \u4e2a\u5355\u5f15\u53f7\u4e0d\u662f\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8f6c\u4e49\u7b26\u6765\u5b9e\u73b0\u5b8c\u6210\u3002\u8f6c\u4e49\u662f\u901a\u8fc7\u53cd\u659c\u6760 \\ \u5b9e\u73b0\u7684\uff0c\u4e5f\u5c31\u662f\u8868\u793a\u4e3a \u2018What\\\u2018s your name?\u2019 \uff0c\u8fd9\u6837\u8f6c\u4e49\u7b26\u540e\u7684\u82f1\u6587\u5355\u5f15\u53f7\u5c31\u53ea\u8d77\u5230\u5355\u5f15\u53f7\u7684\u4f5c\u7528\u4e86\u3002 \u53e6\u4e00\u4e2a\u65b9\u6cd5\u662f\u5355\u53cc\u5f15\u53f7\u5d4c\u5957\uff0c\u5982 \u201cWhat\u2019s your name?\u201d \uff0c\u6b64\u5904\u5c06\u82f1\u6587\u5355\u5f15\u53f7\u5d4c\u5165\u82f1\u6587\u53cc\u5f15\u53f7\u4e2d\uff0cPython \u4f1a\u53d1\u73b0\u82f1\u6587\u53cc\u5f15\u53f7\u662f\u5b57\u7b26\u4e32\u7684\u8d77\u6b62\u7b26\u53f7\uff0c\u56e0\u800c\u6b64\u5904\u7684\u82f1\u6587\u5355\u5f15\u53f7\u4f1a\u88ab\u6b63\u786e\u7684\u89e3\u6790\u3002 \u7c7b\u4f3c\u5730\uff0c\u8981\u5728\u82f1\u6587\u53cc\u5f15\u53f7\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528\u82f1\u6587\u53cc\u5f15\u53f7\u672c\u8eab\u7684\u65f6\u5019\uff0c\u4e5f\u53ef\u4ee5\u501f\u52a9\u4e8e\u8f6c\u4e49\u7b26\u6216\u4f7f\u7528\u5d4c\u5957\u3002 \u5982\u679c\u8981\u663e\u793a\u53cd\u659c\u6760\u672c\u8eab\uff0c\u90a3\u4e48\u4f7f\u7528\u4e24\u4e2a\u8f6c\u4e49\u7b26\u53f7\u3002 In [26]: 'What's your name?' # \u9519\u8bef\u7684\u8868\u793a\u65b9\u6cd5 File \"<ipython-input-26-dff8324f3597>\", line 1 'What's your name?' # \u9519\u8bef\u7684\u8868\u793a\u65b9\u6cd5 ^ SyntaxError: invalid syntax In [27]: 'What\\'s your name?' # \u4f7f\u7528\u8f6c\u4e49\\\u5bf9\u5b57\u7b26\u4e32\u4e2d\u7684\u82f1\u6587\u5355\u5f15\u53f7\u8fdb\u884c\u8f6c\u4e49 Out[27]: \"What's your name?\" In [28]: \"What\\'s your name?\" # \u5c06\u82f1\u6587\u5355\u5f15\u53f7\u5d4c\u5165\u82f1\u6587\u53cc\u5f15\u53f7\u4e2d Out[28]: \"What's your name?\" \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u884c\u672b\uff0c\u5355\u72ec\u4e00\u4e2a\u53cd\u659c\u6760\u8868\u793a\u5b57\u7b26\u4e32\u5728\u4e0b\u4e00\u884c\u7ee7\u7eed\uff0c\u800c\u4e0d\u662f\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u884c\u3002\u4f8b\u5982\uff1a \"This is the first sentence.\\ This is the second sentence.\" \u7b49\u4ef7\u4e8e This is the first sentence. This is the second sentence. \u3002 \u81ea\u7136\u5b57\u7b26\u4e32 \u00b6 \u5982\u679c\u60f3\u8981\u8868\u793a\u67d0\u4e9b\u4e0d\u9700\u8981\u5982\u8f6c\u4e49\u7b26\u90a3\u6837\u7279\u522b\u5904\u7406\u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u81ea\u7136\u5b57\u7b26\u4e32\u3002\u81ea\u7136\u5b57\u7b26\u4e32\u901a\u8fc7\u7ed9\u5b57\u7b26\u4e32\u52a0\u4e0a\u524d\u7f00 r \u6216 R \u6765\u6307\u5b9a\u3002 \u4f8b\u5982\uff0cr\u201dNewlines are indicated by \\n\u201d\uff0c\u5176\u4e2d \\n \u662f\u6587\u672c\u7684\u6362\u884c\u7b26\uff0c\u8bf7\u8bfb\u8005\u81ea\u5df1\u8f93\u5165\u4e0b\u9762\u8bed\u53e5\u5e76\u7406\u89e3\u7ed3\u679c\u7684\u4e0d\u540c\uff1a In [35]: \"Newlines are indicated by \\n\" Out[35]: 'Newlines are indicated by \\n' In [36]: r\"Newlines are indicated by \\n\" Out[36]: 'Newlines are indicated by \\\\n' In [37]: print(r\"Newlines are indicated by \\n\") Out[37]: Newlines are indicated by \\n In [38]: print(\"Newlines are indicated by \\n\") Out[38]: Newlines are indicated by # \u6b64\u5904\u8f93\u51fa\u4e00\u4e2a\u7a7a\u884c Unicode\u5b57\u7b26\u4e32 \u00b6 Unicode \u662f\u4e66\u5199\u56fd\u9645\u6587\u672c\u7684\u6807\u51c6\u65b9\u6cd5\uff08\u4e5f\u79f0\u4e3a\u4e07\u56fd\u7801\uff09\u3002\u5728 Python\u4e2d\uff0c\u53ea\u9700\u8981\u5728\u5b57\u7b26\u4e32\u524d\u52a0\u4e0a\u524d\u7f00 u \u6216 U \u5c31\u53ef\u4ee5\u5904\u7406 Unicode \u5b57\u7b26\u4e32\uff0c\u5982 u\u201dThis is a Unicode string.\u201d\u3002\u5f53\u8bfb\u8005\u77e5\u9053\u6587\u672c\u4e2d\u542b\u6709\u975e\u82f1\u8bed\u5199\u7684\u6587\u672c\u65f6\uff0c\u6700\u597d\u4f7f\u7528 Unicode \u5b57\u7b26\u4e32\u3002 2.6.3 \u5e03\u5c14\u503c \u00b6 \u4efb\u4f55\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u90fd\u4f1a\u5b58\u5728\u5e03\u5c14\u7c7b\u578b\uff0c\u7528\u6765\u8868\u793a \u771f \u548c \u5047 \u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u56e0\u4e3a\u8ba1\u7b97\u673a\u7684\u57fa\u7840\u662f\u4e8c\u8fdb\u5236\uff0c\u800c\u4e14\u6211\u4eec\u4eba\u7c7b\u5bf9\u4e8e\u4e8b\u7269\u7684\u57fa\u672c\u5224\u65ad\u4e5f\u662f\u4e8c\u5143\u7684\uff0c\u5f80\u5f80\u4e0d\u662f \u771f \u5c31\u662f \u5047 \u3002 \u5728 Python\u4e2d\uff0cTrue \u4ee3\u8868 \u771f \uff0cFalse \u4ee3\u8868 \u5047 \u3002\u6ce8\u610f\uff0cPython \u662f\u5927\u5c0f\u5199\u654f\u611f\u7684\u8bed\u8a00\uff0cfalse \u4e0d\u7b49\u540c\u4e8e False\u3002 2.6.4 \u67e5\u770b\u6570\u636e\u7c7b\u578b \u00b6 \u4e0a\u6587\u5df2\u7ecf\u4ecb\u7ecd\u4e86 Python \u7684 3 \u4e2a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u90a3\u4e48\u5728\u5b9e\u9645\u7684\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u8bfb\u8005\u8be5\u5982\u4f55\u77e5\u9053\u67d0\u4e2a\u53d8\u91cf\u662f\u54ea\u4e00\u79cd\u7c7b\u578b\u5462\uff1f \u4f8b\u5982\uff0c\u6709\u4e0b\u5217\u8fdb\u884c\u8d4b\u503c\u76844\u4e2a\u53d8\u91cf\uff1a In [45]: type1 = 1 In [46]: type2 = 1.0 In [47]: type3 = \"1\" In [48]: type4 = True \u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 type() \u51fd\u6570\u67e5\u770b\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982\u4e0b\u6240\u793a\uff1a In [49]: type(type1) Out[49]: int In [50]: type(type2) Out[50]: float In [51]: type(type3) Out[51]: str In [52]: type(type4) Out[52]: bool \u7ed3\u679c\u4e2d\u7684 int\u3001str \u4e0e bool \u5206\u522b\u662f integer\uff08\u6574\u6570\uff09\u3001string\uff08\u5b57\u7b26\u4e32\uff09\u4e0e boolean\uff08\u5e03\u5c14\u503c\uff09\u7684\u7f29\u5199\u3002 2.7 \u6570\u636e\u8fd0\u7b97 \u00b6 \u4e0a\u4e00\u8282\u4ecb\u7ecd\u4e86 Python \u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u9664\u4e86\u6570\u5b66\u8fd0\u7b97\uff0c\u672c\u4e66\u8fd8\u6ca1\u6709\u5b9e\u9645\u6f14\u793a\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u662f\u5982\u4f55\u64cd\u4f5c\u7684\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\u5982\u4f55\u76f8\u4e92\u8f6c\u6362\u548c\u914d\u5408\u4f7f\u7528\u3002 2.7.1 \u52a0\u53f7\u4e0e\u9ed1\u7bb1\u5b50 \u00b6 \u8bfb\u8005\u5df2\u7ecf\u77e5\u9053\u6570\u5b57 1+1 \u7684\u7ed3\u679c\u662f\u5b83\u4eec\u7684\u548c\uff0c\u90a3\u4e48\u5b57\u7b26 \u20181\u2019+\u20181\u2019 \u7684\u7ed3\u679c\u53c8\u662f\u4ec0\u4e48\u5462\uff1f In [2]: '1' + '1' Out[2]: '11' \u4e0a\u8ff0\u4ee3\u7801\u4e2d + \u53f7\u53ef\u4ee5\u5c06\u4e24\u4e2a\u5b57\u7b26\u8fdb\u884c\u8fde\u63a5\uff01\u5982\u679c\u8bfb\u8005\u60f3\u5c1d\u8bd5\u4e0b\u51cf\u53f7\uff0c\u90a3\u4e48\u53ef\u80fd\u4f1a\u6709\u70b9\u5931\u671b\u2014\u2014\u5b83\u5e76\u4e0d\u80fd\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u53bb\u9664\u53e6\u4e00\u4e2a\u5b57\u7b26\uff1a In [3]: '1' - '1' --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-3-3f89fba82f3e> in <module>() ----> 1 '1' - '1' TypeError: unsupported operand type(s) for -: 'str' and 'str' \u53ef\u662f\uff0c\u4e3a\u4ec0\u4e48 + \u65e2\u53ef\u4ee5\u6c42\u6570\u5b57\u7684\u548c\uff0c\u53c8\u80fd\u8fde\u63a5\u5b57\u7b26\u5462\uff1f \u4e3a\u4e86\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\uff0c\u8fd9\u91cc\u5fc5\u987b\u63d0\u5230\u4e00\u4e2a\u79f0\u4e3a\u6cdb\u578b\u7684\u6982\u5ff5\uff0c\u76f4\u89c2\u7684\u7406\u89e3\uff0c\u5c31\u662f\u4e00\u4e2a\u9ed1\u7bb1\u5b50\u3002\u4f8b\u5982\uff0c1+1 \u548c \u20181\u2019+\u20181\u2019 \u4f7f\u7528\u7684 + \u53f7\u867d\u7136\u4ece\u5916\u8868\u770b\u90fd\u662f\u76f8\u540c\u7684\u7b26\u53f7\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u4f1a\u6839\u636e\u4e0d\u540c\u7684\u8f93\u5165\u6570\u636e\u7c7b\u578b\uff08\u5982\u6570\u5b57\u3001\u5b57\u7b26\uff09\u6267\u884c\u51fd\u6570\u5185\u90e8\u4e0d\u540c\u7684\u4ee3\u7801\u8bed\u53e5\u3002 2.7.2 \u7c7b\u578b\u8f6c\u6362 \u00b6 \u8bfb\u8005\u5df2\u7ecf\u77e5\u9053\u901a\u8fc7 type() \u51fd\u6570\u53ef\u4ee5\u5224\u65ad \u20181\u2019 \u662f\u5b57\u7b26 1 \u8fd8\u662f\u6570\u5b57 1\uff0c\u4f46\u8be5\u600e\u4e48\u5c06\u5b57\u7b26 1 \u53d8\u6210\u6570\u5b57 1 \u5462\uff1f\u5c31\u662f\u5c06 str \u7c7b\u578b\u8f6c\u6362\u4e3a int \u7c7b\u578b\u3002Python \u6709\u76f8\u5e94\u7684\u51fd\u6570\u53ef\u4ee5\u5b8c\u6210\u7c7b\u578b\u8f6c\u6362\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7b2c\u4e8c\u6761\u8bed\u53e5\u4e2d\u4f7f\u7528 int() \u51fd\u6570\u5c06\u5b57\u7b26 1 \u8f6c\u6362\u4e3a\u4e86\u6574\u6570 1\u3002 In [8]: type('1') Out[8]: str In [9]: type(int('1')) Out[9]: int \u6ce8\u610f\uff0c\u5b57\u7b26\u4e32\u4e0e\u6570\u5b57\u4e0d\u80fd\u591f\u8fdb\u884c\u8fde\u63a5 + \u64cd\u4f5c\uff0c\u5fc5\u987b\u5c06\u4e00\u65b9\u7684\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u65b9\u7684\u7c7b\u578b\uff0c\u4e0d\u7136\u4f1a\u629b\u51fa\u8bed\u6cd5\u9519\u8bef\u3002 In [10]: \"\u6211\u7684\u8bed\u6587\u548c\u6570\u5b66\u6210\u7ee9\u4e4b\u548c\u662f \" + 199 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-10-17fa10d93550> in <module>() ----> 1 \"\u6211\u7684\u8bed\u6587\u548c\u6570\u5b66\u6210\u7ee9\u4e4b\u548c\u662f \" + 199 TypeError: must be str, not int In [11]: \"\u6211\u7684\u8bed\u6587\u548c\u6570\u5b66\u6210\u7ee9\u4e4b\u548c\u662f \" + str(199) Out[11]: '\u6211\u7684\u8bed\u6587\u548c\u6570\u5b66\u6210\u7ee9\u4e4b\u548c\u662f 199' \u8fd9\u91cc\u4f7f\u7528 str() \u5c06\u6570\u5b57199\u5f3a\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\u3002\u76f8\u4f3c\u7684\u51fd\u6570\u6709 int()\u3001float() \u4ee5\u53ca bool()\u3002 2.7.3 \u8fd0\u7b97\u7b26\u6c47\u603b \u00b6 Python \u5e38\u7528\u7684\u5185\u7f6e\u64cd\u4f5c\u7b26\u5305\u62ec\u7b97\u672f\u8fd0\u7b97\u64cd\u4f5c\u7b26\u3001\u5b57\u7b26\u4e32\u64cd\u4f5c\u7b26\u3001\u6bd4\u8f83\u64cd\u4f5c\u7b26\u4e0e\u5e03\u5c14\u903b\u8f91\u64cd\u4f5c\u7b26\uff0c\u5b83\u4eec\u6c47\u603b\u5982\u4e0b\uff0c\u5e76\u7ed9\u51fa\u4e86\u4e00\u4e9b\u7b80\u5355\u7684\u5b9e\u4f8b\uff0c\u8bfb\u8005\u53ef\u81ea\u884c\u8fd0\u884c\u793a\u4f8b\u5e76\u4ed4\u7ec6\u4f53\u4f1a\u3002 1\uff09\u7b97\u672f\u64cd\u4f5c\u7b26\uff1a 9 + 2 # \u52a0 9 - 2 # \u51cf 9 * 2 # \u4e58 9 / 2 # \u9664\uff08\u6d6e\u70b9\u8f93\u51fa\uff09 9 //2 # \u6574\u9664 9 % 2 # \u6c42\u4f59 9 **2 # \u5e42 2\uff09\u5b57\u7b26\u4e32\u64cd\u4f5c\u7b26\uff1a '\u8fd9\u662f\u4e00\u4e2a' + '\u5b57\u7b26\u4e32' # \u5b57\u7b26\u4e32\u8fde\u63a5 '\u8fd9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32' * 5 # \u5b57\u7b26\u4e32\u91cd\u590d 3\uff09\u6bd4\u8f83\u64cd\u4f5c\u7b26\uff1a 5 == 4 # \u7b49\u4e8e 5 > 4 # \u5927\u4e8e 5 < 4 # \u5c0f\u4e8e 5 != 4 # \u4e0d\u7b49\u4e8e 5 >= 4 # \u5927\u4e8e\u6216\u7b49\u4e8e 5 <= 4 # \u5c0f\u4e8e\u6216\u7b49\u4e8e 4\uff09\u5e03\u5c14\u903b\u8f91\u64cd\u4f5c\u7b26\uff1a True and True # \u903b\u8f91\u201c\u4e0e\u201d True or False # \u903b\u8f91\u201c\u6216\u201d not False # \u903b\u8f91\u201c\u975e\u201d 2.8 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 \u4f5c\u4e3a\u4ecb\u7ecd Python \u8bed\u6cd5\u77e5\u8bc6\u7684\u7b2c\u4e00\u4e2a\u7ae0\u8282\uff0c\u672c\u7ae0\u8be6\u7ec6\u4ecb\u7ecd\u4e86 Python \u4e24\u79cd\u89e3\u91ca\u5668\u3001\u6700\u4e3a\u57fa\u7840\u7684\u8bed\u6cd5\u3001\u7b97\u672f\u64cd\u4f5c\u3001\u903b\u8f91\u64cd\u4f5c\u4ee5\u53ca Python \u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\u2014\u2014\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u4e0e\u5e03\u5c14\u503c\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u672c\u7ae0\u7b80\u5355\u4ecb\u7ecd\u4e86 Notebook \u7684\u57fa\u672c\u6982\u5ff5\u548c\u64cd\u4f5c\u3002\u65e0\u8bba\u8bfb\u8005\u662f\u76f4\u63a5\u4f7f\u7528 Jupyter Notebook\uff08\u672c\u5730/\u8fdc\u7a0b\u6d4f\u89c8\u5668\uff09\u8fd8\u662f\u4f7f\u7528 nteract\uff08\u672c\u5730\u8f6f\u4ef6\uff09\uff0cNotebook \u64cd\u4f5c\u5927\u540c\u5c0f\u5f02\uff0c\u8bfb\u8005\u9700\u8981\u591a\u52a0\u7ec3\u4e60\u8fdb\u884c\u638c\u63e1\u3002 \u672c\u7ae0\u5185\u5bb9\u867d\u7cbe\u672a\u5fc5\u5168\uff0c\u4e00\u4e9b\u504f\u50fb\u7684\u77e5\u8bc6\u70b9\u672a\u80fd\u4e00\u4e00\u4ecb\u7ecd\uff0c\u8bfb\u8005\u5728\u5b66\u4e60\u672c\u4e66\u4e4b\u4f59\u53ef\u53c2\u8003\u7f51\u7edc\u77e5\u8bc6\u8f85\u52a9\u5b66\u4e60\u3002","title":"\u7b2c 2 \u7ae0 Python \u5165\u95e8\u793a\u4f8b\u53ca\u57fa\u7840\u77e5\u8bc6"},{"location":"02-base/#2-python","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : Python \u89e3\u91ca\u5668 \u7f16\u5199\u7b2c\u4e00\u884c Python \u4ee3\u7801 Notebook \u521d\u4f7f\u7528 \u5229\u7528 Python \u8fdb\u884c\u6570\u5b66\u8fd0\u7b97 \u53d8\u91cf\u7684\u547d\u540d\u548c\u4f7f\u7528 Python \u57fa\u672c\u6570\u636e\u7c7b\u578b \u672c\u7ae0\u9996\u5148\u4ecb\u7ecd Python \u7684\u89e3\u91ca\u5668\uff0c\u7136\u540e\u5c55\u793a Python \u7684\u4e00\u4e2a\u5165\u95e8\u793a\u4f8b\uff0c\u5e76\u7b80\u5355\u4ecb\u7ecd nteract \u8f6f\u4ef6\u7684\u4f7f\u7528\uff0c\u63a5\u7740\u4ecb\u7ecd Python \u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec Python \u7684\u57fa\u672c\u64cd\u4f5c\u7b26\u3001\u53d8\u91cf\u7684\u547d\u540d\u4e0e\u4f7f\u7528\u3001Python \u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7b49\u3002\u5bf9\u4e8e\u57fa\u7840\u77e5\u8bc6\u7684\u4ecb\u7ecd\uff0c\u672c\u4e66\u5c06\u901a\u8fc7\u5b9e\u4f8b\u5c55\u793a\u3001\u89e3\u6790\u5176\u542b\u4e49\u5e76\u8fdb\u884c\u5ef6\u4f38\u3002\u590d\u6742\u7684\u4ee3\u7801\u603b\u662f\u53ef\u4ee5\u62c6\u89e3\u4e3a\u4e00\u5c0f\u5757\u4e00\u5c0f\u5757\u57fa\u672c\u64cd\u4f5c\u7684\u96c6\u5408\uff0cPython \u6613\u8bfb\u6613\u61c2\u7684\u8bed\u8a00\u7279\u6027\u8ba9\u8fd9\u4e00\u6982\u5ff5\u66f4\u4e3a\u5f62\u8c61\u3002","title":"\u7b2c 2 \u7ae0 Python \u5165\u95e8\u793a\u4f8b\u53ca\u57fa\u7840\u77e5\u8bc6"},{"location":"02-base/#21-python-ipython","text":"\u76f8\u6bd4\u4e8e C\u3001C++\u3001Java \u7b49\u7f16\u7a0b\u8bed\u8a00\uff0cPython \u4ee3\u7801\u7684\u8fd0\u884c\u5e76\u4e0d\u9700\u8981\u63d0\u524d\u8fdb\u884c\u7f16\u8bd1\uff0c\u800c\u662f\u901a\u8fc7 Python \u89e3\u91ca\u5668\u8fdb\u884c\u89e3\u91ca\u548c\u6267\u884c\uff0c\u6240\u89c1\u5373\u6240\u5f97\u3002\u4e13\u4e1a\u672f\u8bed\u79f0\u62e5\u6709\u8fd9\u79cd\u7279\u6027\u7684\u7f16\u7a0b\u8bed\u8a00\u4e3a\u89e3\u91ca\u6027\u6216\u52a8\u6001\u8bed\u8a00\u3002","title":"2.1 Python \u89e3\u91ca\u5668\u4e0e IPython"},{"location":"02-base/#211-python","text":"\u8bfb\u8005\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 python \u547d\u4ee4\u6253\u5f00\u6807\u51c6\u7684\u4ea4\u4e92 Python \u89e3\u91ca\u5668\u3002\u5982\u679c\u8bfb\u8005\u4f7f\u7528 Windows \u64cd\u4f5c\u7cfb\u7edf\uff0c\u70b9\u51fb\u5f00\u59cb\uff0d>\u8fd0\u884c\uff0d>\u952e\u5165 cmd \u5373\u53ef\u8fdb\u884c\u547d\u4ee4\u73af\u5883\u3002\u5982\u679c\u8bfb\u8005\u4f7f\u7528 macOS \u6216 Linux \u7cfb\u7edf\uff0c\u8bf7\u76f4\u63a5\u6253\u5f00\u7ec8\u7aef\u3002\u8f93\u5165 python \u540e\u8bfb\u8005\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e0b\u9762\u7684\u8f93\u51fa\uff08\u6b64\u5904\u4ee5 macOS \u7cfb\u7edf\u4e3a\u4f8b\uff09\uff1a Python 3.7.0 (default, Jun 28 2018, 07:39:16) [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> \u4e0a\u9762\u8f93\u51fa\u4e2d\u524d\u51e0\u884c\u663e\u793a\u4e86 Python \u7684\u7248\u672c\u4fe1\u606f\u3001\u4f7f\u7528\u7684\u662f C \u8bed\u8a00\u7f16\u8bd1\u5668 Clang\uff08Python \u8bed\u8a00\u672c\u8eab\u7684\u5e95\u5c42\u5b9e\u73b0\u6807\u51c6\u662fC\u8bed\u8a00\uff09\u4ee5\u53ca\u8be5 Python \u7531 Anaconda \u516c\u53f8\u53d1\u5e03\u3002 >>> \u662f\u547d\u4ee4\u63d0\u793a\u7b26\uff0c\u8bfb\u8005\u53ef\u4ee5\u5728\u540e\u9762\u8f93\u5165\u547d\u4ee4\u5e76\u6309\u4e0b\u56de\u8f66\u952e\uff0cPython \u89e3\u91ca\u5668\u4f1a\u5bf9\u547d\u4ee4\u8fdb\u884c\u89e3\u91ca\u5e76\u8fd4\u56de\u7ed3\u679c\u3002\u8bfb\u8005\u5982\u679c\u8981\u9000\u51fa Python \u89e3\u91ca\u5668\u8fd4\u56de\u7ec8\u7aef\uff0c\u90a3\u4e48\u8f93\u5165 exit() \u6216\u6309 \u3002\u6574\u4e2a\u8fc7\u7a0b\u5c31\u50cf\u4e00\u573a\u4eba\u673a\u5bf9\u8bdd\uff0c\u7528\u6237\u5728\u547d\u4ee4\u63d0\u793a\u7b26\u540e\u8f93\u5165\u6307\u4ee4\uff0cPython \u4f1a\u5fe0\u5b9e\u5730\u6267\u884c\u5e76\u8fd4\u56de\u7ed3\u679c\u4ee5\u4f9b\u7a0b\u5e8f\u5458\u9605\u8bfb\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e00\u5207\u90fd\u57fa\u4e8e\u8bfb\u8005\u719f\u7ec3\u638c\u63e1 Python \u57fa\u7840\u8bed\u6cd5\u3002","title":"2.1.1 \u6807\u51c6 Python \u89e3\u91ca\u5668"},{"location":"02-base/#212-ipython","text":"\u5927\u90e8\u5206 Python \u7a0b\u5e8f\u5458\u90fd\u662f\u901a\u8fc7\u4e0a\u8ff0\u65b9\u5f0f\u6267\u884c Python \u547d\u4ee4\u7684\uff0c\u4f46\u4ece\u4e8b\u6570\u636e\u5206\u6790\u548c\u79d1\u5b66\u8ba1\u7b97\u7684\u4e13\u4e1a\u4eba\u58eb\u66f4\u559c\u6b22\u4f7f\u7528 IPython \u6216 Jupyter Notebook\u3002IPython \u662f\u4e00\u4e2a\u5f3a\u5316\u7684 Python \u89e3\u91ca\u5668\u3002Jupyter Notebook\u5219\u662f\u4e00\u4e2a\u7f51\u9875\u4ee3\u7801\u7b14\u8bb0\u672c\uff0c\u5b83\u539f\u662f IPython \u7684\u4e00\u4e2a\u5b50\u9879\u76ee\u3002\u8bfb\u8005\u53ef\u4ee5\u7b80\u5355\u5c06 Jupyter Notebook \u770b\u505a\u4e00\u4e2a\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684 IPython \u56fe\u5f62\u754c\u9762\uff0c\u4f7f\u7528\u8d77\u6765\u66f4\u52a0\u76f4\u89c2\u548c\u4f18\u5316\uff0c\u5e76\u4e14\u652f\u6301\u6587\u672c\u548c\u56fe\u50cf\u7684\u5d4c\u5165\u3002nteract \u8f6f\u4ef6\u5219\u53ef\u4ee5\u770b\u505a Jupyter Notebook \u7684\u672c\u5730\u7248\u672c\uff0c\u4f7f\u7528\u8ddf Jupyter Notebook \u57fa\u672c\u4e00\u81f4\u3002Jupyter Notebook \u548c nteract \u521b\u5efa\u548c\u4fdd\u5b58\u7684\u6587\u4ef6\u90fd\u662f Jupyter \u7b14\u8bb0\u672c\uff0c\u6587\u4ef6\u6269\u5c55\u540d\u4e3a .ipynb \uff0c\u56e0\u6b64\u4e24\u4e2a\u8f6f\u4ef6\u7f16\u8f91\u7684\u5185\u5bb9\u662f\u53ef\u4ee5\u901a\u7528\u7684\u3002\u8003\u8651\u5230\u672c\u5730\u6d4f\u89c8\u5668\u4f7f\u7528 Jupyter Notebook \u53ef\u80fd\u4f1a\u51fa\u73b0\u4e0d\u7a33\u5b9a\u7684\u60c5\u51b5\uff0c\u672c\u4e66\u9009\u62e9 nteract \u8f6f\u4ef6\u8fdb\u884c\u4e00\u4e9b\u7ed3\u679c\u7684\u5c55\u793a\uff0c\u5e76\u63a8\u8350\u8bfb\u8005\u4f7f\u7528\u3002 \u8bfb\u8005\u5982\u679c\u66f4\u559c\u6b22\u6587\u672c\u5f0f\u6837\u7684\u7ec8\u7aef\u754c\u9762\u8fdb\u884c Python \u547d\u4ee4\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 ipython \u8fdb\u5165 IPython \u89e3\u91ca\u5668\uff08\u4e5f\u79f0\u4e3a IPython Shell\uff09\uff0c\u5982\u4e0b\u6240\u793a\uff1a Python 3.7.0 (default, Jun 28 2018, 07:39:16) Type 'copyright', 'credits' or 'license' for more information IPython 6.5.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: \u521d\u5b66\u8005\u4f1a\u7acb\u523b\u53d1\u73b0 Python \u6807\u51c6\u89e3\u91ca\u5668\u4e0e IPython \u89e3\u91ca\u5668\u5f62\u5f0f\u4e0a\u7684\u4e00\u4e2a\u91cd\u8981\u533a\u522b\u662f IPython \u4f7f\u7528\u4ee3\u7801\u6267\u884c\u7684\u6b21\u5e8f\u4f5c\u4e3a\u547d\u4ee4\u63d0\u793a\u7b26\u3002 In [1]: \u8868\u793a\u7b49\u5f85\u7528\u6237\u8f93\u5165\u7b2c\u4e00\u6761\u8bed\u53e5\uff0c\u8f93\u51fa\u7ed3\u679c\u4e00\u822c\u4f1a\u4ee5\u7c7b\u4f3c Out [1] \u7684\u65b9\u5f0f\u6807\u8bb0\uff0c\u4e5f\u53ef\u80fd\u6ca1\u6709\uff08\u540e\u9762\u7684\u5b66\u4e60\u4e2d\u8bfb\u8005\u4f1a\u770b\u5230\uff09\u3002IPython \u6709\u975e\u5e38\u591a\u6bd4 Python \u6807\u51c6\u89e3\u91ca\u5668\u66f4\u5f3a\u5927\u7684\u529f\u80fd\u4e0e\u7279\u6027\uff0c\u50cf\u81ea\u52a8\u8865\u5168\uff0c\u8f93\u51fa\u4f18\u5316\uff0c\u9b54\u672f\u547d\u4ee4\u7b49\uff0c\u8fd9\u4e9b\u90fd\u7b49\u5f85\u8bfb\u8005\u53d1\u6398\u548c\u4f53\u9a8c\u3002 \u5728\u540e\u7eed\u7684\u7ae0\u8282\u4e2d\uff0c\u672c\u4e66\u5bf9 Python \u7684\u4ecb\u7ecd\u90fd\u662f\u57fa\u4e8e IPython \u89e3\u91ca\u5668\u3002Python \u547d\u4ee4\u7684\u64cd\u4f5c\u65e0\u8bba\u662f\u901a\u8fc7 IPython Shell \u8fd8\u662f\u56fe\u5f62\u754c\u9762\uff08\u5373 Jupyter Notebook\u3001nteract\uff09\u90fd\u53ef\u4ee5\u5b9e\u73b0\uff0c\u8bfb\u8005\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u559c\u6b22\u7684\u64cd\u4f5c\u65b9\u5f0f\u3002","title":"2.1.2 IPython"},{"location":"02-base/#22-python","text":"\u5728\u5f88\u591a\u7684\u7f16\u7a0b\u5b66\u4e60\u4e66\u7c4d\u6216\u8005\u6559\u5b66\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u4ee3\u7801\u5b9e\u73b0\u901a\u5e38\u662f\u5411\u5c4f\u5e55\u8f93\u51fa Hello World! \uff0c\u8ba9\u7a0b\u5e8f\u5411\u4e16\u754c\u95ee\u597d\u3002\u672c\u4e66\u662f\u4e00\u672c\u4e2d\u6587\u4e66\u7c4d\uff0c\u4e0b\u9762\u5c31\u5411\u8bfb\u8005\u4ecb\u7ecd\u5982\u4f55\u7528 Python \u5b9e\u73b0\u8f93\u51fa\u5b83\u7684\u4e2d\u6587\u7248\u672c \u4f60\u597d\u554a\uff0c\u4e16\u754c\uff01 \u3002 \u9996\u5148\uff0c\u6253\u5f00\u8f6f\u4ef6 nteract\u3002\u5728 nteract \u8f93\u5165\u6846\u4e2d\u8f93\u5165 print(\u2018\u4f60\u597d\u554a\uff0c\u4e16\u754c!\u2019) \uff0c\u7136\u540e\u6309\u4e0b\u5feb\u6377\u952e \uff08\u5728 macOS \u7cfb\u7edf\u4e2d\uff0c\u5c06 \\ \u952e\u6362\u4e3a \\ \u952e\u5373\u53ef\uff09\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u56fe2-1\u6240\u793a\u3002 \u9664\u4e86\u4f7f\u7528\u5feb\u6377\u952e\uff0c\u8bfb\u8005\u8fd8\u53ef\u4ee5\u5355\u51fb\u8f93\u5165\u6846\u53f3\u4e0a\u89d2\u7684\u4e09\u89d2\u5f62\u56fe\u6807\u6309\u94ae\u8fd0\u884c\u7a0b\u5e8f\u3002 \u8bfb\u8005\u5982\u679c\u4f7f\u7528 Jupyter Notebook\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 jupyter notebook \u5373\u53ef\u6253\u5f00\u8f6f\u4ef6\u3002\u5728\u591a\u6570\u5e73\u53f0\u4e0a\uff0cJupyter \u4f1a\u81ea\u52a8\u6253\u5f00\u9ed8\u8ba4\u7684\u6d4f\u89c8\u5668\uff08\u9664\u975e\u6307\u5b9a\u4e86 \u2013no-browser \uff09\u3002\u6216\u8005\uff0c\u53ef\u4ee5\u5728\u542f\u52a8 Jupyter Notebook \u4e4b\u540e\uff0c\u624b\u52a8\u6253\u5f00\u7f51\u9875 http://localhost:8888/ \u3002\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\u5feb\u6377\u952e \u53ef\u4ee5\u9000\u51fa Jupyter Notebook\u3002\u5982\u679c\u8981\u65b0\u5efa\u4e00\u4e2a Python \u7b14\u8bb0\u672c\uff0c\u70b9\u51fb\u6309\u94ae New \uff0c\u9009\u62e9 Python3 \uff0c\u8bfb\u8005\u4f1a\u770b\u5230\u4e0e\u56fe2-1\u7c7b\u4f3c\u7684\u754c\u9762\u548c\u8f93\u5165\u6846\u3002Jupyter Notebook \u7684\u8fd0\u884c\u7684\u5feb\u6377\u952e\u4e0e nteract \u4e00\u81f4\uff0c\u8fd0\u884c\u6807\u5fd7\u4f4d\u4e8e\u6d4f\u89c8\u5668\u4e0a\u65b9\u7684\u5de5\u5177\u680f\u4e2d\u3002 \u8fd9\u884c\u4ee3\u7801\u4ec5\u5305\u542b 16 \u4e2a\u5b57\u7b26\uff0c\u5176\u4e2d 7 \u4e2a\u5b57\u7b26\u662f\u8bfb\u8005\u90fd\u8ba4\u8bc6\u7684\u4e2d\u6587 \u4f60\u597d\u554a\uff0c\u4e16\u754c\uff01 \uff0c\u6beb\u65e0\u7591\u95ee\u662f\u8f93\u51fa\u7684\u6587\u5b57\u3002\u5176\u4ed6 9 \u4e2a\u5b57\u7b26\u662f\u6709\u4e9b\u8bfb\u8005\u6682\u65f6\u8fd8\u4e0d\u7406\u89e3\u7684 print \u3001 () \u548c \u2018\u2019 \uff0c\u5b83\u4eec\u5206\u522b\u6709\u4ec0\u4e48\u542b\u4e49\u5462\uff1f print \u662f Python \u63d0\u4f9b\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7684\u529f\u80fd\u662f\u5411\u5c4f\u5e55\u8f93\u51fa\u7528\u6237\u5b9a\u4e49\u7684\u5b57\u7b26\uff08\u4e32\uff09\u3002Python \u51fd\u6570\u4f9d\u8d56\u82f1\u6587\u62ec\u53f7 () \u6765\u533a\u5206\u7528\u6237\u8f93\u5165\u7684\u5185\u5bb9\u4e2d\u4ec0\u4e48\u662f\u5b83\u8981\u5904\u7406\u7684\u5bf9\u8c61\uff0c\u800c\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u662f\u7531\u5355\u5f15\u53f7 \u2018\u2019 \u62ec\u8d77\u6765\u7684\u6587\u5b57\u3002 \u4e3a\u4e86\u8bc1\u660e\u4e0a\u8ff0\u8bf4\u660e\u7684\u6b63\u786e\u6027\uff0c\u4e0b\u9762\u5411\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9\u8fdb\u884c\u6d4b\u8bd5\uff1a print('\u4f60\u597d\u554a\uff0c\u4e16\u754c\uff01) print('\u4f60\u597d\u554a\uff0c\u4e16\u754c')! \u7ed3\u679c\u5982\u56fe2-2\u6240\u793a\u3002 \u663e\u7136\uff0c\u8fd9\u4e24\u53e5\u4ee3\u7801\u5b58\u5728\u95ee\u9898\uff0c\u547d\u4ee4\u6ca1\u6709\u6210\u529f\u8fd0\u884c\uff0c\u7a0b\u5e8f\u629b\u51fa\u4e86 SyntaxError \uff0c\u5373\u8bed\u6cd5\u9519\u8bef\u3002 \u7531\u6b64\u53ef\u89c1\uff0c\u9075\u5b88 Python \u7684\u8bed\u6cd5\u89c4\u5219\u975e\u5e38\u91cd\u8981\uff0c\u672c\u4e66\u540e\u7eed\u5185\u5bb9\u4f1a\u5bf9\u5176\u9010\u6b65\u8fdb\u884c\u4ecb\u7ecd\u3002","title":"2.2 Python \u5165\u95e8\u793a\u4f8b"},{"location":"02-base/#23-nteract","text":"\u901a\u8fc7\u56fe2-1\u548c\u56fe2-2\uff0c\u8bfb\u8005\u5e94\u8be5\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e00\u884c\u4ee3\u7801\u548c\u5bf9\u5e94\u7684\u8f93\u51fa\u7ed3\u679c\u5728 nteract \u8f6f\u4ef6\u754c\u9762\u4e2d\u90fd\u5355\u72ec\u5b58\u5728\u4e8e\u4e00\u4e2a\u5757\u4e2d\uff0c\u6bcf\u4e00\u5757\u90fd\u662f\u4e00\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u4ee3\u7801\u5355\u5143\uff0c\u8fd9\u4e2a\u4ee3\u7801\u5355\u5143\u53ef\u4ee5\u79f0\u4e3a\u5355\u5143\u683c\uff08Cell\uff09\uff0c\u5982\u56fe2-3\u6240\u793a\u3002 \u5355\u5143\u683c\u4e2d\u5448\u73b0\u7684\u6240\u6709\u4fe1\u606f\u5b9e\u9645\u4e0a\u90fd\u4f1a\u88ab\u5b58\u50a8\u4e3a Jupyter \u7b14\u8bb0\u672c\uff0c\u5b83\u4ee5\u7279\u5b9a\u7684 .ipynb \u4f5c\u4e3a\u6587\u4ef6\u6269\u5c55\u540d\uff0c\u5982\u56fe2-4 \u6240\u793a\u3002nteract \u8f6f\u4ef6\u4fdd\u5b58\u7684 Jupyter \u7b14\u8bb0\u672c\u4e0e\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684 Jupyter Notebook \u521b\u5efa/\u4fdd\u5b58\u7684\u7b14\u8bb0\u672c\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u53ea\u662f\u4ee5\u4e24\u79cd\u4e0d\u540c\u7684\u5f62\u5f0f\u5c55\u73b0\u51fa\u6765\uff08\u5c31\u50cf\u540c\u4e00\u5f20\u56fe\u7247\u8bfb\u8005\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u8f6f\u4ef6\u6253\u5f00\u3001\u67e5\u770b\u548c\u7f16\u8f91\uff09\u3002\u56e0\u6b64\uff0c\u8bfb\u8005\u5b8c\u5168\u53ef\u4ee5\u5c06\u7528 nteract \u8f6f\u4ef6\u521b\u5efa\u7684\u7b14\u8bb0\u672c\u4e0a\u4f20\u5230\u7f51\u7edc\u4e0a\uff08\u6bd4\u5982\u5f00\u6e90\u4ed3\u5e93 GitHub\uff09\u5e76\u7528 Jupyter \u7684 nbviewer\uff08 http://nbviewer.jupyter.org/ \uff09\u67e5\u770b\uff0c\u6216\u8005\u4e0a\u4f20\u4fdd\u5b58\u5230\u5fae\u8f6f\u7684\u6570\u636e\u5206\u6790\u5e73\u53f0\uff08 https://notebooks.azure.com/ \uff09\u8fdb\u884c\u67e5\u9605\u3001\u7f16\u8f91\u548c\u5206\u4eab\u3002\u540c\u6837\u5730\uff0c\u8bfb\u8005\u4e5f\u53ef\u4ee5\u5c06\u7f51\u7edc\u4e0a\u4f18\u79c0\u7684 Jupyter \u7b14\u8bb0\u672c\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u4f7f\u7528 nteract \u6253\u5f00\uff0c\u5e76\u8fdb\u884c\u5b66\u4e60\u548c\u5206\u6790\u3002 nteract \u8f6f\u4ef6\u9664\u4e86\u73b0\u5728\u754c\u9762\u8bed\u8a00\u53ea\u6709\u82f1\u6587\u8fd9\u4e2a\u7f3a\u9677\u4ee5\u5916\uff0c\u5176\u4ed6\u529f\u80fd\u90fd\u8bbe\u8ba1\u5f97\u975e\u5e38\u597d\u3002\u8bfb\u8005\u53ef\u4ee5\u50cf\u5e73\u5e38\u4f7f\u7528 Windows \u7cfb\u7edf\u4e2d\u7684\u8f6f\u4ef6\u4e00\u6837\uff0c\u7528\u9f20\u6807\u5bf9\u5355\u5143\u683c\u8fdb\u884c\u64cd\u4f5c\uff0c\u5e38\u89c1\u7684\u8fd0\u884c\u3001\u5220\u9664\u90fd\u4ee5\u56fe\u6807\u7684\u65b9\u5f0f\u663e\u793a\u5728\u5355\u5143\u683c\u7684\u53f3\u4e0a\u89d2\uff0c\u4f7f\u7528\u8d77\u6765\u5f88\u65b9\u4fbf\u3002\u4e60\u60ef\u4e8e\u4f7f\u7528\u5feb\u6377\u952e\u7684\u7528\u6237\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u83dc\u5355\u680f\u4e2d\u7684\u5404\u4e2a\u9009\u9879\u4e86\u89e3\u5feb\u6377\u952e\u7684\u4f7f\u7528\u3002 \u5728\u8fd0\u884c\u4ee3\u7801\u65f6\uff0c\u5e38\u89c1\u7684\u4e24\u4e2a\u5feb\u6377\u952e\u662f \u53ca \u952e\u3002\u524d\u8005\u8fd0\u884c\u5f53\u524d\u5355\u5143\u683c\uff0c\u540e\u8005\u5148\u8fd0\u884c\u5355\u5143\u683c\uff0c\u7136\u540e\u65b0\u5efa\u4e00\u4e2a\u5355\u5143\u683c\u3002\u76f8\u5bf9\u800c\u8a00\uff0c\u540e\u8005\u66f4\u4e3a\u4fbf\u5229\uff0c\u4f7f\u7528\u4e5f\u76f8\u5bf9\u9891\u7e41\u4e9b\u3002 nteract \u4e2d\u6bcf\u4e2a\u5355\u5143\u683c\u5de6\u4fa7\u90fd\u6709\u65b9\u62ec\u53f7 [] \u6807\u8bb0\uff0c\u5728\u4ee3\u7801\u8fd0\u884c\u540e\uff0c\u4e2d\u95f4\u4f1a\u51fa\u73b0\u6570\u5b57\uff0c\u8be5\u6570\u5b57\u6807\u8bb0\u4e86\u5355\u5143\u683c\u8fd0\u884c\u7684\u6b21\u5e8f\uff08\u4ece 1 \u5f00\u59cb\uff09\u3002\u5982\u679c\u4e0d\u540c\u5355\u5143\u683c\u7684\u4ee3\u7801\u8fd0\u884c\u6b21\u5e8f\u4f1a\u5bf9\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\uff0c\u8bfb\u8005\u9700\u8981\u5173\u6ce8\u4e0b\u8fd0\u884c\u6b21\u5e8f\uff0c\u5426\u5219\u5728\u4e00\u822c\u7684\u60c5\u51b5\u4e0b\uff0c\u8bfb\u8005\u53ef\u4ee5\u5ffd\u7565\u5b83\u7684\u5b58\u5728\u3002","title":"2.3 nteract \u8f6f\u4ef6\u4f7f\u7528\u7b80\u4ecb"},{"location":"02-base/#24","text":"\u7b97\u672f\u8fd0\u7b97\u662f\u6570\u636e\u5206\u6790\u7684\u57fa\u7840\u3002\u672c\u8282\u4ecb\u7ecd Python \u4e2d\u7684\u7b97\u672f\u8fd0\u7b97\u7b26\uff0c\u5e76\u7ed9\u51fa\u8ba1\u7b97\u8eab\u4f53\u8d28\u91cf\u6307\u6570\u7684\u793a\u4f8b\u3002","title":"2.4 \u7b97\u672f\u8fd0\u7b97"},{"location":"02-base/#241","text":"\u5728\u5b8c\u6210\u7b2c\u4e00\u4e2a Python \u4ee3\u7801\u540e\uff0c\u8bfb\u8005\u662f\u4e0d\u662f\u8feb\u5207\u60f3\u4e86\u89e3 Python \u662f\u5982\u4f55\u5b9e\u73b0\u6570\u636e\u7684\u8ba1\u7b97\u7684\u5462\uff1f\u4e0b\u9762\u4ece\u7b80\u5355\u7684\u56db\u5219\u8fd0\u7b97\u5f00\u59cb\u4ecb\u7ecd Python \u4e2d\u7684\u7b97\u672f\u8fd0\u7b97\u64cd\u4f5c\u7b26\uff0c\u5982\u56fe2-5\u6240\u793a\u3002 \u56fe\u4e2d\u4ee3\u7801\u8bed\u53e5\u53ea\u6709\u6570\u5b571\u548c\u7b97\u672f\u8fd0\u7b97\u64cd\u4f5c\u7b26\uff0c\u53ef\u89c1 + \u3001 - \u3001 * \u3001 / \u5206\u522b\u5bf9\u5e94\u65e5\u5e38\u7684\u56db\u5219\u8fd0\u7b97\u7b26\u53f7\u3002 1 / 1 \u7684\u7ed3\u679c\u600e\u4e48\u662f 1.0 \uff1f\u4e0d\u5e94\u8be5\u662f 1 \u5417\uff1f \u8fd9\u662f\u56e0\u4e3a\u5728 Python\u7684 \u9664\u6cd5\u8fd0\u7b97\u4e2d\uff0c\u8fd0\u7b97\u7b26 / \u8fdb\u884c\u7684\u662f\u6d6e\u70b9\u9664\u6cd5\u64cd\u4f5c\uff0c\u800c\u8fd0\u7b97\u7b26 // \u8fdb\u884c\u7684\u662f\u6574\u9664\u64cd\u4f5c\uff0c\u7ed3\u679c\u5982\u56fe2-6\u3002\u53e6\u5916\uff0cPython \u8fd8\u63d0\u4f9b\u4e86\u6c42\u4f59\u64cd\u4f5c\u7b26 % \u3002 Python \u4e2d\u6bd4\u8f83\u5b8c\u6574\u7684\u7b97\u672f\u8fd0\u7b97\u64cd\u4f5c\u6c47\u603b\u5982\u4e0b\uff1a 3 + 2 # \u52a0\u6cd5 3 / 2 # \u6d6e\u70b9\u6570\u9664\u6cd5 3 // 2 # \u6574\u9664 3 * 2 # \u4e58\u6cd5 3 ** 2 # \u6307\u6570\uff08\u5e42\uff09 3 % 2 # \u6c42\u4f59 abs(a) # \u7edd\u5bf9\u503c","title":"2.4.1 \u7b80\u5355\u6570\u5b66\u8fd0\u7b97"},{"location":"02-base/#242","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u793a\u4f8b\u672c\u4e66\u5411\u8bfb\u8005\u7b80\u5355\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528 nteract \u521b\u5efa\u548c\u4f7f\u7528 Jupyter Notebook \u5e76\u7528\u5b83\u8f93\u5165 Python \u4ee3\u7801\u3002\u4e3a\u4e86\u63d0\u5347\u672c\u4e66\u4f5c\u8005\u4ee3\u7801\u4e66\u5199\u7684\u6548\u7387\uff0c\u672c\u4e66\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u5185\u5bb9\u5c3d\u91cf\u4f7f\u7528\u6587\u672c\u7684\u5f62\u5f0f\u5c55\u793a\u4ee3\u7801\u548c\u7ed3\u679c\uff0c\u8bfb\u8005\u53ef\u4ee5\u6839\u636e\u524d\u6587\u7684\u4ecb\u7ecd\u64cd\u4f5c nteract \u6216 Jupyter Notebook \u56fe\u5f62\u754c\u9762\u8fdb\u884c\u5b66\u4e60\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 IPython Shell \u64cd\u4f5c\u6587\u672c\u754c\u9762\u5b66\u4e60\u3002 \u4f8b\u5982\uff0c\u5173\u4e8e\u56fe2-5\u4e2d\u7684\u51e0\u4e2a\u8fd0\u7b97\u64cd\u4f5c\uff0c\u672c\u4e66\u4f7f\u7528\u4e0b\u5217\u4ee3\u7801\u884c\u4ee3\u66ff\u3002 In [3]: 1 + 1 Out[3]: 2 In [4]: 1 - 1 Out[4]: 0 In [5]: 1 * 1 Out[5]: 1 In [6]: 1 / 1 Out[6]: 1.0 \u4ee3\u7801\u5de6\u4fa7\u7684 3 \u3001 4 \u6807\u5b9a\u4e86\u4f5c\u8005\u5728 IPython Shell \u4e2d\u8fd0\u884c\u4ee3\u7801\u7684\u6b21\u5e8f\uff0c\u8fd9\u5e76\u4e0d\u662f\u6307\u5fc5\u987b\u5728 [3] \u8fd0\u884c\u540e\u624d\u80fd\u8fd0\u884c [4] \u3002","title":"2.4.2 \u4ee3\u7801\u7ea6\u5b9a"},{"location":"02-base/#243","text":"\u4e0a\u6587\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 Python \u8fdb\u884c\u7b80\u5355\u7684\u8ba1\u7b97\uff0c\u90a3\u4e48\u73b0\u5728\u628a\u6240\u5b66\u7684\u77e5\u8bc6\u7528\u6765\u505a\u4e00\u4ef6\u66f4\u6709\u5b9e\u9645\u610f\u4e49\u7684\u4e8b\u60c5\u2014\u2014\u8ba1\u7b97\u81ea\u5df1\u7684\u8eab\u4f53\u8d28\u91cf\u6307\u6570\u3002 \u8eab\u4f53\u8d28\u91cf\u6307\u6570\uff08BMI\uff09\u662f\u76ee\u524d\u56fd\u9645\u4e0a\u5e38\u7528\u7684\u8861\u91cf\u4eba\u4f53\u80d6\u7626\u7a0b\u5ea6\u4ee5\u53ca\u662f\u5426\u5065\u5eb7\u7684\u4e00\u4e2a\u6807\u51c6\uff0c\u76f8\u4fe1\u4e0d\u5c11\u8bfb\u8005\u5728\u8fdb\u884c\u4f53\u68c0\u65f6\u90fd\u4f1a\u6d4b\u91cf\u8fd9\u4e2a\u6307\u6807\uff0c\u5b83\u662f\u7528\u4f53\u91cd\u516c\u65a4\u6570\u9664\u4ee5\u8eab\u9ad8\u7c73\u6570\u7684\u5e73\u65b9\u5f97\u51fa\u7684\u6570\u5b57\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u77e5\u9053\u81ea\u5df1\u7684\u8eab\u9ad8\u548c\u4f53\u91cd\uff0c\u5c31\u53ef\u4ee5\u81ea\u5df1\u8ba1\u7b97 BMI\u3002 \u4f8b\u5982\u4f5c\u8005\u672c\u4eba\uff0c\u8eab\u9ad8 1.82m\uff0c\u4f53\u91cd 70kg \u5de6\u53f3\uff0c\u8ba1\u7b97\u540e\u7684 BMI \u6307\u6570\u4e3a\uff1a In [11]: 70 / 1.82 ** 2 Out[11]: 21.132713440405748 nteract \u7ed3\u679c\u663e\u793a\u5982\u56fe2-7\u3002 \u6709\u65f6\uff0c\u5f53\u7528\u6237\u5c06\u81ea\u5df1\u7f16\u5199\u7684\u4ee3\u7801\u53d1\u7ed9\u5176\u4ed6\u4eba\u65f6\uff0c\u5176\u4ed6\u4eba\u53ef\u80fd\u5b8c\u5168\u4e0d\u61c2\u4ee3\u7801\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u6b64\u65f6\u8be5\u600e\u4e48\u529e\u5462\uff1f \u89e3\u51b3\u7684\u529e\u6cd5\u662f\u7ed9\u4ee3\u7801\u52a0\u4e0a\u4e2d\u6587/\u82f1\u6587\u6ce8\u91ca\uff0c\u8fd9\u6837\u5176\u4ed6\u4eba\u5c31\u80fd\u591f\u901a\u8fc7\u6ce8\u91ca\u6765\u7406\u89e3\u8fd9\u4e9b\u6570\u5b66\u7b26\u53f7\u6240\u4ee3\u8868\u7684\u542b\u4e49\u3002\u5728 Python \u4e2d\uff0c\u4f7f\u7528\u4e95\u53f7\u952e # \u53ef\u4ee5\u5f15\u5bfc\u4e00\u884c\u6ce8\u91ca\uff0c\u56e0\u6b64\u4e0a\u8ff0\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca\u540e\u7684\u6548\u679c\u4e3a\uff1a In [12]: 70 / 1.82 ** 2 # \u8ba1\u7b97\u6211\u7684 BMI Out[12]: 21.132713440405748 \u6ce8\u91ca\u4e5f\u53ef\u4ee5\u51fa\u73b0\u5728\u5bf9\u5e94\u4ee3\u7801\u7684\u524d\u4e00\u884c\uff0c\u4f46\u4e0d\u80fd\u51fa\u73b0\u5728\u5bf9\u5e94\u4ee3\u7801\u7684\u524d\u9762\uff0c\u4e0d\u7136\u4ee3\u7801\u81ea\u8eab\u4e5f\u4f1a\u88ab\u5f53\u4f5c\u6ce8\u91ca\u800c\u65e0\u6cd5\u8fd0\u884c\u3002 In [13]: # \u8ba1\u7b97\u6211\u7684 BMI In [14]: 70 / 1.82 ** 2 Out[14]: 21.132713440405748 In [15]: # \u8ba1\u7b97\u6211\u7684 BMI 70 / 1.82 ** 2 \u6807\u8bb0\u4e3a 13 \u548c 15 \u7684\u4e24\u884c\u6ca1\u6709\u5bf9\u5e94\u7684\u8f93\u51fa\u6807\u8bb0\uff0c\u5b83\u4eec\u5e76\u6ca1\u6709\u88ab Python \u6267\u884c\uff0c\u56e0\u800c\u6ca1\u6709\u76f8\u5e94\u7684\u8f93\u51fa\u7ed3\u679c\u3002\u5b9e\u9645\u4e0a\uff0cPython \u4f1a\u5728\u8fd0\u884c\u524d\u68c0\u67e5\u8f93\u5165\u7684\u8bed\u53e5\u5757\uff0c\u82e5\u53d1\u73b0\u5b83\u662f\u4ee5 # \u5f00\u5934\u7684\u8bed\u53e5\uff0c\u90a3\u4e48\u8df3\u8fc7\u53bb\uff08\u4e0d\u6267\u884c\uff09\uff1b\u82e5\u4ee3\u7801\u5b58\u5728\u8bed\u6cd5\u9519\u8bef\uff0c\u90a3\u4e48 Python \u4f1a\u505c\u6b62\u8fd0\u884c\u5e76\u7ed9\u51fa\u76f8\u5e94\u7684\u9519\u8bef\u548c\u63d0\u793a\uff0c\u4f8b\u5982\uff1a In [16]: \u8ba1\u7b97\u6211\u7684 BMI \u6307\u6570 70 / 1.82 ** 2 File \"<ipython-input-16-b7d966d13e1f>\", line 1 \u8ba1\u7b97\u6211\u7684 BMI \u6307\u6570 70 / 1.82 ** 2 ^ SyntaxError: invalid syntax \u4e3a\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca\u662f\u4e00\u4e2a\u7f16\u5199\u7a0b\u5e8f\u65f6\u7684\u826f\u597d\u4e60\u60ef\u3002\u6ce8\u91ca\u53ef\u4ee5\u4f7f\u5f97\u4ee3\u7801\u4fbf\u4e8e\u8ffd\u6eaf\u5e76\u4e14\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u53ef\u8bfb\u6027\u3002\u826f\u597d\u7684\u4ee3\u7801\u6ce8\u91ca\u80fd\u591f\u5e2e\u52a9\u81ea\u5df1\u6216\u4ed6\u4eba\u5feb\u901f\u7406\u89e3\u548c\u91cd\u7528\u7a0b\u5e8f\u6216\u4ee3\u7801\u5757\uff0c\u63d0\u5347\u7f16\u7a0b\u7684\u6548\u7387\u548c\u80fd\u529b\u3002","title":"2.4.3 \u8ba1\u7b97\u8eab\u4f53\u8d28\u91cf\u6307\u6570"},{"location":"02-base/#25","text":"","title":"2.5 \u53d8\u91cf\u7b80\u4ecb"},{"location":"02-base/#251","text":"\u4ec5\u4ec5\u4f7f\u7528\u5b57\u9762\u610f\u4e49\u4e0a\u7684 70\u30011.82 \u8fd9\u4e9b\u6570\u5b57\u5f88\u5feb\u5c31\u4f1a\u5f15\u53d1\u70e6\u607c\uff0c\u6bd4\u5982\u5f53\u8bfb\u8005\u4e0e\u670b\u53cb\u7684 BMI \u8fdb\u884c\u6bd4\u8f83\u65f6\uff0c\u4f1a\u5f88\u5feb\u5bf9\u8f93\u5165\u6570\u5b57\u611f\u5230\u70e6\u7410\uff0c\u751a\u81f3\u5bf9\u7f16\u5199\u7a0b\u5e8f\u5931\u53bb\u5174\u8da3\u3002\u53e6\u5916\uff0c\u4e00\u65e6\u64cd\u4f5c\u6d89\u53ca\u8f83\u591a\u7684\u8fd0\u7b97\u7b26\uff0c\u5b83\u6240\u5c55\u73b0\u7684\u610f\u601d\u5df2\u7ecf\u4e0d\u90a3\u4e48\u660e\u663e\u4e86\u3002 In [9]: # \u4e0e\u670b\u53cb\u6bd4\u8f83 BMI \u6307\u6570 In [10]: 70 / 1.82 ** 2 Out[10]: 21.132713440405748 In [11]: 48 / 1.64 ** 2 Out[11]: 17.846519928613922 In [12]: 70 / 1.82 ** 2 - 48 / 1.64 ** 2 Out[12]: 3.2861935117918257 \u6211\u4eec\u9700\u8981\u4e00\u79cd\u65e2\u53ef\u4ee5\u50a8\u5b58\u4fe1\u606f\uff0c\u53c8\u53ef\u4ee5\u5bf9\u5b83\u4eec\u8fdb\u884c\u64cd\u4f5c\u7684\u65b9\u6cd5\u3002\u8fd9\u6b63\u662f\u53d8\u91cf\u5b58\u5728\u7684\u610f\u4e49\u3002\u53d8\u91cf\u662f\u4e00\u79cd\u8fd9\u6837\u7684\u4e1c\u897f\u2014\u2014\u5b83\u4eec\u7684\u503c\u53ef\u4ee5\u53d8\u5316\uff0c\u56e0\u800c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528\u53d8\u91cf\u5b58\u50a8\u4efb\u4f55\u4fe1\u606f\uff0c\u5982\u8eab\u9ad8\u3001\u4f53\u91cd\u3001\u65e5\u671f\u3001\u5929\u6c14\u60c5\u51b5\u3001\u624b\u673a\u53f7\u7801\u7b49\u7b49\u3002\u53d8\u91cf\u672c\u8eab\u53ea\u662f\u8ba1\u7b97\u673a\u4e2d\u5b58\u50a8\u4fe1\u606f\u7684\u4e00\u90e8\u5206\u5185\u5b58\uff0c\u4e3a\u4e86\u8bbf\u95ee\u5b83\u5b58\u50a8\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u9700\u8981\u7ed9\u53d8\u91cf\u547d\u540d\u3002\u800c\u5c06\u4fe1\u606f\uff08\u6570\u636e\uff09\u5b58\u4e3a\u53d8\u91cf\u7684\u64cd\u4f5c\uff0c\u79f0\u4e3a\u8d4b\u503c\u3002 \u4f8b\u5982\uff0c\u5c06\u8eab\u9ad8\u548c\u4f53\u91cd\u5b58\u50a8\u4e3a\u53d8\u91cf\uff1a In [13]: height = 1.82 In [14]: weight = 70 \u5176\u4e2d = \u662f\u8d4b\u503c\u64cd\u4f5c\u7b26\uff0c\u6ce8\u610f\uff0c\u5b83\u4e0d\u662f\u8868\u793a\u76f8\u7b49\uff01 height = 1.82 \u7684\u8bed\u4e49\u4e3a\uff1a\u5c06\u6570\u5b57 1.82 \u8d4b\u503c\u7ed9\u53d8\u91cf height\u3002 \u53ef\u4ee5\u901a\u8fc7 print() \u51fd\u6570\u6216\u8005\u76f4\u63a5\u8f93\u5165\u53d8\u91cf\u540d\u6765\u8f93\u51fa\u53d8\u91cf\u4fdd\u5b58\u7684\u4fe1\u606f\uff1a In [15]: print(height) Out[15]: 1.82 In [16]: print(weight) Out[16]: 70 In [17]: height Out[17]: 1.82 In [18]: weight Out[18]: 70 \u56e0\u800c\u4e0e\u670b\u53cb\u6bd4\u8f83 BMI \u6307\u6570\u53ef\u4ee5\u5199\u4e3a\uff1a In [19]: myBMI = 70 / 1.82 ** 2 # \u6211\u7684 BMI In [20]: friendBMI = 48 / 1.64 ** 2 # \u670b\u53cb\u7684 BMI In [21]: myBMI - friendBMI # \u6211\u4e0e\u670b\u53cb\u7684 BMI \u503c\u7684\u5dee\u5f02 Out[21]: 3.2861935117918257","title":"2.5.1 \u4ec0\u4e48\u662f\u53d8\u91cf"},{"location":"02-base/#252","text":"\u53d8\u91cf\u7684\u547d\u540d\u9700\u8981\u9075\u5faa\u4e0b\u5217\u7684\u89c4\u5219\uff1a \u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f\u5b57\u6bcd\u8868\u4e2d\u7684\u5b57\u6bcd\uff08\u5927\u5199\u6216\u5c0f\u5199\uff09\u6216\u8005\u4e00\u4e2a\u4e0b\u5212\u7ebf _ \u3002 \u5176\u4ed6\u90e8\u5206\u53ef\u4ee5\u7531\u5b57\u6bcd\uff08\u5927\u5199\u6216\u5c0f\u5199\uff09\u3001\u4e0b\u5212\u7ebf _ \u6216\u6570\u5b57\uff080~9\uff09\u7ec4\u6210\u3002 \u53d8\u91cf\u540d\u79f0\u662f\u5927\u5c0f\u5199\u654f\u611f\u7684\u3002\u4f8b\u5982\uff0cmyname \u548c myName \u4e0d\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\u3002\u6ce8\u610f\u524d\u8005\u4e2d\u7684\u5c0f\u5199 n \u548c\u540e\u8005\u4e2d\u7684\u5927\u5199 N\u3002 i\u3001__my_name\u3001name_23 \u548c a1b2_c3\u662f\u6709\u6548\u7684\u53d8\u91cf\u540d\u79f0\u30022things\u3001this is spaced out \u548c my-name \u662f\u65e0\u6548\u7684\u53d8\u91cf\u540d\u79f0\u3002 \u4e0b\u9762\u4e3e\u4e2a\u4ee3\u7801\uff1a In [22]: __myName = \"ShixiangWang\" In [23]: my-name = \"ShixiangWang\" File \"<ipython-input-23-1b106abe1308>\", line 1 my-name = \"ShixiangWang\" ^ SyntaxError: can't assign to operator \u7ed9\u53d8\u91cf\u547d\u540d\u662f\u7f16\u7a0b\u7684\u57fa\u7840\u3002\u65b0\u624b\u5f80\u5f80\u5728\u5904\u7406\u7b80\u5355\u95ee\u9898\u65f6\u5f80\u5f80\u4f1a\u9009\u62e9 a\u3001b\u3001c \u8fd9\u6837\u7684\u540d\u5b57\uff0c\u82e5\u6709\u591a\u7ec4\u53d8\u91cf\uff0c\u53ef\u80fd\u8fd8\u4f1a\u4f7f\u7528 a1\u3001a2\u3001a3 \u8fd9\u6837\u7684\u65b9\u5f0f\u547d\u540d\u3002\u8fd9\u6837\u7b80\u5355\u7684\u547d\u540d\u65b9\u5f0f\u662f\u4e0d\u63a8\u8350\u7684\uff0c\u53d8\u91cf\u7684\u540d\u5b57\u5e94\u8be5\u5177\u6709\u975e\u5e38\u6e05\u6670\u7684\u542b\u4e49\u3002\u5bf9\u4e8e\u6211\u4eec\u73b0\u5b9e\u4e2d\u7684\u4e8b\u7269\uff0c\u5982\u5c0f\u72d7\uff0c\u6211\u4eec\u7ed9\u5c0f\u72d7\u53d6\u4e00\u4e2a\u597d\u540d\u5b57\u56fa\u7136\u91cd\u8981\uff0c\u4f46\u5b83\u5e76\u4e0d\u4f1a\u6539\u53d8\u5c0f\u72d7\u672c\u8eab\u3002\u4f46\u53d8\u91cf\u4e0d\u662f\u8fd9\u6837\u7684\uff0c\u53d8\u91cf\u548c\u53d8\u91cf\u540d\u672c\u8d28\u4e0a\u662f\u540c\u4e00\u4e2a\u4e8b\u7269\uff0c\u56e0\u6b64\uff0c\u53d8\u91cf\u7684\u597d\u4e0e\u574f\u5c31\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u5b83\u7684\u547d\u540d\u7684\u597d\u4e0e\u574f\u3002 \u8bfb\u8005\u60f3\u8981\u83b7\u5f97\u597d\u7684\u53d8\u91cf\u540d\uff0c\u6ce8\u610f\u5982\u4e0b\u4e8b\u9879\uff1a \u9996\u5148\u9700\u8981\u8003\u8651\u7684\u4e8b\u9879\u662f\uff0c\u8be5\u53d8\u91cf\u540d\u8981\u5b8c\u5168\u3001\u51c6\u786e\u5730\u63cf\u8ff0\u51fa\u8be5\u53d8\u91cf\u6240\u4ee3\u8868\u7684\u4e8b\u7269\u3002 \u4e00\u4e2a\u597d\u7684\u53d8\u91cf\u540d\u901a\u5e38\u8868\u8fbe\u7684\u662f \u4ec0\u4e48 \uff08what\uff09\uff0c\u800c\u4e0d\u662f \u5982\u4f55 \uff08how\uff09\u3002\u901a\u5e38\u800c\u8a00\uff0c\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u540d\u53cd\u6620\u4e86\u8ba1\u7b97\u7684\u67d0\u4e9b\u65b9\u9762\u800c\u4e0d\u662f\u95ee\u9898\u672c\u8eab\uff0c\u90a3\u4e48\u5b83\u53cd\u6620\u7684\u5c31\u662f \u5982\u4f55 \uff0c\u800c\u975e \u4ec0\u4e48 \u3002\u4f8b\u5982\uff0c\u540c\u6837\u4e00\u4e2a\u547d\u540d\uff0ccalcVal \u6bd4 sum \u66f4\u504f\u5411\u4e8e \u5982\u4f55 \uff0c\u56e0\u6b64\u4e0d\u63d0\u5021\u3002 \u9002\u5408\u7684\u53d8\u91cf\u540d\u957f\u5ea6\uff1a10~16 \u5b57\u7b26\u4e4b\u95f4\u3002\u4f46\u66f4\u91cd\u8981\u7684\u662f\u957f\u5ea6\u548c\u6e05\u6670\u5ea6\u4e4b\u95f4\u7684\u5e73\u8861\uff0c\u901a\u5e38\u8f83\u77ed\u7684\u540d\u79f0\u9002\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf\u6216\u8005\u5faa\u73af\u53d8\u91cf\uff0c\u8f83\u957f\u7684\u540d\u79f0\u9002\u7528\u4e8e\u5f88\u5c11\u7528\u5230\u7684\u53d8\u91cf\u6216\u8005\u5168\u5c40\u53d8\u91cf\uff08\u5168\u5c40\u53d8\u91cf\u4e0e\u5c40\u90e8\u53d8\u91cf\u4f1a\u5728\u540e\u9762\u7684\u7ae0\u8282\u4ecb\u7ecd\uff09\u3002 \u53d8\u91cf\u4e2d\u7684\u8ba1\u7b97\u503c\u9650\u5b9a\u8bcd\uff1a\u8868\u793a\u8ba1\u7b97\u7ed3\u679c\u7684\u8bcd\uff0c\u5982\u603b\u989d\u3001\u5e73\u5747\u503c\u3001\u6700\u5927\u503c\u3001\u7b49\u7b49\uff0c\u5982\u679c\u8bfb\u8005\u8981\u7528\u7c7b\u4f3c\u4e8e Total\u3001Sum\u3001Average\u3001Max\u3001Min\u3001Record \u8fd9\u6837\u7684\u9650\u5b9a\u8bcd\u6765\u4fee\u9970\u67d0\u4e2a\u540d\u79f0\uff0c\u90a3\u4e48\u53ef\u4ee5\u628a\u9650\u5b9a\u8bcd\u52a0\u5230\u540d\u5b57\u7684\u6700\u540e\uff0c\u5982 revenueTotal\u3001expenseAverage \u7b49\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u5c06\u4e3a\u8fd9\u4e00\u53d8\u91cf\u8d4b\u4e88\u4e3b\u8981\u542b\u4e49\u7684\u90e8\u5206\u653e\u5230\u6700\u524d\u9762\uff0c\u63d0\u9ad8\u53ef\u8bfb\u6027\u3002 \u4e0a\u8ff0\u662f\u5bf9\u300a\u4ee3\u7801\u5927\u5168\u300b\u4e2d \u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u597d\u7684\u53d8\u91cf\u540d \u90e8\u5206\u7684\u5f52\u7eb3\uff0c\u8bfb\u8005\u5728\u5f00\u59cb\u65f6\u5e76\u4e0d\u4e00\u5b9a\u80fd\u5b8c\u5168\u7406\u89e3\u548c\u719f\u7ec3\u4f7f\u7528\u5b83\uff0c\u4f46\u9700\u8981\u8bb0\u4f4f\u4e00\u4e2a\u601d\u60f3\uff1a\u7ed9\u53d8\u91cf\u547d\u540d\u662f\u4e00\u4ef6\u975e\u5e38\u91cd\u8981\u7684\u4e8b\u60c5\u3002\u5728\u884c\u52a8\u4e0a\uff0c\u6bcf\u6b21\u5bf9\u53d8\u91cf\u547d\u540d\u540e\u5e94\u5f53\u6709\u610f\u8bc6\u5730\u601d\u8003\u4e00\u4e0b\u8be5\u540d\u5b57\u662f\u5426\u80fd\u51c6\u786e\u5730\u63cf\u8ff0\u51fa\u53d8\u91cf\u6240\u4ee3\u8868\u7684\u4e8b\u7269\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u9700\u8981\u91cd\u65b0\u53d6\u4e00\u4e2a\u65b0\u7684\u540d\u5b57\u3002\u5173\u4e8e\u53d8\u91cf\u7684\u547d\u540d\uff0c\u672c\u4e66\u63a8\u8350\u4e00\u4e2a\u534f\u52a9\u5de5\u5177\u2014\u2014CODELF\uff08 http://unbug.github.io/codelf/ \uff09\u3002","title":"2.5.2 \u53d8\u91cf\u7684\u547d\u540d"},{"location":"02-base/#26","text":"\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f \uff0c\u8fd9\u662f 1984 \u5e74\u56fe\u7075\u5956\u7684\u83b7\u5f97\u8005 Niklaus E. Wirth \u9610\u8ff0\u7684\u4e00\u4e2a\u7ecf\u5178\u89c2\u70b9\u3002\u8f83\u4e3a\u6570\u636e\u7684\u7ed3\u6784\u5e38\u5e38\u7531\u591a\u4e2a\u6570\u636e\u7c7b\u578b\u7ec4\u6210\uff0c\u5176\u4e2d\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u4e0e\u5e03\u5c14\u503c\u662f Python \u57fa\u672c\u7684\u5185\u7f6e\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u4eec\u662f\u6570\u636e\u8868\u8fbe\u3001\u5b58\u50a8\u7684\u57fa\u7840\u3002\u800c Python \u4e2d\u5176\u4ed6\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982\u4e0b\u4e00\u7ae0\u4f1a\u5b66\u4e60\u548c\u4f7f\u7528\u7684\u5217\u8868\uff0c\u662f\u57fa\u4e8e\u8fd9 3 \u79cd\u6570\u636e\u7c7b\u578b\u7684\u7ec4\u5408\u6784\u5efa\u7684\u65b0\u7c7b\u578b\u3002","title":"2.6 \u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"02-base/#261","text":"\u5728 Python \u4e2d\uff0c\u6570\u5b57\u5305\u62ec 4 \u79cd\u7c7b\u578b\uff1a\u6574\u6570\u3001\u957f\u6574\u6570\u3001\u6d6e\u70b9\u6570\u548c\u590d\u6570\u3002 \u6b64\u5904\u6240\u6307\u7684\u6574\u6570\u548c\u6570\u5b66\u4e2d\u7684\u6574\u6570\u662f\u5bf9\u5e94\u7684\uff0c\u5982 1\u30012\u30013\u30014 \u7b49\u3002 \u957f\u6574\u6570\u662f\u6307\u5927\u4e00\u4e9b\u7684\u6574\u6570\u3002 3.23 \u548c 5E-4 \u662f\u6d6e\u70b9\u6570\u7684\u4f8b\u5b50\u3002E \u6807\u8bb0\u8868\u793a 10 \u7684\u5e42\uff0c\u662f\u4e00\u79cd\u79d1\u5b66\u8ba1\u6570\u6cd5\u3002\u5728\u8fd9\u91cc\uff0c5E-4 \u8868\u793a 5 \u4e58\u4ee5 10 \u7684 -4 \u6b21\u65b9\uff0c\u5373 0.0005\u3002 (-5+4j) \u548c (2.3-4.6j) \u662f\u590d\u6570\u7684\u4f8b\u5b50\u3002","title":"2.6.1 \u6570\u5b57"},{"location":"02-base/#262","text":"\u5b57\u7b26\u4e32\u662f\u5b57\u7b26\u7684\u5e8f\u5217\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u4e00\u4e32\u5b57\u6bcd\u3001\u6570\u5b57\u6216\u7b26\u53f7\u7684\u7ec4\u5408\u3002 \u4e0b\u9762\u5217\u51fa\u5b57\u7b26\u4e32\u7684\u4f7f\u7528\u65b9\u6cd5\u3002 \u53ef\u4ee5\u4f7f\u7528\u82f1\u6587\u5355\u5f15\u53f7 \u2018\u2019 \u6307\u793a\u5b57\u7b26\u4e32\uff0c\u5982 \u2018Quote me on this\u2019 \u3002\u6240\u6709\u7684\u7a7a\u767d\uff0c\u5305\u62ec\u7a7a\u683c\u548c\u5236\u8868\u7b26\u90fd\u7167\u539f\u6837\u4fdd\u7559\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528\u53cc\u5f15\u53f7 \u201c\u201d \u6765\u6307\u5b9a\u5b57\u7b26\u4e32\uff0c\u5b83\u7684\u65b9\u5f0f\u4e0e\u82f1\u6587\u5355\u5f15\u53f7\u4e2d\u7684\u5b57\u7b26\u4e32\u7684\u4f7f\u7528\u5b8c\u5168\u76f8\u540c\uff0c\u5982 \u201cWhat\u2019s your name?\u201d \u3002 \u5229\u7528\u4e09\u5f15\u53f7 \u2018\u2019\u2018 \u6216 \u201c\u201d\u201d \u53ef\u4ee5\u6307\u793a\u4e00\u4e2a\u591a\u884c\u7684\u5b57\u7b26\u4e32\u3002\u8bfb\u8005\u53ef\u4ee5\u5728\u4e09\u5f15\u53f7\u4e2d\u81ea\u7531\u5730\u4f7f\u7528\u82f1\u6587\u5355\u5f15\u53f7\u548c\u82f1\u6587\u53cc\u5f15\u53f7\u3002\u4f8b\u5982\uff1a python '''This is a multi-line string. This is the first line. This is the second line. \"What's your name?,\" I asked. He said \"Bond, James Bond.\" '''","title":"2.6.2 \u5b57\u7b26\u4e32"},{"location":"02-base/#263","text":"\u4efb\u4f55\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u90fd\u4f1a\u5b58\u5728\u5e03\u5c14\u7c7b\u578b\uff0c\u7528\u6765\u8868\u793a \u771f \u548c \u5047 \u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u56e0\u4e3a\u8ba1\u7b97\u673a\u7684\u57fa\u7840\u662f\u4e8c\u8fdb\u5236\uff0c\u800c\u4e14\u6211\u4eec\u4eba\u7c7b\u5bf9\u4e8e\u4e8b\u7269\u7684\u57fa\u672c\u5224\u65ad\u4e5f\u662f\u4e8c\u5143\u7684\uff0c\u5f80\u5f80\u4e0d\u662f \u771f \u5c31\u662f \u5047 \u3002 \u5728 Python\u4e2d\uff0cTrue \u4ee3\u8868 \u771f \uff0cFalse \u4ee3\u8868 \u5047 \u3002\u6ce8\u610f\uff0cPython \u662f\u5927\u5c0f\u5199\u654f\u611f\u7684\u8bed\u8a00\uff0cfalse \u4e0d\u7b49\u540c\u4e8e False\u3002","title":"2.6.3 \u5e03\u5c14\u503c"},{"location":"02-base/#264","text":"\u4e0a\u6587\u5df2\u7ecf\u4ecb\u7ecd\u4e86 Python \u7684 3 \u4e2a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u90a3\u4e48\u5728\u5b9e\u9645\u7684\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u8bfb\u8005\u8be5\u5982\u4f55\u77e5\u9053\u67d0\u4e2a\u53d8\u91cf\u662f\u54ea\u4e00\u79cd\u7c7b\u578b\u5462\uff1f \u4f8b\u5982\uff0c\u6709\u4e0b\u5217\u8fdb\u884c\u8d4b\u503c\u76844\u4e2a\u53d8\u91cf\uff1a In [45]: type1 = 1 In [46]: type2 = 1.0 In [47]: type3 = \"1\" In [48]: type4 = True \u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 type() \u51fd\u6570\u67e5\u770b\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982\u4e0b\u6240\u793a\uff1a In [49]: type(type1) Out[49]: int In [50]: type(type2) Out[50]: float In [51]: type(type3) Out[51]: str In [52]: type(type4) Out[52]: bool \u7ed3\u679c\u4e2d\u7684 int\u3001str \u4e0e bool \u5206\u522b\u662f integer\uff08\u6574\u6570\uff09\u3001string\uff08\u5b57\u7b26\u4e32\uff09\u4e0e boolean\uff08\u5e03\u5c14\u503c\uff09\u7684\u7f29\u5199\u3002","title":"2.6.4 \u67e5\u770b\u6570\u636e\u7c7b\u578b"},{"location":"02-base/#27","text":"\u4e0a\u4e00\u8282\u4ecb\u7ecd\u4e86 Python \u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u9664\u4e86\u6570\u5b66\u8fd0\u7b97\uff0c\u672c\u4e66\u8fd8\u6ca1\u6709\u5b9e\u9645\u6f14\u793a\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u662f\u5982\u4f55\u64cd\u4f5c\u7684\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\u5982\u4f55\u76f8\u4e92\u8f6c\u6362\u548c\u914d\u5408\u4f7f\u7528\u3002","title":"2.7 \u6570\u636e\u8fd0\u7b97"},{"location":"02-base/#271","text":"\u8bfb\u8005\u5df2\u7ecf\u77e5\u9053\u6570\u5b57 1+1 \u7684\u7ed3\u679c\u662f\u5b83\u4eec\u7684\u548c\uff0c\u90a3\u4e48\u5b57\u7b26 \u20181\u2019+\u20181\u2019 \u7684\u7ed3\u679c\u53c8\u662f\u4ec0\u4e48\u5462\uff1f In [2]: '1' + '1' Out[2]: '11' \u4e0a\u8ff0\u4ee3\u7801\u4e2d + \u53f7\u53ef\u4ee5\u5c06\u4e24\u4e2a\u5b57\u7b26\u8fdb\u884c\u8fde\u63a5\uff01\u5982\u679c\u8bfb\u8005\u60f3\u5c1d\u8bd5\u4e0b\u51cf\u53f7\uff0c\u90a3\u4e48\u53ef\u80fd\u4f1a\u6709\u70b9\u5931\u671b\u2014\u2014\u5b83\u5e76\u4e0d\u80fd\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u53bb\u9664\u53e6\u4e00\u4e2a\u5b57\u7b26\uff1a In [3]: '1' - '1' --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-3-3f89fba82f3e> in <module>() ----> 1 '1' - '1' TypeError: unsupported operand type(s) for -: 'str' and 'str' \u53ef\u662f\uff0c\u4e3a\u4ec0\u4e48 + \u65e2\u53ef\u4ee5\u6c42\u6570\u5b57\u7684\u548c\uff0c\u53c8\u80fd\u8fde\u63a5\u5b57\u7b26\u5462\uff1f \u4e3a\u4e86\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\uff0c\u8fd9\u91cc\u5fc5\u987b\u63d0\u5230\u4e00\u4e2a\u79f0\u4e3a\u6cdb\u578b\u7684\u6982\u5ff5\uff0c\u76f4\u89c2\u7684\u7406\u89e3\uff0c\u5c31\u662f\u4e00\u4e2a\u9ed1\u7bb1\u5b50\u3002\u4f8b\u5982\uff0c1+1 \u548c \u20181\u2019+\u20181\u2019 \u4f7f\u7528\u7684 + \u53f7\u867d\u7136\u4ece\u5916\u8868\u770b\u90fd\u662f\u76f8\u540c\u7684\u7b26\u53f7\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u4f1a\u6839\u636e\u4e0d\u540c\u7684\u8f93\u5165\u6570\u636e\u7c7b\u578b\uff08\u5982\u6570\u5b57\u3001\u5b57\u7b26\uff09\u6267\u884c\u51fd\u6570\u5185\u90e8\u4e0d\u540c\u7684\u4ee3\u7801\u8bed\u53e5\u3002","title":"2.7.1 \u52a0\u53f7\u4e0e\u9ed1\u7bb1\u5b50"},{"location":"02-base/#272","text":"\u8bfb\u8005\u5df2\u7ecf\u77e5\u9053\u901a\u8fc7 type() \u51fd\u6570\u53ef\u4ee5\u5224\u65ad \u20181\u2019 \u662f\u5b57\u7b26 1 \u8fd8\u662f\u6570\u5b57 1\uff0c\u4f46\u8be5\u600e\u4e48\u5c06\u5b57\u7b26 1 \u53d8\u6210\u6570\u5b57 1 \u5462\uff1f\u5c31\u662f\u5c06 str \u7c7b\u578b\u8f6c\u6362\u4e3a int \u7c7b\u578b\u3002Python \u6709\u76f8\u5e94\u7684\u51fd\u6570\u53ef\u4ee5\u5b8c\u6210\u7c7b\u578b\u8f6c\u6362\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7b2c\u4e8c\u6761\u8bed\u53e5\u4e2d\u4f7f\u7528 int() \u51fd\u6570\u5c06\u5b57\u7b26 1 \u8f6c\u6362\u4e3a\u4e86\u6574\u6570 1\u3002 In [8]: type('1') Out[8]: str In [9]: type(int('1')) Out[9]: int \u6ce8\u610f\uff0c\u5b57\u7b26\u4e32\u4e0e\u6570\u5b57\u4e0d\u80fd\u591f\u8fdb\u884c\u8fde\u63a5 + \u64cd\u4f5c\uff0c\u5fc5\u987b\u5c06\u4e00\u65b9\u7684\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u65b9\u7684\u7c7b\u578b\uff0c\u4e0d\u7136\u4f1a\u629b\u51fa\u8bed\u6cd5\u9519\u8bef\u3002 In [10]: \"\u6211\u7684\u8bed\u6587\u548c\u6570\u5b66\u6210\u7ee9\u4e4b\u548c\u662f \" + 199 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-10-17fa10d93550> in <module>() ----> 1 \"\u6211\u7684\u8bed\u6587\u548c\u6570\u5b66\u6210\u7ee9\u4e4b\u548c\u662f \" + 199 TypeError: must be str, not int In [11]: \"\u6211\u7684\u8bed\u6587\u548c\u6570\u5b66\u6210\u7ee9\u4e4b\u548c\u662f \" + str(199) Out[11]: '\u6211\u7684\u8bed\u6587\u548c\u6570\u5b66\u6210\u7ee9\u4e4b\u548c\u662f 199' \u8fd9\u91cc\u4f7f\u7528 str() \u5c06\u6570\u5b57199\u5f3a\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\u3002\u76f8\u4f3c\u7684\u51fd\u6570\u6709 int()\u3001float() \u4ee5\u53ca bool()\u3002","title":"2.7.2 \u7c7b\u578b\u8f6c\u6362"},{"location":"02-base/#273","text":"Python \u5e38\u7528\u7684\u5185\u7f6e\u64cd\u4f5c\u7b26\u5305\u62ec\u7b97\u672f\u8fd0\u7b97\u64cd\u4f5c\u7b26\u3001\u5b57\u7b26\u4e32\u64cd\u4f5c\u7b26\u3001\u6bd4\u8f83\u64cd\u4f5c\u7b26\u4e0e\u5e03\u5c14\u903b\u8f91\u64cd\u4f5c\u7b26\uff0c\u5b83\u4eec\u6c47\u603b\u5982\u4e0b\uff0c\u5e76\u7ed9\u51fa\u4e86\u4e00\u4e9b\u7b80\u5355\u7684\u5b9e\u4f8b\uff0c\u8bfb\u8005\u53ef\u81ea\u884c\u8fd0\u884c\u793a\u4f8b\u5e76\u4ed4\u7ec6\u4f53\u4f1a\u3002 1\uff09\u7b97\u672f\u64cd\u4f5c\u7b26\uff1a 9 + 2 # \u52a0 9 - 2 # \u51cf 9 * 2 # \u4e58 9 / 2 # \u9664\uff08\u6d6e\u70b9\u8f93\u51fa\uff09 9 //2 # \u6574\u9664 9 % 2 # \u6c42\u4f59 9 **2 # \u5e42 2\uff09\u5b57\u7b26\u4e32\u64cd\u4f5c\u7b26\uff1a '\u8fd9\u662f\u4e00\u4e2a' + '\u5b57\u7b26\u4e32' # \u5b57\u7b26\u4e32\u8fde\u63a5 '\u8fd9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32' * 5 # \u5b57\u7b26\u4e32\u91cd\u590d 3\uff09\u6bd4\u8f83\u64cd\u4f5c\u7b26\uff1a 5 == 4 # \u7b49\u4e8e 5 > 4 # \u5927\u4e8e 5 < 4 # \u5c0f\u4e8e 5 != 4 # \u4e0d\u7b49\u4e8e 5 >= 4 # \u5927\u4e8e\u6216\u7b49\u4e8e 5 <= 4 # \u5c0f\u4e8e\u6216\u7b49\u4e8e 4\uff09\u5e03\u5c14\u903b\u8f91\u64cd\u4f5c\u7b26\uff1a True and True # \u903b\u8f91\u201c\u4e0e\u201d True or False # \u903b\u8f91\u201c\u6216\u201d not False # \u903b\u8f91\u201c\u975e\u201d","title":"2.7.3 \u8fd0\u7b97\u7b26\u6c47\u603b"},{"location":"02-base/#28","text":"\u4f5c\u4e3a\u4ecb\u7ecd Python \u8bed\u6cd5\u77e5\u8bc6\u7684\u7b2c\u4e00\u4e2a\u7ae0\u8282\uff0c\u672c\u7ae0\u8be6\u7ec6\u4ecb\u7ecd\u4e86 Python \u4e24\u79cd\u89e3\u91ca\u5668\u3001\u6700\u4e3a\u57fa\u7840\u7684\u8bed\u6cd5\u3001\u7b97\u672f\u64cd\u4f5c\u3001\u903b\u8f91\u64cd\u4f5c\u4ee5\u53ca Python \u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\u2014\u2014\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u4e0e\u5e03\u5c14\u503c\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u672c\u7ae0\u7b80\u5355\u4ecb\u7ecd\u4e86 Notebook \u7684\u57fa\u672c\u6982\u5ff5\u548c\u64cd\u4f5c\u3002\u65e0\u8bba\u8bfb\u8005\u662f\u76f4\u63a5\u4f7f\u7528 Jupyter Notebook\uff08\u672c\u5730/\u8fdc\u7a0b\u6d4f\u89c8\u5668\uff09\u8fd8\u662f\u4f7f\u7528 nteract\uff08\u672c\u5730\u8f6f\u4ef6\uff09\uff0cNotebook \u64cd\u4f5c\u5927\u540c\u5c0f\u5f02\uff0c\u8bfb\u8005\u9700\u8981\u591a\u52a0\u7ec3\u4e60\u8fdb\u884c\u638c\u63e1\u3002 \u672c\u7ae0\u5185\u5bb9\u867d\u7cbe\u672a\u5fc5\u5168\uff0c\u4e00\u4e9b\u504f\u50fb\u7684\u77e5\u8bc6\u70b9\u672a\u80fd\u4e00\u4e00\u4ecb\u7ecd\uff0c\u8bfb\u8005\u5728\u5b66\u4e60\u672c\u4e66\u4e4b\u4f59\u53ef\u53c2\u8003\u7f51\u7edc\u77e5\u8bc6\u8f85\u52a9\u5b66\u4e60\u3002","title":"2.8 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"03-data-structure/","text":"\u7b2c 3 \u7ae0 \u57fa\u672c\u6570\u636e\u7ed3\u6784 \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a \u5217\u8868\u53ca\u64cd\u4f5c \u5143\u7ec4\u53ca\u64cd\u4f5c \u5b57\u5178\u53ca\u64cd\u4f5c \u96c6\u5408\u7b80\u4ecb \u672c\u4e66\u5728\u4e0a\u4e00\u7ae0\u4ecb\u7ecd\u4e86\u6570\u5b57\uff08\u6574\u6570\u3001\u6d6e\u70b9\u6570\uff09\u3001\u903b\u8f91\u503c\u548c\u5b57\u7b26\u4e32\u7b49 Python \u5185\u7f6e\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002\u5728\u5b9e\u9645\u7684\u64cd\u4f5c\u4e2d\uff0c\u5982\u679c\u4ec5\u4ec5\u4f9d\u8d56\u5b83\u4eec\u5f88\u96be\u9ad8\u6548\u5730\u5b8c\u6210\u590d\u6742\u7684\u6570\u636e\u5904\u7406\u4efb\u52a1\u3002\u57fa\u4e8e\u5bf9\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u6784\u5efa\uff0cPython \u62d3\u5c55\u51fa\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u4e0e\u96c6\u5408\u7b49\u66f4\u4e3a\u5b9e\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u7b80\u5316\u7a0b\u5e8f\u7684\u7f16\u5199\u4e0e\u4efb\u52a1\u7684\u5b9e\u73b0\u3002\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u5185\u7f6e\u4e8e Python\uff0c\u662f\u6570\u636e\u5206\u6790\u7ecf\u5e38\u8981\u64cd\u4f5c\u7684\u5bf9\u8c61\u3002\u672c\u7ae0\u6211\u4eec\u5c06\u5b66\u4e60\u8fd9\u51e0\u8005\u7684\u6982\u5ff5\uff0c\u5e76\u8be6\u7ec6\u4ecb\u7ecd\u5176\u64cd\u4f5c\u65b9\u6cd5\u3002 3.1 \u5217\u8868 \u00b6 \u5217\u8868\uff08list\uff09\u662f Python \u4e2d\u6700\u6709\u7528\u7684\u4e00\u79cd\u5185\u7f6e\u7c7b\u578b\uff0c\u662f\u5904\u7406\u4e00\u7ec4\u6709\u5e8f\u9879\u76ee\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6216\u8005\u8bf4\uff0c\u662f\u4e00\u4e2a\u6709\u5e8f\u5bf9\u8c61\u7684\u96c6\u5408\u3002\u901a\u4fd7\u5730\u7406\u89e3\uff0c\u5217\u8868\u5373\u5e8f\u5217\uff0c\u5b83\u662f\u4e00\u7cfb\u5217\u6570\u503c\u7684\u5e8f\u5217\u3002\u5728\u524d\u6587\u4ecb\u7ecd\u7684\u5b57\u7b26\u4e32\u4e2d\uff0c\u5b57\u7b26\u4e32\u5305\u542b\u7684\u503c\u662f\u4e00\u4e2a\u4e00\u4e2a\u5b57\u7b26\u3002\u800c\u5728\u5217\u8868\u4e2d\uff0c\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\u3002\u5217\u8868\u7684\u503c\u4e00\u822c\u4e5f\u79f0\u4e3a\u5217\u8868\u7684\u5143\u7d20\u3002\u5217\u8868\u7684\u5143\u7d20\u901a\u8fc7\u82f1\u6587\u9017\u53f7\u5206\u9694\uff0c\u5e76\u5305\u542b\u5728\u65b9\u62ec\u53f7\u5185\u3002 3.1.1 \u5217\u8868\u7684\u521b\u5efa \u00b6 \u4e0b\u9762\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5217\u8868\u5b58\u50a8\u82f1\u8bed\u4e2d\u7684 5 \u4e2a\u5143\u97f3\u5b57\u6bcd\uff1a In [1]: vowels = ['a', 'e', 'i', 'o', 'u'] In [2]: vowels Out[2]: ['a', 'e', 'i', 'o', 'u'] \u8bfb\u8005\u53ef\u4ee5\u4e0d\u6dfb\u52a0\u4efb\u4f55\u5143\u7d20\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u5217\u8868\uff1a In [3]: array_init = [] In [4]: array_init Out[4]: [] \u8bfb\u8005\u5982\u679c\u60f3\u8981\u63d0\u53d6\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u4f7f\u7528\u7d22\u5f15\u662f\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c06\u7d22\u5f15\u503c\u5199\u5728\u53d8\u91cf\u540d\u540e\u7684\u65b9\u62ec\u53f7\u5185\uff0c\u5982\u63d0\u53d6\u5217\u8868 vowels \u4e2d\u7684 i\uff1a In [5]: vowels[2] Out[5]: 'i' \u8fd9\u91cc\u4e3a\u4ec0\u4e48\u65b9\u62ec\u53f7\u5185\u586b\u5165\u7684\u662f 2 \u800c\u4e0d\u662f 3 \u8ddf Python \u7684\u7d22\u5f15\u673a\u5236\u6709\u5173\u2014\u2014Python \u7684\u7d22\u5f15\u662f\u4ece 0 \u5f00\u59cb\u7684\uff08\u5f53\u7136\u4e5f\u6709\u4ece 1 \u5f00\u59cb\u7d22\u5f15\u7684\u8bed\u8a00\uff0c\u6bd4\u5982\u6570\u636e\u5206\u6790\u4e2d\u4e5f\u975e\u5e38\u6d41\u884c\u7684 R \u8bed\u8a00\uff09\u3002 \u56e0\u6b64\u5217\u8868 vowels \u5143\u7d20\u4e0e\u5176\u7684\u7d22\u5f15\u4e4b\u95f4\u6709\u4ee5\u4e0b\u5bf9\u5e94\u5173\u7cfb\uff1a a e i o u 0 1 2 3 4 \u524d\u6587\u63d0\u5230\uff0c\u5217\u8868\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\uff0c\u56e0\u6b64\u5217\u8868\u53ef\u4ee5\u5d4c\u5957\u5217\u8868\u3002\u4f8b\u5982\uff0c\u8bfb\u8005\u53ef\u4ee5\u7528\u4ee5\u4e0b\u5217\u8868\u6765\u4f9d\u6b21\u8868\u793a\u4e24\u4e2a\u957f\u65b9\u5f62\u7684\u540d\u79f0\u3001\u9762\u79ef\u4e0e\u76f8\u5e94\u7684\u957f\u548c\u5bbd\uff1a In [7]: rectangle = ['\u957f\u65b9\u5f621', 20, [4, 5], '\u957f\u65b9\u5f622', 16, [4, 4]] In [8]: rectangle Out[8]: ['\u957f\u65b9\u5f621', 20, [4, 5], '\u957f\u65b9\u5f622', 16, [4, 4]] \u5982\u679c\u5217\u8868\u592a\u957f\uff0c\u4e0d\u65b9\u4fbf\u76f4\u63a5\u89c2\u5bdf\u5217\u8868\u7684\u957f\u5ea6\uff0c\u8bfb\u8005\u53ef\u4ee5\u5229\u7528 len() \u51fd\u6570\u8fdb\u884c\u8ba1\u7b97\u3002 In [9]: len(rectangle) Out[9]: 6 \u7ed3\u679c\u663e\u793a rectangle \u957f\u5ea6\u4e3a 6\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528\u7d22\u5f15\u503c 0 \u5230 5 \u63d0\u53d6 rectangle \u7684\u5143\u7d20\u3002\u518d\u6b21\u6ce8\u610f Python \u7d22\u5f15\u503c\u662f\u4ece 0 \u5f00\u59cb\u7684\uff0c\u5982\u679c\u4f7f\u7528\u7684\u7d22\u5f15\u503c\u8d85\u51fa\u754c\u9650\uff0cPython \u4f1a\u62a5\u9519\u63d0\u793a\u6211\u4eec\u4f7f\u7528\u7684\u5217\u8868\u7d22\u5f15\u8d85\u51fa\u8303\u56f4\u3002 In [10]: rectangle[6] --------------------------------------------------------------------------- IndexError Traceback (most recent call last) <ipython-input-10-6e16763c0048> in <module>() ----> 1 rectangle[6] IndexError: list index out of range \u9664\u4e86\u4ece\u5934\u521b\u5efa\u4e00\u4e2a\u5217\u8868\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 list() \u51fd\u6570\u5c06\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u5217\u8868\uff0c\u5982\u4e0b\u9762\u7684\u5b57\u7b26\u4e32\uff1a In [17]: aseq = \"atggctaggc\" In [18]: list(aseq) Out[18]: ['a', 't', 'g', 'g', 'c', 't', 'a', 'g', 'g', 'c'] 3.1.2 \u4fee\u6539\u5217\u8868\u5143\u7d20 \u00b6 \u548c\u5b57\u7b26\u4e32\u4e0d\u540c\uff0c\u5217\u8868\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u53ea\u9700\u8981\u5bf9\u6307\u5b9a\u7684\u5217\u8868\u5143\u7d20\u91cd\u65b0\u8d4b\u503c\u5373\u53ef\u3002 \u4f8b\u5982\uff0c\u7528\u4e00\u4e2a\u5217\u8868\u5b58\u50a8 10 \u4ee5\u5185\u7684\u5947\u6570\uff1a In [11]: odd_numbers = [1, 3, 5, 7, 8] \u5f53\u8bfb\u8005\u53d1\u73b0\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5199\u9519\u4e86\uff0c\u4e0d\u9700\u8981\u50cf\u4ee5\u4e0b\u91cd\u65b0\u521b\u5efa\u5217\u8868\u3002 In [12]: odd_numbers = [1, 3, 5, 7, 9] \u4e0a\u9762\u8bfb\u8005\u9700\u8981\u91cd\u65b0\u8f93\u5165\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5217\u8868\u6765\u7ea0\u6b63\u4e4b\u524d\u9519\u8bef\u7684\u8f93\u5165\uff0c\u4f46\u5176\u5b9e\u53ea\u9700\u8981\u4fee\u6539\u5199\u9519\u7684\u5143\u7d20\uff0c\u5373\u5229\u7528\u7d22\u5f15\u5bf9\u9519\u8bef\u7684\u5143\u7d20\u91cd\u65b0\u8d4b\u503c\u3002 In [13]: odd_numbers = [1, 3, 5, 7, 8] In [14]: odd_numbers[4] = 9 In [15]: odd_numbers Out[15]: [1, 3, 5, 7, 9] \u8bfb\u8005\u9664\u4e86\u4f7f\u7528\u81ea\u7136\u6570\u8fdb\u884c\u7d22\u5f15\u5143\u7d20\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u8d1f\u6574\u6570\u8fdb\u884c\u53cd\u5411\u7d22\u5f15\uff0c\u6bd4\u5982 odd_numbers[-1] \u4e5f\u5bf9\u5e94\u7740 9\uff1a In [16]: odd_numbers[-1] Out[16]: 9 \u6211\u4eec\u4f9d\u65e7\u53ef\u4ee5\u7528\u4e4b\u524d\u7684\u5217\u8868 vowels \u6765\u8868\u793a\u5217\u8868\u5143\u7d20\u4e0e\u53cd\u5411\u7d22\u5f15\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u5982\u4e0b\uff1a a e i o u -5 -4 -3 -2 -1 3.1.3 \u904d\u5386\u5217\u8868 \u00b6 \u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u5217\u8868\u5143\u7d20\u975e\u5e38\u591a\uff0c\u800c\u6211\u4eec\u60f3\u8981\u5bf9\u5217\u8868\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c\u6216\u53d8\u6362\uff0c\u96be\u9053\u8981\u4e00\u4e2a\u4e00\u4e2a\u5229\u7528\u7d22\u5f15\u53d6\u51fa\uff0c\u7136\u540e\u4fee\u6539\u5417\uff1f\u9010\u4e00\u8bbf\u95ee\u5217\u8868\u7684\u5143\u7d20\u79f0\u4e3a\u904d\u5386\u5217\u8868\u3002\u8fd9\u91cc\u9700\u8981\u521d\u6b65\u501f\u52a9\u4e0b\u4e00\u7ae0\u4ecb\u7ecd\u7684\u5faa\u73af\u6765\u89e3\u51b3\u7c7b\u4f3c\u7684\u95ee\u9898\u3002 \u5faa\u73af\u7684\u529b\u91cf\u5728\u4e8e\u5c06\u5355\u4e00\u67af\u71e5\u7684\u91cd\u590d\u6027\u5de5\u4f5c\u4ea4\u7ed9\u673a\u5668\u53bb\u5b9e\u73b0\uff0c\u800c\u8bfb\u8005\u53ea\u9700\u8981\u5173\u6ce8\u53bb\u6389\u5faa\u73af\u7684\u64cd\u4f5c\u672c\u8eab\u3002 \u6700\u5e38\u7528\u7684\u5faa\u73af\u7ed3\u6784\u662f for \u5faa\u73af\u3002\u5982\u679c\u9700\u8981\u9010\u4e00\u6253\u5370 10 \u4ee5\u5185\u7684\u5947\u6570\uff0c\u8bfb\u8005\u4e0d\u9700\u8981\u9010\u6b65\u4f7f\u7528 print() \u51fd\u6570\u6253\u5370\u5217\u8868\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u3002 print(odd_numbers[0]) print(odd_numbers[1]) print(odd_numbers[2]) print(odd_numbers[3]) print(odd_numbers[4]) \u8bfb\u8005\u53ea\u9700\u8981\u4e24\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5217\u8868\u7684\u904d\u5386\uff0c\u5982\u4e0b\u6240\u793a\uff1a In [24]: for i in odd_numbers: print(i) 1 3 5 7 9 \u8fd9\u91cc\u5217\u8868 odd_numbers \u4e2d\u5143\u7d20\u7684\u503c\u4f1a\u9010\u4e2a\u4f20\u7ed9 i\uff0c\u7136\u540e\u901a\u8fc7 print() \u51fd\u6570\u5c06i\u7684\u503c\u8f93\u51fa\u6253\u5370\u3002\u4f7f\u7528\u5faa\u73af\u9664\u4e86\u4ee3\u7801\u66f4\u6e05\u6670\u7b80\u6d01\uff0c\u53e6\u4e00\u4e2a\u597d\u5904\u662f\u8bfb\u8005\u4e0d\u9700\u8981\u77e5\u9053\u5217\u8868\u6709\u591a\u957f\uff01\u65e2\u7136 for \u5faa\u73af\u53ef\u4ee5\u904d\u5386\u5217\u8868\u4e2d\u6240\u6709\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u5982\u679c\u5143\u7d20\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5b83\u4f1a\u5bf9\u8fd9\u4e2a\u5217\u8868\u63a5\u7740\u904d\u5386\u5417\uff1f \u5047\u8bbe\u521b\u5efa\u4e00\u4e2a\u5217\u8868\u5b58\u50a8\u5c0f\u660e\u3001\u5c0f\u7ea2\u3001\u5c0f\u84dd3\u4e2a\u4eba\u8df3\u8fdc\u7684\u6210\u7ee9\u8bb0\u5f55\uff0c\u8868\u793a\u5982\u4e0b\uff1a In [26]: nested_list = ['\u8bb0\u5f55', 3, ['\u5c0f\u660e', '\u5c0f\u7ea2', '\u5c0f\u84dd'], [2.30, 2.41, 2.33]] \u4f7f\u7528 for \u5faa\u73af\u662f\u5c06\u8be5\u5217\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u4e00\u4e2a\u4e00\u4e2a\u8f93\u51fa\u5462\uff1f\u8fd8\u662f\u5176\u4ed6\u7684\u7ed3\u679c\uff1f In [27]: for i in nested_list: ...: print(i) ...: \u8bb0\u5f55 3 ['\u5c0f\u660e', '\u5c0f\u7ea2', '\u5c0f\u84dd'] [2.3, 2.41, 2.33] \u7ed3\u679c\u663e\u793a\uff1afor \u5faa\u73af\u5e76\u6ca1\u6709\u5c06\u5217\u8868\u6240\u6709\u5143\u7d20\u5355\u4e2a\u4f20\u5165\u53d8\u91cf i\uff0c\u800c\u662f\u5c06\u5217\u8868\u6700\u5916\u9762\u4e00\u5c42\u7684\u5143\u7d20\u4f20\u5165\u4e86\u53d8\u91cf i\u3002\u6253\u4e2a\u6bd4\u65b9\uff0c\u7b80\u5355\u7684\u5217\u8868\u50cf\u4e00\u5c42\u6d0b\u8471\uff0c\u800c\u5d4c\u5957\u4e86\u5217\u8868\u7684\u5217\u8868\u76f8\u5f53\u4e8e\u591a\u5c42\u7684\u6d0b\u8471\uff0cfor \u5faa\u73af\u5b83\u53ea\u8d1f\u8d23\u5265\u5f00\u4e00\u5c42\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u60f3\u5265\u5f00\u4f8b\u5b50\u4e2d\u7684\u4e24\u5c42\u6d0b\u8471 nested_list\uff0c\u8bfb\u8005\u9700\u8981\u4f7f\u7528\u4e24\u6b21 for \u5faa\u73af\u3002for \u5faa\u73af\u64cd\u4f5c\u548c\u4f7f\u7528\u672c\u4e66\u4e0b\u4e00\u7ae0\u4f1a\u8be6\u7ec6\u5730\u8fdb\u884c\u4ecb\u7ecd\u3002 3.1.4 \u5217\u8868\u64cd\u4f5c\u7b26 \u00b6 \u5217\u8868\u64cd\u4f5c\u7b26\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u4fbf\u5229\u5730\u64cd\u4f5c\u5217\u8868\uff0c\u6709\u65f6\u5019\u8bfb\u8005\u4f1a\u611f\u89c9\u4f7f\u7528\u5b83\u4eec\u5982\u540c\u4f7f\u7528\u6570\u503c\u7684\u52a0\u51cf\u4e58\u9664\u4e00\u6837\u7b80\u5355\u3002 + \u53f7 \u00b6 \u52a0\u53f7 + \u4e0d\u4ec5\u80fd\u7528\u4e8e\u6570\u5b57\u76f8\u52a0\uff0c\u5b57\u7b26\u8fde\u63a5\uff0c\u8fd8\u80fd\u7528\u4e8e\u5217\u8868\u7684\u62fc\u63a5\u3002 In [28]: a = [1, 2, 3] In [29]: b = [4, 5, 6] In [30]: a + b Out[30]: [1, 2, 3, 4, 5, 6] a + b \u7684\u7ed3\u679c\u662f\u5c06\u5217\u8868 b \u4e2d\u7684\u5143\u7d20\u62fc\u63a5\u5230\u4e86\u5217\u8868 a \u7684\u540e\u9762\uff0c\u751f\u6210\u4e86\u4e00\u4e2a\u65b0\u7684\u5217\u8868\u3002 \u5982\u679c\u4e24\u4e2a\u5217\u8868\u662f\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u8fd8\u80fd\u62fc\u63a5\u5417\uff1f In [31]: b = [4, 5, '6'] In [32]: a + b Out[32]: [1, 2, 3, 4, 5, '6'] \u4ee3\u7801\u8fd0\u884c\u7ed3\u679c\u8bf4\u660e\u662f\u53ef\u4ee5\u7684\uff0c\u5217\u8868\u5305\u5bb9\u4e07\u7269\uff0c\u800c\u542b\u4e0d\u540c\u6570\u636e\u7c7b\u578b\u5217\u8868\u62fc\u63a5\u53ea\u662f\u5c06\u5b83\u4eec \u653e \u5230\u4e86\u4e00\u8d77\uff0c\u5e76\u6ca1\u6709\u5176\u4ed6\u7279\u6b8a\u7684\u64cd\u4f5c\u3002 * \u53f7 \u00b6 \u661f\u53f7 * \u64cd\u4f5c\u7b26\u53ef\u4ee5\u5c06\u5217\u8868\u91cd\u590d\u6307\u5b9a\u7684\u6b21\u6570\uff0c\u5982\u4e0b\u6240\u793a\uff1a In [33]: a * 5 Out[33]: [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3] 3.1.5 \u5217\u8868\u5207\u7247 \u00b6 \u9664\u4e86\u4e0a\u4e00\u5c0f\u8282\u63d0\u5230\u7684 + \u64cd\u4f5c\u7b26\u4e0e * \u64cd\u4f5c\u7b26\uff0c\u5192\u53f7 : \u64cd\u4f5c\u7b26\u53ef\u4ee5\u5bf9\u5217\u8868\u6267\u884c\u5207\u7247\u64cd\u4f5c\u3002\u5207\u7247\u64cd\u4f5c\u662f\u5229\u7528\u5192\u53f7\u64cd\u4f5c\u7b26\u8fdb\u884c\u53d6\u5b50\u96c6\u7684\u8fc7\u7a0b\u3002\u56e0\u4e3a\u8be5\u64cd\u4f5c\u7b26\u7ecf\u5e38\u4f7f\u7528\uff0c\u6240\u4ee5\u5355\u5217\u4e00\u5c0f\u8282\u8fdb\u884c\u4ecb\u7ecd\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u5b58\u5728\u4e0b\u9762 1 \u4e2a\u5305\u542b 7 \u4e2a\u5b57\u6bcd\u7684\u5217\u8868\uff1a In [34]: letters7 = ['a', 'b', 'c', 'd', 'e', 'f', 'g'] \u8bfb\u8005\u5982\u679c\u53ea\u60f3\u8981 a\u3001b\u3001c\u3001d \u56db\u4e2a\u5b57\u6bcd\uff0c\u90a3\u4e48\u5207\u7247\u64cd\u4f5c\u5982\u4e0b\uff1a In [37]: you_want = letters7[0:4] In [38]: you_want Out[38]: ['a', 'b', 'c', 'd'] \u5217\u8868\u7d22\u5f15\u89c4\u5219\u662f start:stop:step\uff0c\u5176\u4e2d stop \u503c\u4e0d\u88ab\u5305\u542b\u5728\u5185\uff08\u5373\u533a\u95f4\u524d\u95ed\u540e\u5f00\uff09\u3002\u4e0a\u9762\u4ee3\u7801\u4e2d start \u5bf9\u5e94 0\uff08\u518d\u6b21\u63d0\u9192 Python \u7d22\u5f15\u4ece 0 \u5f00\u59cb\uff09\uff0cstop \u5bf9\u5e94 4\uff0c\u800c step \u9ed8\u8ba4\u4e3a 1\uff0c\u53ef\u4ee5\u7701\u7565\u3002 \u7406\u89e3\u4e86\u5207\u7247\u7684\u89c4\u5219\uff0c\u8bfb\u8005\u5c31\u53ef\u4ee5\u77e5\u9053\u4e0b\u9762\u7684\u64cd\u4f5c\u4f1a\u5f97\u5230\u4e00\u6837\u7684\u7ed3\u679c\u3002 In [39]: letters7[0:4:1] Out[39]: ['a', 'b', 'c', 'd'] \u7d22\u5f15\u7684\u8d77\u59cb\u4f4d\u7f6e\u4e5f\u53ef\u4ee5\u7701\u7565\uff0c\u9ed8\u8ba4\u4ece 0 \u5f00\u59cb\u3002 In [40]: letters7[:4] Out[40]: ['a', 'b', 'c', 'd'] \u7d22\u5f15\u7684\u7ec8\u6b62\u4f4d\u7f6e\u4e5f\u53ef\u4ee5\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u5217\u8868\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 In [41]: letters7[:7] Out[41]: ['a', 'b', 'c', 'd', 'e', 'f', 'g'] In [42]: letters7[4:] Out[42]: ['e', 'f', 'g'] \u6ce8\u610f\uff0c\u52a0 : \u64cd\u4f5c\u7b26\u4e0e\u4e0d\u52a0 : \u662f\u4e0d\u540c\u7684\u3002\u52a0 : \u64cd\u4f5c\u7b26\u7ed3\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u800c\u4e0d\u52a0\u8fd4\u56de\u7684\u662f\u5143\u7d20\u672c\u8eab\u3002 In [43]: letters7[-1] Out[43]: 'g' In [44]: letters7[-1:] Out[44]: ['g'] \u5982\u679c\u7406\u89e3\u4e86\u4e0a\u9762\u7684\u64cd\u4f5c\uff0c\u7406\u89e3\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u7ed3\u679c\u4e5f\u987a\u7406\u6210\u7ae0\uff1a In [45]: letters7[::1] Out[45]: ['a', 'b', 'c', 'd', 'e', 'f', 'g'] In [46]: letters7[::2] Out[46]: ['a', 'c', 'e', 'g'] \u6b65\u957f\u8fd8\u53ef\u4ee5\u53d6\u8d1f\u6574\u6570\uff0c\u4ee3\u8868\u9006\u5e8f\u5207\u7247\u3002 In [47]: letters7[::-1] Out[47]: ['g', 'f', 'e', 'd', 'c', 'b', 'a'] In [48]: letters7[::-2] Out[48]: ['g', 'e', 'c', 'a'] \u53e6\u5916\uff0c\u5207\u7247\u8fd0\u7b97\u7b26\u653e\u5230\u8d4b\u503c\u8bed\u53e5\u7b49\u53f7\u5de6\u8fb9\u7684\u65f6\u5019\u53ef\u4ee5\u5bf9\u591a\u4e2a\u5143\u7d20\u8fdb\u884c\u66f4\u65b0\u3002 In [49]: letters7[0:2] = ['h', 'i'] In [50]: letters7 Out[50]: ['h', 'i', 'c', 'd', 'e', 'f', 'g'] \u6ce8\u610f\uff0c\u5de6\u53f3\u4e24\u8fb9\u53ef\u4ee5\u4e0d\u7b49\u957f\u3002 In [51]: letters7[0:2] = ['a'] In [52]: letters7 Out[52]: ['a', 'c', 'd', 'e', 'f', 'g'] In [53]: letters7[0:1] = ['a', 'b'] In [54]: letters7 Out[54]: ['a', 'b', 'c', 'd', 'e', 'f', 'g'] \u5982\u679c\u662f\u5355\u4e2a\u5143\u7d20\uff0c\u7b49\u53f7\u53f3\u4fa7\u4e0d\u52a0\u65b9\u62ec\u53f7\u4e5f\u884c\uff1a In [55]: letters7[0:2] = 'h' In [56]: letters7 Out[56]: ['h', 'c', 'd', 'e', 'f', 'g'] 3.1.6 \u5217\u8868\u65b9\u6cd5\u3001\u51fd\u6570\u4e0e\u64cd\u4f5c \u00b6 Python \u4e3a\u5217\u8868\u63d0\u4f9b\u4e86\u5f88\u591a\u65b9\u6cd5\uff0c\u7528\u6765\u7b80\u5316\u5217\u8868\u7684\u5404\u9879\u5e38\u7528\u64cd\u4f5c\u3002\u5e38\u7528\u64cd\u4f5c\u5305\u62ec\u6dfb\u52a0\u5143\u7d20\u3001\u5220\u9664\u5143\u7d20\u3001\u63d2\u5165\u5143\u7d20\u7b49\u3002\u672c\u5c0f\u8282\u5c06\u4e00\u4e00\u8fdb\u884c\u4ecb\u7ecd\u3002 \u6ce8\u610f\uff0c\u5f53\u4e0b\u6587\u63d0\u53ca\u65b9\u6cd5\u65f6\uff0c\u4e00\u822c\u6307\u5728\u53d8\u91cf\u540d\u540e\u52a0\u70b9\u53f7\u7136\u540e\u52a0\u51fd\u6570\u3002\u4f8b\u5982\uff0clist.append() \u6307\u5bf9\u5217\u8868 list \u4f7f\u7528 append() \u65b9\u6cd5\u3002 \u6dfb\u52a0\u5143\u7d20 \u00b6 Python \u6709\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4e3a\u5217\u8868\u6dfb\u52a0\u5143\u7d20\uff0c\u5206\u522b\u662f append()\u3001insert() \u548c extend()\u3002 append(element)\uff1a\u5c06\u5143\u7d20 element \u6dfb\u52a0\u5230\u5217\u8868\u7684\u672b\u5c3e\u3002 ```python In [59]: example_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] In [60]: example_list.append(11) In [61]: example_list Out[61]: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] ``` insert(position, element)\uff1a\u5c06\u5143\u7d20 element \u63d2\u5165\u5217\u8868\u6307\u5b9a position \u4f4d\u7f6e\u3002 python In [62]: example_list.insert(2, 12) In [63]: example_list Out[63]: [1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11] extend(list)\uff1a\u4f7f\u7528\u53e6\u4e00\u4e2a\u5217\u8868\u505a\u53c2\u6570\uff0c\u7136\u540e\u628a\u6240\u6709\u7684\u5143\u7d20\u6dfb\u52a0\u5230\u4e00\u4e2a\u5217\u8868\u4e0a\u3002 python In [64]: example_list.extend([13,14]) In [65]: example_list Out[65]: [1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14] \u5220\u9664\u5143\u7d20 \u00b6 \u540c\u6837\u5730\uff0cPython \u4e5f\u6709\u4e09\u79cd\u65b9\u6cd5\u5220\u9664\u5217\u8868\u4e2d\u7684\u5143\u7d20\u3002 pop([index])\uff1a\u79fb\u9664\u7d22\u5f15\u4f4d\u7f6e index \u7684\u5143\u7d20\u5e76\u8fd4\u56de\u5b83\u7684\u503c\uff0c\u5982\u679c\u6ca1\u6709\u53c2\u6570\uff0c\u9ed8\u8ba4\u5220\u9664\u548c\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u3002 python In [67]: example_list.pop() Out[67]: 14 In [68]: example_list.pop(2) Out[68]: 12 remove(element)\uff1a\u79fb\u9664\u53c2\u6570\u4e2d\u6307\u5b9a\u7684\u5143\u7d20 element\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2a\u540c\u6837\u7684\u503c\uff0c\u79fb\u9664\u6700\u5de6\u8fb9\u7684\u3002\u4e0d\u50cf pop()\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u3002 python In [69]: example_list.remove(13) In [70]: example_list Out[70]: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] \u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528 del \u547d\u4ee4, del list[0] \u7c7b\u4f3c\u4e8e list.pop(0)\uff0c\u4f46\u524d\u8005\u4e0d\u4f1a\u8fd4\u56de\u88ab\u5220\u9664\u7684\u5143\u7d20\u3002 python In [71]: del example_list[10] In [72]: example_list Out[72]: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] \u9664\u4e86\u4e0a\u9762\u63d0\u5230\u7684 3 \u79cd\u65b9\u6cd5\uff0c\u53e6\u6709 clear() \u65b9\u6cd5\u53ef\u4ee5\u6e05\u6d17\u5217\u8868\uff0c\u5b83\u4f1a\u6e05\u7a7a\u5217\u8868\u6240\u6709\u5143\u7d20\u3002 In [73]: example_list.clear() In [74]: example_list Out[74]: [] \u5217\u8868\u6392\u5e8f \u00b6 \u5f53\u628a\u6570\u503c\u6570\u636e\u5b58\u50a8\u5728\u5217\u8868\u540e\uff0c\u4e00\u4e2a\u5e38\u89c1\u7684\u9700\u6c42\u662f\u5bf9\u5217\u8868\u4e2d\u7684\u503c\u8fdb\u884c\u6392\u5e8f\uff0csort() \u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u3002 In [78]: a = [3, 1, 2, 5, 4, 6] In [79]: a.sort() In [80]: a Out[80]: [1, 2, 3, 4, 5, 6] \u53ef\u4ee5\u770b\u5230\uff0c\u4f7f\u7528 sort() \u65b9\u6cd5\u540e\uff0c\u5217\u8868\u672c\u8eab\u88ab\u6539\u53d8\u4e86\uff0c\u5982\u679c\u4e0d\u60f3\u8981\u6539\u53d8\u539f\u59cb\u5217\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 sorted() \u51fd\u6570\u5e76\u628a\u7ed3\u679c\u8d4b\u503c\u7ed9\u65b0\u7684\u53d8\u91cf\u3002 In [81]: nums = [-1, 34, 0.2, -4, 309] In [82]: nums_desc = sorted(nums, reverse=True) In [83]: nums Out[83]: [-1, 34, 0.2, -4, 309] In [84]: nums_desc Out[84]: [309, 34, 0.2, -1, -4] reverse() \u65b9\u6cd5\u53ef\u4ee5\u5c06\u5217\u8868\u6309\u4f4d\u7f6e\u7ffb\u8f6c\u3002 In [90]: nums Out[90]: [1, 2, 2, 2, 3, 3, 4, 5] In [91]: nums.reverse() In [92]: nums Out[92]: [5, 4, 3, 3, 2, 2, 2, 1] \u7b80\u5355\u7edf\u8ba1 \u00b6 min() \u4e0e max() \u51fd\u6570\u53ef\u4ee5\u8ba1\u7b97\u5217\u8868\u6700\u5c0f\u503c\u4e0e\u6700\u5927\u503c\u3002 In [85]: min(nums) Out[85]: -4 In [86]: max(nums) Out[86]: 309 \u5982\u679c\u60f3\u8981\u5bf9\u51fa\u73b0\u76f8\u540c\u5143\u7d20\u8ba1\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 count() \u65b9\u6cd5\u3002 In [87]: nums = [1, 2, 2, 2, 3, 3, 4, 5] In [88]: nums.count(2) Out[88]: 3 In [89]: nums.count(3) Out[89]: 2 sum() \u51fd\u6570\u53ef\u4ee5\u5bf9\u6570\u503c\u5217\u8868\u6c42\u548c\u3002 In [93]: sum(nums) Out[93]: 22 \u903b\u8f91\u5224\u65ad \u00b6 \u8bfb\u8005\u5982\u679c\u9700\u8981\u67e5\u770b\u5217\u8868\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u5b57 in \uff0c\u7ed3\u679c\u8fd4\u56de\u7684\u662f\u903b\u8f91\u503c\u3002 In [76]: 4 in example_list Out[76]: False In [77]: 3 in example_list Out[77]: True all() \u4e0e any() \u51fd\u6570\u53ef\u4ee5\u7528\u4e8e\u903b\u8f91\u503c\u5217\u8868\uff0call() \u5224\u522b\u662f\u5426\u5217\u8868\u6240\u6709\u503c\u90fd\u4e3a\u771f\uff0c\u5168\u771f\u65f6\u8fd4\u56de\u771f True\uff0c\u5426\u5219\u8fd4\u56de\u5047 False\uff1bany() \u5224\u522b\u53ea\u8981\u4efb\u4e00\u5143\u7d20\u4e3a\u771f\u5219\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de\u5047 False\u3002 In [94]: conditions = [True, False, True] In [95]: all(conditions) Out[95]: False In [96]: any(conditions) Out[96]: True \u6709\u65f6\u5019\uff0c\u5982\u679c\u60f3\u8981\u6bd4\u8f83\u4e24\u4e2a\u5217\u8868\u662f\u5426\u4e00\u81f4\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e24\u4e2a\u7b49\u4e8e\u53f7\u8fdb\u884c\u903b\u8f91\u5224\u65ad\u3002 In [97]: a = [1, 2, 3, 4] In [98]: a == [1, 2, 3, 5] Out[98]: False In [99]: a == [1, 3, 2, 4] Out[99]: False In [100]: a == [1, 2, 3, 4] Out[100]: True \u6700\u5e38\u89c1\u64cd\u4f5c\u65b9\u6cd5\u6c47\u603b \u00b6 \u4e0a\u9762\u4ecb\u7ecd\u4e86\u5927\u91cf\u7684\u5217\u8868\u64cd\u4f5c\u3001\u51fd\u6570\u4e0e\u65b9\u6cd5\uff0c\u4f46\u5b9e\u9645\u4e0a\u53ef\u7528\u7684\u8fdc\u4e0d\u6b62\u8fd9\u4e9b\uff0c\u5f53\u8bfb\u8005\u5bf9 Python \u6709\u6df1\u5165\u4e86\u89e3\u540e\uff0c\u8fd8\u53ef\u4ee5\u81ea\u5df1\u521b\u5efa\u64cd\u4f5c\u5217\u8868\u7684\u65b9\u6cd5\u548c\u51fd\u6570\u3002 \u4e0b\u8868\u5bf9\u6700\u5e38\u89c1\u7684\u64cd\u4f5c\u65b9\u6cd5\u8fdb\u884c\u6c47\u603b\uff1a \u88683-1 \u5e38\u89c1\u5217\u8868\u64cd\u4f5c\u65b9\u6cd5\u6c47\u603b \u8868\u793a \u63cf\u8ff0 l.append(x) \u6dfb\u52a0\u5143\u7d20x\u5230\u5217\u8868 l.count(x) \u8ba1\u7b97\u5217\u8868\u4e2dx\u51fa\u73b0\u7684\u6b21\u6570 l.index(x) \u8fd4\u56de\u5143\u7d20x\u7684\u4f4d\u7f6e\uff08\u7d22\u5f15\uff09 l.remove(x) \u4ece\u5217\u8868\u4e2d\u79fb\u9664x l.reverse() \u7ffb\u8f6c\u5217\u8868 l.sort() \u5217\u8868\u6392\u5e8f 3.1.7 \u5217\u8868\u4e0e\u5b57\u7b26\u4e32 \u00b6 \u5b57\u7b26\u4e32\u662f\u4e00\u7cfb\u5217\u5b57\u7b26\u7684\u5e8f\u5217\uff0c\u800c\u5217\u8868\u662f\u4e00\u7cfb\u5217\u503c\u7684\u5e8f\u5217\uff0c\u4f46\u4e00\u4e2a\u7531\u5b57\u7b26\u7ec4\u6210\u7684\u5217\u8868\u662f\u4e0d\u540c\u4e8e\u5b57\u7b26\u4e32\u7684\u3002\u8981\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5b57\u7b26\u5217\u8868\uff0c\u53ef\u4ee5\u7528 list() \u8fd9\u4e2a\u51fd\u6570\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\u5217\u8868\u7684\u4f8b\u5b50\uff1a In [101]: s = 'interactive Python' In [102]: t = list(s) In [103]: t Out[103]: ['i', 'n', 't', 'e', 'r', 'a', 'c', 't', 'i', 'v', 'e', ' ', 'P', 'y', 't', 'h', 'o', 'n'] \u5728\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0clist() \u8fd9\u4e2a\u51fd\u6570\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u5206\u5f00\u6210\u4e00\u4e2a\u4e2a\u5b57\u7b26\uff08\u5b57\u6bcd\uff09\u3002\u5982\u679c\u8bfb\u8005\u60f3\u628a\u5b57\u7b26\u4e32\u5207\u5206\u6210\u4e00\u4e2a\u4e2a\u5355\u8bcd\uff0c\u53ef\u4ee5\u4f7f\u7528 split() \u65b9\u6cd5\uff0c\u5982\u4e0b\u6240\u793a\uff1a In [104]: s.split() Out[104]: ['interactive', 'Python'] \u6ce8\u610f\uff0c\u65b9\u6cd5\u4e2d\u6709\u4e00\u4e2a\u53ef\u9009\u7684\u53c2\u6570\u662f\u5b9a\u754c\u7b26\uff0c\u5b83\u662f\u7528\u6765\u786e\u5b9a\u5355\u8bcd\u8fb9\u754c\u7684\u3002 \u4e0b\u9762\u4f8b\u5b50\u7528\u77ed\u6a2a\u7ebf\u4f5c\u4e3a\u5b9a\u754c\u7b26\u62c6\u5206\u4e24\u4e2a\u5355\u8bcd\uff1a In [105]: s = 'interactive-Python' In [107]: s.split('-') Out[107]: ['interactive', 'Python'] \u53e6\u4e00\u4e2a\u65b9\u6cd5 join() \u7684\u529f\u80fd\u4e0e split() \u65b9\u6cd5\u7684\u529f\u80fd\u76f8\u53cd\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u7136\u540e\u628a\u6240\u6709\u5143\u7d20\u62fc\u63a5\u5230\u4e00\u8d77\u4f5c\u4e3a\u5b57\u7b26\u4e32\u3002join() \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u65b9\u6cd5\uff0c\u6240\u4ee5\u5fc5\u987b\u628a join() \u653e\u5230\u5b9a\u754c\u7b26\u540e\u9762\u6765\u8c03\u7528\uff0c\u5e76\u4e14\u4f20\u9012\u4e00\u4e2a\u5217\u8868\u4f5c\u4e3a\u53c2\u6570\u3002 In [108]: t = ['\u6211','\u662f', '\u8c01', '\uff1f'] In [109]: ''.join(t) Out[109]: '\u6211\u662f\u8c01\uff1f' \u6ce8\u610f\uff0c\u4e0a\u9762\u4ee3\u7801\u4e2d\u5b9a\u754c\u7b26\u662f\u4e00\u4e2a\u7a7a\u683c\u5b57\u7b26\u3002 3.1.7 \u5217\u8868\u5bf9\u8c61\u4e0e\u503c \u00b6 \u8bf7\u8bfb\u8005\u601d\u8003\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u4e0b\u9762\u5bf9\u8c61 a \u4e0e b \u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u5417\uff1f In [4]: a = 'banana' In [5]: b = 'banana' \u5982\u679c\u628a\u5bf9\u8c61\u770b\u6210\u7bee\u5b50\uff0c\u5185\u5bb9 banana \u770b\u4f5c\u7bee\u5b50\u91cc\u7684\u9e21\u86cb\u3002\u8bfb\u8005\u73b0\u5728\u9700\u8981\u5224\u65ad\u7684\u662f\uff0c\u53d8\u91cf\u540d a \u548c b \u662f\u540c\u4e00\u4e2a\u7bee\u5b50\u7684\u4e24\u4e2a\u4fbf\u7b7e\uff08\u9e21\u86cb\u53ea\u6709\u4e00\u4e2a\uff09\uff0c\u8fd8\u662f\u4e24\u4e2a\u4e0d\u540c\u7bee\u5b50\uff08\u6bcf\u4e00\u4e2a\u7bee\u5b50\u90fd\u6709\u4e00\u4e2a\u9e21\u86cb\uff09\u7684\u4fbf\u7b7e\uff1f \u8bfb\u8005\u5982\u679c\u60f3\u8981\u5f97\u5230\u95ee\u9898\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u4f7f\u7528 i s\u64cd\u4f5c\u7b26\u3002 In [6]: a is b Out[6]: True \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u8fd0\u884c\u7ed3\u679c\u6765\u770b\uff0c\u7b54\u6848\u662f\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1aPython \u53ea\u521b\u5efa\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u5185\u5bb9\u4e3a banana \uff0c\u7136\u540e a \u548c b \u90fd\u662f\u8fd9\u4e2a\u5bf9\u8c61\u7684\u4fbf\u7b7e\u3002 \u53e6\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528 id() \u51fd\u6570\u63d0\u53d6\u5bf9\u8c61\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002\u8fd9\u5c31\u50cf\u4e2a\u4eba\u8eab\u4efd\u8bc1\u4e00\u6837\uff0c\u867d\u7136\u540c\u4e00\u4e2a\u4eba\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u79f0\u547c\uff0c\u4f46\u8eab\u4efd\u8bc1\u53f7\u7801\u53ea\u6709\u4e00\u4e2a\u3002 In [10]: id(a) Out[10]: 1691582590008 In [11]: id(b) Out[11]: 1691582590008 \u4ece\u7ed3\u679c\u4e2d\u53ef\u89c1 a \u548c b \u786e\u5b9e\u662f\u5b8c\u5168\u76f8\u540c\u7684\u3002\u90a3\u4e48\uff0c\u5982\u679c\u6539\u53d8 a\uff0cb \u4e5f\u4f1a\u6539\u53d8\u5417\uff1f In [12]: a = \"orange\" In [13]: b Out[13]: 'banana' \u7ed3\u679c\u662f\u4e0d\u4f1a\u3002\u5b9e\u9645\u4e0a\uff0cPython \u5bf9\u8c61\u662f\u5b83\u6307\u5411\u7684\u5185\u5bb9\uff0c\u53d8\u91cf\u540d a \u548c b \u672c\u8eab\u53ea\u662f\u4e00\u4e2a\u65b9\u4fbf\u4f7f\u7528\u7684\u6807\u7b7e\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u5c06\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u8d4b\u503c\u7ed9\u53d8\u91cf a \u65f6\uff0cPython \u5b9e\u9645\u4e0a\u662f\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u5185\u5bb9\u662f orange\uff0c\u7136\u540e\u7ed9\u8fd9\u4e2a\u5bf9\u8c61\u6253\u4e0a\u6807\u7b7e a\u3002 \u4e0d\u8fc7\u5982\u679c\u521b\u5efa\u4e24\u4e2a\u5217\u8868\uff0c\u5c3d\u7ba1\u5b83\u4eec\u7684\u5185\u5bb9\u76f8\u540c\uff0c\u5b83\u4eec\u4e5f\u662f\u4e0d\u540c\u7684\u5bf9\u8c61\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002 In [14]: a = [1, 2, 3] In [15]: b = [1, 2, 3] In [16]: a is b Out[16]: False In [17]: id(a) Out[17]: 1691581888264 In [18]: id(b) Out[18]: 1691582794120 \u5728\u8fd9\u4e2a\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u8bf4\u4e24\u4e2a\u5217\u8868\u662f\u76f8\u7b49\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u6709\u76f8\u540c\u7684\u5143\u7d20\uff0c\u4f46\u5b83\u4eec\u4e0d\u662f\u540c\u4e00\u4e2a\u5217\u8868\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5e76\u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u4e24\u4e2a\u5bf9\u8c61\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u5b83\u4eec\u5fc5\u7136\u662f\u76f8\u7b49\u7684\uff0c\u4f46\u5982\u679c\u5b83\u4eec\u76f8\u7b49\uff0c\u5374\u672a\u5fc5\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002 \u6ce8\u610f\uff0c\u5982\u679c\u8fd9\u91cc\u7684 b \u4e0d\u662f\u91cd\u65b0\u521b\u5efa\uff0c\u800c\u662f\u5c06 a \u8d4b\u503c\u7ed9 b\uff0c\u90a3\u4e48 a \u548c b \u5c31\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u6307\u5411\u540c\u4e00\u4e2a\u5217\u8868\u5bf9\u8c61\u3002 In [19]: b = a In [20]: a is b Out[20]: True In [21]: id(b) Out[21]: 1691581888264 \u56e0\u800c\u6211\u4eec\u5c3d\u91cf\u4e0d\u8981\u5bf9 Python \u7684\u5217\u8868\u8fdb\u884c e=f=e=c=a \u8fd9\u6837\u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u4e00\u65e6\u6211\u4eec\u4fee\u6539\u4e86\u67d0\u4e00\u4e2a\u5143\u7d20\uff0c\u5176\u4ed6\u53d8\u91cf\u5168\u90fd\u4f1a\u8ddf\u7740\u6539\u53d8\uff01 In [22]: e = a In [23]: e Out[23]: [1, 2, 3] In [24]: a Out[24]: [1, 2, 3] In [25]: a[1] = 4 In [26]: e Out[26]: [1, 4, 3] \u5230\u8fd9\u91cc\uff0cPython \u5217\u8868\u7684\u57fa\u7840\u77e5\u8bc6\u548c\u76f8\u5e94\u64cd\u4f5c\u672c\u7ae0\u90fd\u4e00\u4e00\u4f5c\u4e86\u4ecb\u7ecd\u3002\u672c\u7ae0\u7684\u5927\u90e8\u5206\u5185\u5bb9\u90fd\u662f\u5728\u8bb2\u89e3\u5217\u8868\uff0c\u5217\u8868\u4e0d\u4ec5\u4f5c\u4e3a Python \u6700\u6838\u5fc3\u7684\u6982\u5ff5\u548c\u6570\u636e\u7ed3\u6784\uff0c\u800c\u4e14\u4e5f\u662f\u7406\u89e3\u5176\u4ed6\u57fa\u7840\u6570\u636e\u7ed3\u6784\u7684\u6865\u6881\u3002\u8bfb\u8005\u5982\u679c\u638c\u63e1\u597d\u5217\u8868\uff0c\u672c\u7ae0\u63a5\u4e0b\u6765\u4ecb\u7ecd\u7684\u6570\u636e\u7ed3\u6784\u90fd\u53ef\u4ee5\u89e6\u7c7b\u65c1\u901a\uff0c\u4f7f\u7528\u548c\u64cd\u4f5c\u65b9\u6cd5\u5927\u540c\u5c0f\u5f02\u3002\u91cd\u8981\u7684\u5dee\u5f02\u90fd\u4f1a\u63d0\u793a\u548c\u5f3a\u8c03\uff0c\u8bfb\u8005\u9700\u8981\u7559\u5fc3\u6ce8\u610f\u3002 3.2 \u5143\u7ec4 \u00b6 \u5143\u7ec4\uff08tuple\uff09\u5c31\u662f\u4e0d\u53ef\u66f4\u6539\u7684\u5217\u8868\uff0c\u4e00\u65e6\u521b\u5efa\uff0c\u4fbf\u4e0d\u53ef\u66f4\u6539\u3002\u9664\u4e86\u8868\u793a\u7684\u65b9\u5f0f\u6709\u70b9\u4e0d\u4e00\u6837\u3001\u5143\u7ec4\u7684\u5143\u7d20\u4e0d\u53ef\u66f4\u6539\uff0c\u5176\u4ed6\u7684\u7279\u6027\u4e0e\u524d\u9762\u5b66\u4e60\u7684\u5217\u8868\u57fa\u672c\u4e00\u81f4\u3002\u56e0\u6b64\uff0c\u8bfb\u8005\u5728\u638c\u63e1\u5217\u8868\u7528\u6cd5\u4e4b\u540e\uff0c\u5143\u7ec4\u7684\u5b66\u4e60\u5c06\u53d8\u5f97\u76f8\u5bf9\u7b80\u5355\u3002 3.2.1 \u5143\u7ec4\u7684\u521b\u5efa \u00b6 In [1]: a_tuple = (1, 2, 3) In [2]: a_list = [1, 2, 3] \u4e0a\u9762\u4ee3\u7801\u5206\u522b\u521b\u5efa\u4e86\u4e00\u4e2a\u5143\u7ec4\u548c\u5217\u8868\uff0c\u53ef\u4ee5\u6e05\u6670\u770b\u5230\u5b83\u4eec\u5b9a\u4e49\u7684\u5dee\u522b\u6240\u5728\u3002\u4e0d\u8fc7\uff0c\u5176\u5b9e\u5143\u7ec4\u7684\u8bed\u6cd5\u662f\u4e00\u7cfb\u5217\u7528\u9017\u53f7\u5206\u9694\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u62ec\u53f7\u662f\u53ef\u4ee5\u7701\u7565\u7684\u3002 In [6]: another_tuple = 1,2,3 In [7]: type(another_tuple) Out[7]: tuple \u4f5c\u4e3a\u521d\u5b66\u8005\uff0c\u521b\u5efa\u5143\u7ec4\u65f6\u5c3d\u91cf\u4f7f\u7528\u62ec\u53f7\uff0c\u8fd9\u6837\u5728\u4e66\u5199\u548c\u67e5\u770b\u4ee3\u7801\u65f6\u53ef\u4ee5\u975e\u5e38\u6e05\u695a\u5730\u533a\u5206\u4ec0\u4e48\u662f\u5217\u8868\u3001\u4ec0\u4e48\u662f\u5143\u7ec4\u3002Python \u4e2d\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\u5728\u8868\u793a\u4e0a\u90fd\u6709\u975e\u5e38\u9c9c\u660e\u7684\u7279\u70b9\uff0c\u8fd9\u90fd\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u6784\u5efa\u4f18\u826f\u7684\u4ee3\u7801\u3002 \u8bfb\u8005\u5982\u679c\u521b\u5efa\u7684\u5143\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\uff1a\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u540e\u9700\u8981\u4e00\u4e2a\u9017\u53f7\u3002 \u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a In [8]: 1 Out[8]: 1 In [9]: (1) Out[9]: 1 In [10]: 1, Out[10]: (1,) In [11]: (1,) Out[11]: (1,) \u524d\u4e24\u4e2a\u547d\u4ee4\u521b\u5efa\u7684\u90fd\u662f\u6570\u5b57 1\uff0c\u540e\u4e24\u4e2a\u547d\u4ee4\u521b\u5efa\u7684\u624d\u662f\u5143\u7ec4\uff0c\u5305\u542b\u5143\u7d20\u6570\u5b57 1\u3002 \u9664\u4e86\u4f7f\u7528\u9017\u53f7\u5206\u9694\u521b\u5efa\u5143\u7ec4\uff0c\u521b\u5efa\u5143\u7ec4\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528 tuple() \u51fd\u6570\u3002\u5982\u679c\u53c2\u6570\u4e3a\u4e00\u4e2a\u5e8f\u5217\uff08\u6bd4\u5982\u5b57\u7b26\u4e32\u3001\u5217\u8868\u6216\u8005\u5143\u7ec4\uff09\uff0c\u7ed3\u679c\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u4ee5\u8be5\u5e8f\u5217\u5143\u7d20\u7ec4\u6210\u7684\u5143\u7ec4\u3002 In [14]: tuple(\"Python\") Out[14]: ('P', 'y', 't', 'h', 'o', 'n') In [15]: tuple([\"I\", \"am\", [\"learning\", \"Python\"]]) Out[15]: ('I', 'am', ['learning', 'Python']) 3.2.2 \u5143\u7ec4\u64cd\u4f5c \u00b6 \u80fd\u9002\u7528\u4e8e\u5217\u8868\u7684\u64cd\u4f5c\u7b26\u548c\u65b9\u6cd5\uff0c\u57fa\u672c\u4e5f\u9002\u7528\u4e8e\u5143\u7ec4\u3002 \u64cd\u4f5c\u7b26 \u00b6 In [16]: ('a',) + ('b',) Out[16]: ('a', 'b') In [17]: ('a',) * 3 Out[17]: ('a', 'a', 'a') \u5207\u7247 \u00b6 In [18]: pythonName = tuple(\"Python\") In [19]: pythonName Out[19]: ('P', 'y', 't', 'h', 'o', 'n') In [20]: pythonName[0] Out[20]: 'P' In [21]: pythonName[0:3] Out[21]: ('P', 'y', 't') In [22]: pythonName[3:] Out[22]: ('h', 'o', 'n') \u4fee\u6539 \u00b6 \u5143\u7ec4\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u4f7f\u7528 append()\u3001pop() \u7b49\u65b9\u6cd5\u5bf9\u5143\u7d20\u8fdb\u884c\u6dfb\u52a0\u3001\u5220\u9664\u3001\u4fee\u6539\u7b49\u64cd\u4f5c\u3002 In [23]: pythonName[0] = 'p' --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-23-19ded1757eee> in <module>() ----> 1 pythonName[0] = 'p' TypeError: 'tuple' object does not support item assignment \u4e0d\u8fc7\u8bfb\u8005\u53ef\u4ee5\u7528\u53e6\u4e00\u4e2a\u5143\u7ec4\u6765\u66ff\u6362\u5df2\u6709\u7684\u5143\u7ec4\u3002 In [24]: newName = ('p',) + pythonName[1:] In [25]: newName Out[25]: ('p', 'y', 't', 'h', 'o', 'n') \u53d8\u91cf\u503c\u4ea4\u6362 \u00b6 \u5229\u7528\u4e2d\u95f4\u53d8\u91cf\u5bf9\u53d8\u91cf\u7684\u503c\u8fdb\u884c\u4ea4\u6362\u662f\u5e38\u89c1\u7684\u4e00\u4e2a\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u60f3\u8981\u4ea4\u6362\u53d8\u91cf a \u548c b \u7684\u503c\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u91c7\u7528\u5982\u4e0b\u7b56\u7565\uff1a # a \u548c b \u662f\u5df2\u7ecf\u521b\u5efa\u7684\u53d8\u91cf\uff0ct \u662f\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf t = a a = b b = t \u6709\u4e86\u5143\u7ec4\uff0c\u8bfb\u8005\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u4e00\u884c\u4ee3\u7801\u7b80\u5316\u8fd9\u4e00\u8fc7\u7a0b\u3002 a, b = b, a 3.2.3 \u5143\u7ec4\u4e0e\u5217\u8868\u7684\u533a\u522b \u00b6 \u5b66\u5230\u8fd9\u91cc\uff0c\u8bfb\u8005\u53ef\u80fd\u4f1a\u4ea7\u751f\u7591\u95ee\uff1a\u5143\u7ec4\u80fd\u505a\u7684\u4e8b\u60c5\u5217\u8868\u597d\u50cf\u90fd\u80fd\u505a\uff0c\u5217\u8868\u8fd8\u6ca1\u6709\u5143\u7ec4\u8fd9\u4e48\u591a\u7684\u7ea6\u675f\uff0c\u90a3\u4e48\u53ea\u7528\u5217\u8868\u4e0d\u662f\u66f4\u597d\u5417\uff1f \u5143\u7ec4\u76f8\u6bd4\u4e8e\u5217\u8868\u7684\u4e00\u4e2a\u4f18\u70b9\u662f\u53ef\u4ee5\u4f7f\u4ee3\u7801\u66f4\u5b89\u5168\uff0c\u7279\u522b\u662f\u8ddf\u6570\u636e\u6709\u5173\u7684\uff0c\u5b83\u4e0d\u80fd\u4fee\u6539\u7684\u5c5e\u6027\u770b\u8d77\u6765\u662f\u4e00\u5c42\u7075\u6d3b\u6027\u9650\u5236\uff0c\u5176\u5b9e\u4e5f\u662f\u4e00\u5c42\u5b89\u5168\u6027\u7684\u4fdd\u969c\uff0c\u800c\u4e14\u8fd9\u4e2a\u5c5e\u6027\u8ba9\u5143\u7ec4\u50cf\u4e00\u4e2a\u5750\u6807\u7cfb\u7edf\uff08\u4e2d\u5b66\u6570\u5b66\u4e5f\u7528\u62ec\u53f7\u6765\u586b\u5165\u5750\u6807\u5e76\u7528\u9017\u53f7\u5206\u9694\uff09\uff0c\u6bd4\u5982\u4e09\u4e2a\u5143\u7d20 c(x,y,z)\uff0c\u6240\u4ee5\u5b83\u5e7f\u6cdb\u7528\u4e8e\u53c2\u6570\u7684\u4f20\u9012\u3002\u5173\u4e8e\u53c2\u6570\u4f20\u9012\uff0c\u672c\u4e66\u5728\u51fd\u6570\u7ae0\u8282\u4f1a\u66f4\u8be6\u7ec6\u5730\u8bb2\u8ff0\u3002\u53e6\u5916\uff0c\u5143\u7ec4\u4e00\u4e2a\u9690\u5f62\u7684\u4f18\u70b9\u662f\u5b83\u4f1a\u6bd4\u5217\u8868\u5360\u7528\u66f4\u5c11\u7684\u5185\u5b58\uff0c\u8fd9\u5728\u5927\u6570\u636e\u8ba1\u7b97\u65f6\u9700\u8981\u8003\u91cf\u3002 3.3 \u5b57\u5178 \u00b6 \u5b57\u5178\u542b\u4e49\u548c\u8868\u793a\u90fd\u4e0e\u5176\u8bed\u4e49\u76f8\u4f3c\uff0c\u5c31\u50cf\u5c0f\u65f6\u5019\u67e5\u627e\u6c49\u5b57\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u62fc\u97f3\u5b57\u6bcd\uff08\u6216\u7b14\u753b\uff09\u8fdb\u884c\u68c0\u7d22\u3002Python \u4e2d\u7684\u5b57\u5178\u8bfb\u8005\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u540d\u5b57\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u540d\u5b57\u67e5\u627e\u5230\u5bf9\u5e94\u7684\u6570\u503c\u3002\u5176\u4e2d\u7684\u540d\u5b57\u53eb\u505a \u952e \uff0c\u5bf9\u5e94\u7684\u6570\u503c\u7b80\u79f0 \u503c \uff0c\u6240\u4ee5\u5b57\u5178\u4e5f\u79f0 \u952e\u503c\u5bf9 \u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b57\u5178\u6ca1\u6709\u987a\u5e8f\u4e00\u8bf4\uff0c\u6240\u6709\u7684\u503c\u4ec5\u80fd\u7528\u952e\u83b7\u53d6\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5b57\u5178\u88ab\u770b\u4f5c\u65e0\u5e8f\u7684\u952e\u503c\u5bf9\u6216\u6709\u540d\u5b57\u7684\u5143\u7d20\u5217\u8868\u3002 3.3.1 \u5b57\u5178\u7684\u521b\u5efa\u4e0e\u4f7f\u7528 \u00b6 \u4e0b\u9762\u4ee3\u7801\u4f7f\u7528\u5b57\u5178\u5b58\u50a8\u4e86 3 \u4e2a\u4eba\u7684\u4f53\u91cd\u6570\u636e\u3002 In [5]: weight = {'\u5c0f\u7ea2':65, '\u5c0f\u660e':45, '\u6211':75} \u5b57\u5178\u7684\u5185\u5bb9\u653e\u5728\u82b1\u62ec\u53f7\u5185\uff0c\u952e\u503c\u5bf9\u4ee5\u82f1\u6587\u5192\u53f7\u8fde\u63a5\uff0c\u4e0d\u540c\u7684\u952e\u503c\u5bf9\u4ee5\u82f1\u6587\u9017\u53f7\u9694\u5f00\u3002 \u4e0b\u9762\u4ee3\u7801\u67e5\u770b\u5bf9\u5b57\u5178\u7684\u6253\u5370\u8f93\u51fa\uff1a In [6]: weight Out[6]: {'\u5c0f\u660e': 45, '\u5c0f\u7ea2': 65, '\u6211': 75} \u4ece\u7ed3\u679c\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u8f93\u51fa\u7684\u987a\u5e8f\u4e0e\u952e\u5165\u7684\u987a\u5e8f\u662f\u6709\u51fa\u5165\u7684\uff08\u4e5f\u6709\u53ef\u80fd\u76f8\u540c\uff09\u3002 \u6709\u4e86\u5b57\u5178\uff0c\u8bfb\u8005\u53ef\u4ee5\u6bd4\u5217\u8868\u66f4\u7b80\u5355\u548c\u76f4\u89c2\u5730\u63d0\u53d6\u5bf9\u5e94\u5185\u5bb9\u7684\u6570\u636e\u3002\u4f8b\u5982\uff0c\u60f3\u77e5\u9053\u5c0f\u660e\u7684\u4f53\u91cd\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u3002 In [7]: weight['\u5c0f\u660e'] Out[7]: 45 \u65e2\u7136\u5b57\u5178\u6709\u952e\u4e0e\u503c\u7684\u533a\u5206\uff0c\u90a3\u4e48\u8be5\u5982\u4f55\u83b7\u53d6\u952e\u4e0e\u503c\u7684\u5185\u5bb9\u5462\uff1f\u4e3a\u6b64 Python \u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5206\u522b\u662f keys() \u548c values()\u3002 In [8]: weight.keys() Out[8]: dict_keys(['\u5c0f\u7ea2', '\u5c0f\u660e', '\u6211']) In [9]: weight.values() Out[9]: dict_values([65, 45, 75]) \u56e0\u4e3a\u5b57\u5178\u9700\u8981\u552f\u4e00\u7684\u952e\u53bb\u63d0\u53d6\u6b63\u786e\u7684\u5185\u5bb9\uff08\u503c\uff09\uff0c\u6240\u4ee5\u5e76\u4e0d\u662f\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u53ef\u4ee5\u7528\u4f5c\u952e\u3002\u53ea\u6709\u4e0d\u80fd\u6539\u53d8\u7684\u5143\u7ec4\u3001\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u7b49\u80fd\u4f5c\u4e3a\u952e\u3002 \u8bfb\u8005\u5982\u679c\u60f3\u8981\u521d\u59cb\u5316\u5b57\u5178\uff0c\u7c7b\u4f3c\u4e8e\u5217\u8868\u4f7f\u7528\u7b26\u53f7 []\uff0c\u5143\u7ec4\u4f7f\u7528\u7b26\u53f7 ()\uff0c\u5b57\u5178\u4f7f\u7528\u7b26\u53f7 {}\u3002 In [10]: int_dict = {} In [11]: int_dict Out[11]: {} \u9664\u4e86\u91cd\u65b0\u521b\u5efa\u5b57\u5178\uff0c\u8fd8\u53ef\u4ee5\u628a\u4ece\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u5b57\u5178\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u6709\u4e00\u4e2a\u5b58\u50a8\u4e86 RGB 16 \u8fdb\u5236\u7684\u5217\u8868\uff0c\u6211\u4eec\u4f7f\u7528 dict() \u51fd\u6570\u5c06\u5176\u8f6c\u6362\u4e3a\u5b57\u5178\u3002 In [13]: rgb = [('red', 'ff0000'), ('green', '00ff00'), ('blue', '0000ff')] In [14]: dict(rgb) Out[14]: {'blue': '0000ff', 'green': '00ff00', 'red': 'ff0000'} \u53e6\u5916\u8bfb\u8005\u8fd8\u53ef\u4ee5\u4ee5\u4f20\u9012\u53c2\u6570\u7ed9 dict() \u51fd\u6570\u7684\u65b9\u5f0f\u521b\u5efa\u5b57\u5178\uff0c\u4e0b\u9762\u4ee3\u7801\u521b\u5efa\u7684\u5b57\u5178\u4e0e\u4e0a\u9762\u4ee3\u7801\u521b\u5efa\u7684\u5b57\u5178\u5b8c\u5168\u76f8\u540c\u3002 In [15]: dict(red='ff0000',green='00ff00', blue='0000ff') Out[15]: {'blue': '0000ff', 'green': '00ff00', 'red': 'ff0000'} \u5982\u679c\u9700\u8981\u4e0d\u65ad\u5730\u5f80\u5b57\u5178\u4e2d\u6dfb\u52a0\u952e\u503c\uff0c\u5148\u521d\u59cb\u5316\u5b57\u5178\uff0c\u7136\u540e\u4f7f\u7528\u8d4b\u503c\u7684\u65b9\u5f0f\u6dfb\u52a0\u952e\u503c\u5bf9\u3002 In [16]: rgb = {} In [17]: rgb['red'] = 'ff0000' In [18]: rgb['green'] = '00ff00' In [19]: rgb['blue'] = '0000ff' In [20]: rgb Out[20]: {'blue': '0000ff', 'green': '00ff00', 'red': 'ff0000'} 3.3.2 \u5b57\u5178\u64cd\u4f5c \u00b6 \u4e00\u4e9b\u5e38\u89c1\u7684\u51fd\u6570\u3001\u65b9\u6cd5\u90fd\u53ef\u4ee5\u7528\u5728\u5b57\u5178\u4e0a\u3002 \u4f8b\u5982\uff0c\u63d0\u53d6\u5b57\u5178\u957f\u5ea6\u3002 In [21]: len(rgb) Out[21]: 3 \u4f7f\u7528 pop() \u65b9\u6cd5\u53ef\u4ee5\u4ece\u5b57\u5178\u4e2d\u5220\u9664\u67d0\u4e2a\u503c\uff0c\u5e76\u8fd4\u56de\u8be5\u503c\u3002\u6ce8\u610f\uff0c\u9700\u8981\u6307\u660e\u952e\u3002 In [22]: rgb.pop() --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-22-1654217e28c5> in <module>() ----> 1 rgb.pop() TypeError: pop expected at least 1 arguments, got 0 In [23]: rgb.pop('blue') Out[23]: '0000ff' In [24]: rgb Out[24]: {'green': '00ff00', 'red': 'ff0000'} \u4f7f\u7528 del \u5173\u952e\u5b57\u53ef\u4ee5\u5220\u9664\u5b57\u5178\u3002 In [25]: del rgb In [26]: rgb --------------------------------------------------------------------------- NameError Traceback (most recent call last) <ipython-input-26-d412e57c3c38> in <module>() ----> 1 rgb NameError: name 'rgb' is not defined \u4f7f\u7528 get() \u65b9\u6cd5\u53ef\u4ee5\u65e0\u610f\u5916\u5730\u83b7\u53d6\u5b57\u5178\u503c\uff0c\u5b83\u9700\u8981\u63d0\u4f9b\u4e24\u4e2a\u53c2\u6570\uff0c\u9664\u4e86\u952e\uff0c\u8fd8\u9700\u8981\u6307\u5b9a\u5982\u679c\u67e5\u627e\u4e0d\u5230\u5e94\u5f53\u8fd4\u56de\u7684\u4fe1\u606f\u3002 In [28]: rgb.get('red', '\u952e\u4e0d\u5b58\u5728') Out[28]: 'ff0000' In [29]: rgb.get('yellow', '\u952e\u4e0d\u5b58\u5728') Out[29]: '\u952e\u4e0d\u5b58\u5728' \u5982\u679c\u60f3\u8981\u5b57\u5178\u7684\u987a\u5e8f\u4e0d\u6539\u53d8\uff0c\u53ef\u4ee5\u4f7f\u7528 collections \u6a21\u5757\u7684 OrderedDict() \u51fd\u6570\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u4e4b\u524d\u521b\u5efa\u7684\u5b57\u5178 rgb \u8f6c\u6362\u4e3a\u4e86\u6709\u5e8f\u5b57\u5178\uff0c\u53e6\u5916\u8fd8\u7ed9\u51fa\u4e86\u4e00\u4e2a\u65b0\u7684\u521b\u5efa\u793a\u4f8b\uff0c\u53ef\u4ee5\u53d1\u73b0\u5217\u8868\u8f93\u51fa\u7684\u987a\u5e8f\u786e\u5b9e\u6ca1\u6709\u6539\u53d8\u4e86\u3002 In [32]: from collections import OrderedDict In [33]: OrderedDict(rgb) Out[33]: OrderedDict([('red', 'ff0000'), ('green', '00ff00'), ('blue', '0000ff')]) In [35]: order_dict = OrderedDict() In [36]: order_dict['a'] = 1 In [37]: order_dict['b'] = 2 In [38]: order_dict['c'] = 3 In [39]: order_dict Out[39]: OrderedDict([('a', 1), ('b', 2), ('c', 3)]) 3.4 \u96c6\u5408 \u00b6 \u96c6\u5408\u662f\u65e0\u5e8f\u7684\u5bf9\u8c61\u96c6\uff0c\u5b83\u548c\u5b57\u5178\u4e00\u6837\u4f7f\u7528\u82b1\u62ec\u53f7\uff0c\u4f46\u6ca1\u6709\u952e\u503c\u5bf9\u7684\u6982\u5ff5\u3002\u96c6\u5408\u5c5e\u4e8e\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4e00\u822c\u7528\u4e8e\u4fdd\u6301\u5e8f\u5217\u7684\u552f\u4e00\u6027\u2014\u2014\u4e5f\u5c31\u662f\u540c\u6837\u7684\u5143\u7d20\u4ec5\u51fa\u73b0\u4e00\u6b21\u3002 3.4.1 \u96c6\u5408\u7684\u521b\u5efa \u00b6 \u5728\u4f7f\u7528\u96c6\u5408\u65f6\u4e00\u5b9a\u8981\u6ce8\u610f\u96c6\u5408\u7684\u65e0\u5e8f\u548c\u552f\u4e00\u4e24\u4e2a\u7279\u70b9\uff0c\u907f\u514d\u51fa\u9519\u3002 \u4e0b\u9762\u4ee3\u7801\u5c55\u793a\u4e86\u5f53\u96c6\u5408\u51fa\u73b0\u4e0d\u552f\u4e00\u7684\u5b57\u7b26\u65f6\uff0c\u521b\u5efa\u7684\u96c6\u5408\u4e2d\u53ea\u4f1a\u4fdd\u5b58\u4e00\u4e2a\u3002 In [40]: a_set = {1, 2, 3, 4, 5, 5, 4} In [41]: a_set Out[41]: {1, 2, 3, 4, 5} \u65e2\u7136\u96c6\u5408\u4e0e\u5b57\u5178\u90fd\u4f7f\u7528\u82b1\u62ec\u53f7\uff0c\u90a3\u4e48\u5982\u679c\u8981\u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u96c6\u5408\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u82b1\u62ec\u53f7\u8fd8\u80fd\u7528\u5417\uff1f In [42]: a_set = {} In [43]: a_set.add(1) --------------------------------------------------------------------------- AttributeError Traceback (most recent call last) <ipython-input-43-2a4eeb394ac5> in <module>() ----> 1 a_set.add(1) AttributeError: 'dict' object has no attribute 'add' \u7ed3\u679c\u62a5\u9519\u4e86\uff0c\u4fe1\u606f\u663e\u793a\u5b57\u5178\u6ca1\u6709 add \u5c5e\u6027\uff0c\u8bf4\u660e\u82b1\u62ec\u53f7\u4ec5\u80fd\u521d\u59cb\u5316\u5b57\u5178\u3002 \u96c6\u5408\u5bf9\u5e94\u7684\u51fd\u6570\u662f set()\uff0c\u56e0\u800c\u8bfb\u8005\u5fc5\u987b\u4f7f\u7528\u5b83\u521d\u59cb\u5316\u6216\u5c06\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u5b57\u5178\u3002 In [44]: a_set = set() In [45]: a_set.add(1) In [46]: a_set Out[46]: {1} 3.4.2 \u96c6\u5408\u64cd\u4f5c \u00b6 \u96c6\u5408\u7684\u5e38\u89c1\u7528\u5904\u5c31\u662f\u8fdb\u884c\u96c6\u5408\u64cd\u4f5c\uff0c\u8fd9\u6d89\u53ca 3 \u4e2a\u57fa\u672c\u65b9\u9762\uff1a\u5408\u96c6\uff08\u5e76\u96c6\uff09\u3001\u4ea4\u96c6\u4e0e\u5dee\u96c6\u3002 \u5408\u96c6 \u00b6 \u5408\u96c6\u4f7f\u7528 union() \u65b9\u6cd5\u3002 In [47]: a_set = set([1, 2, 3, 4, 5]) In [48]: b_set = set([4, 5, 6, 7, 8]) In [49]: a_set Out[49]: {1, 2, 3, 4, 5} In [50]: b_set Out[50]: {4, 5, 6, 7, 8} In [51]: a_set.union(b_set) Out[51]: {1, 2, 3, 4, 5, 6, 7, 8} \u4ea4\u96c6 \u00b6 \u4ea4\u96c6\u4f7f\u7528 intersection() \u65b9\u6cd5\u3002 In [52]: a_set.intersection(b_set) Out[52]: {4, 5} \u5dee\u96c6 \u00b6 \u5dee\u96c6\u4f7f\u7528 difference() \u65b9\u6cd5\u3002 In [53]: a_set.difference(b_set) Out[53]: {1, 2, 3} 3.4.3 \u51b0\u51bb\u96c6 \u00b6 \u524d\u9762\u4e00\u5c0f\u8282\u63d0\u5230\uff0c\u96c6\u5408\u662f\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b\u3002\u5728\u5b9e\u9645\u7684\u6570\u636e\u5206\u6790\u5f53\u4e2d\uff0c\u6709\u65f6\u5e0c\u671b\u96c6\u5408\u5b58\u50a8\u7684\u6570\u636e\u4e0d\u80fd\u6539\u53d8\uff0c\u4ee5\u9632\u6b62\u4fe1\u606f\u88ab\u6076\u610f\u7be1\u6539\u6216\u8005\u5176\u4ed6\u6570\u636e\u5931\u771f\u7684\u60c5\u51b5\u3002 \u51b0\u51bb\u96c6\uff08frozenset\uff09\u63d0\u4f9b\u4e86\u96c6\u5408\u7684\u4e0d\u53ef\u53d8\u7248\u672c\uff0c\u5b83\u7684\u5185\u5bb9\u4e0d\u80fd\u6539\u53d8\uff0c\u56e0\u6b64\u4e0d\u5b58\u5728 add() \u4e0e remove() \u65b9\u6cd5\u3002frozenset() \u51fd\u6570\u53ef\u4ee5\u5c06\u8f93\u5165\u7684\u8fed\u4ee3\u5bf9\u8c61\u8f6c\u6362\u4e3a\u51b0\u51bb\u96c6\u3002 In [1]: fs = frozenset(['a', 'b']) In [2]: fs Out[2]: frozenset({'a', 'b'}) In [3]: fs.remove('a') --------------------------------------------------------------------------- AttributeError Traceback (most recent call last) <ipython-input-3-b55f44b7e2c9> in <module>() ----> 1 fs.remove('a') AttributeError: 'frozenset' object has no attribute 'remove' In [4]: fs.add('c') --------------------------------------------------------------------------- AttributeError Traceback (most recent call last) <ipython-input-4-34531eab3bc0> in <module>() ----> 1 fs.add('c') AttributeError: 'frozenset' object has no attribute 'add' \u7531\u4e8e\u51b0\u51bb\u96c6\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u4f5c\u5b57\u5178\u7684\u952e\u3002 3.5 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 \u672c\u7ae0\u8be6\u7ec6\u5730\u4ecb\u7ecd\u4e86 Python \u5185\u7f6e\u7684\u51e0\u4e2a\u91cd\u8981\u57fa\u672c\u6570\u636e\u7ed3\u6784\uff1a \u5217\u8868 \u5143\u7ec4 \u5b57\u5178 \u96c6\u5408 \u5176\u4e2d\uff0c\u5217\u8868\u662f\u65e5\u5e38\u5de5\u4f5c\u5206\u6790\u4e3b\u8981\u63a5\u89e6\u548c\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u3002\u5143\u7ec4\u4e0e\u5217\u8868\u6781\u4e3a\u76f8\u4f3c\uff0c\u4f46\u5b83\u4eec\u5b58\u5728\u4e00\u4e2a\u91cd\u8981\u7684\u533a\u522b\u2014\u2014\u5143\u7ec4\u4e0d\u53ef\u4fee\u6539\uff01\u5b57\u5178\u5b9e\u73b0\u4e86\u952e\u4e0e\u503c\u7684\u914d\u5bf9\uff0c\u53ef\u4ee5\u5feb\u901f\u5b9e\u73b0\u5185\u5bb9\u7684\u7d22\u5f15\u3002\u96c6\u5408\u76f8\u5bf9\u800c\u8a00\u5c11\u7528\u4e9b\uff0c\u5b83\u5b58\u50a8\u6570\u636e\u552f\u4e00\u503c\u7684\u4e00\u4e2a\u96c6\u5408\u3002\u8fd9\u51e0\u8005\u4f7f\u7528\u7684\u521d\u59cb\u5316\u7b26\u53f7\u6216\u662f\u51fd\u6570\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u8bfb\u8005\u9700\u8981\u80fd\u591f\u533a\u5206\u5e76\u719f\u7ec3\u638c\u63e1\u3002\u672c\u7ae0\u7684\u7edd\u5927\u90e8\u5206\u5185\u5bb9\u548c\u6838\u5fc3\u90fd\u653e\u5728\u5217\u8868\u90e8\u5206\uff0c\u5217\u8868\u7684\u91cd\u8981\u6027\u6beb\u65e0\u7591\u95ee\u662f\u51e0\u8005\u7684\u7b2c\u4e00\uff0c\u7406\u89e3\u5217\u8868\u4e5f\u53ef\u4ee5\u5feb\u901f\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\u5176\u4ed6\u51e0\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u610f\u4e49\u4e0e\u64cd\u4f5c\u65b9\u6cd5\u3002\u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\uff0c\u672c\u4e66\u4e5f\u5c06\u66f4\u6df1\u5165\u5730\u4ecb\u7ecd\u548c\u8fd0\u7528\u5b83\u4eec\u3002","title":"\u7b2c 3 \u7ae0 \u57fa\u672c\u6570\u636e\u7ed3\u6784"},{"location":"03-data-structure/#3","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a \u5217\u8868\u53ca\u64cd\u4f5c \u5143\u7ec4\u53ca\u64cd\u4f5c \u5b57\u5178\u53ca\u64cd\u4f5c \u96c6\u5408\u7b80\u4ecb \u672c\u4e66\u5728\u4e0a\u4e00\u7ae0\u4ecb\u7ecd\u4e86\u6570\u5b57\uff08\u6574\u6570\u3001\u6d6e\u70b9\u6570\uff09\u3001\u903b\u8f91\u503c\u548c\u5b57\u7b26\u4e32\u7b49 Python \u5185\u7f6e\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002\u5728\u5b9e\u9645\u7684\u64cd\u4f5c\u4e2d\uff0c\u5982\u679c\u4ec5\u4ec5\u4f9d\u8d56\u5b83\u4eec\u5f88\u96be\u9ad8\u6548\u5730\u5b8c\u6210\u590d\u6742\u7684\u6570\u636e\u5904\u7406\u4efb\u52a1\u3002\u57fa\u4e8e\u5bf9\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u6784\u5efa\uff0cPython \u62d3\u5c55\u51fa\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u4e0e\u96c6\u5408\u7b49\u66f4\u4e3a\u5b9e\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u7b80\u5316\u7a0b\u5e8f\u7684\u7f16\u5199\u4e0e\u4efb\u52a1\u7684\u5b9e\u73b0\u3002\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u5185\u7f6e\u4e8e Python\uff0c\u662f\u6570\u636e\u5206\u6790\u7ecf\u5e38\u8981\u64cd\u4f5c\u7684\u5bf9\u8c61\u3002\u672c\u7ae0\u6211\u4eec\u5c06\u5b66\u4e60\u8fd9\u51e0\u8005\u7684\u6982\u5ff5\uff0c\u5e76\u8be6\u7ec6\u4ecb\u7ecd\u5176\u64cd\u4f5c\u65b9\u6cd5\u3002","title":"\u7b2c 3 \u7ae0 \u57fa\u672c\u6570\u636e\u7ed3\u6784"},{"location":"03-data-structure/#31","text":"\u5217\u8868\uff08list\uff09\u662f Python \u4e2d\u6700\u6709\u7528\u7684\u4e00\u79cd\u5185\u7f6e\u7c7b\u578b\uff0c\u662f\u5904\u7406\u4e00\u7ec4\u6709\u5e8f\u9879\u76ee\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6216\u8005\u8bf4\uff0c\u662f\u4e00\u4e2a\u6709\u5e8f\u5bf9\u8c61\u7684\u96c6\u5408\u3002\u901a\u4fd7\u5730\u7406\u89e3\uff0c\u5217\u8868\u5373\u5e8f\u5217\uff0c\u5b83\u662f\u4e00\u7cfb\u5217\u6570\u503c\u7684\u5e8f\u5217\u3002\u5728\u524d\u6587\u4ecb\u7ecd\u7684\u5b57\u7b26\u4e32\u4e2d\uff0c\u5b57\u7b26\u4e32\u5305\u542b\u7684\u503c\u662f\u4e00\u4e2a\u4e00\u4e2a\u5b57\u7b26\u3002\u800c\u5728\u5217\u8868\u4e2d\uff0c\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\u3002\u5217\u8868\u7684\u503c\u4e00\u822c\u4e5f\u79f0\u4e3a\u5217\u8868\u7684\u5143\u7d20\u3002\u5217\u8868\u7684\u5143\u7d20\u901a\u8fc7\u82f1\u6587\u9017\u53f7\u5206\u9694\uff0c\u5e76\u5305\u542b\u5728\u65b9\u62ec\u53f7\u5185\u3002","title":"3.1 \u5217\u8868"},{"location":"03-data-structure/#311","text":"\u4e0b\u9762\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5217\u8868\u5b58\u50a8\u82f1\u8bed\u4e2d\u7684 5 \u4e2a\u5143\u97f3\u5b57\u6bcd\uff1a In [1]: vowels = ['a', 'e', 'i', 'o', 'u'] In [2]: vowels Out[2]: ['a', 'e', 'i', 'o', 'u'] \u8bfb\u8005\u53ef\u4ee5\u4e0d\u6dfb\u52a0\u4efb\u4f55\u5143\u7d20\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u5217\u8868\uff1a In [3]: array_init = [] In [4]: array_init Out[4]: [] \u8bfb\u8005\u5982\u679c\u60f3\u8981\u63d0\u53d6\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u4f7f\u7528\u7d22\u5f15\u662f\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c06\u7d22\u5f15\u503c\u5199\u5728\u53d8\u91cf\u540d\u540e\u7684\u65b9\u62ec\u53f7\u5185\uff0c\u5982\u63d0\u53d6\u5217\u8868 vowels \u4e2d\u7684 i\uff1a In [5]: vowels[2] Out[5]: 'i' \u8fd9\u91cc\u4e3a\u4ec0\u4e48\u65b9\u62ec\u53f7\u5185\u586b\u5165\u7684\u662f 2 \u800c\u4e0d\u662f 3 \u8ddf Python \u7684\u7d22\u5f15\u673a\u5236\u6709\u5173\u2014\u2014Python \u7684\u7d22\u5f15\u662f\u4ece 0 \u5f00\u59cb\u7684\uff08\u5f53\u7136\u4e5f\u6709\u4ece 1 \u5f00\u59cb\u7d22\u5f15\u7684\u8bed\u8a00\uff0c\u6bd4\u5982\u6570\u636e\u5206\u6790\u4e2d\u4e5f\u975e\u5e38\u6d41\u884c\u7684 R \u8bed\u8a00\uff09\u3002 \u56e0\u6b64\u5217\u8868 vowels \u5143\u7d20\u4e0e\u5176\u7684\u7d22\u5f15\u4e4b\u95f4\u6709\u4ee5\u4e0b\u5bf9\u5e94\u5173\u7cfb\uff1a a e i o u 0 1 2 3 4 \u524d\u6587\u63d0\u5230\uff0c\u5217\u8868\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\uff0c\u56e0\u6b64\u5217\u8868\u53ef\u4ee5\u5d4c\u5957\u5217\u8868\u3002\u4f8b\u5982\uff0c\u8bfb\u8005\u53ef\u4ee5\u7528\u4ee5\u4e0b\u5217\u8868\u6765\u4f9d\u6b21\u8868\u793a\u4e24\u4e2a\u957f\u65b9\u5f62\u7684\u540d\u79f0\u3001\u9762\u79ef\u4e0e\u76f8\u5e94\u7684\u957f\u548c\u5bbd\uff1a In [7]: rectangle = ['\u957f\u65b9\u5f621', 20, [4, 5], '\u957f\u65b9\u5f622', 16, [4, 4]] In [8]: rectangle Out[8]: ['\u957f\u65b9\u5f621', 20, [4, 5], '\u957f\u65b9\u5f622', 16, [4, 4]] \u5982\u679c\u5217\u8868\u592a\u957f\uff0c\u4e0d\u65b9\u4fbf\u76f4\u63a5\u89c2\u5bdf\u5217\u8868\u7684\u957f\u5ea6\uff0c\u8bfb\u8005\u53ef\u4ee5\u5229\u7528 len() \u51fd\u6570\u8fdb\u884c\u8ba1\u7b97\u3002 In [9]: len(rectangle) Out[9]: 6 \u7ed3\u679c\u663e\u793a rectangle \u957f\u5ea6\u4e3a 6\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528\u7d22\u5f15\u503c 0 \u5230 5 \u63d0\u53d6 rectangle \u7684\u5143\u7d20\u3002\u518d\u6b21\u6ce8\u610f Python \u7d22\u5f15\u503c\u662f\u4ece 0 \u5f00\u59cb\u7684\uff0c\u5982\u679c\u4f7f\u7528\u7684\u7d22\u5f15\u503c\u8d85\u51fa\u754c\u9650\uff0cPython \u4f1a\u62a5\u9519\u63d0\u793a\u6211\u4eec\u4f7f\u7528\u7684\u5217\u8868\u7d22\u5f15\u8d85\u51fa\u8303\u56f4\u3002 In [10]: rectangle[6] --------------------------------------------------------------------------- IndexError Traceback (most recent call last) <ipython-input-10-6e16763c0048> in <module>() ----> 1 rectangle[6] IndexError: list index out of range \u9664\u4e86\u4ece\u5934\u521b\u5efa\u4e00\u4e2a\u5217\u8868\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 list() \u51fd\u6570\u5c06\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u5217\u8868\uff0c\u5982\u4e0b\u9762\u7684\u5b57\u7b26\u4e32\uff1a In [17]: aseq = \"atggctaggc\" In [18]: list(aseq) Out[18]: ['a', 't', 'g', 'g', 'c', 't', 'a', 'g', 'g', 'c']","title":"3.1.1 \u5217\u8868\u7684\u521b\u5efa"},{"location":"03-data-structure/#312","text":"\u548c\u5b57\u7b26\u4e32\u4e0d\u540c\uff0c\u5217\u8868\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u53ea\u9700\u8981\u5bf9\u6307\u5b9a\u7684\u5217\u8868\u5143\u7d20\u91cd\u65b0\u8d4b\u503c\u5373\u53ef\u3002 \u4f8b\u5982\uff0c\u7528\u4e00\u4e2a\u5217\u8868\u5b58\u50a8 10 \u4ee5\u5185\u7684\u5947\u6570\uff1a In [11]: odd_numbers = [1, 3, 5, 7, 8] \u5f53\u8bfb\u8005\u53d1\u73b0\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5199\u9519\u4e86\uff0c\u4e0d\u9700\u8981\u50cf\u4ee5\u4e0b\u91cd\u65b0\u521b\u5efa\u5217\u8868\u3002 In [12]: odd_numbers = [1, 3, 5, 7, 9] \u4e0a\u9762\u8bfb\u8005\u9700\u8981\u91cd\u65b0\u8f93\u5165\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5217\u8868\u6765\u7ea0\u6b63\u4e4b\u524d\u9519\u8bef\u7684\u8f93\u5165\uff0c\u4f46\u5176\u5b9e\u53ea\u9700\u8981\u4fee\u6539\u5199\u9519\u7684\u5143\u7d20\uff0c\u5373\u5229\u7528\u7d22\u5f15\u5bf9\u9519\u8bef\u7684\u5143\u7d20\u91cd\u65b0\u8d4b\u503c\u3002 In [13]: odd_numbers = [1, 3, 5, 7, 8] In [14]: odd_numbers[4] = 9 In [15]: odd_numbers Out[15]: [1, 3, 5, 7, 9] \u8bfb\u8005\u9664\u4e86\u4f7f\u7528\u81ea\u7136\u6570\u8fdb\u884c\u7d22\u5f15\u5143\u7d20\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u8d1f\u6574\u6570\u8fdb\u884c\u53cd\u5411\u7d22\u5f15\uff0c\u6bd4\u5982 odd_numbers[-1] \u4e5f\u5bf9\u5e94\u7740 9\uff1a In [16]: odd_numbers[-1] Out[16]: 9 \u6211\u4eec\u4f9d\u65e7\u53ef\u4ee5\u7528\u4e4b\u524d\u7684\u5217\u8868 vowels \u6765\u8868\u793a\u5217\u8868\u5143\u7d20\u4e0e\u53cd\u5411\u7d22\u5f15\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u5982\u4e0b\uff1a a e i o u -5 -4 -3 -2 -1","title":"3.1.2 \u4fee\u6539\u5217\u8868\u5143\u7d20"},{"location":"03-data-structure/#313","text":"\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u5217\u8868\u5143\u7d20\u975e\u5e38\u591a\uff0c\u800c\u6211\u4eec\u60f3\u8981\u5bf9\u5217\u8868\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c\u6216\u53d8\u6362\uff0c\u96be\u9053\u8981\u4e00\u4e2a\u4e00\u4e2a\u5229\u7528\u7d22\u5f15\u53d6\u51fa\uff0c\u7136\u540e\u4fee\u6539\u5417\uff1f\u9010\u4e00\u8bbf\u95ee\u5217\u8868\u7684\u5143\u7d20\u79f0\u4e3a\u904d\u5386\u5217\u8868\u3002\u8fd9\u91cc\u9700\u8981\u521d\u6b65\u501f\u52a9\u4e0b\u4e00\u7ae0\u4ecb\u7ecd\u7684\u5faa\u73af\u6765\u89e3\u51b3\u7c7b\u4f3c\u7684\u95ee\u9898\u3002 \u5faa\u73af\u7684\u529b\u91cf\u5728\u4e8e\u5c06\u5355\u4e00\u67af\u71e5\u7684\u91cd\u590d\u6027\u5de5\u4f5c\u4ea4\u7ed9\u673a\u5668\u53bb\u5b9e\u73b0\uff0c\u800c\u8bfb\u8005\u53ea\u9700\u8981\u5173\u6ce8\u53bb\u6389\u5faa\u73af\u7684\u64cd\u4f5c\u672c\u8eab\u3002 \u6700\u5e38\u7528\u7684\u5faa\u73af\u7ed3\u6784\u662f for \u5faa\u73af\u3002\u5982\u679c\u9700\u8981\u9010\u4e00\u6253\u5370 10 \u4ee5\u5185\u7684\u5947\u6570\uff0c\u8bfb\u8005\u4e0d\u9700\u8981\u9010\u6b65\u4f7f\u7528 print() \u51fd\u6570\u6253\u5370\u5217\u8868\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u3002 print(odd_numbers[0]) print(odd_numbers[1]) print(odd_numbers[2]) print(odd_numbers[3]) print(odd_numbers[4]) \u8bfb\u8005\u53ea\u9700\u8981\u4e24\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5217\u8868\u7684\u904d\u5386\uff0c\u5982\u4e0b\u6240\u793a\uff1a In [24]: for i in odd_numbers: print(i) 1 3 5 7 9 \u8fd9\u91cc\u5217\u8868 odd_numbers \u4e2d\u5143\u7d20\u7684\u503c\u4f1a\u9010\u4e2a\u4f20\u7ed9 i\uff0c\u7136\u540e\u901a\u8fc7 print() \u51fd\u6570\u5c06i\u7684\u503c\u8f93\u51fa\u6253\u5370\u3002\u4f7f\u7528\u5faa\u73af\u9664\u4e86\u4ee3\u7801\u66f4\u6e05\u6670\u7b80\u6d01\uff0c\u53e6\u4e00\u4e2a\u597d\u5904\u662f\u8bfb\u8005\u4e0d\u9700\u8981\u77e5\u9053\u5217\u8868\u6709\u591a\u957f\uff01\u65e2\u7136 for \u5faa\u73af\u53ef\u4ee5\u904d\u5386\u5217\u8868\u4e2d\u6240\u6709\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u5982\u679c\u5143\u7d20\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5b83\u4f1a\u5bf9\u8fd9\u4e2a\u5217\u8868\u63a5\u7740\u904d\u5386\u5417\uff1f \u5047\u8bbe\u521b\u5efa\u4e00\u4e2a\u5217\u8868\u5b58\u50a8\u5c0f\u660e\u3001\u5c0f\u7ea2\u3001\u5c0f\u84dd3\u4e2a\u4eba\u8df3\u8fdc\u7684\u6210\u7ee9\u8bb0\u5f55\uff0c\u8868\u793a\u5982\u4e0b\uff1a In [26]: nested_list = ['\u8bb0\u5f55', 3, ['\u5c0f\u660e', '\u5c0f\u7ea2', '\u5c0f\u84dd'], [2.30, 2.41, 2.33]] \u4f7f\u7528 for \u5faa\u73af\u662f\u5c06\u8be5\u5217\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u4e00\u4e2a\u4e00\u4e2a\u8f93\u51fa\u5462\uff1f\u8fd8\u662f\u5176\u4ed6\u7684\u7ed3\u679c\uff1f In [27]: for i in nested_list: ...: print(i) ...: \u8bb0\u5f55 3 ['\u5c0f\u660e', '\u5c0f\u7ea2', '\u5c0f\u84dd'] [2.3, 2.41, 2.33] \u7ed3\u679c\u663e\u793a\uff1afor \u5faa\u73af\u5e76\u6ca1\u6709\u5c06\u5217\u8868\u6240\u6709\u5143\u7d20\u5355\u4e2a\u4f20\u5165\u53d8\u91cf i\uff0c\u800c\u662f\u5c06\u5217\u8868\u6700\u5916\u9762\u4e00\u5c42\u7684\u5143\u7d20\u4f20\u5165\u4e86\u53d8\u91cf i\u3002\u6253\u4e2a\u6bd4\u65b9\uff0c\u7b80\u5355\u7684\u5217\u8868\u50cf\u4e00\u5c42\u6d0b\u8471\uff0c\u800c\u5d4c\u5957\u4e86\u5217\u8868\u7684\u5217\u8868\u76f8\u5f53\u4e8e\u591a\u5c42\u7684\u6d0b\u8471\uff0cfor \u5faa\u73af\u5b83\u53ea\u8d1f\u8d23\u5265\u5f00\u4e00\u5c42\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u60f3\u5265\u5f00\u4f8b\u5b50\u4e2d\u7684\u4e24\u5c42\u6d0b\u8471 nested_list\uff0c\u8bfb\u8005\u9700\u8981\u4f7f\u7528\u4e24\u6b21 for \u5faa\u73af\u3002for \u5faa\u73af\u64cd\u4f5c\u548c\u4f7f\u7528\u672c\u4e66\u4e0b\u4e00\u7ae0\u4f1a\u8be6\u7ec6\u5730\u8fdb\u884c\u4ecb\u7ecd\u3002","title":"3.1.3 \u904d\u5386\u5217\u8868"},{"location":"03-data-structure/#314","text":"\u5217\u8868\u64cd\u4f5c\u7b26\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u4fbf\u5229\u5730\u64cd\u4f5c\u5217\u8868\uff0c\u6709\u65f6\u5019\u8bfb\u8005\u4f1a\u611f\u89c9\u4f7f\u7528\u5b83\u4eec\u5982\u540c\u4f7f\u7528\u6570\u503c\u7684\u52a0\u51cf\u4e58\u9664\u4e00\u6837\u7b80\u5355\u3002","title":"3.1.4 \u5217\u8868\u64cd\u4f5c\u7b26"},{"location":"03-data-structure/#315","text":"\u9664\u4e86\u4e0a\u4e00\u5c0f\u8282\u63d0\u5230\u7684 + \u64cd\u4f5c\u7b26\u4e0e * \u64cd\u4f5c\u7b26\uff0c\u5192\u53f7 : \u64cd\u4f5c\u7b26\u53ef\u4ee5\u5bf9\u5217\u8868\u6267\u884c\u5207\u7247\u64cd\u4f5c\u3002\u5207\u7247\u64cd\u4f5c\u662f\u5229\u7528\u5192\u53f7\u64cd\u4f5c\u7b26\u8fdb\u884c\u53d6\u5b50\u96c6\u7684\u8fc7\u7a0b\u3002\u56e0\u4e3a\u8be5\u64cd\u4f5c\u7b26\u7ecf\u5e38\u4f7f\u7528\uff0c\u6240\u4ee5\u5355\u5217\u4e00\u5c0f\u8282\u8fdb\u884c\u4ecb\u7ecd\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u5b58\u5728\u4e0b\u9762 1 \u4e2a\u5305\u542b 7 \u4e2a\u5b57\u6bcd\u7684\u5217\u8868\uff1a In [34]: letters7 = ['a', 'b', 'c', 'd', 'e', 'f', 'g'] \u8bfb\u8005\u5982\u679c\u53ea\u60f3\u8981 a\u3001b\u3001c\u3001d \u56db\u4e2a\u5b57\u6bcd\uff0c\u90a3\u4e48\u5207\u7247\u64cd\u4f5c\u5982\u4e0b\uff1a In [37]: you_want = letters7[0:4] In [38]: you_want Out[38]: ['a', 'b', 'c', 'd'] \u5217\u8868\u7d22\u5f15\u89c4\u5219\u662f start:stop:step\uff0c\u5176\u4e2d stop \u503c\u4e0d\u88ab\u5305\u542b\u5728\u5185\uff08\u5373\u533a\u95f4\u524d\u95ed\u540e\u5f00\uff09\u3002\u4e0a\u9762\u4ee3\u7801\u4e2d start \u5bf9\u5e94 0\uff08\u518d\u6b21\u63d0\u9192 Python \u7d22\u5f15\u4ece 0 \u5f00\u59cb\uff09\uff0cstop \u5bf9\u5e94 4\uff0c\u800c step \u9ed8\u8ba4\u4e3a 1\uff0c\u53ef\u4ee5\u7701\u7565\u3002 \u7406\u89e3\u4e86\u5207\u7247\u7684\u89c4\u5219\uff0c\u8bfb\u8005\u5c31\u53ef\u4ee5\u77e5\u9053\u4e0b\u9762\u7684\u64cd\u4f5c\u4f1a\u5f97\u5230\u4e00\u6837\u7684\u7ed3\u679c\u3002 In [39]: letters7[0:4:1] Out[39]: ['a', 'b', 'c', 'd'] \u7d22\u5f15\u7684\u8d77\u59cb\u4f4d\u7f6e\u4e5f\u53ef\u4ee5\u7701\u7565\uff0c\u9ed8\u8ba4\u4ece 0 \u5f00\u59cb\u3002 In [40]: letters7[:4] Out[40]: ['a', 'b', 'c', 'd'] \u7d22\u5f15\u7684\u7ec8\u6b62\u4f4d\u7f6e\u4e5f\u53ef\u4ee5\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u5217\u8868\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 In [41]: letters7[:7] Out[41]: ['a', 'b', 'c', 'd', 'e', 'f', 'g'] In [42]: letters7[4:] Out[42]: ['e', 'f', 'g'] \u6ce8\u610f\uff0c\u52a0 : \u64cd\u4f5c\u7b26\u4e0e\u4e0d\u52a0 : \u662f\u4e0d\u540c\u7684\u3002\u52a0 : \u64cd\u4f5c\u7b26\u7ed3\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u800c\u4e0d\u52a0\u8fd4\u56de\u7684\u662f\u5143\u7d20\u672c\u8eab\u3002 In [43]: letters7[-1] Out[43]: 'g' In [44]: letters7[-1:] Out[44]: ['g'] \u5982\u679c\u7406\u89e3\u4e86\u4e0a\u9762\u7684\u64cd\u4f5c\uff0c\u7406\u89e3\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u7ed3\u679c\u4e5f\u987a\u7406\u6210\u7ae0\uff1a In [45]: letters7[::1] Out[45]: ['a', 'b', 'c', 'd', 'e', 'f', 'g'] In [46]: letters7[::2] Out[46]: ['a', 'c', 'e', 'g'] \u6b65\u957f\u8fd8\u53ef\u4ee5\u53d6\u8d1f\u6574\u6570\uff0c\u4ee3\u8868\u9006\u5e8f\u5207\u7247\u3002 In [47]: letters7[::-1] Out[47]: ['g', 'f', 'e', 'd', 'c', 'b', 'a'] In [48]: letters7[::-2] Out[48]: ['g', 'e', 'c', 'a'] \u53e6\u5916\uff0c\u5207\u7247\u8fd0\u7b97\u7b26\u653e\u5230\u8d4b\u503c\u8bed\u53e5\u7b49\u53f7\u5de6\u8fb9\u7684\u65f6\u5019\u53ef\u4ee5\u5bf9\u591a\u4e2a\u5143\u7d20\u8fdb\u884c\u66f4\u65b0\u3002 In [49]: letters7[0:2] = ['h', 'i'] In [50]: letters7 Out[50]: ['h', 'i', 'c', 'd', 'e', 'f', 'g'] \u6ce8\u610f\uff0c\u5de6\u53f3\u4e24\u8fb9\u53ef\u4ee5\u4e0d\u7b49\u957f\u3002 In [51]: letters7[0:2] = ['a'] In [52]: letters7 Out[52]: ['a', 'c', 'd', 'e', 'f', 'g'] In [53]: letters7[0:1] = ['a', 'b'] In [54]: letters7 Out[54]: ['a', 'b', 'c', 'd', 'e', 'f', 'g'] \u5982\u679c\u662f\u5355\u4e2a\u5143\u7d20\uff0c\u7b49\u53f7\u53f3\u4fa7\u4e0d\u52a0\u65b9\u62ec\u53f7\u4e5f\u884c\uff1a In [55]: letters7[0:2] = 'h' In [56]: letters7 Out[56]: ['h', 'c', 'd', 'e', 'f', 'g']","title":"3.1.5 \u5217\u8868\u5207\u7247"},{"location":"03-data-structure/#316","text":"Python \u4e3a\u5217\u8868\u63d0\u4f9b\u4e86\u5f88\u591a\u65b9\u6cd5\uff0c\u7528\u6765\u7b80\u5316\u5217\u8868\u7684\u5404\u9879\u5e38\u7528\u64cd\u4f5c\u3002\u5e38\u7528\u64cd\u4f5c\u5305\u62ec\u6dfb\u52a0\u5143\u7d20\u3001\u5220\u9664\u5143\u7d20\u3001\u63d2\u5165\u5143\u7d20\u7b49\u3002\u672c\u5c0f\u8282\u5c06\u4e00\u4e00\u8fdb\u884c\u4ecb\u7ecd\u3002 \u6ce8\u610f\uff0c\u5f53\u4e0b\u6587\u63d0\u53ca\u65b9\u6cd5\u65f6\uff0c\u4e00\u822c\u6307\u5728\u53d8\u91cf\u540d\u540e\u52a0\u70b9\u53f7\u7136\u540e\u52a0\u51fd\u6570\u3002\u4f8b\u5982\uff0clist.append() \u6307\u5bf9\u5217\u8868 list \u4f7f\u7528 append() \u65b9\u6cd5\u3002","title":"3.1.6 \u5217\u8868\u65b9\u6cd5\u3001\u51fd\u6570\u4e0e\u64cd\u4f5c"},{"location":"03-data-structure/#317","text":"\u5b57\u7b26\u4e32\u662f\u4e00\u7cfb\u5217\u5b57\u7b26\u7684\u5e8f\u5217\uff0c\u800c\u5217\u8868\u662f\u4e00\u7cfb\u5217\u503c\u7684\u5e8f\u5217\uff0c\u4f46\u4e00\u4e2a\u7531\u5b57\u7b26\u7ec4\u6210\u7684\u5217\u8868\u662f\u4e0d\u540c\u4e8e\u5b57\u7b26\u4e32\u7684\u3002\u8981\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5b57\u7b26\u5217\u8868\uff0c\u53ef\u4ee5\u7528 list() \u8fd9\u4e2a\u51fd\u6570\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\u5217\u8868\u7684\u4f8b\u5b50\uff1a In [101]: s = 'interactive Python' In [102]: t = list(s) In [103]: t Out[103]: ['i', 'n', 't', 'e', 'r', 'a', 'c', 't', 'i', 'v', 'e', ' ', 'P', 'y', 't', 'h', 'o', 'n'] \u5728\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0clist() \u8fd9\u4e2a\u51fd\u6570\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u5206\u5f00\u6210\u4e00\u4e2a\u4e2a\u5b57\u7b26\uff08\u5b57\u6bcd\uff09\u3002\u5982\u679c\u8bfb\u8005\u60f3\u628a\u5b57\u7b26\u4e32\u5207\u5206\u6210\u4e00\u4e2a\u4e2a\u5355\u8bcd\uff0c\u53ef\u4ee5\u4f7f\u7528 split() \u65b9\u6cd5\uff0c\u5982\u4e0b\u6240\u793a\uff1a In [104]: s.split() Out[104]: ['interactive', 'Python'] \u6ce8\u610f\uff0c\u65b9\u6cd5\u4e2d\u6709\u4e00\u4e2a\u53ef\u9009\u7684\u53c2\u6570\u662f\u5b9a\u754c\u7b26\uff0c\u5b83\u662f\u7528\u6765\u786e\u5b9a\u5355\u8bcd\u8fb9\u754c\u7684\u3002 \u4e0b\u9762\u4f8b\u5b50\u7528\u77ed\u6a2a\u7ebf\u4f5c\u4e3a\u5b9a\u754c\u7b26\u62c6\u5206\u4e24\u4e2a\u5355\u8bcd\uff1a In [105]: s = 'interactive-Python' In [107]: s.split('-') Out[107]: ['interactive', 'Python'] \u53e6\u4e00\u4e2a\u65b9\u6cd5 join() \u7684\u529f\u80fd\u4e0e split() \u65b9\u6cd5\u7684\u529f\u80fd\u76f8\u53cd\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u7136\u540e\u628a\u6240\u6709\u5143\u7d20\u62fc\u63a5\u5230\u4e00\u8d77\u4f5c\u4e3a\u5b57\u7b26\u4e32\u3002join() \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u65b9\u6cd5\uff0c\u6240\u4ee5\u5fc5\u987b\u628a join() \u653e\u5230\u5b9a\u754c\u7b26\u540e\u9762\u6765\u8c03\u7528\uff0c\u5e76\u4e14\u4f20\u9012\u4e00\u4e2a\u5217\u8868\u4f5c\u4e3a\u53c2\u6570\u3002 In [108]: t = ['\u6211','\u662f', '\u8c01', '\uff1f'] In [109]: ''.join(t) Out[109]: '\u6211\u662f\u8c01\uff1f' \u6ce8\u610f\uff0c\u4e0a\u9762\u4ee3\u7801\u4e2d\u5b9a\u754c\u7b26\u662f\u4e00\u4e2a\u7a7a\u683c\u5b57\u7b26\u3002","title":"3.1.7 \u5217\u8868\u4e0e\u5b57\u7b26\u4e32"},{"location":"03-data-structure/#317_1","text":"\u8bf7\u8bfb\u8005\u601d\u8003\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u4e0b\u9762\u5bf9\u8c61 a \u4e0e b \u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u5417\uff1f In [4]: a = 'banana' In [5]: b = 'banana' \u5982\u679c\u628a\u5bf9\u8c61\u770b\u6210\u7bee\u5b50\uff0c\u5185\u5bb9 banana \u770b\u4f5c\u7bee\u5b50\u91cc\u7684\u9e21\u86cb\u3002\u8bfb\u8005\u73b0\u5728\u9700\u8981\u5224\u65ad\u7684\u662f\uff0c\u53d8\u91cf\u540d a \u548c b \u662f\u540c\u4e00\u4e2a\u7bee\u5b50\u7684\u4e24\u4e2a\u4fbf\u7b7e\uff08\u9e21\u86cb\u53ea\u6709\u4e00\u4e2a\uff09\uff0c\u8fd8\u662f\u4e24\u4e2a\u4e0d\u540c\u7bee\u5b50\uff08\u6bcf\u4e00\u4e2a\u7bee\u5b50\u90fd\u6709\u4e00\u4e2a\u9e21\u86cb\uff09\u7684\u4fbf\u7b7e\uff1f \u8bfb\u8005\u5982\u679c\u60f3\u8981\u5f97\u5230\u95ee\u9898\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u4f7f\u7528 i s\u64cd\u4f5c\u7b26\u3002 In [6]: a is b Out[6]: True \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u8fd0\u884c\u7ed3\u679c\u6765\u770b\uff0c\u7b54\u6848\u662f\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1aPython \u53ea\u521b\u5efa\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u5185\u5bb9\u4e3a banana \uff0c\u7136\u540e a \u548c b \u90fd\u662f\u8fd9\u4e2a\u5bf9\u8c61\u7684\u4fbf\u7b7e\u3002 \u53e6\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528 id() \u51fd\u6570\u63d0\u53d6\u5bf9\u8c61\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002\u8fd9\u5c31\u50cf\u4e2a\u4eba\u8eab\u4efd\u8bc1\u4e00\u6837\uff0c\u867d\u7136\u540c\u4e00\u4e2a\u4eba\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u79f0\u547c\uff0c\u4f46\u8eab\u4efd\u8bc1\u53f7\u7801\u53ea\u6709\u4e00\u4e2a\u3002 In [10]: id(a) Out[10]: 1691582590008 In [11]: id(b) Out[11]: 1691582590008 \u4ece\u7ed3\u679c\u4e2d\u53ef\u89c1 a \u548c b \u786e\u5b9e\u662f\u5b8c\u5168\u76f8\u540c\u7684\u3002\u90a3\u4e48\uff0c\u5982\u679c\u6539\u53d8 a\uff0cb \u4e5f\u4f1a\u6539\u53d8\u5417\uff1f In [12]: a = \"orange\" In [13]: b Out[13]: 'banana' \u7ed3\u679c\u662f\u4e0d\u4f1a\u3002\u5b9e\u9645\u4e0a\uff0cPython \u5bf9\u8c61\u662f\u5b83\u6307\u5411\u7684\u5185\u5bb9\uff0c\u53d8\u91cf\u540d a \u548c b \u672c\u8eab\u53ea\u662f\u4e00\u4e2a\u65b9\u4fbf\u4f7f\u7528\u7684\u6807\u7b7e\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u5c06\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u8d4b\u503c\u7ed9\u53d8\u91cf a \u65f6\uff0cPython \u5b9e\u9645\u4e0a\u662f\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u5185\u5bb9\u662f orange\uff0c\u7136\u540e\u7ed9\u8fd9\u4e2a\u5bf9\u8c61\u6253\u4e0a\u6807\u7b7e a\u3002 \u4e0d\u8fc7\u5982\u679c\u521b\u5efa\u4e24\u4e2a\u5217\u8868\uff0c\u5c3d\u7ba1\u5b83\u4eec\u7684\u5185\u5bb9\u76f8\u540c\uff0c\u5b83\u4eec\u4e5f\u662f\u4e0d\u540c\u7684\u5bf9\u8c61\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002 In [14]: a = [1, 2, 3] In [15]: b = [1, 2, 3] In [16]: a is b Out[16]: False In [17]: id(a) Out[17]: 1691581888264 In [18]: id(b) Out[18]: 1691582794120 \u5728\u8fd9\u4e2a\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u8bf4\u4e24\u4e2a\u5217\u8868\u662f\u76f8\u7b49\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u6709\u76f8\u540c\u7684\u5143\u7d20\uff0c\u4f46\u5b83\u4eec\u4e0d\u662f\u540c\u4e00\u4e2a\u5217\u8868\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5e76\u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u4e24\u4e2a\u5bf9\u8c61\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u5b83\u4eec\u5fc5\u7136\u662f\u76f8\u7b49\u7684\uff0c\u4f46\u5982\u679c\u5b83\u4eec\u76f8\u7b49\uff0c\u5374\u672a\u5fc5\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002 \u6ce8\u610f\uff0c\u5982\u679c\u8fd9\u91cc\u7684 b \u4e0d\u662f\u91cd\u65b0\u521b\u5efa\uff0c\u800c\u662f\u5c06 a \u8d4b\u503c\u7ed9 b\uff0c\u90a3\u4e48 a \u548c b \u5c31\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u6307\u5411\u540c\u4e00\u4e2a\u5217\u8868\u5bf9\u8c61\u3002 In [19]: b = a In [20]: a is b Out[20]: True In [21]: id(b) Out[21]: 1691581888264 \u56e0\u800c\u6211\u4eec\u5c3d\u91cf\u4e0d\u8981\u5bf9 Python \u7684\u5217\u8868\u8fdb\u884c e=f=e=c=a \u8fd9\u6837\u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u4e00\u65e6\u6211\u4eec\u4fee\u6539\u4e86\u67d0\u4e00\u4e2a\u5143\u7d20\uff0c\u5176\u4ed6\u53d8\u91cf\u5168\u90fd\u4f1a\u8ddf\u7740\u6539\u53d8\uff01 In [22]: e = a In [23]: e Out[23]: [1, 2, 3] In [24]: a Out[24]: [1, 2, 3] In [25]: a[1] = 4 In [26]: e Out[26]: [1, 4, 3] \u5230\u8fd9\u91cc\uff0cPython \u5217\u8868\u7684\u57fa\u7840\u77e5\u8bc6\u548c\u76f8\u5e94\u64cd\u4f5c\u672c\u7ae0\u90fd\u4e00\u4e00\u4f5c\u4e86\u4ecb\u7ecd\u3002\u672c\u7ae0\u7684\u5927\u90e8\u5206\u5185\u5bb9\u90fd\u662f\u5728\u8bb2\u89e3\u5217\u8868\uff0c\u5217\u8868\u4e0d\u4ec5\u4f5c\u4e3a Python \u6700\u6838\u5fc3\u7684\u6982\u5ff5\u548c\u6570\u636e\u7ed3\u6784\uff0c\u800c\u4e14\u4e5f\u662f\u7406\u89e3\u5176\u4ed6\u57fa\u7840\u6570\u636e\u7ed3\u6784\u7684\u6865\u6881\u3002\u8bfb\u8005\u5982\u679c\u638c\u63e1\u597d\u5217\u8868\uff0c\u672c\u7ae0\u63a5\u4e0b\u6765\u4ecb\u7ecd\u7684\u6570\u636e\u7ed3\u6784\u90fd\u53ef\u4ee5\u89e6\u7c7b\u65c1\u901a\uff0c\u4f7f\u7528\u548c\u64cd\u4f5c\u65b9\u6cd5\u5927\u540c\u5c0f\u5f02\u3002\u91cd\u8981\u7684\u5dee\u5f02\u90fd\u4f1a\u63d0\u793a\u548c\u5f3a\u8c03\uff0c\u8bfb\u8005\u9700\u8981\u7559\u5fc3\u6ce8\u610f\u3002","title":"3.1.7 \u5217\u8868\u5bf9\u8c61\u4e0e\u503c"},{"location":"03-data-structure/#32","text":"\u5143\u7ec4\uff08tuple\uff09\u5c31\u662f\u4e0d\u53ef\u66f4\u6539\u7684\u5217\u8868\uff0c\u4e00\u65e6\u521b\u5efa\uff0c\u4fbf\u4e0d\u53ef\u66f4\u6539\u3002\u9664\u4e86\u8868\u793a\u7684\u65b9\u5f0f\u6709\u70b9\u4e0d\u4e00\u6837\u3001\u5143\u7ec4\u7684\u5143\u7d20\u4e0d\u53ef\u66f4\u6539\uff0c\u5176\u4ed6\u7684\u7279\u6027\u4e0e\u524d\u9762\u5b66\u4e60\u7684\u5217\u8868\u57fa\u672c\u4e00\u81f4\u3002\u56e0\u6b64\uff0c\u8bfb\u8005\u5728\u638c\u63e1\u5217\u8868\u7528\u6cd5\u4e4b\u540e\uff0c\u5143\u7ec4\u7684\u5b66\u4e60\u5c06\u53d8\u5f97\u76f8\u5bf9\u7b80\u5355\u3002","title":"3.2 \u5143\u7ec4"},{"location":"03-data-structure/#321","text":"In [1]: a_tuple = (1, 2, 3) In [2]: a_list = [1, 2, 3] \u4e0a\u9762\u4ee3\u7801\u5206\u522b\u521b\u5efa\u4e86\u4e00\u4e2a\u5143\u7ec4\u548c\u5217\u8868\uff0c\u53ef\u4ee5\u6e05\u6670\u770b\u5230\u5b83\u4eec\u5b9a\u4e49\u7684\u5dee\u522b\u6240\u5728\u3002\u4e0d\u8fc7\uff0c\u5176\u5b9e\u5143\u7ec4\u7684\u8bed\u6cd5\u662f\u4e00\u7cfb\u5217\u7528\u9017\u53f7\u5206\u9694\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u62ec\u53f7\u662f\u53ef\u4ee5\u7701\u7565\u7684\u3002 In [6]: another_tuple = 1,2,3 In [7]: type(another_tuple) Out[7]: tuple \u4f5c\u4e3a\u521d\u5b66\u8005\uff0c\u521b\u5efa\u5143\u7ec4\u65f6\u5c3d\u91cf\u4f7f\u7528\u62ec\u53f7\uff0c\u8fd9\u6837\u5728\u4e66\u5199\u548c\u67e5\u770b\u4ee3\u7801\u65f6\u53ef\u4ee5\u975e\u5e38\u6e05\u695a\u5730\u533a\u5206\u4ec0\u4e48\u662f\u5217\u8868\u3001\u4ec0\u4e48\u662f\u5143\u7ec4\u3002Python \u4e2d\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\u5728\u8868\u793a\u4e0a\u90fd\u6709\u975e\u5e38\u9c9c\u660e\u7684\u7279\u70b9\uff0c\u8fd9\u90fd\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u6784\u5efa\u4f18\u826f\u7684\u4ee3\u7801\u3002 \u8bfb\u8005\u5982\u679c\u521b\u5efa\u7684\u5143\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\uff1a\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u540e\u9700\u8981\u4e00\u4e2a\u9017\u53f7\u3002 \u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a In [8]: 1 Out[8]: 1 In [9]: (1) Out[9]: 1 In [10]: 1, Out[10]: (1,) In [11]: (1,) Out[11]: (1,) \u524d\u4e24\u4e2a\u547d\u4ee4\u521b\u5efa\u7684\u90fd\u662f\u6570\u5b57 1\uff0c\u540e\u4e24\u4e2a\u547d\u4ee4\u521b\u5efa\u7684\u624d\u662f\u5143\u7ec4\uff0c\u5305\u542b\u5143\u7d20\u6570\u5b57 1\u3002 \u9664\u4e86\u4f7f\u7528\u9017\u53f7\u5206\u9694\u521b\u5efa\u5143\u7ec4\uff0c\u521b\u5efa\u5143\u7ec4\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528 tuple() \u51fd\u6570\u3002\u5982\u679c\u53c2\u6570\u4e3a\u4e00\u4e2a\u5e8f\u5217\uff08\u6bd4\u5982\u5b57\u7b26\u4e32\u3001\u5217\u8868\u6216\u8005\u5143\u7ec4\uff09\uff0c\u7ed3\u679c\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u4ee5\u8be5\u5e8f\u5217\u5143\u7d20\u7ec4\u6210\u7684\u5143\u7ec4\u3002 In [14]: tuple(\"Python\") Out[14]: ('P', 'y', 't', 'h', 'o', 'n') In [15]: tuple([\"I\", \"am\", [\"learning\", \"Python\"]]) Out[15]: ('I', 'am', ['learning', 'Python'])","title":"3.2.1 \u5143\u7ec4\u7684\u521b\u5efa"},{"location":"03-data-structure/#322","text":"\u80fd\u9002\u7528\u4e8e\u5217\u8868\u7684\u64cd\u4f5c\u7b26\u548c\u65b9\u6cd5\uff0c\u57fa\u672c\u4e5f\u9002\u7528\u4e8e\u5143\u7ec4\u3002","title":"3.2.2 \u5143\u7ec4\u64cd\u4f5c"},{"location":"03-data-structure/#323","text":"\u5b66\u5230\u8fd9\u91cc\uff0c\u8bfb\u8005\u53ef\u80fd\u4f1a\u4ea7\u751f\u7591\u95ee\uff1a\u5143\u7ec4\u80fd\u505a\u7684\u4e8b\u60c5\u5217\u8868\u597d\u50cf\u90fd\u80fd\u505a\uff0c\u5217\u8868\u8fd8\u6ca1\u6709\u5143\u7ec4\u8fd9\u4e48\u591a\u7684\u7ea6\u675f\uff0c\u90a3\u4e48\u53ea\u7528\u5217\u8868\u4e0d\u662f\u66f4\u597d\u5417\uff1f \u5143\u7ec4\u76f8\u6bd4\u4e8e\u5217\u8868\u7684\u4e00\u4e2a\u4f18\u70b9\u662f\u53ef\u4ee5\u4f7f\u4ee3\u7801\u66f4\u5b89\u5168\uff0c\u7279\u522b\u662f\u8ddf\u6570\u636e\u6709\u5173\u7684\uff0c\u5b83\u4e0d\u80fd\u4fee\u6539\u7684\u5c5e\u6027\u770b\u8d77\u6765\u662f\u4e00\u5c42\u7075\u6d3b\u6027\u9650\u5236\uff0c\u5176\u5b9e\u4e5f\u662f\u4e00\u5c42\u5b89\u5168\u6027\u7684\u4fdd\u969c\uff0c\u800c\u4e14\u8fd9\u4e2a\u5c5e\u6027\u8ba9\u5143\u7ec4\u50cf\u4e00\u4e2a\u5750\u6807\u7cfb\u7edf\uff08\u4e2d\u5b66\u6570\u5b66\u4e5f\u7528\u62ec\u53f7\u6765\u586b\u5165\u5750\u6807\u5e76\u7528\u9017\u53f7\u5206\u9694\uff09\uff0c\u6bd4\u5982\u4e09\u4e2a\u5143\u7d20 c(x,y,z)\uff0c\u6240\u4ee5\u5b83\u5e7f\u6cdb\u7528\u4e8e\u53c2\u6570\u7684\u4f20\u9012\u3002\u5173\u4e8e\u53c2\u6570\u4f20\u9012\uff0c\u672c\u4e66\u5728\u51fd\u6570\u7ae0\u8282\u4f1a\u66f4\u8be6\u7ec6\u5730\u8bb2\u8ff0\u3002\u53e6\u5916\uff0c\u5143\u7ec4\u4e00\u4e2a\u9690\u5f62\u7684\u4f18\u70b9\u662f\u5b83\u4f1a\u6bd4\u5217\u8868\u5360\u7528\u66f4\u5c11\u7684\u5185\u5b58\uff0c\u8fd9\u5728\u5927\u6570\u636e\u8ba1\u7b97\u65f6\u9700\u8981\u8003\u91cf\u3002","title":"3.2.3 \u5143\u7ec4\u4e0e\u5217\u8868\u7684\u533a\u522b"},{"location":"03-data-structure/#33","text":"\u5b57\u5178\u542b\u4e49\u548c\u8868\u793a\u90fd\u4e0e\u5176\u8bed\u4e49\u76f8\u4f3c\uff0c\u5c31\u50cf\u5c0f\u65f6\u5019\u67e5\u627e\u6c49\u5b57\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u62fc\u97f3\u5b57\u6bcd\uff08\u6216\u7b14\u753b\uff09\u8fdb\u884c\u68c0\u7d22\u3002Python \u4e2d\u7684\u5b57\u5178\u8bfb\u8005\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u540d\u5b57\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u540d\u5b57\u67e5\u627e\u5230\u5bf9\u5e94\u7684\u6570\u503c\u3002\u5176\u4e2d\u7684\u540d\u5b57\u53eb\u505a \u952e \uff0c\u5bf9\u5e94\u7684\u6570\u503c\u7b80\u79f0 \u503c \uff0c\u6240\u4ee5\u5b57\u5178\u4e5f\u79f0 \u952e\u503c\u5bf9 \u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b57\u5178\u6ca1\u6709\u987a\u5e8f\u4e00\u8bf4\uff0c\u6240\u6709\u7684\u503c\u4ec5\u80fd\u7528\u952e\u83b7\u53d6\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5b57\u5178\u88ab\u770b\u4f5c\u65e0\u5e8f\u7684\u952e\u503c\u5bf9\u6216\u6709\u540d\u5b57\u7684\u5143\u7d20\u5217\u8868\u3002","title":"3.3 \u5b57\u5178"},{"location":"03-data-structure/#331","text":"\u4e0b\u9762\u4ee3\u7801\u4f7f\u7528\u5b57\u5178\u5b58\u50a8\u4e86 3 \u4e2a\u4eba\u7684\u4f53\u91cd\u6570\u636e\u3002 In [5]: weight = {'\u5c0f\u7ea2':65, '\u5c0f\u660e':45, '\u6211':75} \u5b57\u5178\u7684\u5185\u5bb9\u653e\u5728\u82b1\u62ec\u53f7\u5185\uff0c\u952e\u503c\u5bf9\u4ee5\u82f1\u6587\u5192\u53f7\u8fde\u63a5\uff0c\u4e0d\u540c\u7684\u952e\u503c\u5bf9\u4ee5\u82f1\u6587\u9017\u53f7\u9694\u5f00\u3002 \u4e0b\u9762\u4ee3\u7801\u67e5\u770b\u5bf9\u5b57\u5178\u7684\u6253\u5370\u8f93\u51fa\uff1a In [6]: weight Out[6]: {'\u5c0f\u660e': 45, '\u5c0f\u7ea2': 65, '\u6211': 75} \u4ece\u7ed3\u679c\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u8f93\u51fa\u7684\u987a\u5e8f\u4e0e\u952e\u5165\u7684\u987a\u5e8f\u662f\u6709\u51fa\u5165\u7684\uff08\u4e5f\u6709\u53ef\u80fd\u76f8\u540c\uff09\u3002 \u6709\u4e86\u5b57\u5178\uff0c\u8bfb\u8005\u53ef\u4ee5\u6bd4\u5217\u8868\u66f4\u7b80\u5355\u548c\u76f4\u89c2\u5730\u63d0\u53d6\u5bf9\u5e94\u5185\u5bb9\u7684\u6570\u636e\u3002\u4f8b\u5982\uff0c\u60f3\u77e5\u9053\u5c0f\u660e\u7684\u4f53\u91cd\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u3002 In [7]: weight['\u5c0f\u660e'] Out[7]: 45 \u65e2\u7136\u5b57\u5178\u6709\u952e\u4e0e\u503c\u7684\u533a\u5206\uff0c\u90a3\u4e48\u8be5\u5982\u4f55\u83b7\u53d6\u952e\u4e0e\u503c\u7684\u5185\u5bb9\u5462\uff1f\u4e3a\u6b64 Python \u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5206\u522b\u662f keys() \u548c values()\u3002 In [8]: weight.keys() Out[8]: dict_keys(['\u5c0f\u7ea2', '\u5c0f\u660e', '\u6211']) In [9]: weight.values() Out[9]: dict_values([65, 45, 75]) \u56e0\u4e3a\u5b57\u5178\u9700\u8981\u552f\u4e00\u7684\u952e\u53bb\u63d0\u53d6\u6b63\u786e\u7684\u5185\u5bb9\uff08\u503c\uff09\uff0c\u6240\u4ee5\u5e76\u4e0d\u662f\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u53ef\u4ee5\u7528\u4f5c\u952e\u3002\u53ea\u6709\u4e0d\u80fd\u6539\u53d8\u7684\u5143\u7ec4\u3001\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u7b49\u80fd\u4f5c\u4e3a\u952e\u3002 \u8bfb\u8005\u5982\u679c\u60f3\u8981\u521d\u59cb\u5316\u5b57\u5178\uff0c\u7c7b\u4f3c\u4e8e\u5217\u8868\u4f7f\u7528\u7b26\u53f7 []\uff0c\u5143\u7ec4\u4f7f\u7528\u7b26\u53f7 ()\uff0c\u5b57\u5178\u4f7f\u7528\u7b26\u53f7 {}\u3002 In [10]: int_dict = {} In [11]: int_dict Out[11]: {} \u9664\u4e86\u91cd\u65b0\u521b\u5efa\u5b57\u5178\uff0c\u8fd8\u53ef\u4ee5\u628a\u4ece\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u5b57\u5178\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u6709\u4e00\u4e2a\u5b58\u50a8\u4e86 RGB 16 \u8fdb\u5236\u7684\u5217\u8868\uff0c\u6211\u4eec\u4f7f\u7528 dict() \u51fd\u6570\u5c06\u5176\u8f6c\u6362\u4e3a\u5b57\u5178\u3002 In [13]: rgb = [('red', 'ff0000'), ('green', '00ff00'), ('blue', '0000ff')] In [14]: dict(rgb) Out[14]: {'blue': '0000ff', 'green': '00ff00', 'red': 'ff0000'} \u53e6\u5916\u8bfb\u8005\u8fd8\u53ef\u4ee5\u4ee5\u4f20\u9012\u53c2\u6570\u7ed9 dict() \u51fd\u6570\u7684\u65b9\u5f0f\u521b\u5efa\u5b57\u5178\uff0c\u4e0b\u9762\u4ee3\u7801\u521b\u5efa\u7684\u5b57\u5178\u4e0e\u4e0a\u9762\u4ee3\u7801\u521b\u5efa\u7684\u5b57\u5178\u5b8c\u5168\u76f8\u540c\u3002 In [15]: dict(red='ff0000',green='00ff00', blue='0000ff') Out[15]: {'blue': '0000ff', 'green': '00ff00', 'red': 'ff0000'} \u5982\u679c\u9700\u8981\u4e0d\u65ad\u5730\u5f80\u5b57\u5178\u4e2d\u6dfb\u52a0\u952e\u503c\uff0c\u5148\u521d\u59cb\u5316\u5b57\u5178\uff0c\u7136\u540e\u4f7f\u7528\u8d4b\u503c\u7684\u65b9\u5f0f\u6dfb\u52a0\u952e\u503c\u5bf9\u3002 In [16]: rgb = {} In [17]: rgb['red'] = 'ff0000' In [18]: rgb['green'] = '00ff00' In [19]: rgb['blue'] = '0000ff' In [20]: rgb Out[20]: {'blue': '0000ff', 'green': '00ff00', 'red': 'ff0000'}","title":"3.3.1 \u5b57\u5178\u7684\u521b\u5efa\u4e0e\u4f7f\u7528"},{"location":"03-data-structure/#332","text":"\u4e00\u4e9b\u5e38\u89c1\u7684\u51fd\u6570\u3001\u65b9\u6cd5\u90fd\u53ef\u4ee5\u7528\u5728\u5b57\u5178\u4e0a\u3002 \u4f8b\u5982\uff0c\u63d0\u53d6\u5b57\u5178\u957f\u5ea6\u3002 In [21]: len(rgb) Out[21]: 3 \u4f7f\u7528 pop() \u65b9\u6cd5\u53ef\u4ee5\u4ece\u5b57\u5178\u4e2d\u5220\u9664\u67d0\u4e2a\u503c\uff0c\u5e76\u8fd4\u56de\u8be5\u503c\u3002\u6ce8\u610f\uff0c\u9700\u8981\u6307\u660e\u952e\u3002 In [22]: rgb.pop() --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-22-1654217e28c5> in <module>() ----> 1 rgb.pop() TypeError: pop expected at least 1 arguments, got 0 In [23]: rgb.pop('blue') Out[23]: '0000ff' In [24]: rgb Out[24]: {'green': '00ff00', 'red': 'ff0000'} \u4f7f\u7528 del \u5173\u952e\u5b57\u53ef\u4ee5\u5220\u9664\u5b57\u5178\u3002 In [25]: del rgb In [26]: rgb --------------------------------------------------------------------------- NameError Traceback (most recent call last) <ipython-input-26-d412e57c3c38> in <module>() ----> 1 rgb NameError: name 'rgb' is not defined \u4f7f\u7528 get() \u65b9\u6cd5\u53ef\u4ee5\u65e0\u610f\u5916\u5730\u83b7\u53d6\u5b57\u5178\u503c\uff0c\u5b83\u9700\u8981\u63d0\u4f9b\u4e24\u4e2a\u53c2\u6570\uff0c\u9664\u4e86\u952e\uff0c\u8fd8\u9700\u8981\u6307\u5b9a\u5982\u679c\u67e5\u627e\u4e0d\u5230\u5e94\u5f53\u8fd4\u56de\u7684\u4fe1\u606f\u3002 In [28]: rgb.get('red', '\u952e\u4e0d\u5b58\u5728') Out[28]: 'ff0000' In [29]: rgb.get('yellow', '\u952e\u4e0d\u5b58\u5728') Out[29]: '\u952e\u4e0d\u5b58\u5728' \u5982\u679c\u60f3\u8981\u5b57\u5178\u7684\u987a\u5e8f\u4e0d\u6539\u53d8\uff0c\u53ef\u4ee5\u4f7f\u7528 collections \u6a21\u5757\u7684 OrderedDict() \u51fd\u6570\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u4e4b\u524d\u521b\u5efa\u7684\u5b57\u5178 rgb \u8f6c\u6362\u4e3a\u4e86\u6709\u5e8f\u5b57\u5178\uff0c\u53e6\u5916\u8fd8\u7ed9\u51fa\u4e86\u4e00\u4e2a\u65b0\u7684\u521b\u5efa\u793a\u4f8b\uff0c\u53ef\u4ee5\u53d1\u73b0\u5217\u8868\u8f93\u51fa\u7684\u987a\u5e8f\u786e\u5b9e\u6ca1\u6709\u6539\u53d8\u4e86\u3002 In [32]: from collections import OrderedDict In [33]: OrderedDict(rgb) Out[33]: OrderedDict([('red', 'ff0000'), ('green', '00ff00'), ('blue', '0000ff')]) In [35]: order_dict = OrderedDict() In [36]: order_dict['a'] = 1 In [37]: order_dict['b'] = 2 In [38]: order_dict['c'] = 3 In [39]: order_dict Out[39]: OrderedDict([('a', 1), ('b', 2), ('c', 3)])","title":"3.3.2 \u5b57\u5178\u64cd\u4f5c"},{"location":"03-data-structure/#34","text":"\u96c6\u5408\u662f\u65e0\u5e8f\u7684\u5bf9\u8c61\u96c6\uff0c\u5b83\u548c\u5b57\u5178\u4e00\u6837\u4f7f\u7528\u82b1\u62ec\u53f7\uff0c\u4f46\u6ca1\u6709\u952e\u503c\u5bf9\u7684\u6982\u5ff5\u3002\u96c6\u5408\u5c5e\u4e8e\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4e00\u822c\u7528\u4e8e\u4fdd\u6301\u5e8f\u5217\u7684\u552f\u4e00\u6027\u2014\u2014\u4e5f\u5c31\u662f\u540c\u6837\u7684\u5143\u7d20\u4ec5\u51fa\u73b0\u4e00\u6b21\u3002","title":"3.4 \u96c6\u5408"},{"location":"03-data-structure/#341","text":"\u5728\u4f7f\u7528\u96c6\u5408\u65f6\u4e00\u5b9a\u8981\u6ce8\u610f\u96c6\u5408\u7684\u65e0\u5e8f\u548c\u552f\u4e00\u4e24\u4e2a\u7279\u70b9\uff0c\u907f\u514d\u51fa\u9519\u3002 \u4e0b\u9762\u4ee3\u7801\u5c55\u793a\u4e86\u5f53\u96c6\u5408\u51fa\u73b0\u4e0d\u552f\u4e00\u7684\u5b57\u7b26\u65f6\uff0c\u521b\u5efa\u7684\u96c6\u5408\u4e2d\u53ea\u4f1a\u4fdd\u5b58\u4e00\u4e2a\u3002 In [40]: a_set = {1, 2, 3, 4, 5, 5, 4} In [41]: a_set Out[41]: {1, 2, 3, 4, 5} \u65e2\u7136\u96c6\u5408\u4e0e\u5b57\u5178\u90fd\u4f7f\u7528\u82b1\u62ec\u53f7\uff0c\u90a3\u4e48\u5982\u679c\u8981\u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u96c6\u5408\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u82b1\u62ec\u53f7\u8fd8\u80fd\u7528\u5417\uff1f In [42]: a_set = {} In [43]: a_set.add(1) --------------------------------------------------------------------------- AttributeError Traceback (most recent call last) <ipython-input-43-2a4eeb394ac5> in <module>() ----> 1 a_set.add(1) AttributeError: 'dict' object has no attribute 'add' \u7ed3\u679c\u62a5\u9519\u4e86\uff0c\u4fe1\u606f\u663e\u793a\u5b57\u5178\u6ca1\u6709 add \u5c5e\u6027\uff0c\u8bf4\u660e\u82b1\u62ec\u53f7\u4ec5\u80fd\u521d\u59cb\u5316\u5b57\u5178\u3002 \u96c6\u5408\u5bf9\u5e94\u7684\u51fd\u6570\u662f set()\uff0c\u56e0\u800c\u8bfb\u8005\u5fc5\u987b\u4f7f\u7528\u5b83\u521d\u59cb\u5316\u6216\u5c06\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u5b57\u5178\u3002 In [44]: a_set = set() In [45]: a_set.add(1) In [46]: a_set Out[46]: {1}","title":"3.4.1 \u96c6\u5408\u7684\u521b\u5efa"},{"location":"03-data-structure/#343","text":"\u524d\u9762\u4e00\u5c0f\u8282\u63d0\u5230\uff0c\u96c6\u5408\u662f\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b\u3002\u5728\u5b9e\u9645\u7684\u6570\u636e\u5206\u6790\u5f53\u4e2d\uff0c\u6709\u65f6\u5e0c\u671b\u96c6\u5408\u5b58\u50a8\u7684\u6570\u636e\u4e0d\u80fd\u6539\u53d8\uff0c\u4ee5\u9632\u6b62\u4fe1\u606f\u88ab\u6076\u610f\u7be1\u6539\u6216\u8005\u5176\u4ed6\u6570\u636e\u5931\u771f\u7684\u60c5\u51b5\u3002 \u51b0\u51bb\u96c6\uff08frozenset\uff09\u63d0\u4f9b\u4e86\u96c6\u5408\u7684\u4e0d\u53ef\u53d8\u7248\u672c\uff0c\u5b83\u7684\u5185\u5bb9\u4e0d\u80fd\u6539\u53d8\uff0c\u56e0\u6b64\u4e0d\u5b58\u5728 add() \u4e0e remove() \u65b9\u6cd5\u3002frozenset() \u51fd\u6570\u53ef\u4ee5\u5c06\u8f93\u5165\u7684\u8fed\u4ee3\u5bf9\u8c61\u8f6c\u6362\u4e3a\u51b0\u51bb\u96c6\u3002 In [1]: fs = frozenset(['a', 'b']) In [2]: fs Out[2]: frozenset({'a', 'b'}) In [3]: fs.remove('a') --------------------------------------------------------------------------- AttributeError Traceback (most recent call last) <ipython-input-3-b55f44b7e2c9> in <module>() ----> 1 fs.remove('a') AttributeError: 'frozenset' object has no attribute 'remove' In [4]: fs.add('c') --------------------------------------------------------------------------- AttributeError Traceback (most recent call last) <ipython-input-4-34531eab3bc0> in <module>() ----> 1 fs.add('c') AttributeError: 'frozenset' object has no attribute 'add' \u7531\u4e8e\u51b0\u51bb\u96c6\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u4f5c\u5b57\u5178\u7684\u952e\u3002","title":"3.4.3 \u51b0\u51bb\u96c6"},{"location":"03-data-structure/#35","text":"\u672c\u7ae0\u8be6\u7ec6\u5730\u4ecb\u7ecd\u4e86 Python \u5185\u7f6e\u7684\u51e0\u4e2a\u91cd\u8981\u57fa\u672c\u6570\u636e\u7ed3\u6784\uff1a \u5217\u8868 \u5143\u7ec4 \u5b57\u5178 \u96c6\u5408 \u5176\u4e2d\uff0c\u5217\u8868\u662f\u65e5\u5e38\u5de5\u4f5c\u5206\u6790\u4e3b\u8981\u63a5\u89e6\u548c\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u3002\u5143\u7ec4\u4e0e\u5217\u8868\u6781\u4e3a\u76f8\u4f3c\uff0c\u4f46\u5b83\u4eec\u5b58\u5728\u4e00\u4e2a\u91cd\u8981\u7684\u533a\u522b\u2014\u2014\u5143\u7ec4\u4e0d\u53ef\u4fee\u6539\uff01\u5b57\u5178\u5b9e\u73b0\u4e86\u952e\u4e0e\u503c\u7684\u914d\u5bf9\uff0c\u53ef\u4ee5\u5feb\u901f\u5b9e\u73b0\u5185\u5bb9\u7684\u7d22\u5f15\u3002\u96c6\u5408\u76f8\u5bf9\u800c\u8a00\u5c11\u7528\u4e9b\uff0c\u5b83\u5b58\u50a8\u6570\u636e\u552f\u4e00\u503c\u7684\u4e00\u4e2a\u96c6\u5408\u3002\u8fd9\u51e0\u8005\u4f7f\u7528\u7684\u521d\u59cb\u5316\u7b26\u53f7\u6216\u662f\u51fd\u6570\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u8bfb\u8005\u9700\u8981\u80fd\u591f\u533a\u5206\u5e76\u719f\u7ec3\u638c\u63e1\u3002\u672c\u7ae0\u7684\u7edd\u5927\u90e8\u5206\u5185\u5bb9\u548c\u6838\u5fc3\u90fd\u653e\u5728\u5217\u8868\u90e8\u5206\uff0c\u5217\u8868\u7684\u91cd\u8981\u6027\u6beb\u65e0\u7591\u95ee\u662f\u51e0\u8005\u7684\u7b2c\u4e00\uff0c\u7406\u89e3\u5217\u8868\u4e5f\u53ef\u4ee5\u5feb\u901f\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\u5176\u4ed6\u51e0\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u610f\u4e49\u4e0e\u64cd\u4f5c\u65b9\u6cd5\u3002\u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\uff0c\u672c\u4e66\u4e5f\u5c06\u66f4\u6df1\u5165\u5730\u4ecb\u7ecd\u548c\u8fd0\u7528\u5b83\u4eec\u3002","title":"3.5 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"04-control-flow/","text":"\u7b2c 4 \u7ae0 \u63a7\u5236\u6d41\u4e0e\u6587\u4ef6\u64cd\u4f5c \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a \u6761\u4ef6\u63a7\u5236 if-else for \u5faa\u73af while \u5faa\u73af \u6587\u4ef6\u64cd\u4f5c \u5728\u524d\u9762\u4e24\u4e2a\u7ae0\u8282\u4e2d\uff0c\u672c\u4e66\u5bf9 Python \u7684\u57fa\u672c\u6570\u636e\u7ed3\u6784\u53ca\u5176\u64cd\u4f5c\u8fdb\u884c\u4e86\u4ecb\u7ecd\uff0c\u8fd9\u8db3\u4ee5\u8ba9\u8bfb\u8005\u6784\u5efa\u4e00\u4e9b\u7b80\u5355\u7684\u6570\u636e\u5904\u7406\u7a0b\u5e8f\u3002\u7136\u800c\uff0c\u4e00\u65e6\u6d89\u53ca\u7565\u5fae\u590d\u6742\u7684\u5904\u7406\u3001\u91cd\u590d\u6027\u975e\u5e38\u9ad8\u7684\u8ba1\u7b97\uff0c\u8bfb\u8005\u5fc5\u987b\u5b66\u4e60\u63a7\u5236\u548c\u5faa\u73af\u7ed3\u6784\uff0c\u8ba9\u7a0b\u5e8f\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\u6267\u884c\u4e0d\u540c\u7684\u8ba1\u7b97\u4ee5\u53ca\u81ea\u52a8\u91cd\u590d\u3002 \u5b66\u4e60\u7f16\u5199\u5faa\u73af\u7ed3\u6784\u7b80\u5316\u91cd\u590d\u6027\u4ee3\u7801\u662f\u672c\u7ae0\u6240\u8981\u8bb2\u8ff0\u7684\u4e3b\u4f53\u5185\u5bb9\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u672c\u7ae0\u8fd8\u4f1a\u7b80\u5355\u4ecb\u7ecd\u6587\u672c\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\uff0c\u4ee5\u4fbf\u4e8e\u66f4\u5feb\u5730\u5e2e\u52a9\u8bfb\u8005\u5efa\u7acb\u6570\u636e\u5904\u7406\u4e0e\u5206\u6790\u6d41\u7a0b\u6982\u5ff5\u4f53\u7cfb\u2014\u2014\u4ece\u6587\u672c\u6570\u636e\u7684\u8f93\u5165\u3001\u5230\u6570\u636e\u7684\u5b9e\u9645\u5904\u7406\u3001\u518d\u5230\u7ed3\u679c\u7684\u5bfc\u51fa\u4e0e\u4fdd\u5b58\u3002 \u4e3a\u4e86\u80fd\u591f\u771f\u6b63\u505a\u51fa\u4e00\u4e9b\u6709\u7528\u7684\u5de5\u5177\u6216\u4ea7\u54c1\uff0c\u7a0b\u5e8f\u5f80\u5f80\u662f\u590d\u6742\u7684\uff0c\u7edd\u4e0d\u662f\u4e00\u4e9b\u7b80\u5355\u7684\u987a\u5e8f\u8bed\u53e5\uff0c\u5fc5\u987b\u6709\u4e00\u4e9b\u673a\u5236\u7ba1\u7406\u5982\u4f55\u4ee5\u53ca\u4ec0\u4e48\u65f6\u5019\u6267\u884c\u8bbe\u5b9a\u7684\u8bed\u53e5\u3002Python \u6709 3 \u79cd\u6d41\u7a0b\u63a7\u5236\u7ed3\u6784\uff0c\u53c8\u5206\u4e3a\u6761\u4ef6\u7ed3\u6784 if-else \u8bed\u53e5\u548c 2 \u79cd\u5faa\u73af\u7ed3\u6784 for \u8bed\u53e5\u548c while \u8bed\u53e5\u3002 4.1 \u6761\u4ef6\u7ed3\u6784 if-else \u00b6 if \u5173\u952e\u5b57\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6761\u4ef6\u7ed3\u6784\u5757\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u68c0\u9a8c\u4e00\u4e2a\u6761\u4ef6\uff0c\u5982\u679c\u6761\u4ef6\u4e3a\u903b\u8f91\u503c\u771f\uff08True\uff09\uff0c\u7a0b\u5e8f\u8fd0\u884c\u7ed9\u5b9a\u7684\u4e00\u5757\u8bed\u53e5\uff08\u79f0\u4e3a if \u5757\uff09\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u903b\u8f91\u503c\u5047\uff08False\uff09\uff0c\u7a0b\u5e8f\u8fd0\u884c\u53e6\u5916\u4e00\u5757\u8bed\u53e5\uff08\u79f0\u4e3a else \u5757\uff09\u3002 if-else \u8bed\u53e5\u7684\u683c\u5f0f\u5982\u4e0b\uff1a if condition: \u8bed\u53e51 \u8bed\u53e52 ... else: \u8bed\u53e51 \u8bed\u53e52 ... \u5176\u4e2d\uff0celse \u5757\u662f\u53ef\u9009\u7684\u3002condition \u90e8\u5206\u662f\u6761\u4ef6\u5224\u65ad\uff0c\u7ed3\u679c\u5fc5\u987b\u4e3a\u903b\u8f91\u503c\uff0c\u53ef\u4ee5\u662f\u5355\u4e2a\u6216\u7ec4\u5408\u6d4b\u8bd5\u8bed\u53e5\u3002 \u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u6761\u4ef6\u5224\u65ad\u7684\u4f8b\u5b50\uff0c\u5305\u62ec\u7b80\u5355\u7684\u6d4b\u8bd5\u8bed\u53e5\u548c\u7b80\u5355\u6d4b\u8bd5\u8bed\u53e5\u7684\u903b\u8f91\u7ec4\u5408\u3002 In [1]: number = 5 In [2]: number > 2 Out[2]: True In [3]: number > 3 and number <=5 Out[3]: True In [4]: fiction1 = \"\u54c8\u5229\u6ce2\u7279\" In [5]: fiction2 = \"\u4f8f\u7f57\u7eaa\u4e16\u754c\" In [6]: fiction1 == fiction2 Out[6]: False 4.1.1 \u7b80\u5355 if-else \u7ed3\u6784 \u00b6 \u5229\u7528\u4e0a\u8ff0\u7684\u6761\u4ef6\u6d4b\u8bd5\uff0c\u8bfb\u8005\u53ef\u4ee5\u5199 2 \u4e2a\u7b80\u5355\u7684 if \u8bed\u53e5\u3002 \u5982\u679c\u8f93\u5165\u6570\u5b57 number \u5c0f\u4e8e 2\uff0c\u6253\u5370 \u6570\u5b57\u592a\u5c0f\u4e86 \uff0c\u5426\u5219\u6253\u5370 \u6570\u5b57\u592a\u5927\u4e86 \u3002 \u5982\u679c fiction1 \u4e0e fiction2 \u76f8\u7b49\uff0c\u6253\u5370 \u539f\u6765\u6211\u4eec\u90fd\u559c\u6b22\u7535\u5f71xxx \uff0c\u5426\u5219\u6253\u5370 \u4f60\u559c\u6b22\u7535\u5f71xxx\uff0c\u6211\u559c\u6b22\u7535\u5f71xxx \u3002 \u5bf9\u5e94\u7b2c 1 \u4e2a\u64cd\u4f5c\u7684\u7a0b\u5e8f 1 \u4e3a\uff1a In [7]: if number < 2: ...: print('\u6570\u5b57\u592a\u5c0f\u4e86') ...: else: ...: print('\u6570\u5b57\u592a\u5927\u4e86') ...: \u6570\u5b57\u592a\u5927\u4e86 \u5bf9\u5e94\u7b2c 2 \u4e2a\u64cd\u4f5c\u7684\u7a0b\u5e8f 2 \u4e3a\uff1a In [9]: if fiction1 == fiction2: ...: print('\u539f\u6765\u6211\u4eec\u90fd\u559c\u6b22\u7535\u5f71\u300a' + fiction1 + '\u300b') ...: else: ...: print('\u4f60\u559c\u6b22\u7535\u5f71\u300a'+fiction1+'\u300b'+'\uff0c\u6211\u559c\u6b22\u7535\u5f71\u300a'+fiction2+'\u300b') ...: \u4f60\u559c\u6b22\u7535\u5f71\u300a\u54c8\u5229\u6ce2\u7279\u300b\uff0c\u6211\u559c\u6b22\u7535\u5f71\u300a\u4f8f\u7f57\u7eaa\u4e16\u754c\u300b \u5192\u53f7\u6807\u5fd7\u7740\u7f29\u8fdb\u4ee3\u7801\u5757\u7684\u5f00\u59cb\uff0c\u5192\u53f7\u4e4b\u540e\u7684\u6240\u6709\u4ee3\u7801\u7684\u7f29\u8fdb\u91cf\u5fc5\u987b\u76f8\u540c\uff0c\u76f4\u5230\u4ee3\u7801\u5757\u7ed3\u675f\u3002\u4f7f\u7528\u7a7a\u767d\u7b26\u53ef\u4ee5\u8ba9 Python \u7684\u4ee3\u7801\u53ef\u8bfb\u6027\u5927\u5927\u4f18\u4e8e\u5176\u5b83\u8bed\u8a00\u3002\u867d\u7136\u671f\u521d\u770b\u8d77\u6765\u5f88\u5947\u602a\uff0c\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\uff0c\u8bfb\u8005\u5c31\u80fd\u9002\u5e94\u4e86\u3002\u4e00\u822c\u4f7f\u7528\u7f29\u8fdb\u4f7f\u7528\u7684\u662f 4 \u4e2a\u7a7a\u683c\u952e\uff0c\u4e3a\u65b9\u4fbf\uff0c\u4e00\u4e9b IDE \u652f\u6301\u7528 \\ \u952e\u66ff\u6362 4 \u7a7a\u683c\u952e\uff0c\u6240\u4ee5\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 \\ \u952e\u8fdb\u884c\u7f29\u8fdb\uff0c\u4e5f\u6709\u4e00\u4e9b IDE \u5728\u952e\u5165\u5192\u53f7\u7136\u540e\u56de\u8f66\u540e\u4f1a\u81ea\u52a8\u7f29\u8fdb\uff0c\u8fd9\u6837\u5c31\u66f4\u65b9\u4fbf\u4e86\u3002 \u8bfb\u8005\u751a\u81f3\u80fd\u4ece\u7528\u6237\u83b7\u53d6\u6570\u636e\u7136\u540e\u52a0\u4ee5\u5224\u65ad\uff0cinput() \u51fd\u6570\u53ef\u4ee5\u63d0\u793a\u7528\u6237\u8f93\u5165\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\u60f3\u8981\u83b7\u53d6\u4f60\u559c\u6b22\u7684\u79d1\u5e7b\u7535\u5f71\uff0c\u7136\u540e\u5224\u65ad\u4e24\u4eba\u559c\u6b22\u7684\u7535\u5f71\u662f\u5426\u4e00\u81f4\uff0c\u4ec5\u9700\u8981\u6dfb\u52a0\u4e00\u53e5\u4ee3\u7801\uff0c\u5224\u65ad\u6d41\u7a0b\u4e0d\u9700\u8981\u66f4\u6539\u3002 In [10]: fiction1 = input(\"\u4f60\u559c\u6b22\u7684\u79d1\u5e7b\u7535\u5f71\u662f:\") ...: if fiction1 == fiction2: ...: print('\u539f\u6765\u6211\u4eec\u90fd\u559c\u6b22\u7535\u5f71\u300a' + fiction1 + '\u300b') ...: else: ...: print('\u4f60\u559c\u6b22\u7535\u5f71\u300a'+fiction1+'\u300b'+'\uff0c\u6211\u559c\u6b22\u7535\u5f71\u300a'+fiction2+'\u300b') ...: \u4f60\u559c\u6b22\u7684\u79d1\u5e7b\u7535\u5f71\u662f:\u73af\u592a\u5e73\u6d0b \u4f60\u559c\u6b22\u7535\u5f71\u300a\u73af\u592a\u5e73\u6d0b\u300b\uff0c\u6211\u559c\u6b22\u7535\u5f71\u300a\u4f8f\u7f57\u7eaa\u4e16\u754c\u300b 4.1.2 \u5d4c\u5957\u6761\u4ef6\u7ed3\u6784 \u00b6 \u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u9700\u8981 2 \u79cd\u53ca\u4ee5\u4e0a\u7684\u5224\u65ad\uff0c\u8fd9\u65f6\u5d4c\u5957\u6761\u4ef6\u7ed3\u6784 if-elif-else \u5c06\u975e\u5e38\u6709\u7528\u3002\u5176\u683c\u5f0f\u5982\u4e0b\uff1a if condition1\uff1a \u4ee3\u7801\u57571 elif condtion2: \u4ee3\u7801\u57572 else \u4e0a\u8ff0\u4ee3\u7801\u683c\u5f0f\u4e2d\u95f4\u7684 elif \u8bed\u53e5\u5757\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5199\u4efb\u610f\u4e2a\u3002 \u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u6b63\u6570\u8fd8\u662f\u8d1f\u6570\uff0c\u5e76\u8f93\u51fa\u5224\u65ad\u7684\u7ed3\u679c\u3002 In [13]: number = 2 ...: if number < 0: ...: print(\"{}\u662f\u4e00\u4e2a\u8d1f\u6570\".format(number)) ...: elif number > 0: ...: print(\"{}\u662f\u4e00\u4e2a\u6b63\u6570\".format(number)) ...: else: ...: print(\"{}\u65e2\u4e0d\u662f\u6b63\u6570\u4e5f\u4e0d\u662f\u8d1f\u6570\".format(number)) ...: 2\u662f\u4e00\u4e2a\u6b63\u6570 \u5b57\u7b26\u4e32\u7684 format() \u65b9\u6cd5\u53ef\u4ee5\u4fbf\u5229\u5730\u683c\u5f0f\u5316\u6253\u5370\u8f93\u51fa\u3002\u5728\u5b57\u7b26\u4e32\u4e2d\uff0c\u82b1\u62ec\u53f7\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u5728\u8bed\u53e5\u8fd0\u884c\u540e\u4f1a\u66ff\u6362\u4e3a format() \u65b9\u6cd5\u4e2d\u6307\u5b9a\u7684\u6570\u636e\u3002\u5982\u679c\u5728\u82b1\u62ec\u53f7\u4e2d\u6307\u5b9a\u6570\u5b57\uff08\u7d22\u5f15\uff09\uff0c\u5b9e\u9645\u8f93\u51fa\u65f6\u5b83\u4f1a\u88ab\u6620\u5c04\u4e3a format() \u65b9\u6cd5\u4e2d\u5bf9\u5e94\u7684\u6570\u503c\u3002 \u4e0b\u9762\u4f8b\u5b50\u7684 3 \u884c\u4ee3\u7801\u5206\u522b\u5c55\u793a format() \u65b9\u6cd5\u7684 3 \u79cd\u4f7f\u7528\u65b9\u5f0f\u3002 In [15]: print(\"{}\u662f\u4e00\u4e2a\u6570\u5b57\".format(2)) ...: print(\"{0}\u662f\u4e00\u4e2a\u6bd4{1}\u5927\u7684\u6570\u5b57\".format(10,5)) ...: print(\"{1}\u662f\u4e00\u4e2a\u6bd4{0}\u5c0f\u7684\u6570\u5b57\".format(10,5)) ...: 2\u662f\u4e00\u4e2a\u6570\u5b57 10\u662f\u4e00\u4e2a\u6bd45\u5927\u7684\u6570\u5b57 5\u662f\u4e00\u4e2a\u6bd410\u5c0f\u7684\u6570\u5b57 4.1.3 \u5355\u884c if-else \u00b6 \u9664\u4e86\u5c06 if-else \u5199\u6210\u4e00\u4e2a\u5927\u7684\u8bed\u53e5\u5757\uff0c\u8bfb\u8005\u8fd8\u53ef\u4ee5\u76f4\u63a5\u5c06\u5b83\u7b80\u5316\u4e3a\u4e00\u884c\u3002\u8fd9\u6837\u7684\u4ee3\u7801\u66f4\u4e3a\u7cbe\u70bc\u7b80\u6d01\u3002 \u4e0b\u9762\u4f9d\u65e7\u7528\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u6b63\u662f\u8d1f\u7684\u95ee\u9898\u8fdb\u884c\u4e86\u4ee3\u7801\u6f14\u793a\u3002 In [17]: number = 42 ...: number_type = '\u5076\u6570' if number % 2 == 0 else '\u5947\u6570' ...: print(\"{} \u662f\u4e00\u4e2a {} \".format(number, number_type)) ...: 42 \u662f\u4e00\u4e2a \u5076\u6570 4.1.4 \u4f7f\u7528\u903b\u8f91\u64cd\u4f5c\u7b26 \u00b6 \u5728\u524d\u9762\u7684\u7ae0\u8282\u672c\u4e66\u5df2\u7ecf\u89c1\u5230\u4ecb\u7ecd\u4e86\u903b\u8f91\u64cd\u4f5c\u7b26\u4ee5\u53ca\u4e00\u4e9b\u76f8\u5173\u51fd\u6570\uff0c\u5982 and \u903b\u8f91\u64cd\u4f5c\u7b26\u3001any() \u51fd\u6570\u3002\u8fd9\u4e9b\u64cd\u4f5c\u5e38\u7528\u4e8e\u6761\u4ef6\u6d4b\u8bd5\u4e2d\uff0c\u4e0b\u9762\u5bf9\u5e38\u89c1\u64cd\u4f5c\u4e0e\u65b9\u6cd5\u8fdb\u884c\u6c47\u603b\u548c\u5b9e\u4f8b\u8bf4\u660e\u3002 \u903b\u8f91\u64cd\u4f5c\u7b26\uff1a and \u662f\u903b\u8f91\u4e0e\u3002 or \u662f\u903b\u8f91\u6216\u3002 not \u662f\u903b\u8f91\u975e\u3002 \u903b\u8f91\u51fd\u6570\uff1a all() \u5728\u53c2\u6570\u5168\u771f\u65f6\u8fd4\u56de\u7ed3\u679c\u4e3a\u771f\uff08True\uff09\u3002 any() \u5728\u53ea\u8981\u6709 1 \u4e2a\u53c2\u6570\u4e3a\u771f\u65f6\uff0c\u8fd4\u56de\u7ed3\u679c\u4e3a\u771f\uff08True\uff09 \u5229\u7528\u4e0a\u8ff0\u63d0\u5230\u7684\u903b\u8f91\u64cd\u4f5c\u7b26\uff0c\u8bfb\u8005\u53ef\u4ee5\u6784\u5efa\u4efb\u610f\u590d\u6742\u7684\u6761\u4ef6\u6d4b\u8bd5\u3002 \u4f8b\u5982\uff0c\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f 2 \u548c 5 \u7684\u516c\u500d\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a In [18]: number = 10 ...: if number % 2 == 0 and number % 5 == 0: ...: print(\"\u6570\u5b57{}\u662f2\u548c5\u7684\u516c\u500d\u6570\".format(number)) ...: \u6570\u5b5710\u662f2\u548c5\u7684\u516c\u500d\u6570 \u518d\u6784\u5efa\u4e00\u4e2a\u7a0d\u5fae\u590d\u6742\u7684\u6761\u4ef6\u5224\u65ad\uff0c\u68c0\u6d4b\u4e00\u4e2a\u6570\u65e2\u4e0d\u80fd\u88ab 2 \u6574\u9664\u53c8\u5c0f\u4e8e 10\uff1a In [19]: number = 22 ...: if (not number % 2 == 0) and (number < 10): ...: print(number) ...: else: ...: print(\"\u8f93\u5165\u7684\u6570\u4e0d\u6ee1\u8db3\u6761\u4ef6\") ...: \u8f93\u5165\u7684\u6570\u4e0d\u6ee1\u8db3\u6761\u4ef6 \u4e0a\u9762\u4f7f\u7528\u4e86 not \u64cd\u4f5c\u7b26\u5bf9 number % 2 == 0 \u7684\u7ed3\u679c\u53d6\u53cd\uff0c\u5373\u4e0d\u80fd\u88ab 2 \u6574\u9664\u3002\u56e0\u4e3a\u6d89\u53ca\u5d4c\u5957\u903b\u8f91\uff0c\u6240\u4ee5\u4f7f\u7528\u82f1\u6587\u62ec\u53f7\u5206\u9694\u903b\u8f91\u5224\u65ad\u4f7f\u5f97\u6574\u4f53\u5c42\u6b21\u66f4\u4e3a\u6e05\u6670\u6613\u8bfb\u3002 \u5f53\u6761\u4ef6\u6d4b\u8bd5\u9879\u975e\u5e38\u591a\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 all() \u548c any() \u51fd\u6570\u8fdb\u884c\u7b80\u5316\u3002 #-------------- \u5224\u65ad\u6240\u6709\u6761\u4ef6\u5168\u4e3a\u771f\u65f6 # \u666e\u901a\u5199\u6cd5 if condition1 and condition2 and condition3 and ... # \u4f7f\u7528 all() \u51fd\u6570 if all(condition1, condition2, condition3, ...) #-------------- \u5224\u65ad\u4efb\u4e00\u6761\u4ef6\u4e3a\u771f\u65f6 # \u666e\u901a\u5199\u6cd5 if condition1 or condition2 or condition3 or ... # \u4f7f\u7528 any() \u51fd\u6570 if any(condition1, condition2, condition3, ...) all() \u548c any() \u51fd\u6570\u5728\u8fdb\u884c\u5411\u91cf\u5316\u8ba1\u7b97\u548c\u5224\u65ad\u65f6\u6781\u4e3a\u6709\u7528\uff0c\u4f8b\u5982\uff0c\u540c\u65f6\u5224\u65ad\u5217\u8868\u7684\u6240\u6709\u5143\u7d20\u662f\u5426\u90fd\u5927\u4e8e 2\u3002\u56e0\u4e3a Python \u5217\u8868\u4e0d\u652f\u6301\u5411\u91cf\u5316\u8ba1\u7b97\uff0c\u672c\u4e66\u5728\u4ecb\u7ecd Numpy \u65f6\u518d\u4e3e\u4f8b\u8bf4\u660e\u3002 in \u64cd\u4f5c\u7b26\u5728\u5224\u65ad\u67d0\u4e2a\u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u5e8f\u5217\uff08\u5217\u8868\u3001\u5143\u7ec4\u3001\u96c6\u5408\u7b49\uff09\u4e2d\u65f6\u4e5f\u5341\u5206\u6709\u7528\u3002 In [23]: 1 in [1, 2, 4, 5] Out[23]: True \u56e0\u4e3a in \u64cd\u4f5c\u7b26\u80fd\u591f\u5224\u65ad\u5e8f\u5217\uff08\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u7b49\uff09\u7684\u6210\u5458\u662f\u5426\u5b58\u5728\uff0c\u56e0\u6b64\u4e5f\u5e38\u7528\u4e8e\u6761\u4ef6\u6d4b\u8bd5\u4e2d\u3002 In [24]: if 2 in [1,2,3,5,7,9]: ...: print(\"\u8fd9\u4e2a\u5217\u8868\u80af\u5b9a\u4e0d\u5168\u662f\u5947\u6570\uff0c\u56e0\u4e3a\u5305\u542b\u4e86\u6570\u5b572\") ...: \u8fd9\u4e2a\u5217\u8868\u80af\u5b9a\u4e0d\u5168\u662f\u5947\u6570\uff0c\u56e0\u4e3a\u5305\u542b\u4e86\u6570\u5b572 \u73b0\u5728\u8bfb\u8005\u5df2\u7ecf\u5b66\u4e60\u4e86\u5982\u4f55\u4f7f\u7528\u6761\u4ef6\u7ed3\u6784\uff0c\u4e0b\u4e00\u8282\u5f00\u59cb\u4ecb\u7ecd\u6700\u5e38\u89c1\u5faa\u73af\u7ed3\u6784 for \u8bed\u53e5\u3002 4.2 for \u8bed\u53e5 \u00b6 for \u8bed\u53e5\u662f\u6700\u4e3a\u5e38\u89c1\u7684\u5faa\u73af\u8bed\u53e5\uff0c\u5b83\u5728\u4e00\u4e2a\u53ef\u8fed\u4ee3\uff08\u5217\u8868\u3001\u5143\u7ec4\u7b49\uff09\u5bf9\u8c61\u4e0a\u9010\u4e00\u63d0\u53d6\u5176\u4e2d\u7684\u5143\u7d20\u3002\u8fd9\u4e00\u8bed\u53e5\u4f7f\u5f97\u91cd\u590d\u6027\u7684\u7ed3\u6784\u4ee3\u7801\u53ef\u4ee5\u88ab\u6709\u6548\u5730\u7f29\u51cf\u3002 4.2.1 for \u8bed\u53e5\u5757 \u00b6 for \u8bed\u53e5\u7684\u683c\u5f0f\u5982\u4e0b\uff1a for \u8fed\u4ee3\u53d8\u91cf in \u5e8f\u5217 \u4f8b\u5982\uff0c\u60f3\u8981\u8f93\u51fa 1~100 \u8fd9 100 \u4e2a\u6570\u5b57\uff0c\u5982\u679c\u4e8b\u5148\u4e0d\u77e5\u9053\u5faa\u73af\u7ed3\u6784\uff0c\u8bfb\u8005\u9700\u8981\u8fde\u7eed\u8f93\u5165 100 \u6761 print \u8bed\u53e5\uff01 print(1) print(2) print(3) ... print(100) \u4e00\u65e6\u4f7f\u7528 for \u5faa\u73af\uff0c\u4ec5\u9700\u8981\u4ee5\u4e0b\u4e24\u884c\u8bed\u53e5\uff1a In [25]: for i in range(1, 101): ...: print(i) ...: 1 2 3 4 5 6 7 8 9 10 ... 100 for \u8bed\u53e5\u4e2d\u7684\u53d8\u91cf i \u79f0\u4e3a\u8fed\u4ee3\u53d8\u91cf\uff0c\u5b83\u4f9d\u6b21\u5b58\u50a8\u5e8f\u5217 range(1,101) \u91cc\u7684\u6240\u6709\u5143\u7d20\u3002\u5f53\u8bfb\u8005\u4f7f\u7528 print() \u51fd\u6570\u9010\u4e00\u6253\u5370\u53d8\u91cf i \u7684\u503c\u65f6\uff0c\u76f8\u5f53\u4e8e\u9010\u6b21\u6253\u5370\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u3002 \u6ce8\u610f\uff0crange() \u51fd\u6570\u53f3\u4fa7\u533a\u95f4\u4e0d\u5305\u542b\uff08\u5de6\u95ed\u53f3\u5f00\uff09\uff0c\u5373 range(1,101) \u6307\u4ece 1 \u5230 100\uff0c\u5305\u542b 1\uff0c\u4e0d\u5305\u542b 101\u3002\u8fd9\u4e0e\u5728\u524d\u4e00\u7ae0\u4ecb\u7ecd\u7684\u5217\u8868\u5207\u7247\u7d22\u5f15\u65b9\u5f0f\u662f\u4e00\u81f4\u7684\u3002 4.2.2 else \u8bed\u53e5\u5757 \u00b6 \u5728 Python \u7684 for \u5faa\u73af\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 else \u8bed\u53e5\u5757\u3002 \u4f8b\u5982\uff0c\u6253\u5370\u6570\u5b57 1~5\uff0c\u7136\u540e\u8f93\u51fa\u5faa\u73af\u7ed3\u675f\u4e86\u3002 In [26]: for i in range(1, 6): ...: print(i) ...: else: ...: print(\"For\u5faa\u73af\u7ed3\u675f\u4e86\u3002\") ...: 1 2 3 4 5 For\u5faa\u73af\u7ed3\u675f\u4e86\u3002 \u4e0d\u8fc7\u60f3\u8981\u8f93\u51fa\u8fd9\u6837\u7684\u7ed3\u679c\u5e76\u4e0d\u9700\u8981 else \u8bed\u53e5\u7684\u53c2\u4e0e\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u3002 In [27]: for i in range(1,6): ...: print(i) ...: ...: print(\"For\u5faa\u73af\u7ed3\u675f\u4e86\") ...: 1 2 3 4 5 For\u5faa\u73af\u7ed3\u675f\u4e86 \u6ce8\u610f\uff0c\u8bed\u53e5 print(\u201cFor\u5faa\u73af\u7ed3\u675f\u4e86\u201d) \u5e76\u4e0d\u5c5e\u4e8e for \u5faa\u73af\u7ed3\u6784\uff08\u4e0d\u7136\u6bcf\u6b21\u8f93\u51fa\u6570\u5b57\u4e5f\u4f1a\u8ddf\u7740\u8f93\u51fa\u4e00\u6b21\uff09\uff0c\u4e24\u8005\u4e2d\u95f4\u9700\u8981\u7a7a\u4e00\u884c Python \u624d\u80fd\u533a\u5206\u3002 4.2.3 \u7d22\u5f15\u8fed\u4ee3 \u00b6 for \u5faa\u73af\u80fd\u591f\u65b9\u4fbf\u5730\u63d0\u53d6\u4e00\u4e2a\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u3002\u4f46\u6709\u65f6\u5019\uff0c\u8bfb\u8005\u4e0d\u4ec5\u9700\u8981\u77e5\u9053\u5e8f\u5217\u7684\u5143\u7d20\uff0c\u8fd8\u60f3\u77e5\u9053\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f Python \u63d0\u4f9b\u4e86 enumerate() \u51fd\u6570\u53ef\u4ee5\u5728 for \u5faa\u73af\u4e2d\u540c\u65f6\u64cd\u4f5c\u5143\u7d20\u4e0e\u7d22\u5f15\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b\uff1a In [28]: for n, x in enumerate('\u4eb2\u7231\u7684\u4f60\u597d\u5417\uff1f'): ...: print(n, x) ...: 0 \u4eb2 1 \u7231 2 \u7684 3 \u4f60 4 \u597d 5 \u5417 6 \uff1f enumerate() \u51fd\u6570\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u8d77\u59cb\u70b9\u53c2\u6570 start\u3002\u4f8b\u5982\uff0c\u5c06\u8d77\u59cb\u70b9\u8bbe\u4e3a 1\uff0c\u8fd9\u6837\u8f93\u51fa\u7684\u7d22\u5f15\u503c\u53ef\u80fd\u66f4\u7b26\u5408\u67d0\u4e9b\u8bfb\u8005\u7684\u611f\u5b98\u3002 In [29]: for n, x in enumerate('\u4eb2\u7231\u7684\u4f60\u597d\u5417\uff1f', start=1): ...: print(n, x) ...: 1 \u4eb2 2 \u7231 3 \u7684 4 \u4f60 5 \u597d 6 \u5417 7 \uff1f \u53ef\u4ee5\u770b\u5230\uff0c\u867d\u7136\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u5e8f\u5217\u8fd8\u662f\u8ddf\u524d\u9762\u7684\u4e00\u6837\uff0c\u4f46\u7d22\u5f15\u503c\u7531 0 \u5230 6 \u53d8\u66f4\u4e3a\u4e86 1 \u5230 7\u3002 4.2.3 \u591a\u5217\u8868\u8fed\u4ee3 \u00b6 \u6709\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u60f3\u540c\u65f6\u5bf9\u591a\u4e2a\u5217\u8868\u8fdb\u884c\u64cd\u4f5c\uff0czip() \u51fd\u6570\u63d0\u4f9b\u4e86\u7b80\u4fbf\u5b9e\u73b0\u591a\u5217\u8868\u5143\u7d20\u540c\u65f6\u8fed\u4ee3\u5faa\u73af\u7684\u65b9\u6cd5\u3002 \u4e0b\u9762\u7528\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5b9e\u4f8b\u8bf4\u660e\u2014\u2014\u5bf9\u4e24\u4e2a\u5217\u8868\u7d22\u5f15\u503c\u5bf9\u5e94\u7684\u5143\u7d20\u76f8\u52a0\u3002 In [30]: odd = [1, 3, 5] ...: even = [2, 4, 6] ...: for i, j in zip(odd, even): ...: print(\"\u548c\u4e3a{}\".format(i+j)) ...: \u548c\u4e3a3 \u548c\u4e3a7 \u548c\u4e3a11 4.2.4 \u5217\u8868\u63a8\u5bfc\u5f0f \u00b6 \u5217\u8868\u63a8\u5bfc\u5f0f\uff08\u6709\u65f6\u5019\u4e5f\u79f0\u5217\u8868\u751f\u6210\u5f0f\uff09\u662f\u975e\u5e38 Python \u5316\u7684\u5faa\u73af\u65b9\u5f0f\uff0c\u5b83\u4e0d\u4ec5\u4f53\u73b0\u7740 Python \u7b80\u6d01\u4f18\u7f8e\u7684\u601d\u60f3\uff0c\u800c\u4e14\u6bd4\u666e\u901a\u7684\u5faa\u73af\u65b9\u5f0f\u66f4\u5bb9\u6613\u8bfb\u61c2\u548c\u8282\u7701\u65f6\u95f4\u3002 \u5982\u679c\u60f3\u8981\u5bf9\u5217\u8868\u6240\u6709\u7684\u6570\u503c\uff081~100\uff09\u6c42\u5e73\u65b9\uff0c\u5229\u7528\u5b66\u4e60\u8fc7\u7684 for \u5faa\u73af\uff0c\u8bfb\u8005\u53ef\u80fd\u4f1a\u7f16\u5199\u7c7b\u4f3c\u4e0b\u9762\u7684\u4ee3\u7801\u89e3\u51b3\u95ee\u9898\u3002 numbers = list(range(1,101)) result = [] for num in numbers: result.append(num * num) \u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u5199\u6cd5\u5982\u4e0b\uff1a result = [num * num for num in numbers] \u53ef\u4ee5\u770b\u5230\uff0cfor \u5173\u952e\u5b57\u7684\u53f3\u4fa7\u662f\u5df2\u7ecf\u5b66\u4e60\u8fc7\u7684 for \u5faa\u73af\u7ed3\u6784\uff0c\u800c\u5de6\u4fa7\u662f\u60f3\u8981\u5728 for \u5faa\u73af\u4e2d\u6267\u884c\u7684\u64cd\u4f5c\u3002 \u4e3a\u4e86\u8ba9\u8bfb\u8005\u5bf9\u4e24\u79cd\u5199\u6cd5\u7684\u6548\u7387\u6709\u66f4\u6e05\u695a\u7684\u8ba4\u8bc6\uff0c\u672c\u4e66\u4ee5\u4e24\u79cd\u65b9\u5f0f\u6c42\u53d6 1~100000\u7684 \u5e73\u65b9\u503c\uff0c\u5e76\u4f7f\u7528 time \u6a21\u5757\u8ba1\u7b97\u8fd0\u884c\u65f6\u95f4\u3002 import time numbers = list(range(1,100001)) fl_square_numbers = [] # \u8ba1\u7b97\u65f6\u95f4 t0 = time.perf_counter() # ------------ for \u5faa\u73af ------------ for num in numbers: fl_square_numbers.append(num * num) # \u8ba1\u7b97\u65f6\u95f4 t1 = time.perf_counter() # ------- \u5217\u8868\u63a8\u5bfc\u5f0f ------- lc_square_numbers = [num * num for num in numbers] # \u6267\u884c\u7ed3\u679c t2 = time.perf_counter() fl_time = t1 - t0 lc_time = t2 - t1 improvement = (fl_time - lc_time) / fl_time * 100 # \u5bf9\u7ed3\u679c\u5bf9\u9f50\u5e76\u8bbe\u5b9a\u4fdd\u7559\u7684\u5c0f\u6570\u70b9\u4f4d\u6570 print(\"For\u5faa\u73af\u8fd0\u884c\u65f6\u95f4: {:.4f}\".format(fl_time)) print(\"\u5217\u8868\u63a8\u5bfc\u5f0f\u8fd0\u884c\u65f6\u95f4: {:.4f}\".format(lc_time)) print(\"\u63d0\u5347\u65f6\u95f4: {:.2f}%\".format(improvement)) if fl_square_numbers == lc_square_numbers: print(\"\\n\u4e24\u79cd\u8ba1\u7b97\u65b9\u5f0f\u7ed3\u679c\u76f8\u7b49\") else: print(\"\\n\u4e24\u79cd\u65b9\u5f0f\u8ba1\u7b97\u7ed3\u679c\u4e0d\u76f8\u7b49\") \u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a For\u5faa\u73af\u8fd0\u884c\u65f6\u95f4: 0.0293 \u5217\u8868\u63a8\u5bfc\u5f0f\u8fd0\u884c\u65f6\u95f4: 0.0082 \u63d0\u5347\u65f6\u95f4: 72.14% \u4e24\u79cd\u8ba1\u7b97\u65b9\u5f0f\u7ed3\u679c\u76f8\u7b49 \u4e0a\u8ff0\u4ee3\u7801\u5bf9\u4e8e\u521d\u5b66\u8005\u53ef\u80fd\u6709\u4e9b\u964c\u751f\uff0c\u8bf7\u4e0d\u8981\u5bb3\u6015\uff0c\u5b83\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u5c55\u793a\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u6548\u7387\uff0c\u5728\u8be5\u90e8\u5206\u5b66\u4e60\u4e2d\u5e76\u4e0d\u8981\u6c42\u7406\u89e3\u548c\u638c\u63e1\u6240\u6709\u7684\u4ee3\u7801\u542b\u4e49\u3002\u6ce8\u610f\uff0c\u4e3a\u907f\u514d\u5e72\u6270\u9605\u8bfb\u548c\u7406\u89e3\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u53ea\u5c55\u793a\u4e86\u7eaf\u4ee3\u7801\u6216\u662f\u7eaf\u8f93\u51fa\u7ed3\u679c\uff0c\u6ca1\u6709\u5217\u51fa\u524d\u9762\u5e8f\u53f7\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u9664\u4e86\u5217\u8868\u63a8\u5bfc\u5f0f\u672c\u8eab\u6548\u7387\u7684\u63d0\u5347\uff0c\u6ca1\u6709\u8c03\u7528 append() \u65b9\u6cd5\u4e5f\u8282\u7701\u4e86\u5927\u91cf\u65f6\u95f4\u3002 4.2.5 \u6761\u4ef6\u5217\u8868\u63a8\u5bfc\u5f0f \u00b6 \u5728\u57fa\u672c\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u57fa\u7840\u4e0a\uff0c\u8bfb\u8005\u53ef\u4ee5\u589e\u52a0\u6761\u4ef6\u68c0\u6d4b\uff0c\u8fd9\u6837\u5e26\u6761\u4ef6\u68c0\u6d4b\u7684\u5217\u8868\u63a8\u5bfc\u5f0f\u79f0\u4e3a\u6761\u4ef6\u5217\u8868\u63a8\u5bfc\u5f0f\u3002\u6761\u4ef6\u8bed\u53e5\u65e2\u53ef\u4ee5\u5199\u5728 for \u8bed\u53e5\u5757\u5de6\u4fa7\uff0c\u4e5f\u53ef\u4ee5\u5199\u5728 for \u8bed\u53e5\u5757\u53f3\u4fa7\u3002 \u6761\u4ef6\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a [ \u64cd\u4f5c1 if \u6761\u4ef6\u5224\u65ad else \u64cd\u4f5c2 for \u8fed\u4ee3\u53d8\u91cf in \u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u7b49\uff09 ] [ \u64cd\u4f5c for \u8fed\u4ee3\u53d8\u91cf in \u53ef\u8fed\u4ee3\u5bf9\u8c61 if \u6761\u4ef6\u5224\u65ad ] \u7b2c 1 \u79cd\u5f62\u5f0f\u662f\u5728\u5217\u8868\u63a8\u5bfc\u5f0f\u4e2d\u4f7f\u7528 if-else \u6761\u4ef6\u8bed\u53e5\uff0c\u5982\u679c\u4e3a\u771f\uff0c\u5219\u5bf9\u8fed\u4ee3\u53d8\u91cf\u6267\u884c\u64cd\u4f5c 1\uff0c\u5426\u5219\u6267\u884c\u64cd\u4f5c 2\u3002 \u7b2c 2 \u79cd\u5f62\u5f0f\u662f\u53ea\u5728\u5217\u8868\u63a8\u5bfc\u5f0f\u4e2d\u4f7f\u7528 if \u8bed\u53e5\u5757\uff0c\u5982\u679c\u4e3a\u771f\uff0c\u5219\u5bf9\u8fed\u4ee3\u53d8\u91cf\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\u3002 \u4e3a\u4e86\u4ecb\u7ecd\u6761\u4ef6\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u4f7f\u7528\u65b9\u5f0f\u548c\u6267\u884c\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a\u5305\u542b 9 \u4e2a\u6b63\u6574\u6570\u7684\u5217\u8868\uff0c\u5229\u7528\u6761\u4ef6\u5217\u8868\u63a8\u5bfc\u5f0f\u5c06\u5217\u8868\u4e2d\u7684\u5947\u6570\u548c\u5076\u6570\u5206\u5f00\u4e3a\u5355\u72ec\u7684\u5217\u8868\u3002 In [34]: numbers = [2, 12, 3, 25, 24, 21, 5, 9, 12] \u5982\u679c\u4f7f\u7528 if-else \u6761\u4ef6\u8bed\u53e5\uff0c\u53ef\u4ee5\u5199\u4f5c\u4ee5\u4e0b\u7565\u957f\u7684\u5f62\u5f0f\uff1a In [35]: odd_numbers = [] ...: even_numbers = [] ...: [odd_numbers.append(num) if(num % 2) else even_numbers.append(num) for num in numbers] ...: Out[35]: [None, None, None, None, None, None, None, None, None] In [36]: odd_numbers Out[36]: [3, 25, 21, 5, 9] In [37]: even_numbers Out[37]: [2, 12, 24, 12] \u57fa\u7840\u5217\u8868\u63a8\u5bfc\u5f0f\u52a0\u4e0a\u6761\u4ef6\u7ed3\u6784\u8ba9\u6574\u4e2a\u8bed\u53e5\u663e\u5f97\u6709\u4e9b\u590d\u6742\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u8bed\u53e5\u4ece\u53f3\u5230\u5de6\u53ef\u4ee5\u5206\u4e3a 3 \u4e2a\u6b65\u9aa4\uff1a \u8fed\u4ee3\u53d8\u91cf num \u4f9d\u6b21\u83b7\u53d6\u53ef\u8fed\u4ee3\u53d8\u91cf numbers \u7684\u5143\u7d20\u503c\u3002 \u5bf9\u8fed\u4ee3\u53d8\u91cf\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\uff0c\u5982\u679c\u80fd\u88ab 2 \u6574\u9664\uff08\u4f59\u6570\u4e3a 0\uff09\uff0c\u5219\u6dfb\u52a0\u5143\u7d20\u503c\u5230\u53d8\u91cf odd_numbers\uff1b\u5982\u679c\u4e0d\u80fd\u88ab 2 \u6574\u9664\uff08\u4f59\u6570\u4e0d\u4e3a 0\uff09\uff0c\u5219\u6dfb\u52a0\u5143\u7d20\u503c\u5230\u53d8\u91cf even_numbers\u3002 \u6574\u4e2a\u5217\u8868\u7ed3\u679c\u8f93\u51fa\uff0c\u56e0\u4e3a\u5143\u7d20\u90fd\u88ab\u6dfb\u52a0\u5230\u63d0\u524d\u58f0\u660e\u597d\u7684\u4e24\u4e2a\u53d8\u91cf\u4e2d\u4e86\uff0c\u6240\u4ee5\u8fd9\u6761\u8bed\u53e5\u7ed3\u679c\u662f\u4e00\u4e2a\u5168 None\uff08\u7a7a\uff09\u7684\u5217\u8868\u3002 \u901a\u8fc7\u4ee5\u4e0a\u8fc7\u7a0b\u8bfb\u8005\u53ef\u4ee5\u9886\u4f1a\u5230\uff0c\u5e26 if-else \u7684\u5217\u8868\u63a8\u5bfc\u5f0f\u770b\u8d77\u6765\u590d\u6742\uff0c\u5176\u5b9e\u53ef\u4ee5\u4ece\u7531\u53f3\u81f3\u5de6\u8bfb\u8fdb\u884c\u7406\u89e3\u3002\u8fd9\u79cd\u7528\u6cd5\u5728\u8fd9\u91cc\u7684\u5f0a\u7aef\u6bd4\u8f83\u660e\u663e\uff0c\u770b\u4f3c\u53ea\u7528\u4e86\u4e00\u6761\u8bed\u53e5\u5b8c\u6210\u4e86\u64cd\u4f5c\uff0c\u4f46\u6211\u4eec\u4e0d\u5f97\u7684\u4e8b\u5148\u58f0\u660e\u4e24\u4e2a\u7a7a\u5217\u8868\u8ba9\u5b83\u4eec\u53ef\u4ee5\u4f7f\u7528 append() \u65b9\u6cd5\u3002\u5e76\u4e14\uff0c\u5217\u8868\u63a8\u5bfc\u5f0f\u672c\u8eab\u7684\u8f93\u51fa\u6beb\u65e0\u610f\u4e49\u3002\u8be5\u5982\u4f55\u8fdb\u884c\u6709\u6548\u5730\u7b80\u5316\u5462\uff1f\u8fd9\u91cc\u5f97\u60f3\u529e\u6cd5\u5229\u7528\u4e0a\u5217\u8868\u63a8\u5bfc\u5f0f\u672c\u8eab\u7684\u8f93\u51fa\u7ed3\u679c\u5c31\u662f\u5217\u8868\u8fd9\u4e00\u4e2a\u70b9\uff0c\u65e2\u7136\u5982\u6b64\uff0c\u4f55\u4e0d\u5c06\u5947\u6570\u548c\u5076\u6570\u5206\u522b\u4f7f\u7528\u6761\u4ef6\u5217\u8868\u63a8\u5bfc\u5f0f\uff1f \u76f8\u5e94\u64cd\u4f5c\u5982\u4e0b\uff1a In [38]: odd_numbers = [num for num in numbers if num % 2] ...: even_numbers = [num for num in numbers if not num % 2] ...: In [39]: odd_numbers Out[39]: [3, 25, 21, 5, 9] In [40]: even_numbers Out[40]: [2, 12, 24, 12] \u89e3\u51b3\u540c\u6837\u7684\u95ee\u9898\uff0c\u6709\u65f6\u5019\u62c6\u5206\u5f00\u6765\u505a\u66f4\u7b80\u6d01\u6613\u61c2\u3002 \u5143\u7ec4\u7684\u8fed\u4ee3\u57fa\u672c\u548c\u5217\u8868\u4e00\u81f4\uff0c\u672c\u4e66\u4e0d\u518d\u9610\u8ff0\u3002\u9664\u4e86\u5217\u8868\u548c\u5143\u7ec4\uff0c\u5b57\u5178\u4e5f\u662f\u9891\u7e41\u88ab\u4f7f\u7528\u548c\u88ab\u8fed\u4ee3\u7684\u5bf9\u8c61\uff0c\u4e0b\u4e00\u5c0f\u8282\u672c\u4e66\u5c06\u4ecb\u7ecd\u76f8\u5173\u7684\u64cd\u4f5c\u3002 4.2.6 \u5b57\u5178\u8fed\u4ee3 \u00b6 \u672c\u4e66\u5728\u524d\u4e00\u7ae0\u7684\u5b57\u5178\u90e8\u5206\u4ecb\u7ecd\u8fc7\uff1akeys() \u548c values() \u65b9\u6cd5\u53ef\u4ee5\u5206\u522b\u83b7\u53d6\u5b57\u5178\u7684\u952e\u4e0e\u503c\u3002\u5173\u4e8e\u5b57\u5178\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u6027\uff0c\u8bfb\u8005\u5e94\u5f53\u7262\u8bb0\u2014\u2014\u5b57\u5178\u662f\u968f\u673a\u7684\u3002\u56e0\u6b64\u6b63\u786e\u83b7\u53d6\u5143\u7d20\u503c\u7684\u65b9\u6cd5\u4e00\u5b9a\u662f\u901a\u8fc7\u952e\u8fdb\u884c\u7d22\u5f15\uff0c\u5927\u90e8\u5206\u9488\u5bf9\u5b57\u5178\u7684\u64cd\u4f5c\u90fd\u5e94\u5f53\u540c\u65f6\u9488\u5bf9\u952e\u548c\u503c\u3002 Python \u63d0\u4f9b\u4e86 items() \u65b9\u6cd5\u7528\u4e8e\u5b57\u5178\u7684\u8fed\u4ee3\u3002\u5047\u8bbe\u73b0\u5728\u6709\u4e00\u4e2a\u5b57\u5178\uff0c\u5b58\u50a8\u7740\u7528\u6237\u559c\u6b22\u7684\u4e66\u7c4d\u4ee5\u53ca\u7528\u6237\u5bf9\u5b83\u4eec\u7684\u6253\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5b57\u5178\u8fed\u4ee3\u8f93\u51fa\u5176\u5185\u5bb9\u3002 In [41]: books = {\"\u590f\u6d1b\u514b*\u798f\u5c14\u6469\u65af\":98, \"\u54c8\u5229\u6ce2\u7279\":80, \"\u8fbe\u82ac\u5947\u5bc6\u7801\":88} In [42]: for book_name,book_score in books.items(): ...: print(book_name, book_score, sep=\":\") ...: \u590f\u6d1b\u514b*\u798f\u5c14\u6469\u65af:98 \u54c8\u5229\u6ce2\u7279:80 \u8fbe\u82ac\u5947\u5bc6\u7801:88 \u8bfb\u8005\u5982\u679c\u53ea\u60f3\u5bf9\u5b57\u5178\u7684\u952e\u6216\u8005\u503c\u8fdb\u884c\u8fed\u4ee3\u64cd\u4f5c\uff0c\u5206\u522b\u4f7f\u7528 keys() \u4e0e values() \u65b9\u6cd5\u5373\u53ef\u3002 In [43]: for book_key in books.keys(): ...: print(book_key) ...: \u590f\u6d1b\u514b*\u798f\u5c14\u6469\u65af \u54c8\u5229\u6ce2\u7279 \u8fbe\u82ac\u5947\u5bc6\u7801 In [44]: for book_score in books.values(): ...: print(book_score) ...: 98 80 88 \u5728\u5b9e\u9645\u7684\u5e94\u7528\u4e2d\uff0c\u5b57\u5178\u5e38\u4f5c\u4e3a\u8ba1\u6570\u5668\uff0c\u5b58\u50a8\u5e8f\u5217\uff08\u5217\u8868\u3001\u5143\u7ec4\uff09\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\u3002\u65e0\u8bba\u5904\u7406\u4ec0\u4e48\u6837\u7684\u8f93\u5165\uff0c\u8fd9\u7c7b\u7528\u6cd5\u90fd\u5927\u540c\u5c0f\u5f02\uff0c\u6709\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u521b\u5efa\u4e00\u4e2a\u7a7a\u5b57\u5178 \u5bf9\u5e8f\u5217\u5143\u7d20\u8fdb\u884c\u5faa\u73af\u904d\u5386 \u5982\u679c\u5e8f\u5217\u5143\u7d20\u5728\u5b57\u5178\u4e2d\uff0c\u5219\u4ee5\u8be5\u5143\u7d20\u4e3a\u952e\uff0c\u5bf9\u5176\u503c\u52a0 1 \u5982\u679c\u5e8f\u5217\u5143\u7d20\u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b57\u5178\u5143\u7d20\uff0c\u952e\u4e3a\u8be5\u5e8f\u5217\u5143\u7d20\uff0c\u503c\u4e3a 1 \u73b0\u5728\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4ece\u67d0\u5c0f\u5b66\u968f\u673a\u62bd\u53d6 10 \u540d\u5b66\u751f\uff0c\u5206\u522b\u5bf9\u5b83\u4eec\u6240\u5904\u7684\u5e74\u7ea7\u8fdb\u884c\u8ba1\u6570\u3002 10 \u540d\u5b66\u751f\u7684\u6240\u5728\u5e74\u7ea7\u5982\u4e0b\u5b58\u50a8\u5728\u5217\u8868\u4e2d\u3002 In [45]: st_grades = [2, 3, 1, 1, 3, 5, 4, 6, 6, 1] \u6839\u636e\u4e0a\u9762\u63cf\u8ff0\u7684\u6b65\u9aa4\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u5bf9\u5b66\u751f\u6240\u5c5e\u5e74\u7ea7\u7684\u8ba1\u6570\u3002 In [46]: grades_count = dict() # \u521d\u59cb\u5316\u5b57\u5178 In [47]: for st_grade in st_grades: ...: if st_grade in grades_count: ...: grades_count[st_grade] += 1 # \u5982\u679c\u67d0\u5e74\u7ea7\u5df2\u6709\u5b66\u751f\uff0c\u5219\u5bf9\u8be5\u5e74\u7ea7\u8ba1\u6570\u52a01 ...: else: ...: grades_count[st_grade] = 1 # \u5982\u679c\u67d0\u5e74\u7ea7\u7b2c\u4e00\u6b21\u5bf9\u5b66\u751f\u8ba1\u6570\uff0c\u5219\u4ee4\u8be5\u5e74\u7ea7\u7684\u8ba1\u6570\u4e3a1 ...: In [48]: grades_count Out[48]: {1: 3, 2: 1, 3: 2, 4: 1, 5: 1, 6: 2} \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684 grades_count[st_grade] += 1 \u662f grades_count[st_grade] = grades_count[st_grade] + 1 \u7684\u7b80\u5199\u3002\u540c\u6837\u7684\uff0c\u6709 -= \u548c *= \u7528\u4e8e\u7b80\u5199\u3002 4.3 while \u8bed\u53e5 \u00b6 for \u8bed\u53e5\u53ef\u4ee5\u89e3\u51b3\u6211\u4eec\u5e38\u89c1\u7684 90% \u7684\u5faa\u73af\u8fed\u4ee3\u64cd\u4f5c\u9700\u6c42\uff0c\u4f46\u5269\u4e0b\u7684\u90e8\u5206\u5b83\u6beb\u65e0\u529e\u6cd5\u3002\u8bfb\u8005\u8981\u77e5\u9053\uff0cfor \u5faa\u73af\u7684\u4f7f\u7528\u662f\u5efa\u7acb\u5728\u6211\u4eec\u5df2\u77e5\u9700\u8981\u64cd\u4f5c\u7684\u5faa\u73af\u6b21\u6570\u7684\u57fa\u7840\u4e0a\u3002\u5728\u4e0d\u77e5\u9053\u5faa\u73af\u4f55\u65f6\u505c\u6b62\u65f6\uff0c\u9700\u8981\u501f\u52a9 while \u8bed\u53e5\u7684\u529b\u91cf\u6765\u5b8c\u6210\u64cd\u4f5c\u3002 while \u8bed\u53e5\u7684\u683c\u5f0f\u5982\u4e0b\uff1a while condition: \u8bed\u53e5\u5757 condition \u90e8\u5206\u662f\u6761\u4ef6\u68c0\u67e5\uff0c\u7ed3\u679c\u5fc5\u987b\u4e3a\u903b\u8f91\u503c\uff0c\u53ef\u4ee5\u662f\u5355\u4e2a\u6216\u7ec4\u5408\u6d4b\u8bd5\u8bed\u53e5\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8bfb\u8005\u5728\u4f7f\u7528 while \u8bed\u53e5\u65f6\uff0c\u4e00\u5b9a\u8981\u4fdd\u8bc1\u5faa\u73af\u80fd\u591f\u88ab\u7ed3\u675f\u6216\u8005\u8df3\u51fa\uff0c\u5426\u5219\u7a0b\u5e8f\u5c06\u8fdb\u5165\u6b7b\u5faa\u73af\uff0c\u8f6f\u4ef6\u51fa\u73b0\u5361\u6b7b\u3002\u4e25\u91cd\u7684\u8bdd\uff0c\u7535\u8111\u751a\u81f3\u4f1a\u5b95\u673a\u3002\u4e0d\u8fc7\uff0c\u6e38\u620f\u5f00\u53d1\u4ee3\u7801\u4e2d\u5e38\u7528 while \u8bed\u53e5\u4fdd\u6301\u7b49\u5f85\u7528\u6237\u8f93\u5165\u76f4\u5230\u9000\u51fa\u3002 \u4e3a\u4e86\u80fd\u591f\u5c55\u793a while \u8bed\u53e5\u4e0e\u524d\u9762\u4ecb\u7ecd\u7684 for \u8bed\u53e5\u4f7f\u7528\u6761\u4ef6\u7684\u5dee\u5f02\uff0c\u8fd9\u91cc\u4f7f\u7528 while \u8bed\u53e5\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u731c\u6570\u5b57\u6e38\u620f\u3002 \u731c\u6570\u5b57\u6e38\u620f\u60f3\u5fc5\u5927\u5bb6\u4e0d\u964c\u751f\uff0c\u7531\u4e00\u4e2a\u4eba\u4f5c\u4e3a\u88c1\u5224\uff0c\u9009\u62e9\u4e00\u4e2a\u6570\u5b57\uff0c\u5148\u6307\u5b9a\u5927\u81f4\u8303\u56f4\uff0c\u7531\u4f17\u4eba\u731c\u6d4b\uff0c \u6839\u636e\u731c\u6d4b\u7ed9\u51fa\u9ad8\u6216\u8005\u4f4e\u7684\u8bc4\u4ef7\uff0c\u7136\u540e\u7f29\u5c0f\u8303\u56f4\uff0c\u6700\u540e\u731c\u4e2d\u7684\u4eba\u6709\u7279\u522b\u7684\u5956\u52b1\u3002 \u8fd9\u91cc\u8bbe\u5b9a\u6570\u5b57\u8303\u56f4\u4e3a 0~999\uff0c\u4e3a\u4e86\u968f\u673a\u5316\u53d6\u6570\u5b57\uff0c\u6211\u4eec\u5229\u7528 random \u6a21\u5757\u7684 randint() \u51fd\u6570\u751f\u6210\u968f\u673a\u6574\u6570\u3002\u53e6\u5916\uff0c\u4e3a\u4e86\u8ba9\u5faa\u73af\u53ca\u65f6\u5730\u505c\u6b62\uff0c\u4f7f\u7528\u4e0b\u9762\u4e00\u8282\u5b66\u4e60\u7684 break \u8bed\u53e5\u8df3\u51fa\u5faa\u73af\u3002 import random # \u5bfc\u5165random\u6a21\u5757 NUMBER = random.randint(0,999) # \u751f\u6210[0, 999]\u8303\u56f4\u5185\u7684\u6570\u5b57 while True: guess = int(input(\"\u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a\\n\")) if guess == NUMBER: print(\"\u606d\u559c\uff01\u731c\u5bf9\u4e86\uff01\") break elif guess > NUMBER: print(\"\u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01\") else: print(\"\u592a\u5c0f\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01\") \u672c\u4e66\u4f5c\u8005\u64cd\u4f5c\u7684\u6e38\u620f\u8fc7\u7a0b\u5982\u4e0b\uff1a \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 50 \u592a\u5c0f\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 500 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 200 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 100 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 60 \u592a\u5c0f\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 80 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 70 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 60 \u592a\u5c0f\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 65 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 64 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 63 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 62 \u606d\u559c\uff01\u731c\u5bf9\u4e86\uff01 \u5408\u9002\u5730\u4f7f\u7528 while \u8bed\u53e5\u53ef\u4ee5\u6781\u5927\u5730\u51cf\u5c11\u4f7f\u7528\u5faa\u73af\u7ed3\u6784\u65f6\u7684\u9700\u8981\u7684\u521d\u59cb\u8ba4\u77e5\u3002\u4ee3\u7801\u4e0d\u9700\u8981\u77e5\u9053\u8981\u8fd0\u884c\u591a\u5c11\u6b21\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5f53\u67d0\u79cd\u6761\u4ef6\u89e6\u53d1\u65f6\uff0c\u5b83\u4f1a\u7acb\u5373\u505c\u6b62\u3002\u4e0d\u8fc7\u6709\u65f6\u5019\u8fd9\u9700\u8981\u63a5\u4e0b\u6765\u4e00\u5c0f\u8282\u4ecb\u7ecd\u7684 continue \u548c break \u547d\u4ee4\u7684\u914d\u5408\u3002 4.4 continue\u3001break \u4e0e pass \u00b6 \u6709\u65f6\u5019\uff0c\u5b58\u5728\u7c7b\u4f3c\u8fd9\u6837\u7684\u95ee\u9898\u4e9f\u5f85\u89e3\u51b3\uff1a\u4e00\u65b9\u9762\uff0c\u6570\u636e\u5904\u7406\u7684\u6b65\u9aa4\u662f\u91cd\u590d\u7684\u3001\u7e41\u91cd\u7684\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u91cd\u590d\u4f3c\u4e4e\u6ca1\u90a3\u4e48\u6709\u89c4\u5f8b\uff0c\u5373\u5355\u7eaf\u5730\u4f7f\u7528\u5faa\u73af\u7ed3\u6784\u4e0d\u80fd\u89e3\u51b3\u95ee\u9898\u3002Python \u63d0\u4f9b\u4e86 continue \u548c break \u8bed\u53e5\u6765\u5e2e\u52a9\u6269\u5c55\u5faa\u73af\u7ed3\u6784\u7684\u5e94\u7528\u8303\u56f4\uff0c\u4ee5\u89e3\u51b3\u4e0a\u9762\u6240\u8ff0\u7684\u95ee\u9898\u3002 4.4.1 continue \u00b6 continue \u8bed\u53e5\u53ef\u4ee5\u8ba9\u5f53\u524d\u5faa\u73af\u8df3\u8fc7\u4f59\u4e0b\u7684\u6b65\u9aa4\uff0c\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\u3002 \u8fd9\u91cc\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u8bf4\u660e continue \u8bed\u53e5\u7684\u9002\u7528\u60c5\u51b5\u3002\u5728\u4ecb\u7ecd\u4f8b\u5b50\u4e4b\u524d\uff0c\u672c\u4e66\u5148\u4ecb\u7ecd\u4e00\u4e2a\u76f8\u5173\u7684\u6570\u5b66\u6982\u5ff5\u2014\u2014\u9636\u4e58\u3002 \u6ce8\u610f\uff0c\u4e00\u4e2a\u6b63\u6574\u6570\u7684\u9636\u4e58\uff08factorial\uff09\u662f\u6240\u6709\u5c0f\u4e8e\u53ca\u7b49\u4e8e\u8be5\u6570\u7684\u6b63\u6574\u6570\u7684\u79ef\uff0c\u5e76\u4e14 0 \u7684\u9636\u4e58\u4e3a 1\u3002\u81ea\u7136\u6570 n \u7684\u9636\u4e58\u5199\u4f5c n!\u3002 \u4f8b\u5982\uff0c2 \u7684\u9636\u4e58 2! \u4e3a 2 X 1 = 2\uff0c3 \u7684\u9636\u4e58 3! \u4e3a 3 X 2 X 1 = 6\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u73b0\u5728\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u73b0\u5728\u9700\u8981\u8ba1\u7b97\u4ece 1 \u5230 10\uff0c\u6392\u9664 3 \u7684\u500d\u6570\u4f59\u4e0b\u7684\u51e0\u4e2a\u6574\u6570\u7684\u9636\u4e58\uff0c\u5373 1\u30012\u30014\u30015\u30017\u30018\u300110 \u7684\u9636\u4e58\uff0c\u5982\u679c\u7528\u5faa\u73af\u5b9e\u73b0\u5462\uff1f \u5f53\u7136\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u5b58\u50a8\u8fd9\u51e0\u4e2a\u6570\uff0c\u7136\u540e\u8fdb\u884c\u5faa\u73af\u904d\u5386\u8ba1\u7b97\u6570\u7684\u9636\u4e58\u3002\u5b9e\u73b0\u7684\u4ee3\u7801\u5982\u4e0b\uff1a In [1]: number_list = [1, 2, 4, 5, 7, 8, 10] In [2]: import math In [3]: for i in number_list: ...: print(math.factorial(i)) 1 2 24 120 5040 40320 3628800 \u8fd9\u91cc\u672c\u4e66\u76f4\u63a5\u4f7f\u7528\u4e86 math \u6a21\u5757\u4e2d\u7684 factorial() \u51fd\u6570\u8ba1\u7b97\u9636\u4e58\u3002\u9996\u5148\u8bfb\u8005\u9700\u8981\u4f7f\u7528 import \u8bed\u53e5\u5bfc\u5165\u6a21\u5757\uff0c\u7136\u540e\u518d\u4ee5\u6a21\u5757\u540d\u540e\u52a0\u82f1\u6587\u70b9\u5b57\u7b26\u518d\u52a0\u51fd\u6570\u540d\u7684\u65b9\u5f0f\u8c03\u7528\u6a21\u5757\u7684\u51fd\u6570\u3002 \u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u597d\u50cf\u5f88\u7b80\u5355\uff0c\u8fd9\u4e0e continue \u8bed\u53e5\u53c8\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u601d\u8003\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u4e0d\u662f\u7b80\u5355\u8fd9\u51e0\u4e2a\u6570\u7684\u9636\u4e58\uff0c\u800c\u662f\u8ba1\u7b97 100 \u4ee5\u5185\uff0c\u751a\u81f3 1000\u300110000 \u4ee5\u5185\u6392\u9664 3 \u7684\u500d\u6570\u6240\u5269\u6570\u7684\u9636\u4e58\u5462\uff1f\u8bfb\u8005\u8fd8\u80fd\u5426\u4f7f\u7528\u4e0a\u8ff0\u7684\u65b9\u5f0f\u5b8c\u6210\u4efb\u52a1\uff1f \u7ed3\u679c\u662f\u4e0d\u80fd\u3002\u90a3\u8be5\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\u4e0b\u9762\u4ee5 1000 \u4ee5\u5185\u4e3a\u4f8b\u3002 \u4e0a\u9762\u89e3\u6cd5\u7684\u7b28\u62d9\u4e4b\u5904\u5728\u4e8e\u8bfb\u8005\u9700\u8981\u624b\u52a8\u8f93\u5165\u5217\u8868\uff0c\u5b9e\u9645\u4e0a\u5b83\u4eec\u662f\u6709\u89c4\u5f8b\u7684\uff01\u8981\u8ba1\u7b97\u7684 number_list \u662f\u4e00\u4e2a\u8fde\u7eed\u6574\u6570\u9664\u53bb 3 \u7684\u500d\u6570\u7684\u4e00\u4e2a\u5217\u8868\uff0c\u5982\u679c\u6211\u4eec\u80fd\u591f\u901a\u8fc7\u5faa\u73af\u81ea\u52a8\u521b\u5efa\u8be5\u5217\u8868\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u624b\u52a8\u8f93\u5165\u5217\u8868\u4e86\uff0c\u524d\u9762\u7684\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002 In [4]: number_list = [] ...: for i in range(1, 1001): ...: if i % 3 == 0: ...: continue ...: else: ...: number_list.append(i) ...: ...: len(number_list) Out[4]: 667 \u4e0a\u9762\u4ee3\u7801\u4f7f\u7528\u5faa\u73af\u6784\u5efa\u6240\u9700\u7684 number_list\u3002\u901a\u8fc7 range() \u51fd\u6570\u4ea7\u751f\u6570\u5b57 1 \u5230 1000\uff0c\u7136\u540e\u5f53\u8fed\u4ee3\u53d8\u91cf i \u662f 3 \u7684\u500d\u6570\u65f6\uff0c\u5faa\u73af\u8f6c\u5411\u4e0b\u4e00\u6b21\u3002\u5f53\u8fed\u4ee3\u53d8\u91cf i \u4e0d\u662f 3 \u7684\u500d\u6570\u65f6\uff0c\u5c06\u6570\u5b57\u52a0\u5165\u5217\u8868 number_list\u3002\u8fd9\u6837\uff0c\u4ee3\u7801\u81ea\u52a8\u751f\u6210\u4e86\u540e\u9762\u8ba1\u7b97\u9636\u4e58\u6240\u9700\u8981\u7684\u5217\u8868\uff0c\u907f\u514d\u7684\u624b\u52a8\u8f93\u5165\u7684\u56f0\u96be\u3002 \u6761\u6761\u5927\u8def\u901a\u7f57\u9a6c\u3002\u5982\u679c\u8bfb\u8005\u719f\u7ec3\u638c\u63e1\u4e86\u5217\u8868\u63a8\u5bfc\u5f0f\uff0c\u4e0a\u8ff0\u7684\u5faa\u73af\u64cd\u4f5c\u4fbf\u663e\u5f97\u591a\u4f59\u8d77\u6765\uff0c\u4e0b\u9762\u7684\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\uff0c\u4e0d\u9700\u8981\u672c\u5c0f\u8282\u4ecb\u7ecd\u7684 continue\u3002 number_list = [ i for i in range(1, 1001) if i % 3 != 0 ] \u8bfb\u8005\u751a\u81f3\u53ef\u4ee5\u5bf9\u4e0a\u8ff0\u7684\u95ee\u9898\u7528\u4e00\u884c\u4ee3\u7801\u89e3\u7b54\uff0c\u5982\u4e0b\uff1a [ print(math.factorial(i)) for i in range(1, 1001) if i % 3 != 0 ] \u8fd9\u4e00\u884c\u4ee3\u7801\u7684\u8ba1\u7b97\u91cf\u975e\u5e38\u5927\uff0c\u5efa\u8bae\u8bfb\u8005\u4e0d\u8981\u8fd0\u884c\uff0c\u5c1d\u8bd5\u9009\u62e9\u4e00\u4e2a\u5c0f\u7684\u5faa\u73af\u6570\u67e5\u770b\u7ed3\u679c\u3002 4.4.2 break \u00b6 break \u8bed\u53e5\u4e0e continue \u8bed\u53e5\u4e0d\u540c\uff0c\u4e00\u65e6\u5faa\u73af\u8fd0\u884c\u5230 break \u4f1a\u8df3\u51fa\u5faa\u73af\uff08\u5373\u505c\u6b62\u5faa\u73af\uff09\u800c\u4e0d\u662f\u8f6c\u5411\u50cf continue \u8f6c\u5411\u4e0b\u4e00\u6b21\u5faa\u73af\u3002\u5728\u524d\u6587\u4f7f\u7528 while \u5faa\u73af\u521b\u5efa\u7684\u731c\u6570\u5b57\u6e38\u620f\u4e2d\uff0c\u5f53\u6e38\u620f\u8005\u731c\u4e2d\u6570\u5b57\u540e\uff0cbreak \u8bed\u53e5\u5b8c\u6210\u505c\u6b62\u6e38\u620f\u7684\u64cd\u4f5c\u3002\u9664\u4e86\u6e38\u620f\uff0cbreak \u5728\u6570\u636e\u5206\u6790\u4e2d\u4f7f\u7528\u4e5f\u5341\u5206\u666e\u904d\u3002\u5f53\u9047\u5230\u5f02\u5e38\u7684\u6570\u636e\u6216\u8005\u7528\u6237\u5728\u5faa\u73af\u5185\u90e8\u8bbe\u7f6e\u7684\u6d4b\u8bd5\u6761\u4ef6\u88ab\u6ee1\u8db3\u65f6\uff0cbreak \u80fd\u591f\u5e2e\u52a9\u53ca\u65f6\u5730\u505c\u6b62\u5faa\u73af\u3002 \u672c\u5c0f\u8282\u518d\u5217\u4e3e\u51e0\u4e2a\u4f7f\u7528 break \u7684\u7b80\u5355\u4f8b\u5b50\uff0c\u8bf4\u660e break \u5728 while \u5faa\u73af\u3001for \u5faa\u73af\u4ee5\u53ca\u5d4c\u5957\u5faa\u73af\u7ed3\u6784\u4e2d\u7684\u5e94\u7528\u3002 break \u8bed\u53e5\u5728 while \u5faa\u73af\u4e2d\u7684\u5e94\u7528 \u00b6 In [5]: a = 1 ...: while True: ...: print(a) ...: a += 1 ...: if a == 10: ...: break 1 2 3 4 5 6 7 8 9 \u4e0a\u8ff0\u4ee3\u7801\u4f7f\u7528 while \u8bed\u53e5\u5faa\u73af\u6253\u5370\u6570\u5b57 1~9\u3002while \u540e\u63a5\u7684\u6761\u4ef6\u8bbe\u7f6e\u7684\u662f True\uff0c\u5373\u65e0\u9650\u5faa\u73af\uff0c\u56e0\u800c\u5728\u5faa\u73af\u5185\u90e8\u901a\u8fc7 if \u8bed\u53e5\u8bbe\u7f6e\u6761\u4ef6\u68c0\u6d4b\uff0c\u5f53\u53d8\u91cf a \u6570\u503c\u4e3a 10 \u65f6\u8fd0\u884c break \u8df3\u51fa\u5faa\u73af\uff0c\u505c\u6b62\u6253\u5370\u3002 break \u8bed\u53e5\u5728 for \u5faa\u73af\u4e2d\u7684\u5e94\u7528 \u00b6 In [6]: for i in range(5,10): ...: print(i) ...: if i > 7: ...: break 5 6 7 8 \u4e0a\u8ff0\u4ee3\u7801\u4f7f\u7528 for \u8bed\u53e5\u5faa\u73af\u6253\u5370 5~8\u3002\u56e0\u4e3a\u5faa\u73af\u8fed\u4ee3\u7684\u662f range(5,10)\uff0c\u5373 5~10\uff0c\u6240\u4ee5\u5728\u5faa\u73af\u5185\u90e8\u4f7f\u7528 if \u8bed\u53e5\u8bbe\u7f6e\u6761\u4ef6\u68c0\u6d4b\uff0c\u5f53 i \u5927\u4e8e 7 \u65f6\uff0c\u8fd0\u884c break \u8df3\u51fa\u5faa\u73af\uff0c\u505c\u6b62\u6253\u5370\u3002 break \u8bed\u53e5\u5728\u5d4c\u5957\u5faa\u73af\u4e2d\u7684\u5e94\u7528 \u00b6 In [7]: a = 10 ...: while a <= 12: ...: a += 1 ...: for i in range(1,7): ...: print(i) ...: if i == 5: ...: break 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5 \u4e0a\u8ff0\u4ee3\u7801\u4f7f\u7528\u4e24\u5c42\u5d4c\u5957\u5faa\u73af\u91cd\u590d\u6253\u5370 3 \u6b21 1~5\u3002\u7b2c 1 \u5c42\u5faa\u73af\u662f while \u8bed\u53e5\uff0c\u7b2c 2 \u5c42\u5faa\u73af\u662f for \u8bed\u53e5\u3002\u521d\u59cb\u8bbe\u7f6e\u53d8\u91cf a \u503c\u4e3a 10\uff0cwhile \u5faa\u73af\u4e2d\u4ee3\u7801\u6bcf\u4e00\u6b21\u5148\u4ee4 a \u52a0 1\uff0c\u7136\u540e\u6267\u884c\u5d4c\u5957\u7684 for \u5faa\u73af\uff0c\u56e0\u4e3a a \u8bbe\u7f6e\u4e3a\u5927\u4e8e 12 \u5219\u505c\u6b62\u5faa\u73af\uff0c\u6240\u4ee5\u53ef\u77e5\u7b2c 1 \u5c42\u5faa\u73af\u4f1a\u6267\u884c 3 \u6b21\u3002\u518d\u770b\u5185\u90e8\u7684 for \u8bed\u53e5\uff0c\u8fed\u4ee3\u53d8\u91cf i \u4ece 1 \u5230 7 \u9012\u589e\uff0c\u6253\u5370 i \u7684\u503c\u3002\u5f53 i \u7b49\u4e8e 5 \u65f6\u6267\u884c break \u8bed\u53e5\uff0c\u6b64\u65f6\u5faa\u73af\u505c\u6b62\u3002\u6ce8\u610f\uff0c\u6b64\u65f6 break \u8bed\u53e5\u8df3\u51fa\u7684\u662f for \u5faa\u73af\uff0c\u5373 break \u53ea\u80fd\u505c\u6b62\u6240\u5728\u5faa\u73af\uff0c\u4e0d\u80fd\u505c\u6b62\u5916\u90e8\u5faa\u73af\u3002\u5f53\u9700\u8981\u505c\u6b62\u591a\u5c42\u5faa\u73af\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u591a\u4e2a break \u8bed\u53e5\u3002 4.4.3 pass \u00b6 pass \u5173\u952e\u5b57\u4e3a Python \u63d0\u4f9b\u4e86\u975e\u64cd\u4f5c\u8bed\u53e5\uff0c\u901a\u5e38\u4f5c\u4e3a\u672a\u6267\u884c\u4ee3\u7801\u7684\u5360\u4f4d\u7b26\u3002\u56e0\u4e3a Python \u9700\u8981\u4f7f\u7528\u7a7a\u767d\u5b57\u7b26\u5212\u5b9a\u4ee3\u7801\u5757\uff0c\u6240\u4ee5\u9700\u8981 pass \u8bed\u53e5\u8fdb\u884c\u5360\u4f4d\u3002 \u8bfb\u8005\u5728\u6784\u601d\u6bd4\u8f83\u590d\u6742\u7684\u4ee3\u7801\u5b9e\u73b0\u65f6 pass \u8bed\u53e5\u662f\u975e\u5e38\u597d\u7684\u5e2e\u624b\uff0c\u7279\u522b\u662f\u5b83\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u68c0\u6d4b\u5728\u67d0\u4e9b\u529f\u80fd\u8fd8\u672a\u5b8c\u6210\u7684\u60c5\u51b5\u4e0b\uff0c\u5df2\u6709\u529f\u80fd\u662f\u5426\u6b63\u786e\u5b9e\u73b0\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4e0b\u9762\u4ee3\u7801\u5b9e\u73b0\u6b63\u8d1f\u6570\u7684\u5224\u65ad\uff0c\u4f46\u8fd8\u672a\u66fe\u5b9e\u73b0\u8f93\u5165\u662f 0 \u65f6\u7684\u5904\u7406\uff0c\u56e0\u6b64\u5229\u7528 pass \u8bed\u53e5\u8fdb\u884c\u5360\u4f4d\u3002 if x < 0: print('\u8d1f\u6570\uff01') elif x == 0: # \u672a\u6765\u8981\u505a\u7684\u4e8b\u60c5\uff1a.... pass else: print('\u6b63\u6570\uff01') 4.5 \u6587\u4ef6\u64cd\u4f5c \u00b6 \u6570\u636e\u603b\u662f\u5b58\u50a8\u5728\u5404\u5f0f\u5404\u6837\u7684\u6587\u4ef6\u4e2d\uff0c\u5305\u62ec\u6587\u672c\u3001\u6570\u5b57\u3001\u56fe\u50cf\u4ee5\u53ca\u89c6\u9891\uff0c\u56e0\u6b64\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u662f\u6570\u636e\u5206\u6790\u4eba\u5458\u5e38\u89c1\u7684\u64cd\u4f5c\u4e4b\u4e00\u3002\u672c\u8282\u5c06\u4ecb\u7ecd\u57fa\u672c\u7684\u6587\u4ef6\u7c7b\u578b\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 Python \u5185\u7f6e\u7684\u6a21\u5757\u8fdb\u884c\u6587\u4ef6\u57fa\u672c\u7684\u8bfb\u5199\u64cd\u4f5c\u3002 4.5.1 \u6587\u4ef6\u7c7b\u578b \u00b6 \u8ba1\u7b97\u673a\u4e2d\u7684\u6587\u4ef6\u901a\u5e38\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0e\u6587\u672c\u6587\u4ef6\u3002\u8ba1\u7b97\u673a\u7684\u5b58\u50a8\u5728\u7269\u7406\u4e0a\u90fd\u662f\u4e8c\u8fdb\u5236\u7684\uff0c\u6240\u4ee5\u6587\u672c\u6587\u4ef6\u4e0e\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u533a\u522b\u5e76\u4e0d\u662f\u7269\u7406\u4e0a\u7684\uff0c\u800c\u662f\u903b\u8f91\u4e0a\u7684\u3002\u8fd9\u4e24\u8005\u53ea\u662f\u5728\u7f16\u7801\u5c42\u6b21\u4e0a\u6709\u5dee\u5f02\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u6587\u672c\u6587\u4ef6\u662f\u57fa\u4e8e\u5b57\u7b26\u7f16\u7801\u7684\u6587\u4ef6\uff0c\u5e38\u89c1\u7684\u7f16\u7801\u6709 ASCII \u7f16\u7801\u3001UNICODE \u7f16\u7801\u7b49\u7b49\uff08\u73b0\u5728\u5168\u4e16\u754c\u901a\u7528\u7684\u7f16\u7801\u662f UTF-8\uff09\u3002\u4e8c\u8fdb\u5236\u6587\u4ef6\u662f\u57fa\u4e8e\u503c\u7f16\u7801\u7684\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u5e94\u7528\uff0c\u6307\u5b9a\u67d0\u4e2a\u503c\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u81ea\u5b9a\u4e49\u7f16\u7801\u3002 \u6587\u4ef6\u7c7b\u578b\u5e38\u5e38\u53ef\u4ee5\u901a\u8fc7\u6587\u4ef6\u540e\u7f00\u540d\u5f97\u77e5\u3002\u540e\u7f00\u540d\u4e3a .txt \u7684\u6587\u4ef6\u662f\u5178\u578b\u7684\u6587\u672c\u6587\u4ef6\uff0c\u53e6\u5916\u5e38\u7528\u4e8e\u5b58\u50a8\u8868\u683c\u6570\u636e\u7684 csv \u6587\u4ef6\u3001xlsx \u6587\u4ef6\u7b49\u4e5f\u90fd\u662f\u6587\u672c\u6587\u4ef6\uff0c\u4e8c\u8fdb\u5236\u6587\u4ef6\u5219\u901a\u5e38\u662f\u4e00\u4e9b\u53ef\u6267\u884c\u7684\u7a0b\u5e8f\u8f6f\u4ef6\u3001\u56fe\u50cf\u3001\u89c6\u9891\u3002\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u5904\u7406\u7684\u6587\u4ef6\u90fd\u662f\u6587\u672c\u6587\u4ef6\u3002 \u5728\u78c1\u76d8\u4e0a\u8bfb\u5199\u6587\u4ef6\u7684\u529f\u80fd\u90fd\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\uff0c\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u5141\u8bb8\u666e\u901a\u7684\u7a0b\u5e8f\u76f4\u63a5\u64cd\u4f5c\u78c1\u76d8\uff0c\u6240\u4ee5\uff0c\u8bfb\u5199\u6587\u4ef6\u5c31\u662f\u8bf7\u6c42\u64cd\u4f5c\u7cfb\u7edf\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff08\u901a\u5e38\u79f0\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff09\uff0c\u7136\u540e\uff0c\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u63a5\u53e3\u4ece\u8fd9\u4e2a\u6587\u4ef6\u5bf9\u8c61\u4e2d\u8bfb\u53d6\u6570\u636e\uff08\u8bfb\u6587\u4ef6\uff09\uff0c\u6216\u8005\u628a\u6570\u636e\u5199\u5165\u8fd9\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff08\u5199\u6587\u4ef6\uff09\u3002 4.5.2 \u4f7f\u7528 open() \u51fd\u6570\u8bfb\u53d6\u6587\u4ef6 \u00b6 Python \u63d0\u4f9b\u4e86 open() \u51fd\u6570\u7528\u4e8e\u6253\u5f00\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5e76\u8fd4\u56de\u6587\u4ef6\u5bf9\u8c61\uff0c\u5229\u7528\u8be5\u5bf9\u8c61 Python \u7528\u6237\u80fd\u591f\u64cd\u4f5c\u6587\u672c\u3002open() \u51fd\u6570\u5e38\u7528\u5f62\u5f0f\u662f\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff1a\u6587\u4ef6\u540d\uff08file\uff09\u548c\u6a21\u5f0f\uff08mode\uff09\uff0c\u5373\u5982\u679c\u8981\u4ee5\u8bfb\u6587\u4ef6\u7684\u6a21\u5f0f\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff0c\u9664\u4e86\u4f20\u5165\u6587\u4ef6\u8def\u5f84\uff0c\u8fd8\u9700\u8981\u4ee5 r \u6307\u5b9a\u4e3a\u8bfb\u6a21\u5f0f\u3002\u5982\u679c\u8be5\u6587\u4ef6\u65e0\u6cd5\u88ab\u6253\u5f00\uff0cPython \u4f1a\u629b\u51fa OS Error\u3002 \u4e3a\u4e86\u4ecb\u7ecd\u5982\u4f55\u5b9e\u9645\u8bfb\u53d6\u6587\u672c\uff0c\u9996\u5148\u5728 Python \u5de5\u4f5c\u76ee\u5f55\u4e0b\u4f7f\u7528\u6587\u672c\u7f16\u8f91\u5668\u521b\u5efa\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u547d\u540d\u4e3a test.txt\uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a \u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e00\u884c \u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e8c\u884c \u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e09\u884c \u8fd9\u662f\u6587\u672c\u7684\u6700\u540e\u4e00\u884c \u5728 IPython \u4e2d\uff0c\u4f7f\u7528 %pwd \u547d\u4ee4\u5373\u53ef\u5feb\u901f\u83b7\u53d6\u5f53\u524d Python \u7684\u5de5\u4f5c\u76ee\u5f55\u3002\u672c\u4e66\u4f5c\u8005\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\u5982\u4e0b\uff1a In [8]: %pwd Out[8]: '/Users/wsx' \u5982\u679c\u521b\u5efa\u7684\u6587\u4ef6\u5728\u5de5\u4f5c\u76ee\u5f55\u4e0b\uff0c\u5728 IPython \u4e2d\u4f7f\u7528 %ls \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u3002 In [8]: %ls Applications/ Library/ Public/ work_script.pbs* Desktop/ Movies/ go/ Documents/ Music/ test.txt Downloads/ Pictures/ tmp/ \u4e0b\u9762\u4f7f\u7528 open() \u51fd\u6570\u8bfb\u53d6 test.txt \u6587\u4ef6\u3002 In [9]: f = open('test.txt', 'r') \u8fd9\u6837\u5c31\u6210\u529f\u5730\u6253\u5f00\u4e86\u4e00\u4e2a\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0cPython \u5c31\u4f1a\u629b\u51fa\u4e00\u4e2a IOError \u7684\u9519\u8bef\uff0c\u5e76\u4e14\u7ed9\u51fa\u9519\u8bef\u7801\u548c\u8be6\u7ec6\u7684\u4fe1\u606f\u544a\u77e5\u7528\u6237\u6587\u4ef6\u4e0d\u5b58\u5728\u3002 In [10]: f1 = open('test1.txt', 'r') --------------------------------------------------------------------------- FileNotFoundError Traceback (most recent call last) <ipython-input-10-ef17b5d7a1d3> in <module> ----> 1 f1 = open('test1.txt', 'r') FileNotFoundError: [Errno 2] No such file or directory: 'test1.txt' \u5f53\u6587\u4ef6\u6253\u5f00\u6210\u529f\u540e\uff0c\u63a5\u4e0b\u6765\u7528\u6237\u53ef\u4ee5\u8c03\u7528 read() \u65b9\u6cd5\u4e00\u6b21\u8bfb\u53d6\u6587\u4ef6\u7684\u5168\u90e8\u5185\u5bb9\uff0cPython \u4f1a\u5c06\u5176\u8868\u793a\u4e3a\u4e00\u4e2a str \u5bf9\u8c61\u3002 In [11]: f.read() Out[11]: '\u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e00\u884c\\n\u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e8c\u884c\\n\u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e09\u884c\\n\u8fd9\u662f\u6587\u672c\u7684\u6700\u540e\u4e00\u884c\\n' \u6587\u4ef6\u5bf9\u8c61\u4f1a\u5360\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684\u8d44\u6e90\uff0c\u5e76\u4e14\u64cd\u4f5c\u7cfb\u7edf\u540c\u4e00\u65f6\u95f4\u80fd\u6253\u5f00\u7684\u6587\u4ef6\u6570\u91cf\u4e5f\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\u6587\u4ef6\u4f7f\u7528\u5b8c\u6bd5\u540e\u5fc5\u987b\u5173\u95ed\uff0cPython \u7528\u6237\u8bfb\u53d6\u6587\u4ef6\u7684\u6700\u540e\u4e00\u6b65\u662f\u8c03\u7528 close() \u65b9\u6cd5\u5173\u95ed\u6587\u4ef6\u3002 In [12]: f.close() \u6ce8\u610f\uff0c\u6587\u4ef6\u8bfb\u5199\u53ef\u80fd\u4ea7\u751f IO Error\uff0c\u4e00\u65e6\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u540e\u9762\u4f7f\u7528 f.close() \u5173\u95ed\u6587\u4ef6\u5c31\u4e0d\u8d77\u4f5c\u7528\u4e86\u3002\u4e3a\u4e86\u4fdd\u8bc1\u65e0\u8bba\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\u90fd\u80fd\u6b63\u786e\u5173\u95ed\u6587\u4ef6\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 try\u2026finally \u8bed\u53e5\u5757\u6765\u5b9e\u73b0\u6587\u4ef6\u7684\u6b63\u786e\u5173\u95ed\u3002\u4f8b\u5982\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u4ee3\u7801\u6765\u786e\u4fdd\u8bfb\u53d6\u4e0a\u9762\u7684 test.txt \u5f02\u5e38\u65f6\u80fd\u591f\u5173\u95ed\u6587\u4ef6\u3002 try: f = open('test.txt', 'r') print(f.read()) finally: if f: f.close() \u53ea\u9700\u8981\u4fee\u6539\u6587\u4ef6\u540d\uff08\u5305\u62ec\u8def\u5f84\uff09\uff0c\u4e0a\u8ff0\u4ee3\u7801\u5373\u53ef\u5e94\u7528\u4e8e\u4efb\u4f55\u6587\u672c\u6587\u4ef6\u7684\u8bfb\u53d6\u3002\u4f46\u662f\u6bcf\u6b21\u90fd\u8fd9\u4e48\u5199\u5b9e\u5728\u7e41\u7410\uff0c\u56e0\u6b64 Python \u5f15\u5165\u4e86 with \u8bed\u53e5\u6765\u81ea\u52a8\u5e2e\u52a9\u7528\u6237\u81ea\u52a8\u8c03\u7528 close() \u65b9\u6cd5\u3002 with open('test.txt', 'r') as f: print(f.read()) \u4e0a\u8ff0\u4ee3\u7801\u4e0e try\u2026finally \u6548\u679c\u4e00\u81f4\uff0c\u4f46\u660e\u663e\u66f4\u4e3a\u7b80\u6d01\uff0c\u5e76\u4e14\u4e0d\u5fc5\u663e\u5f0f\u8c03\u7528 close() \u65b9\u6cd5\u3002 \u867d\u7136 read() \u65b9\u6cd5\u53ef\u4ee5\u4e00\u6b21\u6027\u5c06\u6587\u4ef6\u6240\u6709\u5185\u5bb9\u8bfb\u53d6\u8fdb\u6765\uff0c\u4f46\u662f\u5b9e\u9645\u4f7f\u7528\u7684\u5e76\u4e0d\u591a\u3002\u5982\u679c\u6587\u4ef6\u8fc7\u5927\uff0c\u8d85\u8fc7\u8ba1\u7b97\u673a\u5185\u5b58\u9650\u5236\uff0c\u4e0d\u4ec5\u6587\u4ef6\u5185\u5bb9\u4e0d\u80fd\u5b8c\u5168\u8bfb\u8fdb Python\uff0c\u8ba1\u7b97\u673a\u4e5f\u5bb9\u6613\u5d29\u6e83\u3002\u4e3a\u4e86\u4fdd\u9669\u8d77\u89c1\uff0c\u8bfb\u8005\u53ef\u4ee5\u53cd\u590d\u8c03\u7528 read(size) \u65b9\u6cd5\uff0c\u8fd9\u6837\u6bcf\u6b21\u6700\u591a\u8bfb\u53d6 size \u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u3002\u4e0d\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7528\u7684\u4e5f\u4e0d\u591a\uff0c\u56e0\u4e3a\u4e00\u822c\u5904\u7406\u6587\u4ef6\u90fd\u662f\u6309\u884c\u8fdb\u884c\u7684\uff0c\u56e0\u800c Python \u63d0\u4f9b\u4e86 readline() \u65b9\u6cd5\u53ef\u4ee5\u6bcf\u6b21\u8bfb\u53d6\u4e00\u884c\u5185\u5bb9\uff0c\u800c readlines() \u65b9\u6cd5\u5219\u53ef\u4ee5\u4e00\u6b21\u8bfb\u53d6\u6240\u6709\u5185\u5bb9\u5e76\u6309\u884c\u8fd4\u56de\u4e3a\u5217\u8868\u3002\u5177\u4f53\u4f7f\u7528\u4ec0\u4e48\u65b9\u6cd5\u8bfb\u8005\u9700\u8981\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u51b3\u5b9a\u3002 \u4e0b\u9762\u4ee3\u7801\u4f7f\u7528 readlines() \u65b9\u6cd5\u5c06\u6587\u4ef6\u5185\u5bb9\u8bfb\u53d6\u4e3a\u5217\u8868\uff0c\u7136\u540e\u4f7f\u7528 for \u5faa\u73af\u8fdb\u884c\u5904\u7406\u3002 In [13]: for line in f.readlines(): ...: print(line.strip()) # \u628a\u672b\u5c3e\u7684'\\n'\u5220\u6389 \u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e00\u884c \u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e8c\u884c \u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e09\u884c \u8fd9\u662f\u6587\u672c\u7684\u6700\u540e\u4e00\u884c \u524d\u9762\u4ecb\u7ecd\u7684\u662f\u8bfb\u53d6\u6587\u672c\u6587\u4ef6\uff0c\u5e76\u4e14\u662f UTF-8 \u7f16\u7801\u7684\u6587\u672c\u6587\u4ef6\u3002\u5982\u679c\u8981\u8bfb\u53d6\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5982\u56fe\u7247\u3001\u89c6\u9891\u7b49\u7b49\uff0c\u53ea\u9700\u8981\u5c06\u8bfb\u53d6\u6a21\u5f0f\u8bbe\u7f6e\u4e3a \u2018rb\u2019 \u5373\u53ef\u3002 In [14]: f = open('/Users/wsx/Pictures/cover.png', 'rb') In [15]: f.read() # \u4e0b\u9762\u8f93\u51fa\u7684\u7ed3\u679c\u592a\u591a\uff0c\u56e0\u6b64\u7701\u7565 Out[15]: b'\\x89PNG\\r\\n\\x1a\\n\\x00\\x00\\x00\\rIHDR\\x00\\x00 ... \u9664\u4e86\u6587\u4ef6\u7c7b\u578b\uff0c\u6587\u4ef6\u7684\u5b57\u7b26\u7f16\u7801\u4e5f\u662f\u7ecf\u5e38\u9700\u8981\u5173\u6ce8\u7684\u3002open() \u51fd\u6570\u6253\u5f00\u6587\u4ef6\u9ed8\u8ba4\u4f7f\u7528 UTF-8 \u7f16\u7801\uff0c\u5982\u679c\u8981\u8bfb\u53d6\u975e UTF-8 \u7f16\u7801\u7684\u6587\u672c\u6587\u4ef6\uff0c\u9700\u8981\u7ed9 open() \u51fd\u6570\u4f20\u5165 encoding \u53c2\u6570\u3002 \u4f8b\u5982\uff0c\u4e2d\u6587\u4e00\u822c\u4f7f\u7528 GBK \u7f16\u7801\u3002\u4e0b\u9762\u4ee3\u7801\u8bfb\u53d6\u4e00\u4e2a GBK \u7f16\u7801\u7684\u6587\u672c\u6587\u4ef6\uff0c\u8bfb\u8005\u53ef\u4ee5\u770b\u770b\u4f7f\u7528\u4e0d\u540c\u7684\u7f16\u7801\u53c2\u6570\u5f97\u5230\u7684\u7ed3\u679c\u6709\u4ec0\u4e48\u4e0d\u540c\u3002 In [16]: f = open('/Users/wsx/Documents/gbk.txt', 'r', encoding='UTF-8') In [17]: f.read() --------------------------------------------------------------------------- UnicodeDecodeError Traceback (most recent call last) <ipython-input-17-571e9fb02258> in <module> ----> 1 f.read() /Volumes/Data/miniconda3/lib/python3.6/codecs.py in decode(self, input, final) 319 # decode input (taking the buffer into account) 320 data = self.buffer + input --> 321 (result, consumed) = self._buffer_decode(data, self.errors, final) 322 # keep undecoded input until the next call 323 self.buffer = data[consumed:] UnicodeDecodeError: 'utf-8' codec can't decode byte 0xd5 in position 0: invalid continuation byte In [18]: f = open('/Users/wsx/Documents/gbk.txt', 'r', encoding='gbk') In [19]: f.read() Out[19]: '\u8fd9\u662fGBK\u7f16\u7801\u7684\u6587\u672c\uff0c\u5982\u679c\u4f60\u4e0d\u6b63\u786e\u89e3\u7801\u5c31\u770b\u4e0d\u5230\u6b63\u786e\u5185\u5bb9\u5594~' 4.5.3 \u4f7f\u7528 open() \u5199\u6587\u4ef6 \u00b6 \u5199\u6587\u4ef6\u548c\u8bfb\u6587\u4ef6\u7684\u6b65\u9aa4\u662f\u4e00\u6837\u7684\uff0c\u552f\u4e00\u533a\u522b\u662f\u8c03\u7528 open() \u51fd\u6570\u65f6\uff0c\u8bfb\u8005\u9700\u8981\u6307\u5b9a\u6a21\u5f0f \u2018w\u2019 \u6216\u8005 \u2018wb\u2019 \u8868\u793a\u5728\u5bf9\u6587\u672c\u6587\u4ef6\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6\u8fdb\u884c\u5199\u5165\u64cd\u4f5c\u3002 \u4e0b\u9762\u6f14\u793a\u5bf9\u524d\u9762\u7684 test.txt \u5199\u5165\u4e24\u884c\u6587\u5b57\uff0c\u7136\u540e\u518d\u8bfb\u53d6\u8fdb\u6765\u67e5\u770b\u662f\u5426\u6210\u529f\u5199\u5165\u3002 In [20]: f = open('test.txt', 'w') In [21]: f.write('\u6211\u7ed9\u6587\u672c\u52a0\u4e00\u884c\\n') Out[21]: 8 In [22]: f.write('\u6211\u518d\u52a0\u4e00\u884c\uff0c\u8fd9\u662f\u6700\u540e\u4e00\u884c') Out[22]: 12 In [23]: f.close() \u8bfb\u8005\u53ef\u4ee5\u53cd\u590d\u8c03\u7528 write() \u65b9\u6cd5\u6765\u5c06\u5185\u5bb9\u5199\u5165\u6587\u4ef6\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u5728\u6700\u540e\u4e00\u5b9a\u8981\u4f7f\u7528 f.close() \u5173\u95ed\u6587\u4ef6\uff0c\u5426\u5219\u5c06\u5b58\u5728\u4e22\u5931\u6570\u636e\u7684\u53ef\u80fd\u3002\u8fd9\u662f\u56e0\u4e3a\u5f53\u4f7f\u7528 Python \u5c06\u5185\u5bb9\u5199\u5165\u6587\u4ef6\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4f1a\u7acb\u5373\u5c06\u6570\u636e\u5199\u5165\u78c1\u76d8\uff0c\u800c\u662f\u6682\u65f6\u5c06\u6587\u672c\u653e\u5230\u5185\u5b58\u4e2d\u7f13\u5b58\uff0c\u5f53\u8ba1\u7b97\u8d44\u6e90\u7a7a\u95f2\u65f6\u624d\u8fdb\u884c\u5199\u5165\uff0c\u53ea\u6709\u8c03\u7528 close() \u65b9\u6cd5\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u624d\u4f1a\u4fdd\u8bc1\u628a\u6ca1\u6709\u5199\u5165\u7684\u6570\u636e\u5168\u90e8\u5199\u5165\u78c1\u76d8\u6587\u4ef6\u3002\u56e0\u6b64\uff0c\u5728\u8fdb\u884c\u6587\u672c\u5199\u5165\u65f6\u4f7f\u7528 with \u8bed\u53e5\u4e5f\u8fd8\u662f\u6700\u4e3a\u4fdd\u9669\u7684\u65b9\u5f0f\u3002 with open('test.txt', 'w') as f: f.write('\u6211\u7ed9\u6587\u672c\u52a0\u4e00\u884c\\n') f.write('\u6211\u518d\u52a0\u4e00\u884c\uff0c\u8fd9\u662f\u6700\u540e\u4e00\u884c') \u73b0\u5728\u6587\u4ef6\u5df2\u7ecf\u5df2\u7ecf\u5199\u5165\u4e86\uff0c\u8fd9\u65f6\u5019\u901a\u8fc7 open() \u5c06\u5185\u5bb9\u8bfb\u53d6\u8fdb\u6765\u67e5\u770b\u3002 In [24]: with open('test.txt', 'r') as f: ...: for line in f.readlines(): ...: print(line.strip()) \u6211\u7ed9\u6587\u672c\u52a0\u4e00\u884c \u6211\u518d\u52a0\u4e00\u884c\uff0c\u8fd9\u662f\u6700\u540e\u4e00\u884c \u5185\u5bb9\u7684\u786e\u6210\u529f\u7684\u5199\u5165\u8fdb\u4e86 test.txt \u6587\u4ef6\uff0c\u4f46\u539f\u5148\u7684\u5185\u5bb9\u88ab\u5220\u9664\u4e86\u3002\u4ec5\u4ec5\u8bbe\u5b9a\u5199\u6a21\u5f0f \u2018w\u2019 \u4f1a\u9996\u5148\u6e05\u7a7a\u6389\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u7136\u540e\u5c06\u8981\u5199\u5165\u7684\u5185\u5bb9\u5199\u8fdb\u6587\u4ef6\u3002\u4e3a\u4e86\u6267\u884c\u6587\u672c\u7684\u8ffd\u52a0\u800c\u4e0d\u662f\u8986\u76d6\u64cd\u4f5c\uff0c\u8bfb\u8005\u9700\u8981\u4f7f\u7528 \u2018wa\u2019 \u6765\u66ff\u6362 \u2018w\u2019\uff0c\u2019a\u2019 \u4e3a append\uff08\u8ffd\u52a0\uff09\u7684\u7f29\u5199\u3002\u6240\u6709\u6a21\u5f0f\u7684\u5b9a\u4e49\u53ca\u542b\u4e49\u53ef\u4ee5\u9605\u8bfb Python \u7684\u5b98\u65b9\u6587\u6863\u3002 4.6 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 \u4e00\u4e2a\u590d\u6742\u7684\u7a0b\u5e8f\u662f\u7b80\u5355\u7684\u8bed\u53e5\u4e0e\u5404\u7c7b\u63a7\u5236\u5faa\u73af\u7ed3\u6784\u7684\u7ec4\u5408\u3002\u672c\u7ae0\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u63a7\u5236\u7ed3\u6784 if-else \u8bed\u53e5\uff0c\u5faa\u73af\u7ed3\u6784 for \u8bed\u53e5\u4e0e while \u8bed\u53e5\uff0c\u901a\u8fc7\u5b9e\u4f8b\u4ecb\u7ecd\u4e86\u5b83\u4eec\u7684\u57fa\u672c\u64cd\u4f5c\u548c\u8f83\u4e3a\u590d\u6742\u7684\u5d4c\u5957\u64cd\u4f5c\uff0c\u4ee5\u53ca\u5e94\u7528\u5b83\u4eec\u64cd\u4f5c\u5e38\u89c1\u7684\u5217\u8868\u3001\u5143\u7ec4\u548c\u5b57\u5178\u7b49\u5e8f\u5217\u5bf9\u8c61\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u672c\u7ae0\u4ecb\u7ecd\u4e86 Python \u57fa\u672c\u7684\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e2e\u52a9\u8bfb\u8005\u6784\u5efa\u6570\u636e\u8bfb\u5199\u7684\u8ba4\u77e5\u4f53\u7cfb\uff0c\u4e5f\u4e3a\u4e4b\u540e\u7406\u89e3\u66f4\u9ad8\u7ea7\u7684\u6587\u4ef6\u64cd\u4f5c\u548c\u5904\u7406\u6253\u4e0b\u57fa\u7840\u3002","title":"\u7b2c 4 \u7ae0 \u63a7\u5236\u6d41\u4e0e\u6587\u4ef6\u64cd\u4f5c"},{"location":"04-control-flow/#4","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a \u6761\u4ef6\u63a7\u5236 if-else for \u5faa\u73af while \u5faa\u73af \u6587\u4ef6\u64cd\u4f5c \u5728\u524d\u9762\u4e24\u4e2a\u7ae0\u8282\u4e2d\uff0c\u672c\u4e66\u5bf9 Python \u7684\u57fa\u672c\u6570\u636e\u7ed3\u6784\u53ca\u5176\u64cd\u4f5c\u8fdb\u884c\u4e86\u4ecb\u7ecd\uff0c\u8fd9\u8db3\u4ee5\u8ba9\u8bfb\u8005\u6784\u5efa\u4e00\u4e9b\u7b80\u5355\u7684\u6570\u636e\u5904\u7406\u7a0b\u5e8f\u3002\u7136\u800c\uff0c\u4e00\u65e6\u6d89\u53ca\u7565\u5fae\u590d\u6742\u7684\u5904\u7406\u3001\u91cd\u590d\u6027\u975e\u5e38\u9ad8\u7684\u8ba1\u7b97\uff0c\u8bfb\u8005\u5fc5\u987b\u5b66\u4e60\u63a7\u5236\u548c\u5faa\u73af\u7ed3\u6784\uff0c\u8ba9\u7a0b\u5e8f\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\u6267\u884c\u4e0d\u540c\u7684\u8ba1\u7b97\u4ee5\u53ca\u81ea\u52a8\u91cd\u590d\u3002 \u5b66\u4e60\u7f16\u5199\u5faa\u73af\u7ed3\u6784\u7b80\u5316\u91cd\u590d\u6027\u4ee3\u7801\u662f\u672c\u7ae0\u6240\u8981\u8bb2\u8ff0\u7684\u4e3b\u4f53\u5185\u5bb9\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u672c\u7ae0\u8fd8\u4f1a\u7b80\u5355\u4ecb\u7ecd\u6587\u672c\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\uff0c\u4ee5\u4fbf\u4e8e\u66f4\u5feb\u5730\u5e2e\u52a9\u8bfb\u8005\u5efa\u7acb\u6570\u636e\u5904\u7406\u4e0e\u5206\u6790\u6d41\u7a0b\u6982\u5ff5\u4f53\u7cfb\u2014\u2014\u4ece\u6587\u672c\u6570\u636e\u7684\u8f93\u5165\u3001\u5230\u6570\u636e\u7684\u5b9e\u9645\u5904\u7406\u3001\u518d\u5230\u7ed3\u679c\u7684\u5bfc\u51fa\u4e0e\u4fdd\u5b58\u3002 \u4e3a\u4e86\u80fd\u591f\u771f\u6b63\u505a\u51fa\u4e00\u4e9b\u6709\u7528\u7684\u5de5\u5177\u6216\u4ea7\u54c1\uff0c\u7a0b\u5e8f\u5f80\u5f80\u662f\u590d\u6742\u7684\uff0c\u7edd\u4e0d\u662f\u4e00\u4e9b\u7b80\u5355\u7684\u987a\u5e8f\u8bed\u53e5\uff0c\u5fc5\u987b\u6709\u4e00\u4e9b\u673a\u5236\u7ba1\u7406\u5982\u4f55\u4ee5\u53ca\u4ec0\u4e48\u65f6\u5019\u6267\u884c\u8bbe\u5b9a\u7684\u8bed\u53e5\u3002Python \u6709 3 \u79cd\u6d41\u7a0b\u63a7\u5236\u7ed3\u6784\uff0c\u53c8\u5206\u4e3a\u6761\u4ef6\u7ed3\u6784 if-else \u8bed\u53e5\u548c 2 \u79cd\u5faa\u73af\u7ed3\u6784 for \u8bed\u53e5\u548c while \u8bed\u53e5\u3002","title":"\u7b2c 4 \u7ae0 \u63a7\u5236\u6d41\u4e0e\u6587\u4ef6\u64cd\u4f5c"},{"location":"04-control-flow/#41-if-else","text":"if \u5173\u952e\u5b57\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6761\u4ef6\u7ed3\u6784\u5757\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u68c0\u9a8c\u4e00\u4e2a\u6761\u4ef6\uff0c\u5982\u679c\u6761\u4ef6\u4e3a\u903b\u8f91\u503c\u771f\uff08True\uff09\uff0c\u7a0b\u5e8f\u8fd0\u884c\u7ed9\u5b9a\u7684\u4e00\u5757\u8bed\u53e5\uff08\u79f0\u4e3a if \u5757\uff09\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u903b\u8f91\u503c\u5047\uff08False\uff09\uff0c\u7a0b\u5e8f\u8fd0\u884c\u53e6\u5916\u4e00\u5757\u8bed\u53e5\uff08\u79f0\u4e3a else \u5757\uff09\u3002 if-else \u8bed\u53e5\u7684\u683c\u5f0f\u5982\u4e0b\uff1a if condition: \u8bed\u53e51 \u8bed\u53e52 ... else: \u8bed\u53e51 \u8bed\u53e52 ... \u5176\u4e2d\uff0celse \u5757\u662f\u53ef\u9009\u7684\u3002condition \u90e8\u5206\u662f\u6761\u4ef6\u5224\u65ad\uff0c\u7ed3\u679c\u5fc5\u987b\u4e3a\u903b\u8f91\u503c\uff0c\u53ef\u4ee5\u662f\u5355\u4e2a\u6216\u7ec4\u5408\u6d4b\u8bd5\u8bed\u53e5\u3002 \u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u6761\u4ef6\u5224\u65ad\u7684\u4f8b\u5b50\uff0c\u5305\u62ec\u7b80\u5355\u7684\u6d4b\u8bd5\u8bed\u53e5\u548c\u7b80\u5355\u6d4b\u8bd5\u8bed\u53e5\u7684\u903b\u8f91\u7ec4\u5408\u3002 In [1]: number = 5 In [2]: number > 2 Out[2]: True In [3]: number > 3 and number <=5 Out[3]: True In [4]: fiction1 = \"\u54c8\u5229\u6ce2\u7279\" In [5]: fiction2 = \"\u4f8f\u7f57\u7eaa\u4e16\u754c\" In [6]: fiction1 == fiction2 Out[6]: False","title":"4.1 \u6761\u4ef6\u7ed3\u6784 if-else"},{"location":"04-control-flow/#411-if-else","text":"\u5229\u7528\u4e0a\u8ff0\u7684\u6761\u4ef6\u6d4b\u8bd5\uff0c\u8bfb\u8005\u53ef\u4ee5\u5199 2 \u4e2a\u7b80\u5355\u7684 if \u8bed\u53e5\u3002 \u5982\u679c\u8f93\u5165\u6570\u5b57 number \u5c0f\u4e8e 2\uff0c\u6253\u5370 \u6570\u5b57\u592a\u5c0f\u4e86 \uff0c\u5426\u5219\u6253\u5370 \u6570\u5b57\u592a\u5927\u4e86 \u3002 \u5982\u679c fiction1 \u4e0e fiction2 \u76f8\u7b49\uff0c\u6253\u5370 \u539f\u6765\u6211\u4eec\u90fd\u559c\u6b22\u7535\u5f71xxx \uff0c\u5426\u5219\u6253\u5370 \u4f60\u559c\u6b22\u7535\u5f71xxx\uff0c\u6211\u559c\u6b22\u7535\u5f71xxx \u3002 \u5bf9\u5e94\u7b2c 1 \u4e2a\u64cd\u4f5c\u7684\u7a0b\u5e8f 1 \u4e3a\uff1a In [7]: if number < 2: ...: print('\u6570\u5b57\u592a\u5c0f\u4e86') ...: else: ...: print('\u6570\u5b57\u592a\u5927\u4e86') ...: \u6570\u5b57\u592a\u5927\u4e86 \u5bf9\u5e94\u7b2c 2 \u4e2a\u64cd\u4f5c\u7684\u7a0b\u5e8f 2 \u4e3a\uff1a In [9]: if fiction1 == fiction2: ...: print('\u539f\u6765\u6211\u4eec\u90fd\u559c\u6b22\u7535\u5f71\u300a' + fiction1 + '\u300b') ...: else: ...: print('\u4f60\u559c\u6b22\u7535\u5f71\u300a'+fiction1+'\u300b'+'\uff0c\u6211\u559c\u6b22\u7535\u5f71\u300a'+fiction2+'\u300b') ...: \u4f60\u559c\u6b22\u7535\u5f71\u300a\u54c8\u5229\u6ce2\u7279\u300b\uff0c\u6211\u559c\u6b22\u7535\u5f71\u300a\u4f8f\u7f57\u7eaa\u4e16\u754c\u300b \u5192\u53f7\u6807\u5fd7\u7740\u7f29\u8fdb\u4ee3\u7801\u5757\u7684\u5f00\u59cb\uff0c\u5192\u53f7\u4e4b\u540e\u7684\u6240\u6709\u4ee3\u7801\u7684\u7f29\u8fdb\u91cf\u5fc5\u987b\u76f8\u540c\uff0c\u76f4\u5230\u4ee3\u7801\u5757\u7ed3\u675f\u3002\u4f7f\u7528\u7a7a\u767d\u7b26\u53ef\u4ee5\u8ba9 Python \u7684\u4ee3\u7801\u53ef\u8bfb\u6027\u5927\u5927\u4f18\u4e8e\u5176\u5b83\u8bed\u8a00\u3002\u867d\u7136\u671f\u521d\u770b\u8d77\u6765\u5f88\u5947\u602a\uff0c\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\uff0c\u8bfb\u8005\u5c31\u80fd\u9002\u5e94\u4e86\u3002\u4e00\u822c\u4f7f\u7528\u7f29\u8fdb\u4f7f\u7528\u7684\u662f 4 \u4e2a\u7a7a\u683c\u952e\uff0c\u4e3a\u65b9\u4fbf\uff0c\u4e00\u4e9b IDE \u652f\u6301\u7528 \\ \u952e\u66ff\u6362 4 \u7a7a\u683c\u952e\uff0c\u6240\u4ee5\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 \\ \u952e\u8fdb\u884c\u7f29\u8fdb\uff0c\u4e5f\u6709\u4e00\u4e9b IDE \u5728\u952e\u5165\u5192\u53f7\u7136\u540e\u56de\u8f66\u540e\u4f1a\u81ea\u52a8\u7f29\u8fdb\uff0c\u8fd9\u6837\u5c31\u66f4\u65b9\u4fbf\u4e86\u3002 \u8bfb\u8005\u751a\u81f3\u80fd\u4ece\u7528\u6237\u83b7\u53d6\u6570\u636e\u7136\u540e\u52a0\u4ee5\u5224\u65ad\uff0cinput() \u51fd\u6570\u53ef\u4ee5\u63d0\u793a\u7528\u6237\u8f93\u5165\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\u60f3\u8981\u83b7\u53d6\u4f60\u559c\u6b22\u7684\u79d1\u5e7b\u7535\u5f71\uff0c\u7136\u540e\u5224\u65ad\u4e24\u4eba\u559c\u6b22\u7684\u7535\u5f71\u662f\u5426\u4e00\u81f4\uff0c\u4ec5\u9700\u8981\u6dfb\u52a0\u4e00\u53e5\u4ee3\u7801\uff0c\u5224\u65ad\u6d41\u7a0b\u4e0d\u9700\u8981\u66f4\u6539\u3002 In [10]: fiction1 = input(\"\u4f60\u559c\u6b22\u7684\u79d1\u5e7b\u7535\u5f71\u662f:\") ...: if fiction1 == fiction2: ...: print('\u539f\u6765\u6211\u4eec\u90fd\u559c\u6b22\u7535\u5f71\u300a' + fiction1 + '\u300b') ...: else: ...: print('\u4f60\u559c\u6b22\u7535\u5f71\u300a'+fiction1+'\u300b'+'\uff0c\u6211\u559c\u6b22\u7535\u5f71\u300a'+fiction2+'\u300b') ...: \u4f60\u559c\u6b22\u7684\u79d1\u5e7b\u7535\u5f71\u662f:\u73af\u592a\u5e73\u6d0b \u4f60\u559c\u6b22\u7535\u5f71\u300a\u73af\u592a\u5e73\u6d0b\u300b\uff0c\u6211\u559c\u6b22\u7535\u5f71\u300a\u4f8f\u7f57\u7eaa\u4e16\u754c\u300b","title":"4.1.1 \u7b80\u5355 if-else \u7ed3\u6784"},{"location":"04-control-flow/#412","text":"\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u9700\u8981 2 \u79cd\u53ca\u4ee5\u4e0a\u7684\u5224\u65ad\uff0c\u8fd9\u65f6\u5d4c\u5957\u6761\u4ef6\u7ed3\u6784 if-elif-else \u5c06\u975e\u5e38\u6709\u7528\u3002\u5176\u683c\u5f0f\u5982\u4e0b\uff1a if condition1\uff1a \u4ee3\u7801\u57571 elif condtion2: \u4ee3\u7801\u57572 else \u4e0a\u8ff0\u4ee3\u7801\u683c\u5f0f\u4e2d\u95f4\u7684 elif \u8bed\u53e5\u5757\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5199\u4efb\u610f\u4e2a\u3002 \u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u6b63\u6570\u8fd8\u662f\u8d1f\u6570\uff0c\u5e76\u8f93\u51fa\u5224\u65ad\u7684\u7ed3\u679c\u3002 In [13]: number = 2 ...: if number < 0: ...: print(\"{}\u662f\u4e00\u4e2a\u8d1f\u6570\".format(number)) ...: elif number > 0: ...: print(\"{}\u662f\u4e00\u4e2a\u6b63\u6570\".format(number)) ...: else: ...: print(\"{}\u65e2\u4e0d\u662f\u6b63\u6570\u4e5f\u4e0d\u662f\u8d1f\u6570\".format(number)) ...: 2\u662f\u4e00\u4e2a\u6b63\u6570 \u5b57\u7b26\u4e32\u7684 format() \u65b9\u6cd5\u53ef\u4ee5\u4fbf\u5229\u5730\u683c\u5f0f\u5316\u6253\u5370\u8f93\u51fa\u3002\u5728\u5b57\u7b26\u4e32\u4e2d\uff0c\u82b1\u62ec\u53f7\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u5728\u8bed\u53e5\u8fd0\u884c\u540e\u4f1a\u66ff\u6362\u4e3a format() \u65b9\u6cd5\u4e2d\u6307\u5b9a\u7684\u6570\u636e\u3002\u5982\u679c\u5728\u82b1\u62ec\u53f7\u4e2d\u6307\u5b9a\u6570\u5b57\uff08\u7d22\u5f15\uff09\uff0c\u5b9e\u9645\u8f93\u51fa\u65f6\u5b83\u4f1a\u88ab\u6620\u5c04\u4e3a format() \u65b9\u6cd5\u4e2d\u5bf9\u5e94\u7684\u6570\u503c\u3002 \u4e0b\u9762\u4f8b\u5b50\u7684 3 \u884c\u4ee3\u7801\u5206\u522b\u5c55\u793a format() \u65b9\u6cd5\u7684 3 \u79cd\u4f7f\u7528\u65b9\u5f0f\u3002 In [15]: print(\"{}\u662f\u4e00\u4e2a\u6570\u5b57\".format(2)) ...: print(\"{0}\u662f\u4e00\u4e2a\u6bd4{1}\u5927\u7684\u6570\u5b57\".format(10,5)) ...: print(\"{1}\u662f\u4e00\u4e2a\u6bd4{0}\u5c0f\u7684\u6570\u5b57\".format(10,5)) ...: 2\u662f\u4e00\u4e2a\u6570\u5b57 10\u662f\u4e00\u4e2a\u6bd45\u5927\u7684\u6570\u5b57 5\u662f\u4e00\u4e2a\u6bd410\u5c0f\u7684\u6570\u5b57","title":"4.1.2 \u5d4c\u5957\u6761\u4ef6\u7ed3\u6784"},{"location":"04-control-flow/#413-if-else","text":"\u9664\u4e86\u5c06 if-else \u5199\u6210\u4e00\u4e2a\u5927\u7684\u8bed\u53e5\u5757\uff0c\u8bfb\u8005\u8fd8\u53ef\u4ee5\u76f4\u63a5\u5c06\u5b83\u7b80\u5316\u4e3a\u4e00\u884c\u3002\u8fd9\u6837\u7684\u4ee3\u7801\u66f4\u4e3a\u7cbe\u70bc\u7b80\u6d01\u3002 \u4e0b\u9762\u4f9d\u65e7\u7528\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u6b63\u662f\u8d1f\u7684\u95ee\u9898\u8fdb\u884c\u4e86\u4ee3\u7801\u6f14\u793a\u3002 In [17]: number = 42 ...: number_type = '\u5076\u6570' if number % 2 == 0 else '\u5947\u6570' ...: print(\"{} \u662f\u4e00\u4e2a {} \".format(number, number_type)) ...: 42 \u662f\u4e00\u4e2a \u5076\u6570","title":"4.1.3 \u5355\u884c if-else"},{"location":"04-control-flow/#414","text":"\u5728\u524d\u9762\u7684\u7ae0\u8282\u672c\u4e66\u5df2\u7ecf\u89c1\u5230\u4ecb\u7ecd\u4e86\u903b\u8f91\u64cd\u4f5c\u7b26\u4ee5\u53ca\u4e00\u4e9b\u76f8\u5173\u51fd\u6570\uff0c\u5982 and \u903b\u8f91\u64cd\u4f5c\u7b26\u3001any() \u51fd\u6570\u3002\u8fd9\u4e9b\u64cd\u4f5c\u5e38\u7528\u4e8e\u6761\u4ef6\u6d4b\u8bd5\u4e2d\uff0c\u4e0b\u9762\u5bf9\u5e38\u89c1\u64cd\u4f5c\u4e0e\u65b9\u6cd5\u8fdb\u884c\u6c47\u603b\u548c\u5b9e\u4f8b\u8bf4\u660e\u3002 \u903b\u8f91\u64cd\u4f5c\u7b26\uff1a and \u662f\u903b\u8f91\u4e0e\u3002 or \u662f\u903b\u8f91\u6216\u3002 not \u662f\u903b\u8f91\u975e\u3002 \u903b\u8f91\u51fd\u6570\uff1a all() \u5728\u53c2\u6570\u5168\u771f\u65f6\u8fd4\u56de\u7ed3\u679c\u4e3a\u771f\uff08True\uff09\u3002 any() \u5728\u53ea\u8981\u6709 1 \u4e2a\u53c2\u6570\u4e3a\u771f\u65f6\uff0c\u8fd4\u56de\u7ed3\u679c\u4e3a\u771f\uff08True\uff09 \u5229\u7528\u4e0a\u8ff0\u63d0\u5230\u7684\u903b\u8f91\u64cd\u4f5c\u7b26\uff0c\u8bfb\u8005\u53ef\u4ee5\u6784\u5efa\u4efb\u610f\u590d\u6742\u7684\u6761\u4ef6\u6d4b\u8bd5\u3002 \u4f8b\u5982\uff0c\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f 2 \u548c 5 \u7684\u516c\u500d\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a In [18]: number = 10 ...: if number % 2 == 0 and number % 5 == 0: ...: print(\"\u6570\u5b57{}\u662f2\u548c5\u7684\u516c\u500d\u6570\".format(number)) ...: \u6570\u5b5710\u662f2\u548c5\u7684\u516c\u500d\u6570 \u518d\u6784\u5efa\u4e00\u4e2a\u7a0d\u5fae\u590d\u6742\u7684\u6761\u4ef6\u5224\u65ad\uff0c\u68c0\u6d4b\u4e00\u4e2a\u6570\u65e2\u4e0d\u80fd\u88ab 2 \u6574\u9664\u53c8\u5c0f\u4e8e 10\uff1a In [19]: number = 22 ...: if (not number % 2 == 0) and (number < 10): ...: print(number) ...: else: ...: print(\"\u8f93\u5165\u7684\u6570\u4e0d\u6ee1\u8db3\u6761\u4ef6\") ...: \u8f93\u5165\u7684\u6570\u4e0d\u6ee1\u8db3\u6761\u4ef6 \u4e0a\u9762\u4f7f\u7528\u4e86 not \u64cd\u4f5c\u7b26\u5bf9 number % 2 == 0 \u7684\u7ed3\u679c\u53d6\u53cd\uff0c\u5373\u4e0d\u80fd\u88ab 2 \u6574\u9664\u3002\u56e0\u4e3a\u6d89\u53ca\u5d4c\u5957\u903b\u8f91\uff0c\u6240\u4ee5\u4f7f\u7528\u82f1\u6587\u62ec\u53f7\u5206\u9694\u903b\u8f91\u5224\u65ad\u4f7f\u5f97\u6574\u4f53\u5c42\u6b21\u66f4\u4e3a\u6e05\u6670\u6613\u8bfb\u3002 \u5f53\u6761\u4ef6\u6d4b\u8bd5\u9879\u975e\u5e38\u591a\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 all() \u548c any() \u51fd\u6570\u8fdb\u884c\u7b80\u5316\u3002 #-------------- \u5224\u65ad\u6240\u6709\u6761\u4ef6\u5168\u4e3a\u771f\u65f6 # \u666e\u901a\u5199\u6cd5 if condition1 and condition2 and condition3 and ... # \u4f7f\u7528 all() \u51fd\u6570 if all(condition1, condition2, condition3, ...) #-------------- \u5224\u65ad\u4efb\u4e00\u6761\u4ef6\u4e3a\u771f\u65f6 # \u666e\u901a\u5199\u6cd5 if condition1 or condition2 or condition3 or ... # \u4f7f\u7528 any() \u51fd\u6570 if any(condition1, condition2, condition3, ...) all() \u548c any() \u51fd\u6570\u5728\u8fdb\u884c\u5411\u91cf\u5316\u8ba1\u7b97\u548c\u5224\u65ad\u65f6\u6781\u4e3a\u6709\u7528\uff0c\u4f8b\u5982\uff0c\u540c\u65f6\u5224\u65ad\u5217\u8868\u7684\u6240\u6709\u5143\u7d20\u662f\u5426\u90fd\u5927\u4e8e 2\u3002\u56e0\u4e3a Python \u5217\u8868\u4e0d\u652f\u6301\u5411\u91cf\u5316\u8ba1\u7b97\uff0c\u672c\u4e66\u5728\u4ecb\u7ecd Numpy \u65f6\u518d\u4e3e\u4f8b\u8bf4\u660e\u3002 in \u64cd\u4f5c\u7b26\u5728\u5224\u65ad\u67d0\u4e2a\u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u5e8f\u5217\uff08\u5217\u8868\u3001\u5143\u7ec4\u3001\u96c6\u5408\u7b49\uff09\u4e2d\u65f6\u4e5f\u5341\u5206\u6709\u7528\u3002 In [23]: 1 in [1, 2, 4, 5] Out[23]: True \u56e0\u4e3a in \u64cd\u4f5c\u7b26\u80fd\u591f\u5224\u65ad\u5e8f\u5217\uff08\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u7b49\uff09\u7684\u6210\u5458\u662f\u5426\u5b58\u5728\uff0c\u56e0\u6b64\u4e5f\u5e38\u7528\u4e8e\u6761\u4ef6\u6d4b\u8bd5\u4e2d\u3002 In [24]: if 2 in [1,2,3,5,7,9]: ...: print(\"\u8fd9\u4e2a\u5217\u8868\u80af\u5b9a\u4e0d\u5168\u662f\u5947\u6570\uff0c\u56e0\u4e3a\u5305\u542b\u4e86\u6570\u5b572\") ...: \u8fd9\u4e2a\u5217\u8868\u80af\u5b9a\u4e0d\u5168\u662f\u5947\u6570\uff0c\u56e0\u4e3a\u5305\u542b\u4e86\u6570\u5b572 \u73b0\u5728\u8bfb\u8005\u5df2\u7ecf\u5b66\u4e60\u4e86\u5982\u4f55\u4f7f\u7528\u6761\u4ef6\u7ed3\u6784\uff0c\u4e0b\u4e00\u8282\u5f00\u59cb\u4ecb\u7ecd\u6700\u5e38\u89c1\u5faa\u73af\u7ed3\u6784 for \u8bed\u53e5\u3002","title":"4.1.4 \u4f7f\u7528\u903b\u8f91\u64cd\u4f5c\u7b26"},{"location":"04-control-flow/#42-for","text":"for \u8bed\u53e5\u662f\u6700\u4e3a\u5e38\u89c1\u7684\u5faa\u73af\u8bed\u53e5\uff0c\u5b83\u5728\u4e00\u4e2a\u53ef\u8fed\u4ee3\uff08\u5217\u8868\u3001\u5143\u7ec4\u7b49\uff09\u5bf9\u8c61\u4e0a\u9010\u4e00\u63d0\u53d6\u5176\u4e2d\u7684\u5143\u7d20\u3002\u8fd9\u4e00\u8bed\u53e5\u4f7f\u5f97\u91cd\u590d\u6027\u7684\u7ed3\u6784\u4ee3\u7801\u53ef\u4ee5\u88ab\u6709\u6548\u5730\u7f29\u51cf\u3002","title":"4.2 for \u8bed\u53e5"},{"location":"04-control-flow/#421-for","text":"for \u8bed\u53e5\u7684\u683c\u5f0f\u5982\u4e0b\uff1a for \u8fed\u4ee3\u53d8\u91cf in \u5e8f\u5217 \u4f8b\u5982\uff0c\u60f3\u8981\u8f93\u51fa 1~100 \u8fd9 100 \u4e2a\u6570\u5b57\uff0c\u5982\u679c\u4e8b\u5148\u4e0d\u77e5\u9053\u5faa\u73af\u7ed3\u6784\uff0c\u8bfb\u8005\u9700\u8981\u8fde\u7eed\u8f93\u5165 100 \u6761 print \u8bed\u53e5\uff01 print(1) print(2) print(3) ... print(100) \u4e00\u65e6\u4f7f\u7528 for \u5faa\u73af\uff0c\u4ec5\u9700\u8981\u4ee5\u4e0b\u4e24\u884c\u8bed\u53e5\uff1a In [25]: for i in range(1, 101): ...: print(i) ...: 1 2 3 4 5 6 7 8 9 10 ... 100 for \u8bed\u53e5\u4e2d\u7684\u53d8\u91cf i \u79f0\u4e3a\u8fed\u4ee3\u53d8\u91cf\uff0c\u5b83\u4f9d\u6b21\u5b58\u50a8\u5e8f\u5217 range(1,101) \u91cc\u7684\u6240\u6709\u5143\u7d20\u3002\u5f53\u8bfb\u8005\u4f7f\u7528 print() \u51fd\u6570\u9010\u4e00\u6253\u5370\u53d8\u91cf i \u7684\u503c\u65f6\uff0c\u76f8\u5f53\u4e8e\u9010\u6b21\u6253\u5370\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u3002 \u6ce8\u610f\uff0crange() \u51fd\u6570\u53f3\u4fa7\u533a\u95f4\u4e0d\u5305\u542b\uff08\u5de6\u95ed\u53f3\u5f00\uff09\uff0c\u5373 range(1,101) \u6307\u4ece 1 \u5230 100\uff0c\u5305\u542b 1\uff0c\u4e0d\u5305\u542b 101\u3002\u8fd9\u4e0e\u5728\u524d\u4e00\u7ae0\u4ecb\u7ecd\u7684\u5217\u8868\u5207\u7247\u7d22\u5f15\u65b9\u5f0f\u662f\u4e00\u81f4\u7684\u3002","title":"4.2.1 for \u8bed\u53e5\u5757"},{"location":"04-control-flow/#422-else","text":"\u5728 Python \u7684 for \u5faa\u73af\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 else \u8bed\u53e5\u5757\u3002 \u4f8b\u5982\uff0c\u6253\u5370\u6570\u5b57 1~5\uff0c\u7136\u540e\u8f93\u51fa\u5faa\u73af\u7ed3\u675f\u4e86\u3002 In [26]: for i in range(1, 6): ...: print(i) ...: else: ...: print(\"For\u5faa\u73af\u7ed3\u675f\u4e86\u3002\") ...: 1 2 3 4 5 For\u5faa\u73af\u7ed3\u675f\u4e86\u3002 \u4e0d\u8fc7\u60f3\u8981\u8f93\u51fa\u8fd9\u6837\u7684\u7ed3\u679c\u5e76\u4e0d\u9700\u8981 else \u8bed\u53e5\u7684\u53c2\u4e0e\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u3002 In [27]: for i in range(1,6): ...: print(i) ...: ...: print(\"For\u5faa\u73af\u7ed3\u675f\u4e86\") ...: 1 2 3 4 5 For\u5faa\u73af\u7ed3\u675f\u4e86 \u6ce8\u610f\uff0c\u8bed\u53e5 print(\u201cFor\u5faa\u73af\u7ed3\u675f\u4e86\u201d) \u5e76\u4e0d\u5c5e\u4e8e for \u5faa\u73af\u7ed3\u6784\uff08\u4e0d\u7136\u6bcf\u6b21\u8f93\u51fa\u6570\u5b57\u4e5f\u4f1a\u8ddf\u7740\u8f93\u51fa\u4e00\u6b21\uff09\uff0c\u4e24\u8005\u4e2d\u95f4\u9700\u8981\u7a7a\u4e00\u884c Python \u624d\u80fd\u533a\u5206\u3002","title":"4.2.2 else \u8bed\u53e5\u5757"},{"location":"04-control-flow/#423","text":"for \u5faa\u73af\u80fd\u591f\u65b9\u4fbf\u5730\u63d0\u53d6\u4e00\u4e2a\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u3002\u4f46\u6709\u65f6\u5019\uff0c\u8bfb\u8005\u4e0d\u4ec5\u9700\u8981\u77e5\u9053\u5e8f\u5217\u7684\u5143\u7d20\uff0c\u8fd8\u60f3\u77e5\u9053\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f Python \u63d0\u4f9b\u4e86 enumerate() \u51fd\u6570\u53ef\u4ee5\u5728 for \u5faa\u73af\u4e2d\u540c\u65f6\u64cd\u4f5c\u5143\u7d20\u4e0e\u7d22\u5f15\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b\uff1a In [28]: for n, x in enumerate('\u4eb2\u7231\u7684\u4f60\u597d\u5417\uff1f'): ...: print(n, x) ...: 0 \u4eb2 1 \u7231 2 \u7684 3 \u4f60 4 \u597d 5 \u5417 6 \uff1f enumerate() \u51fd\u6570\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u8d77\u59cb\u70b9\u53c2\u6570 start\u3002\u4f8b\u5982\uff0c\u5c06\u8d77\u59cb\u70b9\u8bbe\u4e3a 1\uff0c\u8fd9\u6837\u8f93\u51fa\u7684\u7d22\u5f15\u503c\u53ef\u80fd\u66f4\u7b26\u5408\u67d0\u4e9b\u8bfb\u8005\u7684\u611f\u5b98\u3002 In [29]: for n, x in enumerate('\u4eb2\u7231\u7684\u4f60\u597d\u5417\uff1f', start=1): ...: print(n, x) ...: 1 \u4eb2 2 \u7231 3 \u7684 4 \u4f60 5 \u597d 6 \u5417 7 \uff1f \u53ef\u4ee5\u770b\u5230\uff0c\u867d\u7136\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u5e8f\u5217\u8fd8\u662f\u8ddf\u524d\u9762\u7684\u4e00\u6837\uff0c\u4f46\u7d22\u5f15\u503c\u7531 0 \u5230 6 \u53d8\u66f4\u4e3a\u4e86 1 \u5230 7\u3002","title":"4.2.3 \u7d22\u5f15\u8fed\u4ee3"},{"location":"04-control-flow/#423_1","text":"\u6709\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u60f3\u540c\u65f6\u5bf9\u591a\u4e2a\u5217\u8868\u8fdb\u884c\u64cd\u4f5c\uff0czip() \u51fd\u6570\u63d0\u4f9b\u4e86\u7b80\u4fbf\u5b9e\u73b0\u591a\u5217\u8868\u5143\u7d20\u540c\u65f6\u8fed\u4ee3\u5faa\u73af\u7684\u65b9\u6cd5\u3002 \u4e0b\u9762\u7528\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5b9e\u4f8b\u8bf4\u660e\u2014\u2014\u5bf9\u4e24\u4e2a\u5217\u8868\u7d22\u5f15\u503c\u5bf9\u5e94\u7684\u5143\u7d20\u76f8\u52a0\u3002 In [30]: odd = [1, 3, 5] ...: even = [2, 4, 6] ...: for i, j in zip(odd, even): ...: print(\"\u548c\u4e3a{}\".format(i+j)) ...: \u548c\u4e3a3 \u548c\u4e3a7 \u548c\u4e3a11","title":"4.2.3 \u591a\u5217\u8868\u8fed\u4ee3"},{"location":"04-control-flow/#424","text":"\u5217\u8868\u63a8\u5bfc\u5f0f\uff08\u6709\u65f6\u5019\u4e5f\u79f0\u5217\u8868\u751f\u6210\u5f0f\uff09\u662f\u975e\u5e38 Python \u5316\u7684\u5faa\u73af\u65b9\u5f0f\uff0c\u5b83\u4e0d\u4ec5\u4f53\u73b0\u7740 Python \u7b80\u6d01\u4f18\u7f8e\u7684\u601d\u60f3\uff0c\u800c\u4e14\u6bd4\u666e\u901a\u7684\u5faa\u73af\u65b9\u5f0f\u66f4\u5bb9\u6613\u8bfb\u61c2\u548c\u8282\u7701\u65f6\u95f4\u3002 \u5982\u679c\u60f3\u8981\u5bf9\u5217\u8868\u6240\u6709\u7684\u6570\u503c\uff081~100\uff09\u6c42\u5e73\u65b9\uff0c\u5229\u7528\u5b66\u4e60\u8fc7\u7684 for \u5faa\u73af\uff0c\u8bfb\u8005\u53ef\u80fd\u4f1a\u7f16\u5199\u7c7b\u4f3c\u4e0b\u9762\u7684\u4ee3\u7801\u89e3\u51b3\u95ee\u9898\u3002 numbers = list(range(1,101)) result = [] for num in numbers: result.append(num * num) \u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u5199\u6cd5\u5982\u4e0b\uff1a result = [num * num for num in numbers] \u53ef\u4ee5\u770b\u5230\uff0cfor \u5173\u952e\u5b57\u7684\u53f3\u4fa7\u662f\u5df2\u7ecf\u5b66\u4e60\u8fc7\u7684 for \u5faa\u73af\u7ed3\u6784\uff0c\u800c\u5de6\u4fa7\u662f\u60f3\u8981\u5728 for \u5faa\u73af\u4e2d\u6267\u884c\u7684\u64cd\u4f5c\u3002 \u4e3a\u4e86\u8ba9\u8bfb\u8005\u5bf9\u4e24\u79cd\u5199\u6cd5\u7684\u6548\u7387\u6709\u66f4\u6e05\u695a\u7684\u8ba4\u8bc6\uff0c\u672c\u4e66\u4ee5\u4e24\u79cd\u65b9\u5f0f\u6c42\u53d6 1~100000\u7684 \u5e73\u65b9\u503c\uff0c\u5e76\u4f7f\u7528 time \u6a21\u5757\u8ba1\u7b97\u8fd0\u884c\u65f6\u95f4\u3002 import time numbers = list(range(1,100001)) fl_square_numbers = [] # \u8ba1\u7b97\u65f6\u95f4 t0 = time.perf_counter() # ------------ for \u5faa\u73af ------------ for num in numbers: fl_square_numbers.append(num * num) # \u8ba1\u7b97\u65f6\u95f4 t1 = time.perf_counter() # ------- \u5217\u8868\u63a8\u5bfc\u5f0f ------- lc_square_numbers = [num * num for num in numbers] # \u6267\u884c\u7ed3\u679c t2 = time.perf_counter() fl_time = t1 - t0 lc_time = t2 - t1 improvement = (fl_time - lc_time) / fl_time * 100 # \u5bf9\u7ed3\u679c\u5bf9\u9f50\u5e76\u8bbe\u5b9a\u4fdd\u7559\u7684\u5c0f\u6570\u70b9\u4f4d\u6570 print(\"For\u5faa\u73af\u8fd0\u884c\u65f6\u95f4: {:.4f}\".format(fl_time)) print(\"\u5217\u8868\u63a8\u5bfc\u5f0f\u8fd0\u884c\u65f6\u95f4: {:.4f}\".format(lc_time)) print(\"\u63d0\u5347\u65f6\u95f4: {:.2f}%\".format(improvement)) if fl_square_numbers == lc_square_numbers: print(\"\\n\u4e24\u79cd\u8ba1\u7b97\u65b9\u5f0f\u7ed3\u679c\u76f8\u7b49\") else: print(\"\\n\u4e24\u79cd\u65b9\u5f0f\u8ba1\u7b97\u7ed3\u679c\u4e0d\u76f8\u7b49\") \u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a For\u5faa\u73af\u8fd0\u884c\u65f6\u95f4: 0.0293 \u5217\u8868\u63a8\u5bfc\u5f0f\u8fd0\u884c\u65f6\u95f4: 0.0082 \u63d0\u5347\u65f6\u95f4: 72.14% \u4e24\u79cd\u8ba1\u7b97\u65b9\u5f0f\u7ed3\u679c\u76f8\u7b49 \u4e0a\u8ff0\u4ee3\u7801\u5bf9\u4e8e\u521d\u5b66\u8005\u53ef\u80fd\u6709\u4e9b\u964c\u751f\uff0c\u8bf7\u4e0d\u8981\u5bb3\u6015\uff0c\u5b83\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u5c55\u793a\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u6548\u7387\uff0c\u5728\u8be5\u90e8\u5206\u5b66\u4e60\u4e2d\u5e76\u4e0d\u8981\u6c42\u7406\u89e3\u548c\u638c\u63e1\u6240\u6709\u7684\u4ee3\u7801\u542b\u4e49\u3002\u6ce8\u610f\uff0c\u4e3a\u907f\u514d\u5e72\u6270\u9605\u8bfb\u548c\u7406\u89e3\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u53ea\u5c55\u793a\u4e86\u7eaf\u4ee3\u7801\u6216\u662f\u7eaf\u8f93\u51fa\u7ed3\u679c\uff0c\u6ca1\u6709\u5217\u51fa\u524d\u9762\u5e8f\u53f7\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u9664\u4e86\u5217\u8868\u63a8\u5bfc\u5f0f\u672c\u8eab\u6548\u7387\u7684\u63d0\u5347\uff0c\u6ca1\u6709\u8c03\u7528 append() \u65b9\u6cd5\u4e5f\u8282\u7701\u4e86\u5927\u91cf\u65f6\u95f4\u3002","title":"4.2.4 \u5217\u8868\u63a8\u5bfc\u5f0f"},{"location":"04-control-flow/#425","text":"\u5728\u57fa\u672c\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u57fa\u7840\u4e0a\uff0c\u8bfb\u8005\u53ef\u4ee5\u589e\u52a0\u6761\u4ef6\u68c0\u6d4b\uff0c\u8fd9\u6837\u5e26\u6761\u4ef6\u68c0\u6d4b\u7684\u5217\u8868\u63a8\u5bfc\u5f0f\u79f0\u4e3a\u6761\u4ef6\u5217\u8868\u63a8\u5bfc\u5f0f\u3002\u6761\u4ef6\u8bed\u53e5\u65e2\u53ef\u4ee5\u5199\u5728 for \u8bed\u53e5\u5757\u5de6\u4fa7\uff0c\u4e5f\u53ef\u4ee5\u5199\u5728 for \u8bed\u53e5\u5757\u53f3\u4fa7\u3002 \u6761\u4ef6\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a [ \u64cd\u4f5c1 if \u6761\u4ef6\u5224\u65ad else \u64cd\u4f5c2 for \u8fed\u4ee3\u53d8\u91cf in \u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u7b49\uff09 ] [ \u64cd\u4f5c for \u8fed\u4ee3\u53d8\u91cf in \u53ef\u8fed\u4ee3\u5bf9\u8c61 if \u6761\u4ef6\u5224\u65ad ] \u7b2c 1 \u79cd\u5f62\u5f0f\u662f\u5728\u5217\u8868\u63a8\u5bfc\u5f0f\u4e2d\u4f7f\u7528 if-else \u6761\u4ef6\u8bed\u53e5\uff0c\u5982\u679c\u4e3a\u771f\uff0c\u5219\u5bf9\u8fed\u4ee3\u53d8\u91cf\u6267\u884c\u64cd\u4f5c 1\uff0c\u5426\u5219\u6267\u884c\u64cd\u4f5c 2\u3002 \u7b2c 2 \u79cd\u5f62\u5f0f\u662f\u53ea\u5728\u5217\u8868\u63a8\u5bfc\u5f0f\u4e2d\u4f7f\u7528 if \u8bed\u53e5\u5757\uff0c\u5982\u679c\u4e3a\u771f\uff0c\u5219\u5bf9\u8fed\u4ee3\u53d8\u91cf\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\u3002 \u4e3a\u4e86\u4ecb\u7ecd\u6761\u4ef6\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u4f7f\u7528\u65b9\u5f0f\u548c\u6267\u884c\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a\u5305\u542b 9 \u4e2a\u6b63\u6574\u6570\u7684\u5217\u8868\uff0c\u5229\u7528\u6761\u4ef6\u5217\u8868\u63a8\u5bfc\u5f0f\u5c06\u5217\u8868\u4e2d\u7684\u5947\u6570\u548c\u5076\u6570\u5206\u5f00\u4e3a\u5355\u72ec\u7684\u5217\u8868\u3002 In [34]: numbers = [2, 12, 3, 25, 24, 21, 5, 9, 12] \u5982\u679c\u4f7f\u7528 if-else \u6761\u4ef6\u8bed\u53e5\uff0c\u53ef\u4ee5\u5199\u4f5c\u4ee5\u4e0b\u7565\u957f\u7684\u5f62\u5f0f\uff1a In [35]: odd_numbers = [] ...: even_numbers = [] ...: [odd_numbers.append(num) if(num % 2) else even_numbers.append(num) for num in numbers] ...: Out[35]: [None, None, None, None, None, None, None, None, None] In [36]: odd_numbers Out[36]: [3, 25, 21, 5, 9] In [37]: even_numbers Out[37]: [2, 12, 24, 12] \u57fa\u7840\u5217\u8868\u63a8\u5bfc\u5f0f\u52a0\u4e0a\u6761\u4ef6\u7ed3\u6784\u8ba9\u6574\u4e2a\u8bed\u53e5\u663e\u5f97\u6709\u4e9b\u590d\u6742\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u8bed\u53e5\u4ece\u53f3\u5230\u5de6\u53ef\u4ee5\u5206\u4e3a 3 \u4e2a\u6b65\u9aa4\uff1a \u8fed\u4ee3\u53d8\u91cf num \u4f9d\u6b21\u83b7\u53d6\u53ef\u8fed\u4ee3\u53d8\u91cf numbers \u7684\u5143\u7d20\u503c\u3002 \u5bf9\u8fed\u4ee3\u53d8\u91cf\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\uff0c\u5982\u679c\u80fd\u88ab 2 \u6574\u9664\uff08\u4f59\u6570\u4e3a 0\uff09\uff0c\u5219\u6dfb\u52a0\u5143\u7d20\u503c\u5230\u53d8\u91cf odd_numbers\uff1b\u5982\u679c\u4e0d\u80fd\u88ab 2 \u6574\u9664\uff08\u4f59\u6570\u4e0d\u4e3a 0\uff09\uff0c\u5219\u6dfb\u52a0\u5143\u7d20\u503c\u5230\u53d8\u91cf even_numbers\u3002 \u6574\u4e2a\u5217\u8868\u7ed3\u679c\u8f93\u51fa\uff0c\u56e0\u4e3a\u5143\u7d20\u90fd\u88ab\u6dfb\u52a0\u5230\u63d0\u524d\u58f0\u660e\u597d\u7684\u4e24\u4e2a\u53d8\u91cf\u4e2d\u4e86\uff0c\u6240\u4ee5\u8fd9\u6761\u8bed\u53e5\u7ed3\u679c\u662f\u4e00\u4e2a\u5168 None\uff08\u7a7a\uff09\u7684\u5217\u8868\u3002 \u901a\u8fc7\u4ee5\u4e0a\u8fc7\u7a0b\u8bfb\u8005\u53ef\u4ee5\u9886\u4f1a\u5230\uff0c\u5e26 if-else \u7684\u5217\u8868\u63a8\u5bfc\u5f0f\u770b\u8d77\u6765\u590d\u6742\uff0c\u5176\u5b9e\u53ef\u4ee5\u4ece\u7531\u53f3\u81f3\u5de6\u8bfb\u8fdb\u884c\u7406\u89e3\u3002\u8fd9\u79cd\u7528\u6cd5\u5728\u8fd9\u91cc\u7684\u5f0a\u7aef\u6bd4\u8f83\u660e\u663e\uff0c\u770b\u4f3c\u53ea\u7528\u4e86\u4e00\u6761\u8bed\u53e5\u5b8c\u6210\u4e86\u64cd\u4f5c\uff0c\u4f46\u6211\u4eec\u4e0d\u5f97\u7684\u4e8b\u5148\u58f0\u660e\u4e24\u4e2a\u7a7a\u5217\u8868\u8ba9\u5b83\u4eec\u53ef\u4ee5\u4f7f\u7528 append() \u65b9\u6cd5\u3002\u5e76\u4e14\uff0c\u5217\u8868\u63a8\u5bfc\u5f0f\u672c\u8eab\u7684\u8f93\u51fa\u6beb\u65e0\u610f\u4e49\u3002\u8be5\u5982\u4f55\u8fdb\u884c\u6709\u6548\u5730\u7b80\u5316\u5462\uff1f\u8fd9\u91cc\u5f97\u60f3\u529e\u6cd5\u5229\u7528\u4e0a\u5217\u8868\u63a8\u5bfc\u5f0f\u672c\u8eab\u7684\u8f93\u51fa\u7ed3\u679c\u5c31\u662f\u5217\u8868\u8fd9\u4e00\u4e2a\u70b9\uff0c\u65e2\u7136\u5982\u6b64\uff0c\u4f55\u4e0d\u5c06\u5947\u6570\u548c\u5076\u6570\u5206\u522b\u4f7f\u7528\u6761\u4ef6\u5217\u8868\u63a8\u5bfc\u5f0f\uff1f \u76f8\u5e94\u64cd\u4f5c\u5982\u4e0b\uff1a In [38]: odd_numbers = [num for num in numbers if num % 2] ...: even_numbers = [num for num in numbers if not num % 2] ...: In [39]: odd_numbers Out[39]: [3, 25, 21, 5, 9] In [40]: even_numbers Out[40]: [2, 12, 24, 12] \u89e3\u51b3\u540c\u6837\u7684\u95ee\u9898\uff0c\u6709\u65f6\u5019\u62c6\u5206\u5f00\u6765\u505a\u66f4\u7b80\u6d01\u6613\u61c2\u3002 \u5143\u7ec4\u7684\u8fed\u4ee3\u57fa\u672c\u548c\u5217\u8868\u4e00\u81f4\uff0c\u672c\u4e66\u4e0d\u518d\u9610\u8ff0\u3002\u9664\u4e86\u5217\u8868\u548c\u5143\u7ec4\uff0c\u5b57\u5178\u4e5f\u662f\u9891\u7e41\u88ab\u4f7f\u7528\u548c\u88ab\u8fed\u4ee3\u7684\u5bf9\u8c61\uff0c\u4e0b\u4e00\u5c0f\u8282\u672c\u4e66\u5c06\u4ecb\u7ecd\u76f8\u5173\u7684\u64cd\u4f5c\u3002","title":"4.2.5 \u6761\u4ef6\u5217\u8868\u63a8\u5bfc\u5f0f"},{"location":"04-control-flow/#426","text":"\u672c\u4e66\u5728\u524d\u4e00\u7ae0\u7684\u5b57\u5178\u90e8\u5206\u4ecb\u7ecd\u8fc7\uff1akeys() \u548c values() \u65b9\u6cd5\u53ef\u4ee5\u5206\u522b\u83b7\u53d6\u5b57\u5178\u7684\u952e\u4e0e\u503c\u3002\u5173\u4e8e\u5b57\u5178\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u6027\uff0c\u8bfb\u8005\u5e94\u5f53\u7262\u8bb0\u2014\u2014\u5b57\u5178\u662f\u968f\u673a\u7684\u3002\u56e0\u6b64\u6b63\u786e\u83b7\u53d6\u5143\u7d20\u503c\u7684\u65b9\u6cd5\u4e00\u5b9a\u662f\u901a\u8fc7\u952e\u8fdb\u884c\u7d22\u5f15\uff0c\u5927\u90e8\u5206\u9488\u5bf9\u5b57\u5178\u7684\u64cd\u4f5c\u90fd\u5e94\u5f53\u540c\u65f6\u9488\u5bf9\u952e\u548c\u503c\u3002 Python \u63d0\u4f9b\u4e86 items() \u65b9\u6cd5\u7528\u4e8e\u5b57\u5178\u7684\u8fed\u4ee3\u3002\u5047\u8bbe\u73b0\u5728\u6709\u4e00\u4e2a\u5b57\u5178\uff0c\u5b58\u50a8\u7740\u7528\u6237\u559c\u6b22\u7684\u4e66\u7c4d\u4ee5\u53ca\u7528\u6237\u5bf9\u5b83\u4eec\u7684\u6253\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5b57\u5178\u8fed\u4ee3\u8f93\u51fa\u5176\u5185\u5bb9\u3002 In [41]: books = {\"\u590f\u6d1b\u514b*\u798f\u5c14\u6469\u65af\":98, \"\u54c8\u5229\u6ce2\u7279\":80, \"\u8fbe\u82ac\u5947\u5bc6\u7801\":88} In [42]: for book_name,book_score in books.items(): ...: print(book_name, book_score, sep=\":\") ...: \u590f\u6d1b\u514b*\u798f\u5c14\u6469\u65af:98 \u54c8\u5229\u6ce2\u7279:80 \u8fbe\u82ac\u5947\u5bc6\u7801:88 \u8bfb\u8005\u5982\u679c\u53ea\u60f3\u5bf9\u5b57\u5178\u7684\u952e\u6216\u8005\u503c\u8fdb\u884c\u8fed\u4ee3\u64cd\u4f5c\uff0c\u5206\u522b\u4f7f\u7528 keys() \u4e0e values() \u65b9\u6cd5\u5373\u53ef\u3002 In [43]: for book_key in books.keys(): ...: print(book_key) ...: \u590f\u6d1b\u514b*\u798f\u5c14\u6469\u65af \u54c8\u5229\u6ce2\u7279 \u8fbe\u82ac\u5947\u5bc6\u7801 In [44]: for book_score in books.values(): ...: print(book_score) ...: 98 80 88 \u5728\u5b9e\u9645\u7684\u5e94\u7528\u4e2d\uff0c\u5b57\u5178\u5e38\u4f5c\u4e3a\u8ba1\u6570\u5668\uff0c\u5b58\u50a8\u5e8f\u5217\uff08\u5217\u8868\u3001\u5143\u7ec4\uff09\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\u3002\u65e0\u8bba\u5904\u7406\u4ec0\u4e48\u6837\u7684\u8f93\u5165\uff0c\u8fd9\u7c7b\u7528\u6cd5\u90fd\u5927\u540c\u5c0f\u5f02\uff0c\u6709\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u521b\u5efa\u4e00\u4e2a\u7a7a\u5b57\u5178 \u5bf9\u5e8f\u5217\u5143\u7d20\u8fdb\u884c\u5faa\u73af\u904d\u5386 \u5982\u679c\u5e8f\u5217\u5143\u7d20\u5728\u5b57\u5178\u4e2d\uff0c\u5219\u4ee5\u8be5\u5143\u7d20\u4e3a\u952e\uff0c\u5bf9\u5176\u503c\u52a0 1 \u5982\u679c\u5e8f\u5217\u5143\u7d20\u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b57\u5178\u5143\u7d20\uff0c\u952e\u4e3a\u8be5\u5e8f\u5217\u5143\u7d20\uff0c\u503c\u4e3a 1 \u73b0\u5728\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4ece\u67d0\u5c0f\u5b66\u968f\u673a\u62bd\u53d6 10 \u540d\u5b66\u751f\uff0c\u5206\u522b\u5bf9\u5b83\u4eec\u6240\u5904\u7684\u5e74\u7ea7\u8fdb\u884c\u8ba1\u6570\u3002 10 \u540d\u5b66\u751f\u7684\u6240\u5728\u5e74\u7ea7\u5982\u4e0b\u5b58\u50a8\u5728\u5217\u8868\u4e2d\u3002 In [45]: st_grades = [2, 3, 1, 1, 3, 5, 4, 6, 6, 1] \u6839\u636e\u4e0a\u9762\u63cf\u8ff0\u7684\u6b65\u9aa4\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u5bf9\u5b66\u751f\u6240\u5c5e\u5e74\u7ea7\u7684\u8ba1\u6570\u3002 In [46]: grades_count = dict() # \u521d\u59cb\u5316\u5b57\u5178 In [47]: for st_grade in st_grades: ...: if st_grade in grades_count: ...: grades_count[st_grade] += 1 # \u5982\u679c\u67d0\u5e74\u7ea7\u5df2\u6709\u5b66\u751f\uff0c\u5219\u5bf9\u8be5\u5e74\u7ea7\u8ba1\u6570\u52a01 ...: else: ...: grades_count[st_grade] = 1 # \u5982\u679c\u67d0\u5e74\u7ea7\u7b2c\u4e00\u6b21\u5bf9\u5b66\u751f\u8ba1\u6570\uff0c\u5219\u4ee4\u8be5\u5e74\u7ea7\u7684\u8ba1\u6570\u4e3a1 ...: In [48]: grades_count Out[48]: {1: 3, 2: 1, 3: 2, 4: 1, 5: 1, 6: 2} \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684 grades_count[st_grade] += 1 \u662f grades_count[st_grade] = grades_count[st_grade] + 1 \u7684\u7b80\u5199\u3002\u540c\u6837\u7684\uff0c\u6709 -= \u548c *= \u7528\u4e8e\u7b80\u5199\u3002","title":"4.2.6 \u5b57\u5178\u8fed\u4ee3"},{"location":"04-control-flow/#43-while","text":"for \u8bed\u53e5\u53ef\u4ee5\u89e3\u51b3\u6211\u4eec\u5e38\u89c1\u7684 90% \u7684\u5faa\u73af\u8fed\u4ee3\u64cd\u4f5c\u9700\u6c42\uff0c\u4f46\u5269\u4e0b\u7684\u90e8\u5206\u5b83\u6beb\u65e0\u529e\u6cd5\u3002\u8bfb\u8005\u8981\u77e5\u9053\uff0cfor \u5faa\u73af\u7684\u4f7f\u7528\u662f\u5efa\u7acb\u5728\u6211\u4eec\u5df2\u77e5\u9700\u8981\u64cd\u4f5c\u7684\u5faa\u73af\u6b21\u6570\u7684\u57fa\u7840\u4e0a\u3002\u5728\u4e0d\u77e5\u9053\u5faa\u73af\u4f55\u65f6\u505c\u6b62\u65f6\uff0c\u9700\u8981\u501f\u52a9 while \u8bed\u53e5\u7684\u529b\u91cf\u6765\u5b8c\u6210\u64cd\u4f5c\u3002 while \u8bed\u53e5\u7684\u683c\u5f0f\u5982\u4e0b\uff1a while condition: \u8bed\u53e5\u5757 condition \u90e8\u5206\u662f\u6761\u4ef6\u68c0\u67e5\uff0c\u7ed3\u679c\u5fc5\u987b\u4e3a\u903b\u8f91\u503c\uff0c\u53ef\u4ee5\u662f\u5355\u4e2a\u6216\u7ec4\u5408\u6d4b\u8bd5\u8bed\u53e5\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8bfb\u8005\u5728\u4f7f\u7528 while \u8bed\u53e5\u65f6\uff0c\u4e00\u5b9a\u8981\u4fdd\u8bc1\u5faa\u73af\u80fd\u591f\u88ab\u7ed3\u675f\u6216\u8005\u8df3\u51fa\uff0c\u5426\u5219\u7a0b\u5e8f\u5c06\u8fdb\u5165\u6b7b\u5faa\u73af\uff0c\u8f6f\u4ef6\u51fa\u73b0\u5361\u6b7b\u3002\u4e25\u91cd\u7684\u8bdd\uff0c\u7535\u8111\u751a\u81f3\u4f1a\u5b95\u673a\u3002\u4e0d\u8fc7\uff0c\u6e38\u620f\u5f00\u53d1\u4ee3\u7801\u4e2d\u5e38\u7528 while \u8bed\u53e5\u4fdd\u6301\u7b49\u5f85\u7528\u6237\u8f93\u5165\u76f4\u5230\u9000\u51fa\u3002 \u4e3a\u4e86\u80fd\u591f\u5c55\u793a while \u8bed\u53e5\u4e0e\u524d\u9762\u4ecb\u7ecd\u7684 for \u8bed\u53e5\u4f7f\u7528\u6761\u4ef6\u7684\u5dee\u5f02\uff0c\u8fd9\u91cc\u4f7f\u7528 while \u8bed\u53e5\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u731c\u6570\u5b57\u6e38\u620f\u3002 \u731c\u6570\u5b57\u6e38\u620f\u60f3\u5fc5\u5927\u5bb6\u4e0d\u964c\u751f\uff0c\u7531\u4e00\u4e2a\u4eba\u4f5c\u4e3a\u88c1\u5224\uff0c\u9009\u62e9\u4e00\u4e2a\u6570\u5b57\uff0c\u5148\u6307\u5b9a\u5927\u81f4\u8303\u56f4\uff0c\u7531\u4f17\u4eba\u731c\u6d4b\uff0c \u6839\u636e\u731c\u6d4b\u7ed9\u51fa\u9ad8\u6216\u8005\u4f4e\u7684\u8bc4\u4ef7\uff0c\u7136\u540e\u7f29\u5c0f\u8303\u56f4\uff0c\u6700\u540e\u731c\u4e2d\u7684\u4eba\u6709\u7279\u522b\u7684\u5956\u52b1\u3002 \u8fd9\u91cc\u8bbe\u5b9a\u6570\u5b57\u8303\u56f4\u4e3a 0~999\uff0c\u4e3a\u4e86\u968f\u673a\u5316\u53d6\u6570\u5b57\uff0c\u6211\u4eec\u5229\u7528 random \u6a21\u5757\u7684 randint() \u51fd\u6570\u751f\u6210\u968f\u673a\u6574\u6570\u3002\u53e6\u5916\uff0c\u4e3a\u4e86\u8ba9\u5faa\u73af\u53ca\u65f6\u5730\u505c\u6b62\uff0c\u4f7f\u7528\u4e0b\u9762\u4e00\u8282\u5b66\u4e60\u7684 break \u8bed\u53e5\u8df3\u51fa\u5faa\u73af\u3002 import random # \u5bfc\u5165random\u6a21\u5757 NUMBER = random.randint(0,999) # \u751f\u6210[0, 999]\u8303\u56f4\u5185\u7684\u6570\u5b57 while True: guess = int(input(\"\u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a\\n\")) if guess == NUMBER: print(\"\u606d\u559c\uff01\u731c\u5bf9\u4e86\uff01\") break elif guess > NUMBER: print(\"\u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01\") else: print(\"\u592a\u5c0f\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01\") \u672c\u4e66\u4f5c\u8005\u64cd\u4f5c\u7684\u6e38\u620f\u8fc7\u7a0b\u5982\u4e0b\uff1a \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 50 \u592a\u5c0f\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 500 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 200 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 100 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 60 \u592a\u5c0f\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 80 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 70 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 60 \u592a\u5c0f\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 65 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 64 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 63 \u592a\u5927\u4e86...\u8bf7\u91cd\u65b0\u731c\uff01 \u8bf7\u8f93\u5165\u6570\u5b57\uff080-999\uff09\uff1a 62 \u606d\u559c\uff01\u731c\u5bf9\u4e86\uff01 \u5408\u9002\u5730\u4f7f\u7528 while \u8bed\u53e5\u53ef\u4ee5\u6781\u5927\u5730\u51cf\u5c11\u4f7f\u7528\u5faa\u73af\u7ed3\u6784\u65f6\u7684\u9700\u8981\u7684\u521d\u59cb\u8ba4\u77e5\u3002\u4ee3\u7801\u4e0d\u9700\u8981\u77e5\u9053\u8981\u8fd0\u884c\u591a\u5c11\u6b21\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5f53\u67d0\u79cd\u6761\u4ef6\u89e6\u53d1\u65f6\uff0c\u5b83\u4f1a\u7acb\u5373\u505c\u6b62\u3002\u4e0d\u8fc7\u6709\u65f6\u5019\u8fd9\u9700\u8981\u63a5\u4e0b\u6765\u4e00\u5c0f\u8282\u4ecb\u7ecd\u7684 continue \u548c break \u547d\u4ee4\u7684\u914d\u5408\u3002","title":"4.3 while \u8bed\u53e5"},{"location":"04-control-flow/#44-continuebreak-pass","text":"\u6709\u65f6\u5019\uff0c\u5b58\u5728\u7c7b\u4f3c\u8fd9\u6837\u7684\u95ee\u9898\u4e9f\u5f85\u89e3\u51b3\uff1a\u4e00\u65b9\u9762\uff0c\u6570\u636e\u5904\u7406\u7684\u6b65\u9aa4\u662f\u91cd\u590d\u7684\u3001\u7e41\u91cd\u7684\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u91cd\u590d\u4f3c\u4e4e\u6ca1\u90a3\u4e48\u6709\u89c4\u5f8b\uff0c\u5373\u5355\u7eaf\u5730\u4f7f\u7528\u5faa\u73af\u7ed3\u6784\u4e0d\u80fd\u89e3\u51b3\u95ee\u9898\u3002Python \u63d0\u4f9b\u4e86 continue \u548c break \u8bed\u53e5\u6765\u5e2e\u52a9\u6269\u5c55\u5faa\u73af\u7ed3\u6784\u7684\u5e94\u7528\u8303\u56f4\uff0c\u4ee5\u89e3\u51b3\u4e0a\u9762\u6240\u8ff0\u7684\u95ee\u9898\u3002","title":"4.4 continue\u3001break \u4e0e pass"},{"location":"04-control-flow/#441-continue","text":"continue \u8bed\u53e5\u53ef\u4ee5\u8ba9\u5f53\u524d\u5faa\u73af\u8df3\u8fc7\u4f59\u4e0b\u7684\u6b65\u9aa4\uff0c\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\u3002 \u8fd9\u91cc\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u8bf4\u660e continue \u8bed\u53e5\u7684\u9002\u7528\u60c5\u51b5\u3002\u5728\u4ecb\u7ecd\u4f8b\u5b50\u4e4b\u524d\uff0c\u672c\u4e66\u5148\u4ecb\u7ecd\u4e00\u4e2a\u76f8\u5173\u7684\u6570\u5b66\u6982\u5ff5\u2014\u2014\u9636\u4e58\u3002 \u6ce8\u610f\uff0c\u4e00\u4e2a\u6b63\u6574\u6570\u7684\u9636\u4e58\uff08factorial\uff09\u662f\u6240\u6709\u5c0f\u4e8e\u53ca\u7b49\u4e8e\u8be5\u6570\u7684\u6b63\u6574\u6570\u7684\u79ef\uff0c\u5e76\u4e14 0 \u7684\u9636\u4e58\u4e3a 1\u3002\u81ea\u7136\u6570 n \u7684\u9636\u4e58\u5199\u4f5c n!\u3002 \u4f8b\u5982\uff0c2 \u7684\u9636\u4e58 2! \u4e3a 2 X 1 = 2\uff0c3 \u7684\u9636\u4e58 3! \u4e3a 3 X 2 X 1 = 6\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u73b0\u5728\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u73b0\u5728\u9700\u8981\u8ba1\u7b97\u4ece 1 \u5230 10\uff0c\u6392\u9664 3 \u7684\u500d\u6570\u4f59\u4e0b\u7684\u51e0\u4e2a\u6574\u6570\u7684\u9636\u4e58\uff0c\u5373 1\u30012\u30014\u30015\u30017\u30018\u300110 \u7684\u9636\u4e58\uff0c\u5982\u679c\u7528\u5faa\u73af\u5b9e\u73b0\u5462\uff1f \u5f53\u7136\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u5b58\u50a8\u8fd9\u51e0\u4e2a\u6570\uff0c\u7136\u540e\u8fdb\u884c\u5faa\u73af\u904d\u5386\u8ba1\u7b97\u6570\u7684\u9636\u4e58\u3002\u5b9e\u73b0\u7684\u4ee3\u7801\u5982\u4e0b\uff1a In [1]: number_list = [1, 2, 4, 5, 7, 8, 10] In [2]: import math In [3]: for i in number_list: ...: print(math.factorial(i)) 1 2 24 120 5040 40320 3628800 \u8fd9\u91cc\u672c\u4e66\u76f4\u63a5\u4f7f\u7528\u4e86 math \u6a21\u5757\u4e2d\u7684 factorial() \u51fd\u6570\u8ba1\u7b97\u9636\u4e58\u3002\u9996\u5148\u8bfb\u8005\u9700\u8981\u4f7f\u7528 import \u8bed\u53e5\u5bfc\u5165\u6a21\u5757\uff0c\u7136\u540e\u518d\u4ee5\u6a21\u5757\u540d\u540e\u52a0\u82f1\u6587\u70b9\u5b57\u7b26\u518d\u52a0\u51fd\u6570\u540d\u7684\u65b9\u5f0f\u8c03\u7528\u6a21\u5757\u7684\u51fd\u6570\u3002 \u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u597d\u50cf\u5f88\u7b80\u5355\uff0c\u8fd9\u4e0e continue \u8bed\u53e5\u53c8\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u601d\u8003\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u4e0d\u662f\u7b80\u5355\u8fd9\u51e0\u4e2a\u6570\u7684\u9636\u4e58\uff0c\u800c\u662f\u8ba1\u7b97 100 \u4ee5\u5185\uff0c\u751a\u81f3 1000\u300110000 \u4ee5\u5185\u6392\u9664 3 \u7684\u500d\u6570\u6240\u5269\u6570\u7684\u9636\u4e58\u5462\uff1f\u8bfb\u8005\u8fd8\u80fd\u5426\u4f7f\u7528\u4e0a\u8ff0\u7684\u65b9\u5f0f\u5b8c\u6210\u4efb\u52a1\uff1f \u7ed3\u679c\u662f\u4e0d\u80fd\u3002\u90a3\u8be5\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\u4e0b\u9762\u4ee5 1000 \u4ee5\u5185\u4e3a\u4f8b\u3002 \u4e0a\u9762\u89e3\u6cd5\u7684\u7b28\u62d9\u4e4b\u5904\u5728\u4e8e\u8bfb\u8005\u9700\u8981\u624b\u52a8\u8f93\u5165\u5217\u8868\uff0c\u5b9e\u9645\u4e0a\u5b83\u4eec\u662f\u6709\u89c4\u5f8b\u7684\uff01\u8981\u8ba1\u7b97\u7684 number_list \u662f\u4e00\u4e2a\u8fde\u7eed\u6574\u6570\u9664\u53bb 3 \u7684\u500d\u6570\u7684\u4e00\u4e2a\u5217\u8868\uff0c\u5982\u679c\u6211\u4eec\u80fd\u591f\u901a\u8fc7\u5faa\u73af\u81ea\u52a8\u521b\u5efa\u8be5\u5217\u8868\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u624b\u52a8\u8f93\u5165\u5217\u8868\u4e86\uff0c\u524d\u9762\u7684\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002 In [4]: number_list = [] ...: for i in range(1, 1001): ...: if i % 3 == 0: ...: continue ...: else: ...: number_list.append(i) ...: ...: len(number_list) Out[4]: 667 \u4e0a\u9762\u4ee3\u7801\u4f7f\u7528\u5faa\u73af\u6784\u5efa\u6240\u9700\u7684 number_list\u3002\u901a\u8fc7 range() \u51fd\u6570\u4ea7\u751f\u6570\u5b57 1 \u5230 1000\uff0c\u7136\u540e\u5f53\u8fed\u4ee3\u53d8\u91cf i \u662f 3 \u7684\u500d\u6570\u65f6\uff0c\u5faa\u73af\u8f6c\u5411\u4e0b\u4e00\u6b21\u3002\u5f53\u8fed\u4ee3\u53d8\u91cf i \u4e0d\u662f 3 \u7684\u500d\u6570\u65f6\uff0c\u5c06\u6570\u5b57\u52a0\u5165\u5217\u8868 number_list\u3002\u8fd9\u6837\uff0c\u4ee3\u7801\u81ea\u52a8\u751f\u6210\u4e86\u540e\u9762\u8ba1\u7b97\u9636\u4e58\u6240\u9700\u8981\u7684\u5217\u8868\uff0c\u907f\u514d\u7684\u624b\u52a8\u8f93\u5165\u7684\u56f0\u96be\u3002 \u6761\u6761\u5927\u8def\u901a\u7f57\u9a6c\u3002\u5982\u679c\u8bfb\u8005\u719f\u7ec3\u638c\u63e1\u4e86\u5217\u8868\u63a8\u5bfc\u5f0f\uff0c\u4e0a\u8ff0\u7684\u5faa\u73af\u64cd\u4f5c\u4fbf\u663e\u5f97\u591a\u4f59\u8d77\u6765\uff0c\u4e0b\u9762\u7684\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\uff0c\u4e0d\u9700\u8981\u672c\u5c0f\u8282\u4ecb\u7ecd\u7684 continue\u3002 number_list = [ i for i in range(1, 1001) if i % 3 != 0 ] \u8bfb\u8005\u751a\u81f3\u53ef\u4ee5\u5bf9\u4e0a\u8ff0\u7684\u95ee\u9898\u7528\u4e00\u884c\u4ee3\u7801\u89e3\u7b54\uff0c\u5982\u4e0b\uff1a [ print(math.factorial(i)) for i in range(1, 1001) if i % 3 != 0 ] \u8fd9\u4e00\u884c\u4ee3\u7801\u7684\u8ba1\u7b97\u91cf\u975e\u5e38\u5927\uff0c\u5efa\u8bae\u8bfb\u8005\u4e0d\u8981\u8fd0\u884c\uff0c\u5c1d\u8bd5\u9009\u62e9\u4e00\u4e2a\u5c0f\u7684\u5faa\u73af\u6570\u67e5\u770b\u7ed3\u679c\u3002","title":"4.4.1 continue"},{"location":"04-control-flow/#442-break","text":"break \u8bed\u53e5\u4e0e continue \u8bed\u53e5\u4e0d\u540c\uff0c\u4e00\u65e6\u5faa\u73af\u8fd0\u884c\u5230 break \u4f1a\u8df3\u51fa\u5faa\u73af\uff08\u5373\u505c\u6b62\u5faa\u73af\uff09\u800c\u4e0d\u662f\u8f6c\u5411\u50cf continue \u8f6c\u5411\u4e0b\u4e00\u6b21\u5faa\u73af\u3002\u5728\u524d\u6587\u4f7f\u7528 while \u5faa\u73af\u521b\u5efa\u7684\u731c\u6570\u5b57\u6e38\u620f\u4e2d\uff0c\u5f53\u6e38\u620f\u8005\u731c\u4e2d\u6570\u5b57\u540e\uff0cbreak \u8bed\u53e5\u5b8c\u6210\u505c\u6b62\u6e38\u620f\u7684\u64cd\u4f5c\u3002\u9664\u4e86\u6e38\u620f\uff0cbreak \u5728\u6570\u636e\u5206\u6790\u4e2d\u4f7f\u7528\u4e5f\u5341\u5206\u666e\u904d\u3002\u5f53\u9047\u5230\u5f02\u5e38\u7684\u6570\u636e\u6216\u8005\u7528\u6237\u5728\u5faa\u73af\u5185\u90e8\u8bbe\u7f6e\u7684\u6d4b\u8bd5\u6761\u4ef6\u88ab\u6ee1\u8db3\u65f6\uff0cbreak \u80fd\u591f\u5e2e\u52a9\u53ca\u65f6\u5730\u505c\u6b62\u5faa\u73af\u3002 \u672c\u5c0f\u8282\u518d\u5217\u4e3e\u51e0\u4e2a\u4f7f\u7528 break \u7684\u7b80\u5355\u4f8b\u5b50\uff0c\u8bf4\u660e break \u5728 while \u5faa\u73af\u3001for \u5faa\u73af\u4ee5\u53ca\u5d4c\u5957\u5faa\u73af\u7ed3\u6784\u4e2d\u7684\u5e94\u7528\u3002","title":"4.4.2 break"},{"location":"04-control-flow/#443-pass","text":"pass \u5173\u952e\u5b57\u4e3a Python \u63d0\u4f9b\u4e86\u975e\u64cd\u4f5c\u8bed\u53e5\uff0c\u901a\u5e38\u4f5c\u4e3a\u672a\u6267\u884c\u4ee3\u7801\u7684\u5360\u4f4d\u7b26\u3002\u56e0\u4e3a Python \u9700\u8981\u4f7f\u7528\u7a7a\u767d\u5b57\u7b26\u5212\u5b9a\u4ee3\u7801\u5757\uff0c\u6240\u4ee5\u9700\u8981 pass \u8bed\u53e5\u8fdb\u884c\u5360\u4f4d\u3002 \u8bfb\u8005\u5728\u6784\u601d\u6bd4\u8f83\u590d\u6742\u7684\u4ee3\u7801\u5b9e\u73b0\u65f6 pass \u8bed\u53e5\u662f\u975e\u5e38\u597d\u7684\u5e2e\u624b\uff0c\u7279\u522b\u662f\u5b83\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u68c0\u6d4b\u5728\u67d0\u4e9b\u529f\u80fd\u8fd8\u672a\u5b8c\u6210\u7684\u60c5\u51b5\u4e0b\uff0c\u5df2\u6709\u529f\u80fd\u662f\u5426\u6b63\u786e\u5b9e\u73b0\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4e0b\u9762\u4ee3\u7801\u5b9e\u73b0\u6b63\u8d1f\u6570\u7684\u5224\u65ad\uff0c\u4f46\u8fd8\u672a\u66fe\u5b9e\u73b0\u8f93\u5165\u662f 0 \u65f6\u7684\u5904\u7406\uff0c\u56e0\u6b64\u5229\u7528 pass \u8bed\u53e5\u8fdb\u884c\u5360\u4f4d\u3002 if x < 0: print('\u8d1f\u6570\uff01') elif x == 0: # \u672a\u6765\u8981\u505a\u7684\u4e8b\u60c5\uff1a.... pass else: print('\u6b63\u6570\uff01')","title":"4.4.3 pass"},{"location":"04-control-flow/#45","text":"\u6570\u636e\u603b\u662f\u5b58\u50a8\u5728\u5404\u5f0f\u5404\u6837\u7684\u6587\u4ef6\u4e2d\uff0c\u5305\u62ec\u6587\u672c\u3001\u6570\u5b57\u3001\u56fe\u50cf\u4ee5\u53ca\u89c6\u9891\uff0c\u56e0\u6b64\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u662f\u6570\u636e\u5206\u6790\u4eba\u5458\u5e38\u89c1\u7684\u64cd\u4f5c\u4e4b\u4e00\u3002\u672c\u8282\u5c06\u4ecb\u7ecd\u57fa\u672c\u7684\u6587\u4ef6\u7c7b\u578b\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 Python \u5185\u7f6e\u7684\u6a21\u5757\u8fdb\u884c\u6587\u4ef6\u57fa\u672c\u7684\u8bfb\u5199\u64cd\u4f5c\u3002","title":"4.5 \u6587\u4ef6\u64cd\u4f5c"},{"location":"04-control-flow/#451","text":"\u8ba1\u7b97\u673a\u4e2d\u7684\u6587\u4ef6\u901a\u5e38\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0e\u6587\u672c\u6587\u4ef6\u3002\u8ba1\u7b97\u673a\u7684\u5b58\u50a8\u5728\u7269\u7406\u4e0a\u90fd\u662f\u4e8c\u8fdb\u5236\u7684\uff0c\u6240\u4ee5\u6587\u672c\u6587\u4ef6\u4e0e\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u533a\u522b\u5e76\u4e0d\u662f\u7269\u7406\u4e0a\u7684\uff0c\u800c\u662f\u903b\u8f91\u4e0a\u7684\u3002\u8fd9\u4e24\u8005\u53ea\u662f\u5728\u7f16\u7801\u5c42\u6b21\u4e0a\u6709\u5dee\u5f02\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u6587\u672c\u6587\u4ef6\u662f\u57fa\u4e8e\u5b57\u7b26\u7f16\u7801\u7684\u6587\u4ef6\uff0c\u5e38\u89c1\u7684\u7f16\u7801\u6709 ASCII \u7f16\u7801\u3001UNICODE \u7f16\u7801\u7b49\u7b49\uff08\u73b0\u5728\u5168\u4e16\u754c\u901a\u7528\u7684\u7f16\u7801\u662f UTF-8\uff09\u3002\u4e8c\u8fdb\u5236\u6587\u4ef6\u662f\u57fa\u4e8e\u503c\u7f16\u7801\u7684\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u5e94\u7528\uff0c\u6307\u5b9a\u67d0\u4e2a\u503c\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u81ea\u5b9a\u4e49\u7f16\u7801\u3002 \u6587\u4ef6\u7c7b\u578b\u5e38\u5e38\u53ef\u4ee5\u901a\u8fc7\u6587\u4ef6\u540e\u7f00\u540d\u5f97\u77e5\u3002\u540e\u7f00\u540d\u4e3a .txt \u7684\u6587\u4ef6\u662f\u5178\u578b\u7684\u6587\u672c\u6587\u4ef6\uff0c\u53e6\u5916\u5e38\u7528\u4e8e\u5b58\u50a8\u8868\u683c\u6570\u636e\u7684 csv \u6587\u4ef6\u3001xlsx \u6587\u4ef6\u7b49\u4e5f\u90fd\u662f\u6587\u672c\u6587\u4ef6\uff0c\u4e8c\u8fdb\u5236\u6587\u4ef6\u5219\u901a\u5e38\u662f\u4e00\u4e9b\u53ef\u6267\u884c\u7684\u7a0b\u5e8f\u8f6f\u4ef6\u3001\u56fe\u50cf\u3001\u89c6\u9891\u3002\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u5904\u7406\u7684\u6587\u4ef6\u90fd\u662f\u6587\u672c\u6587\u4ef6\u3002 \u5728\u78c1\u76d8\u4e0a\u8bfb\u5199\u6587\u4ef6\u7684\u529f\u80fd\u90fd\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\uff0c\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u5141\u8bb8\u666e\u901a\u7684\u7a0b\u5e8f\u76f4\u63a5\u64cd\u4f5c\u78c1\u76d8\uff0c\u6240\u4ee5\uff0c\u8bfb\u5199\u6587\u4ef6\u5c31\u662f\u8bf7\u6c42\u64cd\u4f5c\u7cfb\u7edf\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff08\u901a\u5e38\u79f0\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff09\uff0c\u7136\u540e\uff0c\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u63a5\u53e3\u4ece\u8fd9\u4e2a\u6587\u4ef6\u5bf9\u8c61\u4e2d\u8bfb\u53d6\u6570\u636e\uff08\u8bfb\u6587\u4ef6\uff09\uff0c\u6216\u8005\u628a\u6570\u636e\u5199\u5165\u8fd9\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff08\u5199\u6587\u4ef6\uff09\u3002","title":"4.5.1 \u6587\u4ef6\u7c7b\u578b"},{"location":"04-control-flow/#452-open","text":"Python \u63d0\u4f9b\u4e86 open() \u51fd\u6570\u7528\u4e8e\u6253\u5f00\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5e76\u8fd4\u56de\u6587\u4ef6\u5bf9\u8c61\uff0c\u5229\u7528\u8be5\u5bf9\u8c61 Python \u7528\u6237\u80fd\u591f\u64cd\u4f5c\u6587\u672c\u3002open() \u51fd\u6570\u5e38\u7528\u5f62\u5f0f\u662f\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff1a\u6587\u4ef6\u540d\uff08file\uff09\u548c\u6a21\u5f0f\uff08mode\uff09\uff0c\u5373\u5982\u679c\u8981\u4ee5\u8bfb\u6587\u4ef6\u7684\u6a21\u5f0f\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff0c\u9664\u4e86\u4f20\u5165\u6587\u4ef6\u8def\u5f84\uff0c\u8fd8\u9700\u8981\u4ee5 r \u6307\u5b9a\u4e3a\u8bfb\u6a21\u5f0f\u3002\u5982\u679c\u8be5\u6587\u4ef6\u65e0\u6cd5\u88ab\u6253\u5f00\uff0cPython \u4f1a\u629b\u51fa OS Error\u3002 \u4e3a\u4e86\u4ecb\u7ecd\u5982\u4f55\u5b9e\u9645\u8bfb\u53d6\u6587\u672c\uff0c\u9996\u5148\u5728 Python \u5de5\u4f5c\u76ee\u5f55\u4e0b\u4f7f\u7528\u6587\u672c\u7f16\u8f91\u5668\u521b\u5efa\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u547d\u540d\u4e3a test.txt\uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a \u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e00\u884c \u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e8c\u884c \u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e09\u884c \u8fd9\u662f\u6587\u672c\u7684\u6700\u540e\u4e00\u884c \u5728 IPython \u4e2d\uff0c\u4f7f\u7528 %pwd \u547d\u4ee4\u5373\u53ef\u5feb\u901f\u83b7\u53d6\u5f53\u524d Python \u7684\u5de5\u4f5c\u76ee\u5f55\u3002\u672c\u4e66\u4f5c\u8005\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\u5982\u4e0b\uff1a In [8]: %pwd Out[8]: '/Users/wsx' \u5982\u679c\u521b\u5efa\u7684\u6587\u4ef6\u5728\u5de5\u4f5c\u76ee\u5f55\u4e0b\uff0c\u5728 IPython \u4e2d\u4f7f\u7528 %ls \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u3002 In [8]: %ls Applications/ Library/ Public/ work_script.pbs* Desktop/ Movies/ go/ Documents/ Music/ test.txt Downloads/ Pictures/ tmp/ \u4e0b\u9762\u4f7f\u7528 open() \u51fd\u6570\u8bfb\u53d6 test.txt \u6587\u4ef6\u3002 In [9]: f = open('test.txt', 'r') \u8fd9\u6837\u5c31\u6210\u529f\u5730\u6253\u5f00\u4e86\u4e00\u4e2a\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0cPython \u5c31\u4f1a\u629b\u51fa\u4e00\u4e2a IOError \u7684\u9519\u8bef\uff0c\u5e76\u4e14\u7ed9\u51fa\u9519\u8bef\u7801\u548c\u8be6\u7ec6\u7684\u4fe1\u606f\u544a\u77e5\u7528\u6237\u6587\u4ef6\u4e0d\u5b58\u5728\u3002 In [10]: f1 = open('test1.txt', 'r') --------------------------------------------------------------------------- FileNotFoundError Traceback (most recent call last) <ipython-input-10-ef17b5d7a1d3> in <module> ----> 1 f1 = open('test1.txt', 'r') FileNotFoundError: [Errno 2] No such file or directory: 'test1.txt' \u5f53\u6587\u4ef6\u6253\u5f00\u6210\u529f\u540e\uff0c\u63a5\u4e0b\u6765\u7528\u6237\u53ef\u4ee5\u8c03\u7528 read() \u65b9\u6cd5\u4e00\u6b21\u8bfb\u53d6\u6587\u4ef6\u7684\u5168\u90e8\u5185\u5bb9\uff0cPython \u4f1a\u5c06\u5176\u8868\u793a\u4e3a\u4e00\u4e2a str \u5bf9\u8c61\u3002 In [11]: f.read() Out[11]: '\u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e00\u884c\\n\u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e8c\u884c\\n\u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e09\u884c\\n\u8fd9\u662f\u6587\u672c\u7684\u6700\u540e\u4e00\u884c\\n' \u6587\u4ef6\u5bf9\u8c61\u4f1a\u5360\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684\u8d44\u6e90\uff0c\u5e76\u4e14\u64cd\u4f5c\u7cfb\u7edf\u540c\u4e00\u65f6\u95f4\u80fd\u6253\u5f00\u7684\u6587\u4ef6\u6570\u91cf\u4e5f\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\u6587\u4ef6\u4f7f\u7528\u5b8c\u6bd5\u540e\u5fc5\u987b\u5173\u95ed\uff0cPython \u7528\u6237\u8bfb\u53d6\u6587\u4ef6\u7684\u6700\u540e\u4e00\u6b65\u662f\u8c03\u7528 close() \u65b9\u6cd5\u5173\u95ed\u6587\u4ef6\u3002 In [12]: f.close() \u6ce8\u610f\uff0c\u6587\u4ef6\u8bfb\u5199\u53ef\u80fd\u4ea7\u751f IO Error\uff0c\u4e00\u65e6\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u540e\u9762\u4f7f\u7528 f.close() \u5173\u95ed\u6587\u4ef6\u5c31\u4e0d\u8d77\u4f5c\u7528\u4e86\u3002\u4e3a\u4e86\u4fdd\u8bc1\u65e0\u8bba\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\u90fd\u80fd\u6b63\u786e\u5173\u95ed\u6587\u4ef6\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 try\u2026finally \u8bed\u53e5\u5757\u6765\u5b9e\u73b0\u6587\u4ef6\u7684\u6b63\u786e\u5173\u95ed\u3002\u4f8b\u5982\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u4ee3\u7801\u6765\u786e\u4fdd\u8bfb\u53d6\u4e0a\u9762\u7684 test.txt \u5f02\u5e38\u65f6\u80fd\u591f\u5173\u95ed\u6587\u4ef6\u3002 try: f = open('test.txt', 'r') print(f.read()) finally: if f: f.close() \u53ea\u9700\u8981\u4fee\u6539\u6587\u4ef6\u540d\uff08\u5305\u62ec\u8def\u5f84\uff09\uff0c\u4e0a\u8ff0\u4ee3\u7801\u5373\u53ef\u5e94\u7528\u4e8e\u4efb\u4f55\u6587\u672c\u6587\u4ef6\u7684\u8bfb\u53d6\u3002\u4f46\u662f\u6bcf\u6b21\u90fd\u8fd9\u4e48\u5199\u5b9e\u5728\u7e41\u7410\uff0c\u56e0\u6b64 Python \u5f15\u5165\u4e86 with \u8bed\u53e5\u6765\u81ea\u52a8\u5e2e\u52a9\u7528\u6237\u81ea\u52a8\u8c03\u7528 close() \u65b9\u6cd5\u3002 with open('test.txt', 'r') as f: print(f.read()) \u4e0a\u8ff0\u4ee3\u7801\u4e0e try\u2026finally \u6548\u679c\u4e00\u81f4\uff0c\u4f46\u660e\u663e\u66f4\u4e3a\u7b80\u6d01\uff0c\u5e76\u4e14\u4e0d\u5fc5\u663e\u5f0f\u8c03\u7528 close() \u65b9\u6cd5\u3002 \u867d\u7136 read() \u65b9\u6cd5\u53ef\u4ee5\u4e00\u6b21\u6027\u5c06\u6587\u4ef6\u6240\u6709\u5185\u5bb9\u8bfb\u53d6\u8fdb\u6765\uff0c\u4f46\u662f\u5b9e\u9645\u4f7f\u7528\u7684\u5e76\u4e0d\u591a\u3002\u5982\u679c\u6587\u4ef6\u8fc7\u5927\uff0c\u8d85\u8fc7\u8ba1\u7b97\u673a\u5185\u5b58\u9650\u5236\uff0c\u4e0d\u4ec5\u6587\u4ef6\u5185\u5bb9\u4e0d\u80fd\u5b8c\u5168\u8bfb\u8fdb Python\uff0c\u8ba1\u7b97\u673a\u4e5f\u5bb9\u6613\u5d29\u6e83\u3002\u4e3a\u4e86\u4fdd\u9669\u8d77\u89c1\uff0c\u8bfb\u8005\u53ef\u4ee5\u53cd\u590d\u8c03\u7528 read(size) \u65b9\u6cd5\uff0c\u8fd9\u6837\u6bcf\u6b21\u6700\u591a\u8bfb\u53d6 size \u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u3002\u4e0d\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7528\u7684\u4e5f\u4e0d\u591a\uff0c\u56e0\u4e3a\u4e00\u822c\u5904\u7406\u6587\u4ef6\u90fd\u662f\u6309\u884c\u8fdb\u884c\u7684\uff0c\u56e0\u800c Python \u63d0\u4f9b\u4e86 readline() \u65b9\u6cd5\u53ef\u4ee5\u6bcf\u6b21\u8bfb\u53d6\u4e00\u884c\u5185\u5bb9\uff0c\u800c readlines() \u65b9\u6cd5\u5219\u53ef\u4ee5\u4e00\u6b21\u8bfb\u53d6\u6240\u6709\u5185\u5bb9\u5e76\u6309\u884c\u8fd4\u56de\u4e3a\u5217\u8868\u3002\u5177\u4f53\u4f7f\u7528\u4ec0\u4e48\u65b9\u6cd5\u8bfb\u8005\u9700\u8981\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u51b3\u5b9a\u3002 \u4e0b\u9762\u4ee3\u7801\u4f7f\u7528 readlines() \u65b9\u6cd5\u5c06\u6587\u4ef6\u5185\u5bb9\u8bfb\u53d6\u4e3a\u5217\u8868\uff0c\u7136\u540e\u4f7f\u7528 for \u5faa\u73af\u8fdb\u884c\u5904\u7406\u3002 In [13]: for line in f.readlines(): ...: print(line.strip()) # \u628a\u672b\u5c3e\u7684'\\n'\u5220\u6389 \u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e00\u884c \u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e8c\u884c \u8fd9\u662f\u6587\u672c\u7684\u7b2c\u4e09\u884c \u8fd9\u662f\u6587\u672c\u7684\u6700\u540e\u4e00\u884c \u524d\u9762\u4ecb\u7ecd\u7684\u662f\u8bfb\u53d6\u6587\u672c\u6587\u4ef6\uff0c\u5e76\u4e14\u662f UTF-8 \u7f16\u7801\u7684\u6587\u672c\u6587\u4ef6\u3002\u5982\u679c\u8981\u8bfb\u53d6\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5982\u56fe\u7247\u3001\u89c6\u9891\u7b49\u7b49\uff0c\u53ea\u9700\u8981\u5c06\u8bfb\u53d6\u6a21\u5f0f\u8bbe\u7f6e\u4e3a \u2018rb\u2019 \u5373\u53ef\u3002 In [14]: f = open('/Users/wsx/Pictures/cover.png', 'rb') In [15]: f.read() # \u4e0b\u9762\u8f93\u51fa\u7684\u7ed3\u679c\u592a\u591a\uff0c\u56e0\u6b64\u7701\u7565 Out[15]: b'\\x89PNG\\r\\n\\x1a\\n\\x00\\x00\\x00\\rIHDR\\x00\\x00 ... \u9664\u4e86\u6587\u4ef6\u7c7b\u578b\uff0c\u6587\u4ef6\u7684\u5b57\u7b26\u7f16\u7801\u4e5f\u662f\u7ecf\u5e38\u9700\u8981\u5173\u6ce8\u7684\u3002open() \u51fd\u6570\u6253\u5f00\u6587\u4ef6\u9ed8\u8ba4\u4f7f\u7528 UTF-8 \u7f16\u7801\uff0c\u5982\u679c\u8981\u8bfb\u53d6\u975e UTF-8 \u7f16\u7801\u7684\u6587\u672c\u6587\u4ef6\uff0c\u9700\u8981\u7ed9 open() \u51fd\u6570\u4f20\u5165 encoding \u53c2\u6570\u3002 \u4f8b\u5982\uff0c\u4e2d\u6587\u4e00\u822c\u4f7f\u7528 GBK \u7f16\u7801\u3002\u4e0b\u9762\u4ee3\u7801\u8bfb\u53d6\u4e00\u4e2a GBK \u7f16\u7801\u7684\u6587\u672c\u6587\u4ef6\uff0c\u8bfb\u8005\u53ef\u4ee5\u770b\u770b\u4f7f\u7528\u4e0d\u540c\u7684\u7f16\u7801\u53c2\u6570\u5f97\u5230\u7684\u7ed3\u679c\u6709\u4ec0\u4e48\u4e0d\u540c\u3002 In [16]: f = open('/Users/wsx/Documents/gbk.txt', 'r', encoding='UTF-8') In [17]: f.read() --------------------------------------------------------------------------- UnicodeDecodeError Traceback (most recent call last) <ipython-input-17-571e9fb02258> in <module> ----> 1 f.read() /Volumes/Data/miniconda3/lib/python3.6/codecs.py in decode(self, input, final) 319 # decode input (taking the buffer into account) 320 data = self.buffer + input --> 321 (result, consumed) = self._buffer_decode(data, self.errors, final) 322 # keep undecoded input until the next call 323 self.buffer = data[consumed:] UnicodeDecodeError: 'utf-8' codec can't decode byte 0xd5 in position 0: invalid continuation byte In [18]: f = open('/Users/wsx/Documents/gbk.txt', 'r', encoding='gbk') In [19]: f.read() Out[19]: '\u8fd9\u662fGBK\u7f16\u7801\u7684\u6587\u672c\uff0c\u5982\u679c\u4f60\u4e0d\u6b63\u786e\u89e3\u7801\u5c31\u770b\u4e0d\u5230\u6b63\u786e\u5185\u5bb9\u5594~'","title":"4.5.2 \u4f7f\u7528 open() \u51fd\u6570\u8bfb\u53d6\u6587\u4ef6"},{"location":"04-control-flow/#453-open","text":"\u5199\u6587\u4ef6\u548c\u8bfb\u6587\u4ef6\u7684\u6b65\u9aa4\u662f\u4e00\u6837\u7684\uff0c\u552f\u4e00\u533a\u522b\u662f\u8c03\u7528 open() \u51fd\u6570\u65f6\uff0c\u8bfb\u8005\u9700\u8981\u6307\u5b9a\u6a21\u5f0f \u2018w\u2019 \u6216\u8005 \u2018wb\u2019 \u8868\u793a\u5728\u5bf9\u6587\u672c\u6587\u4ef6\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6\u8fdb\u884c\u5199\u5165\u64cd\u4f5c\u3002 \u4e0b\u9762\u6f14\u793a\u5bf9\u524d\u9762\u7684 test.txt \u5199\u5165\u4e24\u884c\u6587\u5b57\uff0c\u7136\u540e\u518d\u8bfb\u53d6\u8fdb\u6765\u67e5\u770b\u662f\u5426\u6210\u529f\u5199\u5165\u3002 In [20]: f = open('test.txt', 'w') In [21]: f.write('\u6211\u7ed9\u6587\u672c\u52a0\u4e00\u884c\\n') Out[21]: 8 In [22]: f.write('\u6211\u518d\u52a0\u4e00\u884c\uff0c\u8fd9\u662f\u6700\u540e\u4e00\u884c') Out[22]: 12 In [23]: f.close() \u8bfb\u8005\u53ef\u4ee5\u53cd\u590d\u8c03\u7528 write() \u65b9\u6cd5\u6765\u5c06\u5185\u5bb9\u5199\u5165\u6587\u4ef6\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u5728\u6700\u540e\u4e00\u5b9a\u8981\u4f7f\u7528 f.close() \u5173\u95ed\u6587\u4ef6\uff0c\u5426\u5219\u5c06\u5b58\u5728\u4e22\u5931\u6570\u636e\u7684\u53ef\u80fd\u3002\u8fd9\u662f\u56e0\u4e3a\u5f53\u4f7f\u7528 Python \u5c06\u5185\u5bb9\u5199\u5165\u6587\u4ef6\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4f1a\u7acb\u5373\u5c06\u6570\u636e\u5199\u5165\u78c1\u76d8\uff0c\u800c\u662f\u6682\u65f6\u5c06\u6587\u672c\u653e\u5230\u5185\u5b58\u4e2d\u7f13\u5b58\uff0c\u5f53\u8ba1\u7b97\u8d44\u6e90\u7a7a\u95f2\u65f6\u624d\u8fdb\u884c\u5199\u5165\uff0c\u53ea\u6709\u8c03\u7528 close() \u65b9\u6cd5\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u624d\u4f1a\u4fdd\u8bc1\u628a\u6ca1\u6709\u5199\u5165\u7684\u6570\u636e\u5168\u90e8\u5199\u5165\u78c1\u76d8\u6587\u4ef6\u3002\u56e0\u6b64\uff0c\u5728\u8fdb\u884c\u6587\u672c\u5199\u5165\u65f6\u4f7f\u7528 with \u8bed\u53e5\u4e5f\u8fd8\u662f\u6700\u4e3a\u4fdd\u9669\u7684\u65b9\u5f0f\u3002 with open('test.txt', 'w') as f: f.write('\u6211\u7ed9\u6587\u672c\u52a0\u4e00\u884c\\n') f.write('\u6211\u518d\u52a0\u4e00\u884c\uff0c\u8fd9\u662f\u6700\u540e\u4e00\u884c') \u73b0\u5728\u6587\u4ef6\u5df2\u7ecf\u5df2\u7ecf\u5199\u5165\u4e86\uff0c\u8fd9\u65f6\u5019\u901a\u8fc7 open() \u5c06\u5185\u5bb9\u8bfb\u53d6\u8fdb\u6765\u67e5\u770b\u3002 In [24]: with open('test.txt', 'r') as f: ...: for line in f.readlines(): ...: print(line.strip()) \u6211\u7ed9\u6587\u672c\u52a0\u4e00\u884c \u6211\u518d\u52a0\u4e00\u884c\uff0c\u8fd9\u662f\u6700\u540e\u4e00\u884c \u5185\u5bb9\u7684\u786e\u6210\u529f\u7684\u5199\u5165\u8fdb\u4e86 test.txt \u6587\u4ef6\uff0c\u4f46\u539f\u5148\u7684\u5185\u5bb9\u88ab\u5220\u9664\u4e86\u3002\u4ec5\u4ec5\u8bbe\u5b9a\u5199\u6a21\u5f0f \u2018w\u2019 \u4f1a\u9996\u5148\u6e05\u7a7a\u6389\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u7136\u540e\u5c06\u8981\u5199\u5165\u7684\u5185\u5bb9\u5199\u8fdb\u6587\u4ef6\u3002\u4e3a\u4e86\u6267\u884c\u6587\u672c\u7684\u8ffd\u52a0\u800c\u4e0d\u662f\u8986\u76d6\u64cd\u4f5c\uff0c\u8bfb\u8005\u9700\u8981\u4f7f\u7528 \u2018wa\u2019 \u6765\u66ff\u6362 \u2018w\u2019\uff0c\u2019a\u2019 \u4e3a append\uff08\u8ffd\u52a0\uff09\u7684\u7f29\u5199\u3002\u6240\u6709\u6a21\u5f0f\u7684\u5b9a\u4e49\u53ca\u542b\u4e49\u53ef\u4ee5\u9605\u8bfb Python \u7684\u5b98\u65b9\u6587\u6863\u3002","title":"4.5.3 \u4f7f\u7528 open() \u5199\u6587\u4ef6"},{"location":"04-control-flow/#46","text":"\u4e00\u4e2a\u590d\u6742\u7684\u7a0b\u5e8f\u662f\u7b80\u5355\u7684\u8bed\u53e5\u4e0e\u5404\u7c7b\u63a7\u5236\u5faa\u73af\u7ed3\u6784\u7684\u7ec4\u5408\u3002\u672c\u7ae0\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u63a7\u5236\u7ed3\u6784 if-else \u8bed\u53e5\uff0c\u5faa\u73af\u7ed3\u6784 for \u8bed\u53e5\u4e0e while \u8bed\u53e5\uff0c\u901a\u8fc7\u5b9e\u4f8b\u4ecb\u7ecd\u4e86\u5b83\u4eec\u7684\u57fa\u672c\u64cd\u4f5c\u548c\u8f83\u4e3a\u590d\u6742\u7684\u5d4c\u5957\u64cd\u4f5c\uff0c\u4ee5\u53ca\u5e94\u7528\u5b83\u4eec\u64cd\u4f5c\u5e38\u89c1\u7684\u5217\u8868\u3001\u5143\u7ec4\u548c\u5b57\u5178\u7b49\u5e8f\u5217\u5bf9\u8c61\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u672c\u7ae0\u4ecb\u7ecd\u4e86 Python \u57fa\u672c\u7684\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c\uff0c\u5e2e\u52a9\u8bfb\u8005\u6784\u5efa\u6570\u636e\u8bfb\u5199\u7684\u8ba4\u77e5\u4f53\u7cfb\uff0c\u4e5f\u4e3a\u4e4b\u540e\u7406\u89e3\u66f4\u9ad8\u7ea7\u7684\u6587\u4ef6\u64cd\u4f5c\u548c\u5904\u7406\u6253\u4e0b\u57fa\u7840\u3002","title":"4.6 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"05-function-and-module/","text":"\u7b2c 5 \u7ae0 \u51fd\u6570\u4e0e\u6a21\u5757 \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a \u4e3a\u4ec0\u4e48\u4f7f\u7528\u51fd\u6570 \u51fd\u6570\u7684\u521b\u5efa\u4e0e\u4f7f\u7528 \u51fd\u6570\u7684\u53c2\u6570 \u6a21\u5757\u4e0e\u5305 \u7b2c\u4e09\u65b9\u6a21\u5757\u7684\u4e0b\u8f7d\u4e0e\u4f7f\u7528 \u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u672c\u4e66\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784\u6765\u81ea\u52a8\u5316\u53cd\u590d\u8fdb\u884c\u7684\u64cd\u4f5c\u3002\u5c3d\u7ba1\u5229\u7528\u8fd9\u4e9b\u63a7\u5236\u6d41\u64cd\u4f5c\u53ef\u4ee5\u6781\u5927\u7b80\u5316\u4e00\u4e9b\u5904\u7406\u4efb\u52a1\uff0c\u4f46\u9488\u5bf9\u4e00\u4e9b\u65e5\u5e38\u7684\u5de5\u4f5c\u4efb\u52a1\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u9891\u7e41\u5730\u62f7\u8d1d\u5927\u6bb5\u7684\u4ee3\u7801\uff0c\u8fdb\u884c\u4fee\u6539\u3002\u8fd9\u79cd\u7b80\u5316\u7684\u529b\u5ea6\u4ecd\u663e\u4e0d\u591f\uff0c\u800c\u4e14\u6781\u5bb9\u6613\u51fa\u9519\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u65b0\u7684\u5de5\u5177\u6765\u63d0\u5347\u7a0b\u5e8f\u7f16\u5199\u7684\u6548\u7387\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u521b\u5efa\u51fd\u6570\u6216\u8005\u4f7f\u7528\u6807\u51c6\u6a21\u5757/\u4e09\u65b9\u6a21\u5757\u4e2d\u63d0\u4f9b\u7684\u7b80\u4fbf\u51fd\u6570\u3002\u672c\u7ae0\u5c06\u5411\u8bfb\u8005\u8be6\u5c3d\u5730\u4ecb\u7ecd\u5982\u4f55\u521b\u5efa\u51fd\u6570\u548c\u8bbe\u5b9a\u51fd\u6570\u53c2\u6570\uff0c\u4ee5\u53ca\u4f7f\u7528\u7b2c\u4e09\u65b9\u6a21\u5757\u3002 5.1 \u51fd\u6570 \u00b6 5.1.1 \u4e3a\u4ec0\u4e48\u4f7f\u7528\u51fd\u6570 \u00b6 \u5728\u7b2c 2 \u7ae0\u4e2d\uff0c\u672c\u4e66\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u4f7f\u7528\u8eab\u9ad8\u548c\u4f53\u91cd\u503c\u4fbf\u53ef\u4ee5\u8ba1\u7b97\u51fa BMI \u6307\u6570\u3002\u5047\u8bbe\u8bfb\u8005\u73b0\u5728\u9700\u8981\u8ba1\u7b97 3 \u4e2a\u4eba\u7684 BMI \u6307\u6570\uff0c\u4e8e\u662f\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\uff1a # \u7528 w \u8868\u793a\u4f53\u91cd\uff0ch \u8868\u793a\u8eab\u9ad8 w1 = 70.2 w2 = 60.6 w3 = 54.3 h1 = 1.90 h2 = 1.73 h3 = 1.65 BMI_1 = w1 / h1 ** 2 BMI_2 = w2 / h2 ** 2 BMI_3 = w3 / h3 ** 2 \u6b64\u5904\u4ee3\u7801\u4e2d\u51fa\u73b0\u4e86\u89c4\u5f8b\u7684\u91cd\u590d\u3002\u8bfb\u8005\u53ef\u4ee5\u9996\u5148\u601d\u8003\u4e0b\u7528\u5faa\u73af\u7684\u65b9\u5f0f\u8fdb\u884c\u4f18\u5316\uff1a\u5c06\u4f53\u91cd\u6570\u636e\u4e0e\u8eab\u9ad8\u6570\u636e\u5206\u522b\u5b58\u50a8\u5728\u5217\u8868\u4e2d\uff0c\u7136\u540e\u4f7f\u7528 for \u5faa\u73af\u904d\u5386\u5e76\u8ba1\u7b97 BMI \u6307\u6570\u3002\u7136\u800c\u8fd9\u79cd\u4f18\u5316\u65b9\u5f0f\u6709\u4e24\u4e2a\u95ee\u9898\uff0c\u4e00\u662f\u4ee3\u7801\u7684\u8f93\u5165\u91cf\u5e76\u6ca1\u6709\u51cf\u8f7b\uff0c\u4e8c\u662f\u5982\u679c\u63a5\u4e0b\u6765\u8981\u8ba1\u7b97\u53e6\u4e00\u4e2a\u4eba\u7684 BMI \u6307\u6570\uff0c\u8fd8\u9700\u8981\u91cd\u65b0\u521b\u5efa\u8f93\u5165\u5217\u8868\u3002 \u51fd\u6570\u662f\u6700\u57fa\u672c\u7684\u4ee3\u7801\u62bd\u8c61\u65b9\u5f0f\uff0c\u501f\u52a9\u51fd\u6570\uff0c\u8bfb\u8005\u53ef\u4ee5\u4e0d\u7528\u5173\u6ce8\u5e95\u5c42\u7684\u5177\u4f53\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u800c\u4ece\u66f4\u9ad8\u5c42\u6b21\u5bf9\u95ee\u9898\u8fdb\u884c\u601d\u8003\u3002\u8bfb\u8005\u5982\u679c\u5c06\u6838\u5fc3\u7684\u8ba1\u7b97\u6b65\u9aa4\u62bd\u8c61\u4e3a\u51fd\u6570\u8868\u793a\uff0c\u5c06\u6781\u5927\u5730\u7b80\u5316\u4e0a\u8ff0\u95ee\u9898\u7684\u5904\u7406\u3002 \u4f8b\u5982\uff0c\u6b65\u9aa4 BMI = w / h**2 \u5199\u4e3a\u66f4\u6709\u610f\u4e49\u7684\u51fd\u6570 calcBMI()\uff0c\u6bcf\u6b21\u8c03\u7528 calcBMI(w, h) \u5c31\u53ef\u4ee5\u8ba1\u7b97\u4e00\u6b21 BMI \u6307\u6570\uff0c\u800c\u4e14\u51fd\u6570\u672c\u8eab\u53ea\u9700\u8981\u5199\u4e00\u6b21\u5c31\u53ef\u4ee5\u591a\u6b21\u8c03\u7528\u3002 \u51e0\u4e4e\u6240\u6709\u7684\u7f16\u7a0b\u8bed\u8a00\u90fd\u652f\u6301\u51fd\u6570\uff0cPython \u5f53\u7136\u4e5f\u4e0d\u4f8b\u5916\uff0c\u8bfb\u8005\u5728\u524d\u9762\u7ae0\u8282\u4e2d\u5176\u5b9e\u4e5f\u5df2\u7ecf\u591a\u6b21\u89c1\u8fc7\u51fd\u6570\u7684\u4f7f\u7528\u3002Python \u4e0d\u4f46\u80fd\u975e\u5e38\u7075\u6d3b\u5730\u521b\u5efa\u51fd\u6570\uff0c\u800c\u4e14\u672c\u8eab\u5185\u7f6e\u5f88\u591a\u53ef\u7528\u7684\u51fd\u6570\uff0c\u5f00\u7bb1\u5373\u7528\u3002 5.1.2 \u51fd\u6570\u7684\u8c03\u7528 \u00b6 Python \u5185\u7f6e\u7684\u51fd\u6570\u65e0\u9700\u8fdb\u884c\u5bfc\u5165\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u77e5\u9053\u51fd\u6570\u7684\u540d\u79f0\u548c\u53c2\u6570\uff0c\u8bfb\u8005\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u8c03\u7528\u3002\u4f8b\u5982\uff0cabs() \u51fd\u6570\u53ef\u4ee5\u6c42\u53d6\u7edd\u5bf9\u503c\uff0c\u5b83\u53ea\u9700\u8981\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\u3002\u8bfb\u8005\u53ef\u4ee5\u8f93\u5165 help(\u51fd\u6570\u540d) \u6216\u8005 \u51fd\u6570\u540d? \u67e5\u770b\u51fd\u6570\u7684\u6587\u6863\uff0c\u4ee5\u4e0b\u7528 abs() \u51fd\u6570\u8fdb\u884c\u6f14\u793a\u3002 In [1]: help(abs) In [2]: abs? Signature: abs(x, /) Docstring: Return the absolute value of the argument. Type: builtin_function_or_method \u8bfb\u8005\u5c06\u9700\u8981\u8fdb\u884c\u7edd\u5bf9\u503c\u5904\u7406\u7684\u6570\u503c\u4f5c\u4e3a\u53c2\u6570\u8f93\u5165 abs() \u51fd\u6570\u5373\u53ef\u5b9e\u73b0\u8c03\u7528\u3002 In [3]: abs(-1) Out[3]: 1 In [4]: abs(1) Out[4]: 1 \u8bfb\u8005\u5728\u8fdb\u884c\u51fd\u6570\u8c03\u7528\u65f6\u9700\u8981\u6ce8\u610f\u8f93\u5165\u53c2\u6570\u7684\u6570\u76ee\u548c\u7c7b\u578b\uff0c\u5982\u679c\u6570\u76ee\u6216\u7c7b\u578b\u4e0e\u51fd\u6570\u9884\u671f\u7684\u4e0d\u4e00\u81f4\uff0cPython \u4f1a\u629b\u51fa TypeError \u9519\u8bef\uff0c\u5e76\u7ed9\u51fa\u9519\u8bef\u4fe1\u606f\u3002 In [5]: abs('a') --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-5-f2001f88707b> in <module> ----> 1 abs('a') TypeError: bad operand type for abs(): 'str' In [6]: abs(1, 2) --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-6-6c188a838f2b> in <module> ----> 1 abs(1, 2) TypeError: abs() takes exactly one argument (2 given) \u6709\u4e9b\u51fd\u6570\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u591a\u4e2a\u6570\u76ee\u7684\u53c2\u6570\uff0c\u5982 max()\uff0c\u5b83\u53ef\u4ee5\u8fd4\u56de\u4e00\u7ec4\u6570\u7684\u6700\u5927\u503c\u3002 In [7]: max(2,1,3,4,5,2,3,10,2,4,5) Out[7]: 10 \u672c\u8d28\u4e0a\uff0c\u51fd\u6570\u540d\u5176\u5b9e\u662f\u6307\u5411\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u7684\u5f15\u7528\uff08\u5728 Python \u91cc\u4e00\u5207\u90fd\u662f\u5bf9\u8c61\uff0c\u53d8\u91cf\u90fd\u662f\u5bf9\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u65b9\u4fbf\u6211\u4eec\u4f7f\u7528\uff09\u3002\u6240\u4ee5\uff0c\u8bfb\u8005\u5b8c\u5168\u53ef\u4ee5\u628a\u51fd\u6570\u540d\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u8fd9\u76f8\u5f53\u4e8e\u7ed9\u51fd\u6570\u8d77\u4e86\u4e2a\u522b\u540d\uff0c\u6709\u65f6\u5019\u53ef\u4ee5\u7b80\u5316\u4f7f\u7528\u3002 In [8]: a = abs In [9]: a(-10) Out[9]: 10 \u5f53\u7136\uff0c\u8fd9\u91cc\u5c06 abs() \u51fd\u6570\u91cd\u547d\u540d\u4e3a a() \u662f\u4e0d\u53ef\u53d6\u7684\uff0c\u5b83\u964d\u4f4e\u4e86\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 \u4e00\u822c\u800c\u8a00\uff0cPython \u5185\u5efa\u7684 callable() \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u5224\u65ad\u51fd\u6570\u662f\u5426\u53ef\u8c03\u7528\u3002 5.1.3 \u51fd\u6570\u7684\u521b\u5efa \u00b6 \u6709\u65f6\u5019\uff0cPython \u5185\u7f6e\u7684\u51fd\u6570\u4ee5\u53ca\u4e09\u65b9\u6a21\u5757\u7684\u51fd\u6570\u4e0d\u80fd\u6ee1\u8db3\u5de5\u4f5c\u9700\u6c42\uff0c\u8bfb\u8005\u9700\u8981\u81ea\u5df1\u521b\u5efa\u51fd\u6570\uff0c\u56e0\u800c\u672c\u5c0f\u8282\u5c06\u6307\u5bfc\u8bfb\u8005\u5982\u4f55\u81ea\u5df1\u521b\u5efa\u51fd\u6570\u3002 Python\u4f7f\u7528 def \u5173\u952e\u5b57\u5bf9\u51fd\u6570\u8fdb\u884c\u5b9a\u4e49\uff1a\u5728 def \u8bed\u53e5\u540e\u4f9d\u6b21\u5199\u51fa\u51fd\u6570\u540d\u3001\u62ec\u53f7\u3001\u53c2\u6570\u4e0e\u82f1\u6587\u5192\u53f7\uff0c\u5e76\u5728\u968f\u540e\u7684\u4ee3\u7801\u5757\u4e2d\u7f16\u5199\u51fd\u6570\u4f53\uff0c\u5982\u679c\u60f3\u8981\u8fd4\u56de\u4e00\u4e9b\u7ed3\u679c\uff0c\u5219\u4f7f\u7528 return \u8bed\u53e5\u3002\u4e0b\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2a fib \u51fd\u6570\uff0c\u7528\u4e8e\u6253\u5370\u5230\u6307\u5b9a\u53c2\u6570\u4e3a\u6b62\u5f97\u5230\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002 In [10]: def fib(n): ...: \"\"\"\u6253\u5370\u6590\u6ce2\u90a3\u5951\u6570\u5217\u5230n\"\"\" ...: a, b = 0, 1 ...: while a < n: ...: print(a, end=' ') ...: a, b = b, a+b ...: print() In [11]: fib(10) # \u8c03\u7528\u51fd\u6570\uff0c\u6253\u5370 0 1 1 2 3 5 8 In [12]: fib(2000) 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 \u6839\u636e\u4e0a\u8ff0\u7684\u4ee3\u7801\uff0c\u73b0\u5728\u5bf9\u51fd\u6570\u7684\u521b\u5efa\u8fdb\u884c\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\uff1a\u5173\u952e\u5b57 def \u5f15\u5165\u4e86\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u5b83\u7684\u540e\u9762\u5fc5\u987b\u8ddf\u4e0a\u4e00\u4e2a\u51fd\u6570\u540d\u4ee5\u53ca\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u6b63\u5f0f\u53c2\u6570\u5217\u8868\u3002\u6784\u5efa\u51fd\u6570\u4f53\u7684\u4ee3\u7801\u8bed\u53e5\u4ece\u4e0b\u4e00\u884c\u5f00\u59cb\uff0c\u800c\u4e14\u5fc5\u987b\u6b63\u786e\u7f29\u8fdb\u3002\u51fd\u6570\u4f53\u7684\u7b2c\u4e00\u4e2a\u8bed\u53e5\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u5b57\u7b26\u4e32\u6587\u672c\uff0c\u5b83\u79f0\u4e3a\u51fd\u6570\u8bf4\u660e\u5b57\u7b26\u4e32\uff08docstring\uff09\u3002\u5728\u51fd\u6570\u4e2d\u5305\u542b docstring \u662f\u826f\u597d\u4ee3\u7801\u7684\u4f53\u73b0\uff0c\u8fd9\u6837\u522b\u4eba\u5728\u4f7f\u7528\u8be5\u51fd\u6570\u65f6\u80fd\u5f88\u5bb9\u6613\u7406\u89e3\u8be5\u51fd\u6570\u7684\u529f\u80fd\u53ca\u7528\u6cd5\u3002 5.1.4 \u51fd\u6570\u4f5c\u7528\u57df \u00b6 \u6267\u884c\u51fd\u6570\u4f1a\u5f15\u5165\u65b0\u7684\u7b26\u53f7\u8868\uff0c\u5b83\u7528\u4e8e\u51fd\u6570\u6307\u5b9a\u7684\u5c40\u90e8\u53d8\u91cf\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u51fd\u6570\u672c\u8eab\u5f62\u6210\u4e86\u4e00\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u5373\u51fd\u6570\u4f5c\u7528\u57df\uff0c\u5b83\u5728\u5bfb\u627e\u53d8\u91cf\u503c\u65f6\u4f1a\u5148\u4ece\u51fd\u6570\u5185\u90e8\u5bfb\u627e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5b83\u4f1a\u5728\u51fd\u6570\u5916\u90e8\u5bfb\u627e\u3002\u5982\u679c\u5728\u51fd\u6570\u5916\u90e8\u90fd\u6ca1\u6709\u627e\u5230\uff0cPython \u5c31\u4f1a\u629b\u51fa\u9519\u8bef\u3002\u901a\u5e38\uff0c\u5f53\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u7684\u5b9e\u9645\u53c2\u6570\u503c\u5c31\u4f1a\u88ab\u5f15\u5165\u4e3a\u4e00\u4e2a\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u3002 \u4e3a\u4e86\u66f4\u597d\u5730\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\u5c40\u90e8\u53d8\u91cf\u7684\u6982\u5ff5\uff0c\u73b0\u5728\u5bf9 fib() \u51fd\u6570\u8fdb\u884c\u7b80\u5355\u7684\u4fee\u6539\u3002 def fib(n): \"\"\"\u6253\u5370\u6590\u6ce2\u90a3\u5951\u6570\u5217\u5230n\"\"\" print(\"n\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u7684\u503c\u662f\"+str(n)) # \u6253\u5370\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cfn a, b = 0, 1 while a < n: print(a, end=' ') a, b = b, a+b print() \u7136\u540e\u5bf9\u8be5\u51fd\u6570\u8fdb\u884c\u4ee5\u4e0b\u8c03\u7528\uff1a In [13]: c = 10 ...: fib(c) ...: ...: print(n) n\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u7684\u503c\u662f10 0 1 1 2 3 5 8 --------------------------------------------------------------------------- NameError Traceback (most recent call last) <ipython-input-13-9748ce91e137> in <module> 2 fib(c) 3 ----> 4 print(n) NameError: name 'n' is not defined \u8fd9\u91cc\u5728\u51fd\u6570\u5916\u521b\u5efa\u4e86\u4e00\u4e2a\u53d8\u91cf c\uff0c\u5b58\u50a8 fib() \u51fd\u6570\u5b9e\u9645\u8981\u4f20\u5165\u7684\u6570\u503c\uff0c\u7136\u540e\u8c03\u7528\u51fd\u6570\u3002\u5728\u51fd\u6570\u5b9a\u4e49\u90e8\u5206\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u53d8\u91cf n \u6765\u6307\u793a\u8f93\u5165\u53c2\u6570\uff0c\u56e0\u6b64\u51fd\u6570\u5185\u90e8\u521b\u5efa\u4e86\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf n \u6765\u6307\u793a\u5b9e\u9645\u4f20\u5165\u53d8\u91cf c \u7684\u503c\u3002\u4e0d\u8fc7 n \u7684\u4f5c\u7528\u8303\u56f4\u4ec5\u9650\u4e8e\u51fd\u6570\u5185\u90e8\uff0c\u8bfb\u8005\u5982\u679c\u5728\u51fd\u6570\u7684\u5916\u90e8\u4f7f\u7528\u8be5\u53d8\u91cf\uff0cPython \u4f1a\u629b\u51fa\u53d8\u91cf n \u672a\u5b9a\u4e49\u7684\u9519\u8bef\u3002 \u4e0a\u9762\u7684\u51fd\u6570\u8fd0\u884c\u6700\u540e\u662f\u5c06\u7ed3\u679c\u6253\u5370\u51fa\u6765\uff0c\u5927\u591a\u6570\u65f6\u5019\u6211\u4eec\u66f4\u5e0c\u671b\u5c06\u7ed3\u679c\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\uff0c\u8fd9\u65f6\u9700\u8981\u5229\u7528 return \u8bed\u53e5\u3002\u5b9e\u9645\u4e0a\uff0c\u5373\u4f7f\u7528\u6237\u6ca1\u6709\u663e\u5f0f\u5730\u5728\u51fd\u6570\u4e2d\u4f7f\u7528 return \u8bed\u53e5\u8fdb\u884c\u7ed3\u679c\u7684\u8fd4\u56de\uff0cPython \u4e5f\u4f1a\u8c03\u7528 return \u8bed\u53e5\u8fd4\u56de None \u503c\uff0c\u4e0d\u8fc7 None \u503c\u901a\u8fc7\u4f1a\u88ab Python \u89e3\u91ca\u5668\u6291\u5236\uff0c\u53ea\u6709\u4f7f\u7528 print \u8bed\u53e5\u624d\u80fd\u663e\u5f0f\u5730\u89c2\u6d4b\u5230\u5b83\u3002 In [14]: fib(0) n\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u7684\u503c\u662f0 In [15]: print(fib(0)) n\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u7684\u503c\u662f0 None # \u8fd9\u91cc\u662f\u51fd\u6570\u6700\u540e\u8fd4\u56de\u7684None\u503c 5.1.5 \u9012\u5f52\u51fd\u6570 \u00b6 \u51fd\u6570\u7684\u5b9e\u9645\u8c03\u7528\u5c31\u662f\u4e00\u884c\u8bed\u53e5\uff0c\u56e0\u6b64\u7528\u6237\u53ef\u4ee5\u5728\u51fd\u6570\u4e2d\u8c03\u7528\u4e0d\u540c\u7684\u51fd\u6570\uff0c\u53ea\u8981\u77e5\u9053\u5982\u4f55\u6b63\u786e\u5730\u4f20\u9012\u5404\u4e2a\u53c2\u6570\u4ee5\u53ca\u5904\u7406\u597d\u51fd\u6570\u8fd4\u56de\u7684\u7ed3\u679c\u3002\u8fd9\u79cd\u65b9\u5f0f\u5927\u5927\u7b80\u5316\u4e86\u4ee3\u7801\u9605\u8bfb\u7684\u590d\u6742\u6027\uff0c\u5404\u4e2a\u51fd\u6570\u81ea\u8eab\u7684\u8fd0\u884c\u903b\u8f91\u88ab\u5c01\u88c5\u5728\u5185\u90e8\uff0c\u4f7f\u7528\u8005\u53ea\u9700\u8981\u5173\u6ce8\u5982\u4f55\u5408\u7406\u5730\u8c03\u7528\u5b83\u4eec\u5904\u7406\u95ee\u9898\u3002\u5927\u591a\u6570\u60c5\u51b5\uff0c\u8bfb\u8005\u770b\u5230\u7684\u662f\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u5176\u4ed6\u51fd\u6570\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u51fd\u6570\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u81ea\u6211\u8c03\u7528\uff0c\u8fd9\u79cd\u51fd\u6570\u79f0\u4e3a\u9012\u5f52\u51fd\u6570\u3002\u56e0\u5176\u5177\u6709\u51fd\u6570\u5d4c\u5957\u4e0e\u81ea\u6211\u8c03\u7528\u7684\u7279\u70b9\uff0c\u8fd9\u4e00\u5c0f\u8282\u672c\u4e66\u7740\u91cd\u5bf9\u5176\u8fdb\u884c\u4ecb\u7ecd\u3002 \u4e00\u4e2a\u4ecb\u7ecd\u9012\u5f52\u51fd\u6570\u6700\u597d\u7684\u4f8b\u5b50\u5c31\u662f\u8ba1\u7b97\u9636\u4e58\u3002\u9636\u4e58\u7684\u76f8\u5173\u6982\u5ff5\u672c\u4e66\u5728\u4e0a\u4e00\u7ae0\u7684 continue \u8bed\u53e5\u90e8\u5206\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\u3002 \u9636\u4e58\u53ef\u4ee5\u76f4\u89c2\u5c55\u793a\u4e3a n! = 1 x 2 x 3 x \u2026 x n \u7684\u5f62\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u5c55\u793a\u4e3a\u9012\u5f52\u7684\u65b9\u5f0f n! = (n-1)! x n\uff0c\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u56fe5-1\u4e2d\u4e0d\u65ad\u5faa\u73af\u7684\u6367\u7740\u753b\u6846\u7684\u8499\u5a1c\u4e3d\u838e\u5bf9\u9012\u5f52\u8fdb\u884c\u76f4\u89c2\u5730\u7406\u89e3\u3002 \u6b64\u65f6\u5982\u679c\u4ee4\u51fd\u6570 factorial(n) \u4e3a n!\uff0c\u90a3\u4e48\u9012\u5f52\u7684\u51fd\u6570\u8868\u793a\u6cd5\u4e3a\uff1afactorial(n) = factorial(n-1) x n\u3002 \u73b0\u5728\u7528\u5b9e\u9645\u7684\u4ee3\u7801\u8868\u5f81\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u5e76\u5bf9\u7ed3\u679c\u8fdb\u884c\u6d4b\u8bd5\u3002 In [16]: def factorial(n): ...: if n == 1: ...: return 1 ...: else: ...: return n * factorial(n-1) In [17]: factorial(1) Out[17]: 1 In [18]: factorial(5) Out[18]: 120 In [19]: factorial(10) Out[19]: 3628800 factorial(5) \u7684\u8ba1\u7b97\u8fc7\u7a0b\u53ef\u4ee5\u8868\u793a\u5982\u4e0b\uff1a ===> factorial(5) ===> 5 * factorial(4) ===> 5 * (4 * factorial(3)) ===> 5 * (4 * (3 * factorial(2))) ===> 5 * (4 * (3 * (2 * factorial(1)))) ===> 5 * (4 * (3 * (2 * 1))) ===> 5 * (4 * (3 * 2)) ===> 5 * (4 * 6) ===> 5 * 24 ===> 120 \u76f8\u6bd4\u5bf9\u4f7f\u7528\u5faa\u73af\u8fdb\u884c\u9636\u4e58\u7684\u8fd0\u7b97\uff0c\u9012\u5f52\u5728\u903b\u8f91\u4e0a\u66f4\u52a0\u6e05\u6670\uff0c\u5b9a\u4e49\u66f4\u52a0\u7b80\u5355\uff0c\u4e0d\u8fc7\u8fd0\u7b97\u8fc7\u7a0b\u66f4\u4e3a\u62bd\u8c61\u3002\u7406\u8bba\u4e0a\uff0c\u6240\u6709\u7684\u9012\u5f52\u51fd\u6570\u90fd\u53ef\u4ee5\u5199\u6210\u5faa\u73af\u7684\u5f62\u5f0f\u3002\u5728\u4f7f\u7528\u9012\u5f52\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u5fc5\u987b\u6709\u4e00\u4e2a\u660e\u786e\u7684\u9012\u5f52\u7ed3\u675f\u6761\u4ef6\uff0c\u4ee5\u907f\u514d\u65e0\u9650\u8c03\u7528\u3002 \u9012\u5f52\u51fd\u6570\u7684\u6700\u5927\u95ee\u9898\u662f\u6548\u7387\u4f4e\uff0c\u5360\u7528\u4e86\u5927\u91cf\u7684\u5185\u5b58\u548c\u65f6\u95f4\uff0c\u5f53\u9012\u5f52\u6b21\u6570\u8fc7\u591a\u65f6\u5bb9\u6613\u53d1\u751f\u6808\u6ea2\u51fa\u3002\u53d1\u751f\u6808\u6ea2\u51fa\u7684\u539f\u56e0\u662f\uff0c\u5728\u8ba1\u7b97\u673a\u4e2d\u51fd\u6570\u7684\u8c03\u7528\u65f6\u901a\u8fc7\u5806\u6808\uff08stack\uff09\u6765\u5b9e\u73b0\u7684\uff0c\u6bcf\u8fdb\u884c\u4e00\u6b21\u8c03\u7528\uff0c\u6808\u5e27\u5c31\u4f1a\u589e\u52a0\u4e00\u5c42\uff0c\u6bcf\u5f53\u51fd\u6570\u8fd4\u56de\uff0c\u6808\u5e27\u5c31\u51cf\u5c11\u4e00\u5c42\uff0c\u7136\u800c\u8ba1\u7b97\u673a\u63d0\u4f9b\u7684\u6808\u5e27\u4e0d\u662f\u65e0\u9650\u5927\u7684\uff0c\u5c31\u50cf\u6211\u4eec\u4e0d\u53ef\u80fd\u771f\u6b63\u5730\u5728\u4e0a\u9762\u8499\u5a1c\u4e3d\u838e\u753b\u50cf\u4e0a\u753b\u51fa\u65e0\u9650\u4e2a\u6367\u7740\u753b\u6846\u7684\u5b50\u56fe\uff0c\u5f53\u9012\u5f52\u8c03\u7528\u6b21\u6570\u8fc7\u591a\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u6808\u6ea2\u51fa\u3002 In [20]: factorial(1000) Out[20]: 402387260077093773543702433923003985719374864210714632543799910429938512398629020592044208486969404800479988610197196058631666872994808558901323829669944590997424504087073759918823627727188732519779505950995276120874975462497043601418278094646496291056393887437886487337119181045825783647849977012476632889835955735432513185323958463075557409114262417474349347553428646576611667797396668820291207379143853719588249808126867838374559731746136085379534524221586593201928090878297308431392844403281231558611036976801357304216168747609675871348312025478589320767169132448426236131412508780208000261683151027341827977704784635868170164365024153691398281264810213092761244896359928705114964975419909342221566832572080821333186116811553615836546984046708975602900950537616475847728421889679646244945160765353408198901385442487984959953319101723355556602139450399736280750137837615307127761926849034352625200015888535147331611702103968175921510907788019393178114194545257223865541461062892187960223838971476088506276862967146674697562911234082439208160153780889893964518263243671616762179168909779911903754031274622289988005195444414282012187361745992642956581746628302955570299024324153181617210465832036786906117260158783520751516284225540265170483304226143974286933061690897968482590125458327168226458066526769958652682272807075781391858178889652208164348344825993266043367660176999612831860788386150279465955131156552036093988180612138558600301435694527224206344631797460594682573103790084024432438465657245014402821885252470935190620929023136493273497565513958720559654228749774011413346962715422845862377387538230483865688976461927383814900140767310446640259899490222221765904339901886018566526485061799702356193897017860040811889729918311021171229845901641921068884387121855646124960798722908519296819372388642614839657382291123125024186649353143970137428531926649875337218940694281434118520158014123344828015051399694290153483077644569099073152433278288269864602789864321139083506217095002597389863554277196742822248757586765752344220207573630569498825087968928162753848863396909959826280956121450994871701244516461260379029309120889086942028510640182154399457156805941872748998094254742173582401063677404595741785160829230135358081840096996372524230560855903700624271243416909004153690105933983835777939410970027753472000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 In [21]: factorial(100000) --------------------------------------------------------------------------- RecursionError Traceback (most recent call last) <ipython-input-21-43ad924d46ef> in <module> ----> 1 factorial(100000) <ipython-input-16-b3332bd42a71> in factorial(n) 3 return 1 4 else: ----> 5 return n * factorial(n-1) ... last 1 frames repeated, from the frame below ... <ipython-input-16-b3332bd42a71> in factorial(n) 3 return 1 4 else: ----> 5 return n * factorial(n-1) RecursionError: maximum recursion depth exceeded in comparison \u4e0a\u9762\u4ee3\u7801\u8fd0\u884c\u7ed3\u679c\u663e\u793a\u5f53\u8ba1\u7b97 1000 \u7684\u9636\u4e58\u65f6\uff0c\u8ba1\u7b97\u673a\u8fd8\u80fd\u6b63\u5e38\u8fd0\u884c\u5e76\u8ba1\u7b97\u51fa\u7ed3\u679c\uff0c\u800c\u5c06\u8f93\u5165\u53c2\u6570\u8bbe\u4e3a 100,000 \u65f6\uff0cPython \u76f4\u63a5\u62a5\u9519\u63d0\u793a\u9012\u5f52\u5df2\u7ecf\u8d85\u51fa\u652f\u6301\u7684\u6700\u5927\u6df1\u5ea6\u3002 5.2 \u51fd\u6570\u7684\u53c2\u6570 \u00b6 \u5b9a\u4e49\u51fd\u6570\u7684\u65f6\u5019\u628a\u53c2\u6570\u7684\u540d\u5b57\u548c\u4f4d\u7f6e\u786e\u5b9a\u4e0b\u6765\uff0c\u5c31\u5b8c\u6210\u4e86\u51fd\u6570\u7684\u63a5\u53e3\u7684\u5b9a\u4e49\u3002\u5bf9\u4e8e\u51fd\u6570\u7684\u4f7f\u7528\u8005\u6765\u8bf4\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5982\u4f55\u4f20\u9012\u6b63\u786e\u7684\u53c2\u6570\uff0c\u4ee5\u53ca\u51fd\u6570\u5c06\u8fd4\u56de\u4ec0\u4e48\u6837\u7684\u503c\u5c31\u591f\u4e86\uff0c\u51fd\u6570\u5185\u90e8\u7684\u590d\u6742\u903b\u8f91\u88ab\u5c01\u88c5\u8d77\u6765\uff0c\u4f7f\u7528\u8005\u65e0\u9700\u4e86\u89e3\u3002\u8fd9\u5c31\u5982\u540c\u7528\u94c5\u7b14\u5199\u5b57\u3001\u7d20\u63cf\u6216\u505a\u5176\u4ed6\u4e8b\u60c5\uff0c\u8bfb\u8005\u65e0\u9700\u77e5\u9053\u94c5\u7b14\u7684\u5236\u9020\u8fc7\u7a0b\u3002\u53cd\u4e4b\uff0c\u51fd\u6570\u521b\u5efa\u8005\u5e94\u5f53\u8003\u8651\u51fd\u6570\u5185\u90e8\u7684\u903b\u8f91\uff0c\u5408\u9002\u5730\u8bbe\u5b9a\u51fd\u6570\u7684\u53c2\u6570\u4ee5\u65b9\u4fbf\u4f7f\u7528\u8005\u80fd\u591f\u8f7b\u677e\u8c03\u7528\u3002 Python \u7684\u51fd\u6570\u5b9a\u4e49\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u7075\u6d3b\u5ea6\u5f88\u5927\u3002\u51fd\u6570\u7684\u53c2\u6570\u4e3b\u8981\u53ef\u4ee5\u5206\u4e3a\u4f4d\u7f6e\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\u4e0e\u53ef\u53d8\u53c2\u6570 3 \u79cd\u7c7b\u578b\uff0c\u5408\u7406\u7ec4\u5408 3 \u79cd\u53c2\u6570\u7c7b\u578b\u5b9a\u4e49\u51fd\u6570\u63a5\u53e3\uff0c\u4e0d\u4f46\u80fd\u5904\u7406\u590d\u6742\u7684\u53c2\u6570\uff0c\u8fd8\u53ef\u4ee5\u7b80\u5316\u51fd\u6570\u8c03\u7528\u8005\u7684\u4ee3\u7801\u3002 5.2.1 \u4f4d\u7f6e\u53c2\u6570 \u00b6 \u4f4d\u7f6e\u53c2\u6570\u7684\u542b\u4e49\u53ef\u4ee5\u6bd4\u8f83\u76f4\u89c2\u7684\u7406\u89e3\uff0c\u5b83\u662f\u901a\u8fc7\u4f4d\u7f6e\u6307\u5b9a\u7684\u53c2\u6570\u3002\u65e2\u7136\u5173\u952e\u5728\u4e8e\u4f4d\u7f6e\uff0c\u90a3\u4e48\u53c2\u6570\u540d\u5c31\u663e\u5f97\u4e0d\u90a3\u4e48\u91cd\u8981\u4e86\u3002\u4f4d\u7f6e\u53c2\u6570\u662f\u521b\u5efa\u51fd\u6570\u65f6\u901a\u5e38\u4f7f\u7528\u7684\u53c2\u6570\uff0c\u4e0b\u9762\u7528\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\u8bf4\u660e\u3002 \u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u8ba1\u7b97\u6570\u503c x \u7684 n \u6b21\u5e42\u3002 In [22]: def power(x, n): ...: s = 1 ...: while n > 0: ...: n = n - 1 ...: s = s * x ...: return s In [23]: power(2, 2) Out[23]: 4 In [24]: power(2, 3) Out[24]: 8 \u8fd9\u91cc power(x, n) \u51fd\u6570\u4e24\u4e2a\u53c2\u6570 x \u548c n \u90fd\u662f\u4f4d\u7f6e\u53c2\u6570\uff0c\u5728\u8c03\u7528\u65f6\u4f20\u5165\u7684\u503c\u4f1a\u4f9d\u6b21\u4f20\u7ed9 x \u548c n\u3002 \u6709\u610f\u601d\u7684\u662f\uff0c\u5982\u679c\u663e\u5f0f\u5730\u6307\u5b9a\u53c2\u6570\u540d\uff0c\u4f1a\u5b58\u5728\u62a5\u9519\u7684\u60c5\u51b5\uff0c\u5982\u4e0b\u6240\u793a\uff1a In [25]: power(x = 2, 5) File \"<ipython-input-40-b1e390a5e3ac>\", line 1 power(x = 2, 5) ^ SyntaxError: positional argument follows keyword argument In [26]: power(2, n = 5) Out[26]: 32 In [27]: power(x = 2, n = 5) Out[27]: 32 \u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u51e0\u79cd\u8c03\u7528\u65b9\u5f0f\u4e2d\uff0c\u5982\u679c\u5148\u8f93\u5165\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\uff0c\u540e\u9762\u5c31\u4e0d\u80fd\u63a5\u4f4d\u7f6e\u53c2\u6570\u4e86\u3002 5.2.2 \u5173\u952e\u5b57\u53c2\u6570 \u00b6 \u4e3a\u4ec0\u4e48\u4e0a\u9762\u53c2\u6570\u5e26\u540d\u5b57\u4f1a\u62a5\u9519\u5462\uff1f\u8fd9\u662f\u56e0\u4e3a\u5728\u4f7f\u7528 power(x = 2, 5) \u65f6\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u53c2\u6570\u7c7b\u578b\u2014\u2014\u5173\u952e\u5b57\u53c2\u6570\uff0c\u5b83\u5e72\u6270\u4e86 Python \u5bf9\u4e8e\u53c2\u6570\u7684\u89e3\u6790\u3002\u5728 Python \u7684\u903b\u8f91\u91cc\u9762\uff0c\u5173\u952e\u5b57\u53c2\u6570\u5fc5\u987b\u653e\u5230\u4f4d\u7f6e\u53c2\u6570\u7684\u540e\u9762\uff0c\u4e0d\u7136\u5b83\u4e0d\u77e5\u9053\u8c01\u662f\u8c01\uff0c\u800c\u8fd9\u91cc\u6070\u6070\u76f8\u53cd\uff0c\u6240\u4ee5 Python \u629b\u51fa\u9519\u8bef\u3002 \u5bf9\u4e8e\u5173\u952e\u5b57\u53c2\u6570\uff0c\u4f4d\u7f6e\u5c31\u4e0d\u91cd\u8981\u4e86\uff0c\u800c\u662f\u901a\u8fc7\u540d\u5b57\u6307\u5b9a\uff0c\u8fd9\u65f6\u8c03\u7528\u8005\u53ef\u4ee5\u4efb\u610f\u5730\u4fee\u6539\u987a\u5e8f\u3002\u5173\u952e\u5b57\u53c2\u6570\u6700\u6709\u7528\u7684\u5f62\u5f0f\u662f\u7ed9\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\u6307\u5b9a\u4e00\u4e2a\u9ed8\u8ba4\u53c2\u6570\u503c\uff0c\u8fd9\u6837\u521b\u5efa\u51fa\u6765\u7684\u51fd\u6570\u7528\u6237\u901a\u8fc7\u8bbe\u5b9a\u5c11\u91cf\u53c2\u6570\u5373\u53ef\u8c03\u7528\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684 ask_ok() \u51fd\u6570\uff1a\u5b83\u5411\u7528\u6237\u53d1\u51fa\u8be2\u95ee\uff0c\u5982\u679c\u7528\u6237\u540c\u610f\u5e76\u8f93\u5165 y \u6216 ye \u6216 yes\uff0c\u51fd\u6570\u90fd\u4f1a\u8fd4\u56de True\uff1b\u5982\u679c\u7528\u6237\u4e0d\u540c\u610f\u5e76\u8f93\u5165 n \u6216 no \u6216 nop \u6216 nope\uff0c\u51fd\u6570\u4f1a\u8fd4\u56de False\uff1b\u5176\u4ed6\u60c5\u51b5\u4f1a\u63d0\u793a\u7528\u6237\u518d\u6b21\u8f93\u5165\u3002 In [28]: def ask_ok(prompt, retries=4, reminder='Please try again!'): ...: while True: ...: ok = input(prompt) ...: if ok in ('y', 'ye', 'yes'): ...: return True ...: if ok in ('n', 'no', 'nop', 'nope'): ...: return False ...: retries = retries - 1 ...: if retries < 0: ...: raise ValueError('invalid user response') ...: print(reminder) \u8be5\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u51e0\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u8c03\u7528\uff1a \u4ec5\u7ed9\u51fa\u4e00\u4e2a\u5fc5\u9700\u53c2\u6570\uff1aask_ok(\u201c\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\u201d)\u3002 \u6307\u5b9a\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff1aask_ok(\u201c\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\u201d, 2)\u3002 \u6216\u8005\u7ed9\u51fa\u6240\u6709\u7684\u53c2\u6570\uff1aask_ok(\u201c\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\u201d, 1, \u201c\u4e0d\u597d\u610f\u601d\uff0c\u53ea\u80fd\u662fyes\u6216no\uff01\u201d) \u4e0b\u9762\u5bf9\u8fd9\u51e0\u79cd\u8c03\u7528\u65b9\u5f0f\u8fdb\u884c\u7b80\u5355\u7684\u6d4b\u8bd5\u3002 In [29]: ask_ok(\"\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\") \u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1fy Out[29]: True In [30]: ask_ok(\"\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\", 2) \u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1ffgfg Please try again! \u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1ffewe Please try again! \u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1fgdhgds --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-24-e2ab09b6f802> in <module> ----> 1 ask_ok(\"\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\", 2) <ipython-input-22-16d7c37266ff> in ask_ok(prompt, retries, reminder) 8 retries = retries - 1 9 if retries < 0: ---> 10 raise ValueError('invalid user response') 11 print(reminder) ValueError: invalid user response In [31]: ask_ok(\"\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\", 1, \"\u4e0d\u597d\u610f\u601d\uff0c\u53ea\u80fd\u662fyes\u6216no\uff01\") \u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1fnpe \u4e0d\u597d\u610f\u601d\uff0c\u53ea\u80fd\u662fyes\u6216no\uff01 \u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1fyes Out[31]: True \u53ef\u4ee5\u770b\u5230\uff0c\u65e0\u8bba\u662f\u7b80\u5355\u8c03\u7528\u8fd8\u662f\u590d\u6742\u8c03\u7528\uff0c\u51fd\u6570\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\uff0c\u56e0\u6b64\u5173\u952e\u5b57\u53c2\u6570\u964d\u4f4e\u4e86\u51fd\u6570\u7684\u4f7f\u7528\u96be\u5ea6\uff0c\u4e5f\u7ed9\u51fd\u6570\u7684\u4f7f\u7528\u63d0\u4f9b\u4e86\u7075\u6d3b\u6027\u3002 \u867d\u7136\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u8bbe\u5b9a\u9ed8\u8ba4\u503c\u975e\u5e38\u6709\u7528\uff0c\u4f46\u4f7f\u7528\u4e0d\u5f53\u4f1a\u51fa\u73b0\u8f83\u5927\u7684\u95ee\u9898\u3002\u4e0b\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u6765\u8bf4\u660e\u8fd9\u4e2a\u95ee\u9898\u3002 In [32]: def f(a, L=[]): ...: L.append(a) ...: return L In [33]: print(f(1)) ...: print(f(2)) ...: print(f(3)) [1] [1, 2] [1, 2, 3] \u7ed3\u679c\u975e\u5e38\u5947\u602a\uff0c\u5728\u7b2c 2 \u6b21\u548c\u7b2c 3 \u6b21\u8c03\u7528\u65f6\u524d\u9762\u7684\u7ed3\u679c\u5c45\u7136\u8fd8\u5728\uff0c\u53ef\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u65f6\u8bbe\u5b9a\u4e86\u9ed8\u8ba4\u53c2\u6570\u4e3a\u7a7a\u5217\u8868\uff01\u8fd9\u662f\u56e0\u4e3a Python \u53ea\u5bf9\u51fd\u6570\u7684\u9ed8\u8ba4\u503c\u8ba1\u7b97\u4e00\u6b21\uff0c\u6240\u4ee5\u5f53\u9ed8\u8ba4\u53c2\u6570\u662f\u53ef\u53d8\u5bf9\u8c61\u5982\u5217\u8868\u3001\u5b57\u5178\u65f6\uff0c\u53c2\u6570\u4f1a\u7d2f\u79ef\u53d8\u5316\uff0c\u770b\u8d77\u6765\u5b83\u7ee7\u627f\u4e86\u524d\u9762\u8c03\u7528\u7684\u8f93\u5165\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u5c06\u9ed8\u8ba4\u53c2\u6570\u8bbe\u5b9a\u4e3a\u4e0d\u53ef\u53d8\u5bf9\u8c61 None\u3002 In [34]: def f(a, L=None): ...: if L is None: ...: L = [] ...: L.append(a) ...: return L In [35]: print(f(1)) ...: print(f(2)) ...: print(f(3)) [1] [2] [3] \u73b0\u5728\u65e0\u8bba\u8c03\u7528\u591a\u5c11\u6b21\uff0c\u51fd\u6570\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u4e86\u3002 5.2.3 \u53ef\u53d8\u53c2\u6570 \u00b6 \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u80fd\u591f\u4f20\u5165\u7684\u53c2\u6570\u662f\u6709\u9650\u7684\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u5411\u51fd\u6570\u4f20\u5165\u6210\u5343\u4e0a\u4e07\u4e2a\uff08\u867d\u7136\u8bf4\u6709\u70b9\u5938\u5f20\uff0c\u4f46\u4e00\u4e9b\u5b9e\u9645\u60c5\u51b5\u5c31\u662f\u5982\u6b64\uff09\u53c2\u6570\uff0c\u6211\u4eec\u9700\u8981\u65b0\u7684\u89e3\u51b3\u529e\u6cd5\u3002 \u73b0\u5728\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u4efb\u610f\u4e2a\u53c2\u6570\u7684\u5e73\u65b9\u548c\uff1a In [36]: def calcSquareSum(*numbers): ...: sum = 0 ...: for n in numbers: ...: sum = sum + n * n ...: return sum In [37]: calcSquareSum(1, 2, 3) Out[37]: 14 In [38]: calcSquareSum() Out[38]: 0 In [39]: input = [3, 4, 5] In [40]: calcSquareSum(*input) Out[40]: 50 \u8fd9\u91cc\u65e0\u8bba input \u6709\u591a\u957f\uff0c\u51fd\u6570\u90fd\u662f\u53ef\u4ee5\u4f7f\u7528\u7684\u3002\u663e\u7136\uff0c\u661f\u53f7\u53d1\u6325\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\uff0c\u51fd\u6570\u8bc6\u522b\u5230\u8be5\u7b26\u53f7\u4f1a\u5c06\u8f93\u5165\u7684\u4f4d\u7f6e\u53c2\u6570\u81ea\u52a8\u7ec4\u88c5\u4e3a\u5143\u7ec4\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u9a8c\u8bc1\u3002 In [41]: def print_params(*params): ...: print(params) ...: In [42]: print_params(1, 3, 5, 7, 9) (1, 3, 5, 7, 9) \u7b80\u800c\u8a00\u4e4b\uff0c\u661f\u53f7\u8d77\u7740\u6536\u96c6\u201c\u5269\u4f59\u201d\u4f4d\u7f6e\u53c2\u6570\u7684\u4f5c\u7528\u3002\u4e3a\u4ec0\u4e48\u8981\u5f3a\u8c03\u201c\u5269\u4f59\u201d\u548c\u201c\u4f4d\u7f6e\u53c2\u6570\u201d\u5462\uff1f\u4e00\u65b9\u9762\uff0c\u8be5\u64cd\u4f5c\u53ef\u4ee5\u4e0e\u5355\u4e2a\u4f4d\u7f6e\u53c2\u6570\u642d\u914d\u4f7f\u7528\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u8be5\u64cd\u4f5c\u4e0d\u80fd\u7528\u4e8e\u5173\u952e\u5b57\u53c2\u6570\u3002 In [43]: def print_params2(name, *params): ...: print(name, params) ...: In [44]: print_params2(\"Admin\", 1, 2, 3, 4) # \u6211\u4eec\u4f1a\u770b\u5230 name \u548c params \u662f\u5206\u5f00\u7684 Admin (1, 2, 3, 4) In [45]: print_params({\"a\":1, \"b\":2}) # \u6211\u4eec\u5f97\u5230\u7684\u662f\u5143\u7ec4\u800c\u4e0d\u662f\u5b57\u5178 ({'a': 1, 'b': 2},) \u76f8\u5e94\u5730\uff0c\u4e3a\u4e86\u5904\u7406\u5173\u952e\u5b57\u53c2\u6570\uff0cPython \u5f15\u5165\u4e86\u4e24\u4e2a\u661f\u53f7\u3002 In [46]: def person(name, age, **kw): # \u8fd9\u91cc\u7684kw\u5c31\u662f\u5173\u952e\u5b57\u53c2\u6570 ...: print('\u6027\u522b\uff1a', name, '\u5e74\u9f84', age, '\u5176\u4ed6', kw) In [47]: person(\"Shixiang\", 25) \u6027\u522b\uff1a Shixiang \u5e74\u9f84 25 \u5176\u4ed6 {} In [48]: person(\"\u5c0f\u4e39\", 25, city = \"\u4e0a\u6d77\", job = \"\u6570\u636e\u5206\u6790\u5de5\u7a0b\u5e08\") \u6027\u522b\uff1a \u5c0f\u4e39 \u5e74\u9f84 25 \u5176\u4ed6 {'city': '\u4e0a\u6d77', 'job': '\u6570\u636e\u5206\u6790\u5de5\u7a0b\u5e08'} \u603b\u7ed3\u4e00\u4e0b\uff0c\u53ef\u53d8\u53c2\u6570\u5e76\u6ca1\u6709\u6982\u5ff5\u4e0a\u7684\u521b\u65b0\uff0c\u5b83\u5b9e\u8d28\u4e0a\u662f\u4f4d\u7f6e\u53c2\u6570\u548c\u5173\u952e\u5b57\u53c2\u6570\u7684\u53d8\u4f53\uff0c\u7528\u6765\u5904\u7406\u4efb\u610f\u8f93\u5165\u53c2\u6570\u7684\u60c5\u5f62\u3002 5.3 \u6a21\u5757 \u00b6 \u5b9e\u9645\u5b8c\u6210\u4e00\u4e2a\u8f6f\u4ef6\u5f00\u53d1\u6216\u8005\u6570\u636e\u5206\u6790\u6d41\u7a0b\u7684\u4ee3\u7801\u91cf\u5f80\u5f80\u662f\u5de8\u5927\u7684\uff0c\u4e00\u4e2a\u6587\u4ef6\u91cc\u6240\u5b58\u50a8\u7684\u4ee3\u7801\u8d8a\u957f\u5c31\u8d8a\u4e0d\u5bb9\u6613\u7ef4\u62a4\u3002\u4e3a\u4e86\u7f16\u5199\u53ef\u7ef4\u62a4\u7684\u4ee3\u7801\uff0c\u7a0b\u5e8f\u5458\u901a\u5e38\u5c06\u51fd\u6570\u6309\u7167\u529f\u80fd\u8fdb\u884c\u5206\u7ec4\u5e76\u5c06\u5b83\u4eec\u653e\u5230\u4e0d\u540c\u7684\u6587\u4ef6\u4e2d\u53bb\uff0c\u8fd9\u6837\u6bcf\u4e2a\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u5c31\u5c11\u4e86\u5f88\u591a\uff0c\u529f\u80fd\u4e13\u4e00\uff0c\u56e0\u6b64\u4fbf\u4e8e\u67e5\u627e\u3001\u8c03\u8bd5\u9519\u8bef\uff0c\u589e\u52a0\u529f\u80fd\u7279\u6027\u7b49\uff0c\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u91c7\u7528\u8fd9\u79cd\u7ec4\u7ec7\u4ee3\u7801\u7684\u65b9\u5f0f\u3002 Python \u4e2d\uff0c\u6bcf\u4e00\u4e2a\u4ee5 .py \u4e3a\u6587\u4ef6\u6269\u5c55\u540d\u7684\u4ee3\u7801\u6587\u4ef6\u90fd\u662f\u4e00\u4e2a\u6a21\u5757\uff08Module\uff09\u3002\u6a21\u5757\u5927\u5927\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u5e94\u7528\u8303\u56f4\uff0c\u7f16\u5199\u4ee3\u7801\u4e0d\u9700\u8981\u4ece\u5934\u5f00\u59cb\uff0c\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u5f15\u7528\u522b\u4eba\u5df2\u7ecf\u521b\u5efa\u597d\u7684\u4f18\u79c0\u6a21\u5757\uff0c\u8fd9\u5305\u62ec Python \u5185\u7f6e\u7684\u6a21\u5757\u548c\u6765\u81ea\u7b2c\u4e09\u65b9\u7684\u6a21\u5757\u3002\u6570\u636e\u5206\u6790\u5e38\u5e38\u5c31\u662f\u5efa\u7acb\u5728\u4f17\u591a\u7684\u8ba1\u7b97\u6a21\u5757\u57fa\u7840\u4e4b\u4e0a\uff0c\u5982 Numpy\u3001Pandas \u548c Scipy \u7b49\uff0c\u57fa\u4e8e\u8fd9\u4e9b\u884c\u4e1a\u6807\u51c6\u7ea7\u522b\u7684\u6a21\u5757\uff0c\u8bfb\u8005\u53ef\u4ee5\u5feb\u901f\u5b9e\u73b0\u6570\u636e\u7684\u8bfb\u53d6\u3001\u64cd\u4f5c\u3001\u5206\u6790\u3001\u53ef\u89c6\u5316\u4ee5\u53ca\u7ed3\u679c\u8f93\u51fa\u3002 \u6a21\u5757\u5b66\u4e60\u7684\u6838\u5fc3\u5728\u4e8e\u4e86\u89e3\u6a21\u5757\u3001\u5b89\u88c5\u6a21\u5757\u4ee5\u53ca\u5b66\u4e60\u4f7f\u7528\u6a21\u5757\u63d0\u4f9b\u7684\u51fd\u6570\u3002\u4e0b\u9762\u5206\u522b\u8fdb\u884c\u4ecb\u7ecd\u3002 5.3.1 \u6a21\u5757\u4e0e\u5305\u7ed3\u6784 \u00b6 \u4e0a\u9762\u63d0\u5230\uff0c\u4e00\u4e2a .py \u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u4f8b\u5982\u4e00\u4e2a abc.py \u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u53eb abc \u7684\u6a21\u5757\u3002\u56e0\u4e3a\u4e16\u754c\u4e0a\u975e\u5e38\u591a\u7684 Python \u4f7f\u7528\u8005\uff0c\u5927\u5bb6\u5728\u521b\u5efa\u6a21\u5757\u65f6\u6587\u4ef6\u540d\u90fd\u4f1a\u91c7\u7528\u6613\u7528\u6613\u61c2\u7684\u547d\u540d\u89c4\u5219\uff0c\u6240\u4ee5\u6a21\u5757\u540d\u5f88\u5bb9\u6613\u4e0e\u5176\u4ed6\u7684\u6a21\u5757\u51b2\u7a81\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cPython \u5f15\u5165\u4e86\u5305\u5bf9\u6a21\u5757\u8fdb\u884c\u7ec4\u7ec7\u3002\u5305\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5305\u542b\u4f17\u591a\u6a21\u5757\u7684\u76ee\u5f55\uff0c\u53ea\u8981\u5305\u540d\u4e0d\u4e0e\u522b\u7684\u5305\u540d\u51b2\u7a81\uff0c\u90a3\u4e48\u8be5\u5305\u6240\u6709\u7684\u6a21\u5757\u90fd\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002 \u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u540d\u5b57\u4e3a fib \u5305\u7684\u7ed3\u6784\uff0c\u8be5\u5305\u4e0b\u9762\u6709 3 \u4e2a\u6a21\u5757\uff0c\u8fd9\u91cc\u7684 abc.py \u6a21\u5757\u540d\u5b57\u4e0d\u518d\u662f abc\uff0c\u800c\u662f fib.abc\u3002 fib \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 abc.py \u2514\u2500\u2500 fib.py \u6bcf\u4e00\u4e2a\u5305\u76ee\u5f55\u4e0b\u90fd\u4f1a\u6709\u4e00\u4e2a __init__.py\u6587\u4ef6\uff0c\u5b83\u7684\u6a21\u5757\u540d\u4e3a\u5305\u540d fib\uff0c\u8be5\u6587\u4ef6\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4e5f\u53ef\u4ee5\u6709 Python \u4ee3\u7801\uff0c\u5b83\u5fc5\u987b\u5b58\u5728\u4e8e\u5305\u7684\u76ee\u5f55\u4e0b\uff0c\u4e0d\u7136 Python \u4f1a\u5c06\u8be5\u76ee\u5f55\u5f53\u505a\u666e\u901a\u76ee\u5f55\uff0c\u800c\u975e\u5305\u3002 \u5305\u4e5f\u53ef\u4ee5\u5d4c\u5957\u5b58\u5728\uff0c\u7ec4\u6210\u591a\u5c42\u6b21\u7684\u5305\u7ed3\u6784\uff0c\u5982\u4e0b\u6240\u793a\uff1a fib \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 abc.py \u2514\u2500\u2500 fib.py \u2514\u2500\u2500 calc \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 def.py \u2514\u2500\u2500 calculation.py \u8fd9\u91cc def.py \u7684\u6a21\u5757\u540d\u662f fib.calc.def\u3002\u6bcf\u591a\u4e00\u4e2a\u5c42\u7ea7\uff0c\u5176\u4e2d\u7684\u6a21\u5757\u540d\u5c31\u591a\u4e00\u4e2a\u5c42\u7ea7\uff0c\u5c42\u7ea7\u4e4b\u95f4\u7528\u82f1\u6587\u53e5\u53f7 . \u533a\u5206\u3002\u6a21\u5757\u540d\u8981\u9075\u5faa Python \u53d8\u91cf\u547d\u540d\u89c4\u8303\uff0c\u4e0d\u8981\u4f7f\u7528\u4e2d\u6587\u3001\u7279\u6b8a\u5b57\u7b26\u3002 5.3.2 \u6a21\u5757\u7684\u521b\u5efa \u00b6 \u672c\u5c0f\u8282\u4ee5\u5185\u7f6e\u7684 sys \u548c math \u6a21\u5757\u4e3a\u4f8b\uff0c\u7f16\u5199\u4e00\u4e2a fact \u6a21\u5757\uff0c\u7528\u4e8e\u8ba1\u7b97\u9636\u4e58\u3002 \u9996\u5148\u7528\u6587\u672c\u7f16\u8f91\u5668\u521b\u5efa\u4e00\u4e2a\u4ee5 .py \u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\u7684\u6587\u672c\u6587\u4ef6\uff0c\u7136\u540e\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a #!/usr/bin/env python3 # -*- coding: utf-8 -*- \"\"\"\u8fd9\u662f\u4e00\u4e2a\u8ba1\u7b97\u9636\u4e58\u7684\u6a21\u5757\uff0c \u5b83\u5229\u7528\u4e86math\u6a21\u5757\u548csys\u6a21\u5757\"\"\" __author__ = 'Shixiang' import sys import math def fact(): args = sys.argv if len(args)==1: print('\u8bf7\u91cd\u65b0\u8fd0\u884c\u5e76\u8f93\u5165\u4e00\u4e2a\u6570\u5b57\u3002') elif len(args)==2: print(math.factorial(int(args[1]))) else: print('\u8fd9\u4e2a\u51fd\u6570\u53ea\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u800c\u4e14\u5fc5\u987b\u662f\u6570\u5b57\uff01') if __name__=='__main__': fact() \u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u7b2c 1\u30012 \u884c\u662f\u6807\u51c6\u7684\u6ce8\u91ca\uff0c\u5176\u4e2d\u7b2c\u4e00\u884c\u7684\u6ce8\u91ca\u53ef\u4ee5\u8ba9\u8be5\u6a21\u5757\u76f4\u63a5\u5728 Linux \u7cfb\u7edf\u548c macOS \u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u7b2c 2 \u884c\u6ce8\u91ca\u6307\u5b9a\u4ee3\u7801\u6587\u4ef6\u4f7f\u7528\u6807\u51c6\u7684 UTF-8 \u7f16\u7801\u3002\u8fd9\u4e24\u884c\u6ce8\u91ca\u662f\u6807\u51c6\u7684\u89c4\u8303\uff0c\u8bf7\u8bfb\u8005\u5728\u7f16\u5199\u6a21\u5757\u65f6\u52a1\u5fc5\u9075\u5b88\u3002 \u63a5\u4e0b\u6765\u7684\u4e00\u884c\u662f\u5b57\u7b26\u4e32\uff0c\u5b83\u662f\u5bf9\u6574\u4e2a\u6a21\u5757\u7684\u529f\u80fd\u8bf4\u660e\uff0c\u4e00\u822c\u79f0\u4e3a\u6587\u6863\u5b57\u7b26\u4e32\uff08docstring\uff09\uff0c\u8fd9\u8ddf\u7f16\u5199\u51fd\u6570\u662f\u4e00\u81f4\u7684\u3002\u4efb\u4f55\u6a21\u5757/\u51fd\u6570\u4ee3\u7801\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u90fd\u88ab\u89c6\u4e3a\u6587\u6863\u6ce8\u91ca\u3002 __author__ = \u2018Shixiang\u2019 \u8fd9\u91cc\u4f7f\u7528\u4e13\u95e8\u7684\u53d8\u91cf\u8bb0\u5f55\u6a21\u5757\u7684\u4f5c\u8005\uff0c\u522b\u4eba\u5728\u4f7f\u7528\u65f6\u53ef\u4ee5\u67e5\u770b\u6a21\u5757\u7684\u521b\u4f5c\u8005\u662f\u8c01\u3002 \u4e0a\u8ff0\u63d0\u53ca\u7684\u5185\u5bb9\u662f Python \u6a21\u5757\u6587\u4ef6\u7684\u6807\u51c6\u7248\u672c\uff0c\u662f\u4e00\u4e2a\u53ef\u9009\u9879\uff0c\u8bfb\u8005\u53ef\u4ee5\u5220\u9664\u4e0d\u5199\uff0c\u4f46\u672c\u4e66\u5efa\u8bae\u8bfb\u8005\u90fd\u4f7f\u7528\u6807\u51c6\u7684\u5199\u6cd5\u3002 \u968f\u540e\u7684\u5185\u5bb9\u662f\u771f\u6b63\u7684\u4ee3\u7801\u90e8\u5206\uff0c\u4f7f\u7528 import \u5173\u952e\u5b57\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165\u5df2\u7ecf\u5b89\u88c5\u597d\u7684 Python \u6a21\u5757\uff0c\u5bfc\u5165\u540e Python \u7528\u6237\u5c31\u53ef\u4ee5\u4f7f\u7528\u6a21\u5757\u540d\u6765\u5f15\u7528\u6a21\u5757\u63d0\u4f9b\u7684\u51fd\u6570\u3001\u53c2\u6570\u7b49\u7b49\u3002\u8fd9\u91cc\u5229\u7528 sys \u548c math \u53d8\u91cf\u540d\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e24\u4e2a\u6a21\u5757\u7684\u6240\u6709\u529f\u80fd\u3002 fact \u6a21\u5757\u4f7f\u7528\u4e86 sys \u6a21\u5757\u7684 argv \u503c\u4ee5\u53ca math \u6a21\u5757\u4e2d\u7684 factorial() \u51fd\u6570\u3002argv \u53d8\u91cf\u7528 list \u7684\u5f62\u5f0f\u5b58\u50a8\u4e86 Python \u547d\u4ee4\u884c\u7684\u6240\u6709\u53c2\u6570\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u6c38\u8fdc\u662f\u88ab\u8fd0\u884c Python \u6587\u4ef6\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u8fd9\u91cc\u5373\u662f fact.py\uff0c\u7b2c\u4e8c\u4e2a\u662f\u9700\u8981\u6a21\u5757\u4f7f\u7528\u8005\u8f93\u5165\u7684\u6570\u5b57\u3002 \u5728\u5b9e\u9645\u8fd0\u884c fact \u6a21\u5757\u524d\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b\u6700\u540e\u4e24\u884c\u4ee3\u7801\u7684\u542b\u4e49\u3002 if __name__=='__main__': fact() \u5f53\u4f7f\u7528\u547d\u4ee4\u884c\u8fd0\u884c fact \u6a21\u5757\u65f6\uff0cPython \u89e3\u91ca\u5668\u4f1a\u5c06\u7279\u6b8a\u53d8\u91cf __name__ \u53d8\u4e3a __main__\uff0c\u4f46\u5982\u679c\u5728\u5176\u4ed6\u5730\u65b9\u5bfc\u5165 fact \u6a21\u5757\uff0c\u8be5\u5224\u65ad\u8bed\u53e5\u5c06\u5931\u6548\u3002\u8fd9\u79cd\u64cd\u4f5c\u65b9\u4fbf\u6211\u4eec\u901a\u8fc7\u547d\u4ee4\u884c\u6d4b\u8bd5\u4ee3\u7801\uff0c\u4f46\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528 import \u5bfc\u5165\u8be5\u6a21\u5757\u4e5f\u4f9d\u7136\u6709\u6548\u3002 \u901a\u8fc7\u547d\u4ee4\u884c\u8fd0\u884c\u4ee3\u7801\u9700\u8981\u6253\u5f00\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ec8\u7aef\uff0c\u5e76\u5c06\u5176\u5207\u6362\u5230 fib.py \u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u3002\u4e0b\u9762\u7f8e\u5143\u7b26\u53f7\u662f\u7ec8\u7aef\u63d0\u793a\u7b26\uff0c\u8bfb\u8005\u65e0\u9700\u7406\u4f1a\u3002 $ python3 fib.py \u8bf7\u91cd\u65b0\u8fd0\u884c\u5e76\u8f93\u5165\u4e00\u4e2a\u6570\u5b57\u3002 $ python3 fib.py 3 6 IPython \u63d0\u4f9b\u4e86\u66f4\u4fbf\u6377\u7684\u65b9\u5f0f\u8fd0\u884c .py \u6587\u4ef6\uff08\u8fd9\u4e9b\u65b9\u5f0f\u5728 IPython Shell\u3001Jupyter Notebook \u4ee5\u53ca nteract \u8f6f\u4ef6\u4e2d\u64cd\u4f5c\u662f\u4e00\u81f4\u7684\uff09\uff0c\u4e00\u79cd\u65b9\u5f0f\u4e0e\u547d\u4ee4\u884c\u8fd0\u884c\u7c7b\u4f3c\uff0c\u5728\u547d\u4ee4\u524d\u52a0\u4e00\u4e2a\u82f1\u6587\u611f\u53f9\u53f7\uff0c\u8fd9\u6837 IPython \u4f1a\u5c06\u5176\u81ea\u52a8\u89e3\u6790\u4e3a\u7cfb\u7edf\u547d\u4ee4\u8fd0\u884c\u3002 In [49]: !python3 fib.py 3 6 IPython \u8fd8\u63d0\u4f9b\u4e86\u9b54\u672f\u547d\u4ee4 %run \u8fd0\u884c\u6a21\u5757\u6587\u4ef6\uff0c\u66f4\u591a\u9b54\u672f\u547d\u4ee4\u8bf7\u5728 IPython \u4e2d\u8f93\u5165 %magic \u9605\u8bfb\u4e0e\u5b66\u4e60\u3002 In [50]: %run fib.py 3 6 In [51]: %run fib.py 5 120 5.3.3 \u6a21\u5757\u7684\u4f5c\u7528\u57df \u00b6 \u524d\u9762\u672c\u4e66\u4ecb\u7ecd\u8fc7\u51fd\u6570\u7684\u4f5c\u7528\u57df\uff0c\u6a21\u5757\u4e5f\u6709\u5176\u4f5c\u7528\u57df\u3002\u5728\u4e00\u4e2a\u6a21\u5757\u4e2d\uff0c\u8bfb\u8005\u53ef\u4ee5\u5b9a\u4e49\u5f88\u591a\u51fd\u6570\u548c\u53d8\u91cf\uff0c\u4f46\u6709\u7684\u51fd\u6570\u548c\u53d8\u91cf\u6211\u4eec\u5e0c\u671b\u7ed9\u522b\u4eba\u4f7f\u7528\uff0c\u6709\u7684\u51fd\u6570\u548c\u53d8\u91cf\u5e0c\u671b\u4ec5\u4ec5\u5728\u6a21\u5757\u5185\u90e8\u4f7f\u7528\u3002 \u5728 Python\u4e2d\uff0c\u6a21\u5757\u7684\u4f5c\u7528\u57df\u662f\u901a\u8fc7\u7b26\u53f7\u524d\u7f00 _ \u6765\u5b9e\u73b0\u7684\u3002\u6b63\u5e38\u7684\u51fd\u6570\u548c\u53d8\u91cf\u540d\u662f\u516c\u5f00\u7684\uff0c\u53ef\u4ee5\u88ab\u76f4\u63a5\u5f15\u7528\uff0c\u5982 abc\u3001weight123\u3002\u800c\u7c7b\u4f3c __xxx__ \u8fd9\u6837\u7684\u53d8\u91cf\u662f\u7279\u6b8a\u53d8\u91cf\uff0c\u5b83\u4eec\u867d\u7136\u4e5f\u53ef\u4ee5\u88ab\u76f4\u63a5\u5f15\u7528\uff0c\u4f46\u662f\u6709\u4e9b\u7279\u6b8a\u7528\u9014\uff0c\u4f8b\u5982\u4e0a\u9762\u7684\u9636\u4e58\u6a21\u5757\u4ee3\u7801\u4e2d\uff0c__author__\u3001__name__ \u5c31\u662f\u7279\u6b8a\u53d8\u91cf\uff0c\u53e6\u5916\u6a21\u5757\u5b9a\u4e49\u7684\u6587\u6863\u6ce8\u91ca\u4e5f\u53ef\u4ee5\u7528\u7279\u6b8a\u53d8\u91cf __doc__ \u8bbf\u95ee\u3002\u975e\u516c\u5f00\uff08\u6216\u79f0\u79c1\u6709\uff09\u7684\u51fd\u6570\u540d\u6216\u53d8\u91cf\u540d\u7c7b\u4f3c _xxx \u548c __xxx\uff0c\u5b83\u4eec\u4e0d\u5e94\u8be5\u88ab\u76f4\u63a5\u5f15\u7528\uff08\u800c\u975e\u4e0d\u80fd\uff09\uff0c\u5982 _abc\uff0c__abc\u3002 \u5728\u6a21\u5757\u7684\u903b\u8f91\u4e2d\uff0c\u5b83\u4f1a\u5c06\u79c1\u6709\u51fd\u6570\u6216\u53d8\u91cf\u9690\u85cf\u8d77\u6765\uff0c\u8fd9\u6837\u53ef\u4ee5\u5b9e\u73b0\u66f4\u9ad8\u5c42\u7ea7\u7684\u4ee3\u7801\u5c01\u88c5\u548c\u62bd\u8c61\u3002\u4f8b\u5982\uff0c\u67d0\u4e2a\u6a21\u5757\u53ea\u5b9e\u73b0\u4e00\u4e2a\u529f\u80fd\u51fd\u6570\uff0c\u4f46\u56e0\u4e3a\u5b9e\u73b0\u4ee3\u7801\u590d\u6742\uff0c\u4f5c\u8005\u5199\u4e86\u5f88\u591a\u7684\u51fd\u6570\u7ec4\u5408\u5b9e\u73b0\u5404\u4e2a\u7ec6\u8282\u90e8\u5206\uff0c\u4f7f\u7528\u4e00\u4e2a\u4e3b\u51fd\u6570\u8c03\u7528\uff0c\u56e0\u800c\u4f5c\u8005\u53ea\u60f3\u63d0\u4f9b\u4e3b\u51fd\u6570\u4f5c\u4e3a\u516c\u5f00\u51fd\u6570\uff0c\u5176\u4ed6\u7684\u51fd\u6570\u5bf9\u7528\u6237\u4e0d\u53ef\u89c1\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f7f\u7528\u79c1\u6709\u51fd\u6570\u5bf9\u7528\u6237\u4e5f\u662f\u6709\u597d\u5904\u7684\uff0c\u7528\u6237\u53ea\u9700\u8981\u5173\u6ce8\u5b9e\u73b0\u529f\u80fd\u7684\u4e3b\u51fd\u6570\uff0c\u5176\u4e2d\u7684\u5185\u90e8\u903b\u8f91\u65e0\u9700\u4e86\u89e3\uff0c\u79c1\u6709\u51fd\u6570\u90fd\u5176\u516c\u5f00\u53cd\u800c\u662f\u4e00\u79cd\u5e72\u6270\u3002 \u56e0\u6b64\uff0c\u5728\u7f16\u5199\u6a21\u5757\u65f6\uff0c\u8bfb\u8005\u4e0d\u9700\u8981\u4f7f\u7528\u7684\u51fd\u6570\u6216\u53d8\u91cf\u5168\u90e8\u5b9a\u4e49\u4e3a\u79c1\u6709\u51fd\u6570\u6216\u79c1\u6709\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\u7684\u51fd\u6570\u6216\u53d8\u91cf\u5219\u5b9a\u4e49\u4e3a\u516c\u5f00\u51fd\u6570\u6216\u79c1\u6709\u53d8\u91cf\u3002 5.3.4 \u4e09\u65b9\u6a21\u5757\u7684\u5b89\u88c5 \u00b6 Python \u672c\u8eab\u5185\u7f6e\u4e86\u975e\u5e38\u591a\u7684\u6a21\u5757\uff08\u7ea6 200 \u4e2a\uff09\uff0c\u6db5\u76d6\u4e86\u4f17\u591a\u7684\u529f\u80fd\u9700\u6c42\uff0c\u5b89\u88c5 Python \u540e\u5c31\u53ef\u4ee5\u7acb\u523b\u4f7f\u7528\uff0c\u5982 sys \u6a21\u5757\u5305\u542b\u7cfb\u7edf\u76f8\u5173\u7684\u53c2\u6570\u4e0e\u51fd\u6570\u3001builtins \u6a21\u5757\u5305\u542b\u5185\u7f6e\u5bf9\u8c61\u3001os \u6a21\u5757\u5305\u542b\u591a\u65b9\u9762\u7684\u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3\u3001math \u6a21\u5757\u63d0\u4f9b\u4e86\u6570\u5b66\u5904\u7406\u51fd\u6570\u3002 \u5f53\u5185\u7f6e\u6a21\u5757\u4e0d\u80fd\u6ee1\u8db3\u9700\u6c42\u65f6\uff0c\u5982\u679c\u60f3\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u4ee3\u7801\u5e76\u4e0d\u590d\u6742\uff0c\u8bfb\u8005\u53ef\u4ee5\u5148\u5c1d\u8bd5\u81ea\u5df1\u7f16\u5199\u4ee3\u7801\u89e3\u51b3\u3002\u5982\u679c\u60f3\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u592a\u8fc7\u590d\u6742\uff0c\u8d85\u8fc7\u81ea\u8eab\u7684\u80fd\u529b\uff0c\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u641c\u7d22\u5b9e\u73b0\u76f8\u5173\u529f\u80fd\u7684\u4e09\u65b9\u6a21\u5757\u3002PyPI\uff08Python Package Index\uff09\u662f Python \u7684\u8f6f\u4ef6\u4ed3\u5e93\uff0c\u5b83\u76ee\u524d\u63d0\u4f9b\u4e86\u63a5\u8fd1 16 \u4e07\u4e2a Python \u8f6f\u4ef6\u5305\uff0c\u6db5\u76d6\u4e92\u8054\u7f51\u4e16\u754c\u7684\u5404\u4e2a\u9886\u57df\u3002Anaconda \u662f Python \u5e38\u7528\u8ba1\u7b97\u5305\u7684\u8f6f\u4ef6\u4ed3\u5e93\uff0c\u5b83\u76ee\u524d\u63d0\u4f9b\u4e86\u8fd1 2000 \u4e2a\u8ba1\u7b97\u8f6f\u4ef6\u5305\uff0c\u6db5\u76d6\u4e86\u6570\u636e\u5206\u6790\u9886\u57df\u5404\u4e2a\u65b9\u9762\u3002 PyPI \u548c Anaconda \u63d0\u4f9b\u7684\u8f6f\u4ef6\u5305\u5206\u522b\u53ef\u4ee5\u901a\u8fc7 pip \u5de5\u5177\u548c conda \u5de5\u5177\u8fdb\u884c\u5b89\u88c5\uff0c\u5b83\u4eec\u5177\u6709\u6781\u4e3a\u76f8\u4f3c\u7684\u8bed\u6cd5\uff0c\u7b80\u5355\u6613\u4e0a\u624b\u3002 \u56e0\u4e3a\u672c\u4e66\u7684\u5b66\u4e60\u662f\u57fa\u4e8e Anaconda \u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ecb\u7ecd conda \u5de5\u5177\u7684\u4f7f\u7528\u3002 conda \u5de5\u5177\u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5728\u7ec8\u7aef\u547d\u4ee4\u884c\u4e2d\u4f7f\u7528 \u2013help \u9009\u9879\u53ef\u4ee5\u5217\u51fa\u6240\u6709 conda \u652f\u6301\u7684\u547d\u4ee4\u4ee5\u53ca\u5b83\u4eec\u7684\u89e3\u91ca\u3002 $ conda --help usage: conda [-h] [-V] command ... conda is a tool for managing and deploying applications, environments and packages. Options: positional arguments: command clean Remove unused packages and caches. config Modify configuration values in .condarc. This is modeled after the git config command. Writes to the user .condarc file (/Users/wsx/.condarc) by default. create Create a new conda environment from a list of specified packages. help Displays a list of available conda commands and their help strings. info Display information about current conda install. install Installs a list of packages into a specified conda environment. list List linked packages in a conda environment. package Low-level conda package utility. (EXPERIMENTAL) remove Remove a list of packages from a specified conda environment. uninstall Alias for conda remove. See conda remove --help. search Search for packages and display associated information. The input is a MatchSpec, a query language for conda packages. See examples below. update Updates conda packages to the latest compatible version. This command accepts a list of package names and updates them to the latest versions that are compatible with all other packages in the environment. Conda attempts to install the newest versions of the requested packages. To accomplish this, it may update some packages that are already installed, or install additional packages. To prevent existing packages from updating, use the --no-update-deps option. This may force conda to install older versions of the requested packages, and it does not prevent additional dependency packages from being installed. If you wish to skip dependency checking altogether, use the '--force' option. This may result in an environment with incompatible packages, so this option must be used with great caution. upgrade Alias for conda update. See conda update --help. optional arguments: -h, --help Show this help message and exit. -V, --version Show the conda version number and exit. \u5982\u679c\u662f\u5728 IPython \u73af\u5883\u4e2d\uff0c\u8bfb\u8005\u4f7f\u7528 !conda \u2013help \u4e5f\u53ef\u4ee5\u8fd4\u56de\u4e0e\u4e0a\u8ff0\u4e00\u81f4\u7684\u7ed3\u679c\u3002 \u5e38\u7528\u7684\u64cd\u4f5c\u662f\u641c\u7d22\u3001\u5b89\u88c5\u4ee5\u53ca\u5220\u9664\uff08\u5378\u8f7d\uff09\u5305\uff0c\u5206\u522b\u5bf9\u5e94 search\u3001install \u548c remove \u5b50\u547d\u4ee4\u3002 \u4e0b\u9762\u662f\u641c\u7d22 ipython \u5305\u7684\u4f8b\u5b50\u3002 $ conda search ipython Loading channels: done # Name Version Build Channel ipython 0.13 py26_0 pkgs/free ipython 0.13 py27_0 pkgs/free ipython 0.13.1 py26_0 pkgs/free ipython 0.13.1 py26_1 pkgs/free ipython 0.13.1 py27_0 pkgs/free ipython 0.13.1 py27_1 pkgs/free ipython 0.13.1 py33_0 pkgs/free ipython 0.13.1 py33_1 pkgs/free ipython 0.13.2 py26_0 pkgs/free ipython 0.13.2 py27_0 pkgs/free ipython 0.13.2 py33_0 pkgs/free ipython 1.0.0 py26_0 pkgs/free ipython 1.0.0 py27_0 pkgs/free ipython 1.0.0 py33_0 pkgs/free ... \u6b64\u5904\u7701\u7565\u82e5\u5e72\u884c \u4e0a\u8ff0\u7ed3\u679c\u4e2d\u53ef\u4ee5\u770b\u5230\u5b58\u5728\u4e0d\u540c\u7684 Python \u7248\u672c\u548c\u5305\u7248\u672c\uff0c\u6240\u4ee5\u8bfb\u8005\u5b89\u88c5\u65f6\u9700\u8981\u6ce8\u610f\u81ea\u5df1\u4f7f\u7528\u7684 Python \u7248\u672c\u4ee5\u53ca\u60f3\u8981\u5b89\u88c5\u7684\u5305\u7248\u672c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cconda \u4f1a\u6839\u636e\u7528\u6237\u7684 Python \u7248\u672c\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684\u5305\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7b49\u53f7\u8fdb\u884c\u7248\u672c\u6307\u5b9a\u3002 $ conda install ipython # conda \u81ea\u52a8\u5b89\u88c5ipython\u5305\u7684\u6700\u65b0\u7248\u672c $ conda install ipython=0.13 # conda \u5b89\u88c5ipython\u5305\uff0c\u8fd9\u91cc\u6307\u5b9a\u7248\u672c\u4e3a0.13 \u4e3a\u4e86\u68c0\u6d4b\u662f\u5426\u5305\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\uff0c\u53ef\u4ee5\u5728 IPython \u4e2d\u7528 import \u8bed\u53e5\u5bfc\u5165\u5305\uff0c\u5982\u679c\u6ca1\u6709\u62a5\u9519\uff0c\u5219\u5b89\u88c5\u6210\u529f\u3002 5.3.5 \u6a21\u5757\u7684\u4f7f\u7528 \u00b6 \u672c\u4e66\u5728\u524d\u9762\u4ecb\u7ecd\u7684\u7ae0\u8282\u4e2d\u5df2\u7ecf\u5728\u4e0d\u65f6\u5730\u4f7f\u7528\u7740\u6a21\u5757\uff0cPython \u901a\u8fc7 import \u5173\u952e\u5b57\u53ef\u4ee5\u5bfc\u5165\u6a21\u5757\uff0c\u7136\u540e\u4f7f\u7528\u5b83\u3002\u672c\u5c0f\u8282\u65e8\u5728\u66f4\u52a0\u8be6\u7ec6\u5730\u4ecb\u7ecd\u5bfc\u5165\u6a21\u5757\u7684\u65b9\u6cd5\u4ee5\u53ca\u7b80\u4ecb\u6a21\u5757\u641c\u7d22\u8def\u5f84\u7684\u77e5\u8bc6\u3002 \u5f53\u5b58\u5728\u591a\u4e2a\u6a21\u5757\u9700\u8981\u5bfc\u5165\u4f7f\u7528\u65f6\uff0c\u8bfb\u8005\u53ea\u9700\u8981\u7528\u82f1\u6587\u9017\u53f7\u5c06\u6a21\u5757\u540d\u5206\u5272\u5373\u53ef\u3002\u4f8b\u5982\u4e0b\u9762\u5bfc\u5165 3 \u4e2a\u6a21\u5757\uff1a import sys, os, time \u4e0d\u8fc7\uff0cPython \u98ce\u683c\u6307\u5357\u5efa\u8bae\u5c06\u6bcf\u4e2a\u5bfc\u5165\u8bed\u53e5\u5355\u72ec\u4e00\u884c\u4e66\u5199\u3002 import sys import os import time \u6709\u65f6\u6a21\u5757\u7684\u540d\u5b57\u8fc7\u957f\u6216\u8005\u4e0d\u597d\u7406\u89e3\uff0c\u6bcf\u6b21\u7f16\u5199\u663e\u5f97\u5f88\u9ebb\u70e6\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 as \u8bed\u53e5\u5c06\u6a21\u5757\u540d\u91cd\u547d\u540d\u3002 import sys as system \u73b0\u5728 sys \u6a21\u5757\u5c31\u6709\u4e86 system \u7684\u522b\u540d\u3002Python \u4e2d\u6709\u4e0d\u5c11\u5305\u90fd\u6709\u7740\u516c\u8ba4\u7684\u522b\u540d\uff0c\u5982 numpy \u5bfc\u5165\u4e3a np\u3002\u4f7f\u7528\u82f1\u6587\u53e5\u53f7\uff08\u6210\u5458\u64cd\u4f5c\u7b26\uff09\u53ef\u4ee5\u5bfc\u5165\u6307\u5b9a\u6a21\u5757\u7684\u5b50\u6a21\u5757\uff0cmatplotlib \u5305\u7684\u5b50\u6a21\u5757 pyplot \u5c31\u5e38\u88ab\u5bfc\u5165\u4e3a plt\u3002 import numpy as np import matplotlib.pyplot as plt \u6709\u65f6\u5019\u6211\u4eec\u4ec5\u60f3\u8981\u4f7f\u7528\u67d0\u4e2a\u6a21\u5757\u7279\u5b9a\u7684\u51fd\u6570\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 from \u8bed\u53e5\u8fdb\u884c\u5bfc\u5165\uff0c\u4f8b\u5982\u4ece math \u6a21\u5757\u4e2d\u5bfc\u5165\u9636\u4e58\u51fd\u6570 factorial()\u3002 from math import factorial \u8fd9\u6837\u8bfb\u8005\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 factorial() \u51fd\u6570\u4e86\u3002\u5982\u679c\u4f7f\u7528 import math \u7684\u65b9\u5f0f\uff0c\u8bfb\u8005\u5fc5\u987b\u901a\u8fc7 math.factorial() \u624d\u80fd\u8c03\u7528\u8be5\u51fd\u6570\u3002 \u5982\u679c\u60f3\u8981\u5bfc\u5165\u6a21\u5757\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u7528\u661f\u53f7\u7b26\u3002 from os import * \u8fd9\u6837\u5bfc\u5165\u7684\u597d\u5904\u662f\u8c03\u7528\u8d77\u6765\u65b9\u4fbf\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u6210\u5458\u64cd\u4f5c\u7b26\uff0c\u4f46\u5e26\u6765\u7684\u9ebb\u70e6\u66f4\u5927\uff0c\u5f53\u5bfc\u5165\u7684\u591a\u4e2a\u6a21\u5757\u5b58\u5728\u540c\u540d\u51fd\u6570\u6216\u53d8\u91cf\u65f6\uff0c\u8fd9\u6837 Python \u7684\u547d\u540d\u7a7a\u95f4\u5f88\u6df7\u4e71\uff0c\u4f60\u4e0d\u77e5\u9053\u4f60\u4f7f\u7528\u7684\u5230\u5e95\u662f\u54ea\u4e00\u4e2a\uff0c\u56e0\u6b64\u672c\u4e66\u4e0d\u63a8\u8350\u4f7f\u7528\u8be5\u65b9\u5f0f\u5bfc\u5165\u6a21\u5757\u51fd\u6570\u3002 \u4f7f\u7528\u6a21\u5757\u65f6\u8bfb\u8005\u9664\u4e86\u9700\u8981\u4e86\u89e3\u51e0\u79cd\u4e0d\u540c\u7684\u5bfc\u5165\u65b9\u5f0f\uff0c\u8fd8\u9700\u8981\u6ce8\u610f\u6a21\u5757\u7684\u641c\u7d22\u8def\u5f84\u3002 \u5f53 Python \u7528\u6237\u52a0\u8f7d\u6a21\u5757\u65f6\uff0cPython \u4f1a\u5728\u6307\u5b9a\u7684\u8def\u5f84\u4e0b\u641c\u7d22\u5bf9\u5e94\u7684 .py \u6587\u4ef6\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5c31\u4f1a\u62a5\u9519\uff1a In [1]: import somemodule --------------------------------------------------------------------------- ModuleNotFoundError Traceback (most recent call last) <ipython-input-1-b58142f7538b> in <module>() ----> 1 import somemodule ModuleNotFoundError: No module named 'somemodule' \u9ed8\u8ba4\u60c5\u51b5\u4e0b Python \u4f1a\u641c\u7d22 Python \u81ea\u8eab\u7684\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff08\u627e\u5230\u5b89\u88c5\u5305\u6240\u5728\u8def\u5f84\uff09\u4ee5\u53ca\u5f53\u524d\u76ee\u5f55\uff08\u7528\u6237\u53ef\u80fd\u81ea\u5df1\u521b\u5efa\u7684\u6a21\u5757\u8def\u5f84\uff09\u3002Python \u7684\u641c\u7d22\u8def\u5f84\u53ef\u4ee5\u901a\u8fc7 sys \u6a21\u5757\u7684 path \u53d8\u91cf\u83b7\u53d6\uff0c\u5982\u4e0b\u6240\u793a\uff1a In [2]: import sys In [3]: sys.path Out[3]: ['', '/home/zd/anaconda3/bin', '/home/zd/anaconda3/lib/python37.zip', '/home/zd/anaconda3/lib/python3.7', '/home/zd/anaconda3/lib/python3.7/lib-dynload', '/home/zd/anaconda3/lib/python3.7/site-packages', '/home/zd/anaconda3/lib/python3.7/site-packages/IPython/extensions', '/home/zd/.ipython'] \u6709\u4e24\u79cd\u529e\u6cd5\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u641c\u7d22\u8def\u5f84\uff1a\u4e00\u79cd\u662f\u4fee\u6539\u4e0a\u9762\u6240\u89c1\u7684 sys.path \u53d8\u91cf\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7 append() \u65b9\u6cd5\u6dfb\u52a0\u8def\u5f84\uff08\u5b57\u7b26\u4e32\uff09\uff0c\u8be5\u64cd\u4f5c\u5728 Python \u9000\u51fa\u540e\u4f1a\u5931\u6548\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e00\u6b21\u8fdb\u5165 Python \u90fd\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e\uff1b\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf PYTHONPATH\uff0c\u8be5\u53d8\u91cf\u5185\u5bb9\u4f1a\u88ab\u81ea\u52a8\u52a0\u5165\u5230\u6a21\u5757\u641c\u7d22\u8def\u5f84\u4e2d\uff0c\u4e00\u65e6\u8bbe\u5b9a\uff0c\u6c38\u4e45\u6709\u6548\u3002\u4e0d\u8fc7\u8be5\u65b9\u6cd5\u9700\u8981\u8bfb\u8005\u638c\u63e1\u4e00\u5b9a\u7cfb\u7edf\u77e5\u8bc6\uff0c\u56e0\u6b64\u672c\u4e66\u4e0d\u4f5c\u8be6\u7ec6\u4ecb\u7ecd\u3002 5.4 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 \u51fd\u6570\u548c\u6a21\u5757\u662f Python \u7528\u6237\u5e38\u89c1\u7684\u64cd\u4f5c\u5bf9\u8c61\uff0c\u56e0\u6b64\u719f\u7ec3\u5730\u638c\u63e1\u5982\u4f55\u4f7f\u7528\u548c\u521b\u5efa\u51fd\u6570\u3001\u4f7f\u7528\u6a21\u5757\u6781\u4e3a\u91cd\u8981\u3002\u672c\u7ae0\u4ece\u51fd\u6570\u7684\u4f7f\u7528\u3001\u521b\u5efa\u3001\u53c2\u6570\u8bbe\u5b9a\uff0c\u6a21\u5757\u7684\u5b89\u88c5\u3001\u5bfc\u5165\u4e0e\u521b\u5efa\u4ee5\u53ca\u76f8\u5173\u6ce8\u610f\u4e8b\u9879\u65b9\u9762\u90fd\u4f5c\u4e86\u8be6\u5c3d\u7684\u4ecb\u7ecd\uff0c\u8bfb\u8005\u5728\u5b9e\u9645\u7684\u64cd\u4f5c\u4e2d\u9700\u8981\u591a\u52a0\u7ec3\u4e60\u3002\u5173\u4e8e\u7f16\u5199\u51fd\u6570\u4e0e\u6a21\u5757\u6709\u4e24\u6761\u6ce8\u610f\u4e8b\u9879\uff1a\u4e00\u4e2a\u597d\u7684\u51fd\u6570\u4e00\u822c\u6765\u8bf4\u8c03\u7528\u8005\uff08\u7528\u6237\uff09\u9700\u8981\u8bbe\u5b9a\u7684\u53c2\u6570\u6570\u76ee\u5f88\u5c11\uff0c\u56e0\u6b64\u8bfb\u8005\u5728\u7f16\u5199\u65f6\u9700\u8981\u5408\u9002\u8bbe\u7f6e\u4e00\u4e9b\u9ed8\u8ba4\u53c2\u6570\uff1b\u521b\u5efa\u6a21\u5757\u65f6\u540d\u5b57\u4e0d\u80fd\u548c Python \u81ea\u5e26\u7684\u6a21\u5757\u540d\u79f0\u4e00\u6837\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002","title":"\u7b2c 5 \u7ae0 \u51fd\u6570\u4e0e\u6a21\u5757"},{"location":"05-function-and-module/#5","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a \u4e3a\u4ec0\u4e48\u4f7f\u7528\u51fd\u6570 \u51fd\u6570\u7684\u521b\u5efa\u4e0e\u4f7f\u7528 \u51fd\u6570\u7684\u53c2\u6570 \u6a21\u5757\u4e0e\u5305 \u7b2c\u4e09\u65b9\u6a21\u5757\u7684\u4e0b\u8f7d\u4e0e\u4f7f\u7528 \u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u672c\u4e66\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528\u63a7\u5236\u4e0e\u5faa\u73af\u7ed3\u6784\u6765\u81ea\u52a8\u5316\u53cd\u590d\u8fdb\u884c\u7684\u64cd\u4f5c\u3002\u5c3d\u7ba1\u5229\u7528\u8fd9\u4e9b\u63a7\u5236\u6d41\u64cd\u4f5c\u53ef\u4ee5\u6781\u5927\u7b80\u5316\u4e00\u4e9b\u5904\u7406\u4efb\u52a1\uff0c\u4f46\u9488\u5bf9\u4e00\u4e9b\u65e5\u5e38\u7684\u5de5\u4f5c\u4efb\u52a1\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u9891\u7e41\u5730\u62f7\u8d1d\u5927\u6bb5\u7684\u4ee3\u7801\uff0c\u8fdb\u884c\u4fee\u6539\u3002\u8fd9\u79cd\u7b80\u5316\u7684\u529b\u5ea6\u4ecd\u663e\u4e0d\u591f\uff0c\u800c\u4e14\u6781\u5bb9\u6613\u51fa\u9519\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u65b0\u7684\u5de5\u5177\u6765\u63d0\u5347\u7a0b\u5e8f\u7f16\u5199\u7684\u6548\u7387\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u521b\u5efa\u51fd\u6570\u6216\u8005\u4f7f\u7528\u6807\u51c6\u6a21\u5757/\u4e09\u65b9\u6a21\u5757\u4e2d\u63d0\u4f9b\u7684\u7b80\u4fbf\u51fd\u6570\u3002\u672c\u7ae0\u5c06\u5411\u8bfb\u8005\u8be6\u5c3d\u5730\u4ecb\u7ecd\u5982\u4f55\u521b\u5efa\u51fd\u6570\u548c\u8bbe\u5b9a\u51fd\u6570\u53c2\u6570\uff0c\u4ee5\u53ca\u4f7f\u7528\u7b2c\u4e09\u65b9\u6a21\u5757\u3002","title":"\u7b2c 5 \u7ae0 \u51fd\u6570\u4e0e\u6a21\u5757"},{"location":"05-function-and-module/#51","text":"","title":"5.1 \u51fd\u6570"},{"location":"05-function-and-module/#511","text":"\u5728\u7b2c 2 \u7ae0\u4e2d\uff0c\u672c\u4e66\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u4f7f\u7528\u8eab\u9ad8\u548c\u4f53\u91cd\u503c\u4fbf\u53ef\u4ee5\u8ba1\u7b97\u51fa BMI \u6307\u6570\u3002\u5047\u8bbe\u8bfb\u8005\u73b0\u5728\u9700\u8981\u8ba1\u7b97 3 \u4e2a\u4eba\u7684 BMI \u6307\u6570\uff0c\u4e8e\u662f\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\uff1a # \u7528 w \u8868\u793a\u4f53\u91cd\uff0ch \u8868\u793a\u8eab\u9ad8 w1 = 70.2 w2 = 60.6 w3 = 54.3 h1 = 1.90 h2 = 1.73 h3 = 1.65 BMI_1 = w1 / h1 ** 2 BMI_2 = w2 / h2 ** 2 BMI_3 = w3 / h3 ** 2 \u6b64\u5904\u4ee3\u7801\u4e2d\u51fa\u73b0\u4e86\u89c4\u5f8b\u7684\u91cd\u590d\u3002\u8bfb\u8005\u53ef\u4ee5\u9996\u5148\u601d\u8003\u4e0b\u7528\u5faa\u73af\u7684\u65b9\u5f0f\u8fdb\u884c\u4f18\u5316\uff1a\u5c06\u4f53\u91cd\u6570\u636e\u4e0e\u8eab\u9ad8\u6570\u636e\u5206\u522b\u5b58\u50a8\u5728\u5217\u8868\u4e2d\uff0c\u7136\u540e\u4f7f\u7528 for \u5faa\u73af\u904d\u5386\u5e76\u8ba1\u7b97 BMI \u6307\u6570\u3002\u7136\u800c\u8fd9\u79cd\u4f18\u5316\u65b9\u5f0f\u6709\u4e24\u4e2a\u95ee\u9898\uff0c\u4e00\u662f\u4ee3\u7801\u7684\u8f93\u5165\u91cf\u5e76\u6ca1\u6709\u51cf\u8f7b\uff0c\u4e8c\u662f\u5982\u679c\u63a5\u4e0b\u6765\u8981\u8ba1\u7b97\u53e6\u4e00\u4e2a\u4eba\u7684 BMI \u6307\u6570\uff0c\u8fd8\u9700\u8981\u91cd\u65b0\u521b\u5efa\u8f93\u5165\u5217\u8868\u3002 \u51fd\u6570\u662f\u6700\u57fa\u672c\u7684\u4ee3\u7801\u62bd\u8c61\u65b9\u5f0f\uff0c\u501f\u52a9\u51fd\u6570\uff0c\u8bfb\u8005\u53ef\u4ee5\u4e0d\u7528\u5173\u6ce8\u5e95\u5c42\u7684\u5177\u4f53\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u800c\u4ece\u66f4\u9ad8\u5c42\u6b21\u5bf9\u95ee\u9898\u8fdb\u884c\u601d\u8003\u3002\u8bfb\u8005\u5982\u679c\u5c06\u6838\u5fc3\u7684\u8ba1\u7b97\u6b65\u9aa4\u62bd\u8c61\u4e3a\u51fd\u6570\u8868\u793a\uff0c\u5c06\u6781\u5927\u5730\u7b80\u5316\u4e0a\u8ff0\u95ee\u9898\u7684\u5904\u7406\u3002 \u4f8b\u5982\uff0c\u6b65\u9aa4 BMI = w / h**2 \u5199\u4e3a\u66f4\u6709\u610f\u4e49\u7684\u51fd\u6570 calcBMI()\uff0c\u6bcf\u6b21\u8c03\u7528 calcBMI(w, h) \u5c31\u53ef\u4ee5\u8ba1\u7b97\u4e00\u6b21 BMI \u6307\u6570\uff0c\u800c\u4e14\u51fd\u6570\u672c\u8eab\u53ea\u9700\u8981\u5199\u4e00\u6b21\u5c31\u53ef\u4ee5\u591a\u6b21\u8c03\u7528\u3002 \u51e0\u4e4e\u6240\u6709\u7684\u7f16\u7a0b\u8bed\u8a00\u90fd\u652f\u6301\u51fd\u6570\uff0cPython \u5f53\u7136\u4e5f\u4e0d\u4f8b\u5916\uff0c\u8bfb\u8005\u5728\u524d\u9762\u7ae0\u8282\u4e2d\u5176\u5b9e\u4e5f\u5df2\u7ecf\u591a\u6b21\u89c1\u8fc7\u51fd\u6570\u7684\u4f7f\u7528\u3002Python \u4e0d\u4f46\u80fd\u975e\u5e38\u7075\u6d3b\u5730\u521b\u5efa\u51fd\u6570\uff0c\u800c\u4e14\u672c\u8eab\u5185\u7f6e\u5f88\u591a\u53ef\u7528\u7684\u51fd\u6570\uff0c\u5f00\u7bb1\u5373\u7528\u3002","title":"5.1.1  \u4e3a\u4ec0\u4e48\u4f7f\u7528\u51fd\u6570"},{"location":"05-function-and-module/#512","text":"Python \u5185\u7f6e\u7684\u51fd\u6570\u65e0\u9700\u8fdb\u884c\u5bfc\u5165\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u77e5\u9053\u51fd\u6570\u7684\u540d\u79f0\u548c\u53c2\u6570\uff0c\u8bfb\u8005\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u8c03\u7528\u3002\u4f8b\u5982\uff0cabs() \u51fd\u6570\u53ef\u4ee5\u6c42\u53d6\u7edd\u5bf9\u503c\uff0c\u5b83\u53ea\u9700\u8981\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\u3002\u8bfb\u8005\u53ef\u4ee5\u8f93\u5165 help(\u51fd\u6570\u540d) \u6216\u8005 \u51fd\u6570\u540d? \u67e5\u770b\u51fd\u6570\u7684\u6587\u6863\uff0c\u4ee5\u4e0b\u7528 abs() \u51fd\u6570\u8fdb\u884c\u6f14\u793a\u3002 In [1]: help(abs) In [2]: abs? Signature: abs(x, /) Docstring: Return the absolute value of the argument. Type: builtin_function_or_method \u8bfb\u8005\u5c06\u9700\u8981\u8fdb\u884c\u7edd\u5bf9\u503c\u5904\u7406\u7684\u6570\u503c\u4f5c\u4e3a\u53c2\u6570\u8f93\u5165 abs() \u51fd\u6570\u5373\u53ef\u5b9e\u73b0\u8c03\u7528\u3002 In [3]: abs(-1) Out[3]: 1 In [4]: abs(1) Out[4]: 1 \u8bfb\u8005\u5728\u8fdb\u884c\u51fd\u6570\u8c03\u7528\u65f6\u9700\u8981\u6ce8\u610f\u8f93\u5165\u53c2\u6570\u7684\u6570\u76ee\u548c\u7c7b\u578b\uff0c\u5982\u679c\u6570\u76ee\u6216\u7c7b\u578b\u4e0e\u51fd\u6570\u9884\u671f\u7684\u4e0d\u4e00\u81f4\uff0cPython \u4f1a\u629b\u51fa TypeError \u9519\u8bef\uff0c\u5e76\u7ed9\u51fa\u9519\u8bef\u4fe1\u606f\u3002 In [5]: abs('a') --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-5-f2001f88707b> in <module> ----> 1 abs('a') TypeError: bad operand type for abs(): 'str' In [6]: abs(1, 2) --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-6-6c188a838f2b> in <module> ----> 1 abs(1, 2) TypeError: abs() takes exactly one argument (2 given) \u6709\u4e9b\u51fd\u6570\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u591a\u4e2a\u6570\u76ee\u7684\u53c2\u6570\uff0c\u5982 max()\uff0c\u5b83\u53ef\u4ee5\u8fd4\u56de\u4e00\u7ec4\u6570\u7684\u6700\u5927\u503c\u3002 In [7]: max(2,1,3,4,5,2,3,10,2,4,5) Out[7]: 10 \u672c\u8d28\u4e0a\uff0c\u51fd\u6570\u540d\u5176\u5b9e\u662f\u6307\u5411\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u7684\u5f15\u7528\uff08\u5728 Python \u91cc\u4e00\u5207\u90fd\u662f\u5bf9\u8c61\uff0c\u53d8\u91cf\u90fd\u662f\u5bf9\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u65b9\u4fbf\u6211\u4eec\u4f7f\u7528\uff09\u3002\u6240\u4ee5\uff0c\u8bfb\u8005\u5b8c\u5168\u53ef\u4ee5\u628a\u51fd\u6570\u540d\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u8fd9\u76f8\u5f53\u4e8e\u7ed9\u51fd\u6570\u8d77\u4e86\u4e2a\u522b\u540d\uff0c\u6709\u65f6\u5019\u53ef\u4ee5\u7b80\u5316\u4f7f\u7528\u3002 In [8]: a = abs In [9]: a(-10) Out[9]: 10 \u5f53\u7136\uff0c\u8fd9\u91cc\u5c06 abs() \u51fd\u6570\u91cd\u547d\u540d\u4e3a a() \u662f\u4e0d\u53ef\u53d6\u7684\uff0c\u5b83\u964d\u4f4e\u4e86\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 \u4e00\u822c\u800c\u8a00\uff0cPython \u5185\u5efa\u7684 callable() \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u5224\u65ad\u51fd\u6570\u662f\u5426\u53ef\u8c03\u7528\u3002","title":"5.1.2 \u51fd\u6570\u7684\u8c03\u7528"},{"location":"05-function-and-module/#513","text":"\u6709\u65f6\u5019\uff0cPython \u5185\u7f6e\u7684\u51fd\u6570\u4ee5\u53ca\u4e09\u65b9\u6a21\u5757\u7684\u51fd\u6570\u4e0d\u80fd\u6ee1\u8db3\u5de5\u4f5c\u9700\u6c42\uff0c\u8bfb\u8005\u9700\u8981\u81ea\u5df1\u521b\u5efa\u51fd\u6570\uff0c\u56e0\u800c\u672c\u5c0f\u8282\u5c06\u6307\u5bfc\u8bfb\u8005\u5982\u4f55\u81ea\u5df1\u521b\u5efa\u51fd\u6570\u3002 Python\u4f7f\u7528 def \u5173\u952e\u5b57\u5bf9\u51fd\u6570\u8fdb\u884c\u5b9a\u4e49\uff1a\u5728 def \u8bed\u53e5\u540e\u4f9d\u6b21\u5199\u51fa\u51fd\u6570\u540d\u3001\u62ec\u53f7\u3001\u53c2\u6570\u4e0e\u82f1\u6587\u5192\u53f7\uff0c\u5e76\u5728\u968f\u540e\u7684\u4ee3\u7801\u5757\u4e2d\u7f16\u5199\u51fd\u6570\u4f53\uff0c\u5982\u679c\u60f3\u8981\u8fd4\u56de\u4e00\u4e9b\u7ed3\u679c\uff0c\u5219\u4f7f\u7528 return \u8bed\u53e5\u3002\u4e0b\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2a fib \u51fd\u6570\uff0c\u7528\u4e8e\u6253\u5370\u5230\u6307\u5b9a\u53c2\u6570\u4e3a\u6b62\u5f97\u5230\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002 In [10]: def fib(n): ...: \"\"\"\u6253\u5370\u6590\u6ce2\u90a3\u5951\u6570\u5217\u5230n\"\"\" ...: a, b = 0, 1 ...: while a < n: ...: print(a, end=' ') ...: a, b = b, a+b ...: print() In [11]: fib(10) # \u8c03\u7528\u51fd\u6570\uff0c\u6253\u5370 0 1 1 2 3 5 8 In [12]: fib(2000) 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 \u6839\u636e\u4e0a\u8ff0\u7684\u4ee3\u7801\uff0c\u73b0\u5728\u5bf9\u51fd\u6570\u7684\u521b\u5efa\u8fdb\u884c\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\uff1a\u5173\u952e\u5b57 def \u5f15\u5165\u4e86\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u5b83\u7684\u540e\u9762\u5fc5\u987b\u8ddf\u4e0a\u4e00\u4e2a\u51fd\u6570\u540d\u4ee5\u53ca\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u6b63\u5f0f\u53c2\u6570\u5217\u8868\u3002\u6784\u5efa\u51fd\u6570\u4f53\u7684\u4ee3\u7801\u8bed\u53e5\u4ece\u4e0b\u4e00\u884c\u5f00\u59cb\uff0c\u800c\u4e14\u5fc5\u987b\u6b63\u786e\u7f29\u8fdb\u3002\u51fd\u6570\u4f53\u7684\u7b2c\u4e00\u4e2a\u8bed\u53e5\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u5b57\u7b26\u4e32\u6587\u672c\uff0c\u5b83\u79f0\u4e3a\u51fd\u6570\u8bf4\u660e\u5b57\u7b26\u4e32\uff08docstring\uff09\u3002\u5728\u51fd\u6570\u4e2d\u5305\u542b docstring \u662f\u826f\u597d\u4ee3\u7801\u7684\u4f53\u73b0\uff0c\u8fd9\u6837\u522b\u4eba\u5728\u4f7f\u7528\u8be5\u51fd\u6570\u65f6\u80fd\u5f88\u5bb9\u6613\u7406\u89e3\u8be5\u51fd\u6570\u7684\u529f\u80fd\u53ca\u7528\u6cd5\u3002","title":"5.1.3 \u51fd\u6570\u7684\u521b\u5efa"},{"location":"05-function-and-module/#514","text":"\u6267\u884c\u51fd\u6570\u4f1a\u5f15\u5165\u65b0\u7684\u7b26\u53f7\u8868\uff0c\u5b83\u7528\u4e8e\u51fd\u6570\u6307\u5b9a\u7684\u5c40\u90e8\u53d8\u91cf\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u51fd\u6570\u672c\u8eab\u5f62\u6210\u4e86\u4e00\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u5373\u51fd\u6570\u4f5c\u7528\u57df\uff0c\u5b83\u5728\u5bfb\u627e\u53d8\u91cf\u503c\u65f6\u4f1a\u5148\u4ece\u51fd\u6570\u5185\u90e8\u5bfb\u627e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5b83\u4f1a\u5728\u51fd\u6570\u5916\u90e8\u5bfb\u627e\u3002\u5982\u679c\u5728\u51fd\u6570\u5916\u90e8\u90fd\u6ca1\u6709\u627e\u5230\uff0cPython \u5c31\u4f1a\u629b\u51fa\u9519\u8bef\u3002\u901a\u5e38\uff0c\u5f53\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u7684\u5b9e\u9645\u53c2\u6570\u503c\u5c31\u4f1a\u88ab\u5f15\u5165\u4e3a\u4e00\u4e2a\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u3002 \u4e3a\u4e86\u66f4\u597d\u5730\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\u5c40\u90e8\u53d8\u91cf\u7684\u6982\u5ff5\uff0c\u73b0\u5728\u5bf9 fib() \u51fd\u6570\u8fdb\u884c\u7b80\u5355\u7684\u4fee\u6539\u3002 def fib(n): \"\"\"\u6253\u5370\u6590\u6ce2\u90a3\u5951\u6570\u5217\u5230n\"\"\" print(\"n\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u7684\u503c\u662f\"+str(n)) # \u6253\u5370\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cfn a, b = 0, 1 while a < n: print(a, end=' ') a, b = b, a+b print() \u7136\u540e\u5bf9\u8be5\u51fd\u6570\u8fdb\u884c\u4ee5\u4e0b\u8c03\u7528\uff1a In [13]: c = 10 ...: fib(c) ...: ...: print(n) n\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u7684\u503c\u662f10 0 1 1 2 3 5 8 --------------------------------------------------------------------------- NameError Traceback (most recent call last) <ipython-input-13-9748ce91e137> in <module> 2 fib(c) 3 ----> 4 print(n) NameError: name 'n' is not defined \u8fd9\u91cc\u5728\u51fd\u6570\u5916\u521b\u5efa\u4e86\u4e00\u4e2a\u53d8\u91cf c\uff0c\u5b58\u50a8 fib() \u51fd\u6570\u5b9e\u9645\u8981\u4f20\u5165\u7684\u6570\u503c\uff0c\u7136\u540e\u8c03\u7528\u51fd\u6570\u3002\u5728\u51fd\u6570\u5b9a\u4e49\u90e8\u5206\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u53d8\u91cf n \u6765\u6307\u793a\u8f93\u5165\u53c2\u6570\uff0c\u56e0\u6b64\u51fd\u6570\u5185\u90e8\u521b\u5efa\u4e86\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf n \u6765\u6307\u793a\u5b9e\u9645\u4f20\u5165\u53d8\u91cf c \u7684\u503c\u3002\u4e0d\u8fc7 n \u7684\u4f5c\u7528\u8303\u56f4\u4ec5\u9650\u4e8e\u51fd\u6570\u5185\u90e8\uff0c\u8bfb\u8005\u5982\u679c\u5728\u51fd\u6570\u7684\u5916\u90e8\u4f7f\u7528\u8be5\u53d8\u91cf\uff0cPython \u4f1a\u629b\u51fa\u53d8\u91cf n \u672a\u5b9a\u4e49\u7684\u9519\u8bef\u3002 \u4e0a\u9762\u7684\u51fd\u6570\u8fd0\u884c\u6700\u540e\u662f\u5c06\u7ed3\u679c\u6253\u5370\u51fa\u6765\uff0c\u5927\u591a\u6570\u65f6\u5019\u6211\u4eec\u66f4\u5e0c\u671b\u5c06\u7ed3\u679c\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\uff0c\u8fd9\u65f6\u9700\u8981\u5229\u7528 return \u8bed\u53e5\u3002\u5b9e\u9645\u4e0a\uff0c\u5373\u4f7f\u7528\u6237\u6ca1\u6709\u663e\u5f0f\u5730\u5728\u51fd\u6570\u4e2d\u4f7f\u7528 return \u8bed\u53e5\u8fdb\u884c\u7ed3\u679c\u7684\u8fd4\u56de\uff0cPython \u4e5f\u4f1a\u8c03\u7528 return \u8bed\u53e5\u8fd4\u56de None \u503c\uff0c\u4e0d\u8fc7 None \u503c\u901a\u8fc7\u4f1a\u88ab Python \u89e3\u91ca\u5668\u6291\u5236\uff0c\u53ea\u6709\u4f7f\u7528 print \u8bed\u53e5\u624d\u80fd\u663e\u5f0f\u5730\u89c2\u6d4b\u5230\u5b83\u3002 In [14]: fib(0) n\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u7684\u503c\u662f0 In [15]: print(fib(0)) n\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u7684\u503c\u662f0 None # \u8fd9\u91cc\u662f\u51fd\u6570\u6700\u540e\u8fd4\u56de\u7684None\u503c","title":"5.1.4 \u51fd\u6570\u4f5c\u7528\u57df"},{"location":"05-function-and-module/#515","text":"\u51fd\u6570\u7684\u5b9e\u9645\u8c03\u7528\u5c31\u662f\u4e00\u884c\u8bed\u53e5\uff0c\u56e0\u6b64\u7528\u6237\u53ef\u4ee5\u5728\u51fd\u6570\u4e2d\u8c03\u7528\u4e0d\u540c\u7684\u51fd\u6570\uff0c\u53ea\u8981\u77e5\u9053\u5982\u4f55\u6b63\u786e\u5730\u4f20\u9012\u5404\u4e2a\u53c2\u6570\u4ee5\u53ca\u5904\u7406\u597d\u51fd\u6570\u8fd4\u56de\u7684\u7ed3\u679c\u3002\u8fd9\u79cd\u65b9\u5f0f\u5927\u5927\u7b80\u5316\u4e86\u4ee3\u7801\u9605\u8bfb\u7684\u590d\u6742\u6027\uff0c\u5404\u4e2a\u51fd\u6570\u81ea\u8eab\u7684\u8fd0\u884c\u903b\u8f91\u88ab\u5c01\u88c5\u5728\u5185\u90e8\uff0c\u4f7f\u7528\u8005\u53ea\u9700\u8981\u5173\u6ce8\u5982\u4f55\u5408\u7406\u5730\u8c03\u7528\u5b83\u4eec\u5904\u7406\u95ee\u9898\u3002\u5927\u591a\u6570\u60c5\u51b5\uff0c\u8bfb\u8005\u770b\u5230\u7684\u662f\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u5176\u4ed6\u51fd\u6570\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u51fd\u6570\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u81ea\u6211\u8c03\u7528\uff0c\u8fd9\u79cd\u51fd\u6570\u79f0\u4e3a\u9012\u5f52\u51fd\u6570\u3002\u56e0\u5176\u5177\u6709\u51fd\u6570\u5d4c\u5957\u4e0e\u81ea\u6211\u8c03\u7528\u7684\u7279\u70b9\uff0c\u8fd9\u4e00\u5c0f\u8282\u672c\u4e66\u7740\u91cd\u5bf9\u5176\u8fdb\u884c\u4ecb\u7ecd\u3002 \u4e00\u4e2a\u4ecb\u7ecd\u9012\u5f52\u51fd\u6570\u6700\u597d\u7684\u4f8b\u5b50\u5c31\u662f\u8ba1\u7b97\u9636\u4e58\u3002\u9636\u4e58\u7684\u76f8\u5173\u6982\u5ff5\u672c\u4e66\u5728\u4e0a\u4e00\u7ae0\u7684 continue \u8bed\u53e5\u90e8\u5206\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\u3002 \u9636\u4e58\u53ef\u4ee5\u76f4\u89c2\u5c55\u793a\u4e3a n! = 1 x 2 x 3 x \u2026 x n \u7684\u5f62\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u5c55\u793a\u4e3a\u9012\u5f52\u7684\u65b9\u5f0f n! = (n-1)! x n\uff0c\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u56fe5-1\u4e2d\u4e0d\u65ad\u5faa\u73af\u7684\u6367\u7740\u753b\u6846\u7684\u8499\u5a1c\u4e3d\u838e\u5bf9\u9012\u5f52\u8fdb\u884c\u76f4\u89c2\u5730\u7406\u89e3\u3002 \u6b64\u65f6\u5982\u679c\u4ee4\u51fd\u6570 factorial(n) \u4e3a n!\uff0c\u90a3\u4e48\u9012\u5f52\u7684\u51fd\u6570\u8868\u793a\u6cd5\u4e3a\uff1afactorial(n) = factorial(n-1) x n\u3002 \u73b0\u5728\u7528\u5b9e\u9645\u7684\u4ee3\u7801\u8868\u5f81\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u5e76\u5bf9\u7ed3\u679c\u8fdb\u884c\u6d4b\u8bd5\u3002 In [16]: def factorial(n): ...: if n == 1: ...: return 1 ...: else: ...: return n * factorial(n-1) In [17]: factorial(1) Out[17]: 1 In [18]: factorial(5) Out[18]: 120 In [19]: factorial(10) Out[19]: 3628800 factorial(5) \u7684\u8ba1\u7b97\u8fc7\u7a0b\u53ef\u4ee5\u8868\u793a\u5982\u4e0b\uff1a ===> factorial(5) ===> 5 * factorial(4) ===> 5 * (4 * factorial(3)) ===> 5 * (4 * (3 * factorial(2))) ===> 5 * (4 * (3 * (2 * factorial(1)))) ===> 5 * (4 * (3 * (2 * 1))) ===> 5 * (4 * (3 * 2)) ===> 5 * (4 * 6) ===> 5 * 24 ===> 120 \u76f8\u6bd4\u5bf9\u4f7f\u7528\u5faa\u73af\u8fdb\u884c\u9636\u4e58\u7684\u8fd0\u7b97\uff0c\u9012\u5f52\u5728\u903b\u8f91\u4e0a\u66f4\u52a0\u6e05\u6670\uff0c\u5b9a\u4e49\u66f4\u52a0\u7b80\u5355\uff0c\u4e0d\u8fc7\u8fd0\u7b97\u8fc7\u7a0b\u66f4\u4e3a\u62bd\u8c61\u3002\u7406\u8bba\u4e0a\uff0c\u6240\u6709\u7684\u9012\u5f52\u51fd\u6570\u90fd\u53ef\u4ee5\u5199\u6210\u5faa\u73af\u7684\u5f62\u5f0f\u3002\u5728\u4f7f\u7528\u9012\u5f52\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u5fc5\u987b\u6709\u4e00\u4e2a\u660e\u786e\u7684\u9012\u5f52\u7ed3\u675f\u6761\u4ef6\uff0c\u4ee5\u907f\u514d\u65e0\u9650\u8c03\u7528\u3002 \u9012\u5f52\u51fd\u6570\u7684\u6700\u5927\u95ee\u9898\u662f\u6548\u7387\u4f4e\uff0c\u5360\u7528\u4e86\u5927\u91cf\u7684\u5185\u5b58\u548c\u65f6\u95f4\uff0c\u5f53\u9012\u5f52\u6b21\u6570\u8fc7\u591a\u65f6\u5bb9\u6613\u53d1\u751f\u6808\u6ea2\u51fa\u3002\u53d1\u751f\u6808\u6ea2\u51fa\u7684\u539f\u56e0\u662f\uff0c\u5728\u8ba1\u7b97\u673a\u4e2d\u51fd\u6570\u7684\u8c03\u7528\u65f6\u901a\u8fc7\u5806\u6808\uff08stack\uff09\u6765\u5b9e\u73b0\u7684\uff0c\u6bcf\u8fdb\u884c\u4e00\u6b21\u8c03\u7528\uff0c\u6808\u5e27\u5c31\u4f1a\u589e\u52a0\u4e00\u5c42\uff0c\u6bcf\u5f53\u51fd\u6570\u8fd4\u56de\uff0c\u6808\u5e27\u5c31\u51cf\u5c11\u4e00\u5c42\uff0c\u7136\u800c\u8ba1\u7b97\u673a\u63d0\u4f9b\u7684\u6808\u5e27\u4e0d\u662f\u65e0\u9650\u5927\u7684\uff0c\u5c31\u50cf\u6211\u4eec\u4e0d\u53ef\u80fd\u771f\u6b63\u5730\u5728\u4e0a\u9762\u8499\u5a1c\u4e3d\u838e\u753b\u50cf\u4e0a\u753b\u51fa\u65e0\u9650\u4e2a\u6367\u7740\u753b\u6846\u7684\u5b50\u56fe\uff0c\u5f53\u9012\u5f52\u8c03\u7528\u6b21\u6570\u8fc7\u591a\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u6808\u6ea2\u51fa\u3002 In [20]: factorial(1000) Out[20]: 402387260077093773543702433923003985719374864210714632543799910429938512398629020592044208486969404800479988610197196058631666872994808558901323829669944590997424504087073759918823627727188732519779505950995276120874975462497043601418278094646496291056393887437886487337119181045825783647849977012476632889835955735432513185323958463075557409114262417474349347553428646576611667797396668820291207379143853719588249808126867838374559731746136085379534524221586593201928090878297308431392844403281231558611036976801357304216168747609675871348312025478589320767169132448426236131412508780208000261683151027341827977704784635868170164365024153691398281264810213092761244896359928705114964975419909342221566832572080821333186116811553615836546984046708975602900950537616475847728421889679646244945160765353408198901385442487984959953319101723355556602139450399736280750137837615307127761926849034352625200015888535147331611702103968175921510907788019393178114194545257223865541461062892187960223838971476088506276862967146674697562911234082439208160153780889893964518263243671616762179168909779911903754031274622289988005195444414282012187361745992642956581746628302955570299024324153181617210465832036786906117260158783520751516284225540265170483304226143974286933061690897968482590125458327168226458066526769958652682272807075781391858178889652208164348344825993266043367660176999612831860788386150279465955131156552036093988180612138558600301435694527224206344631797460594682573103790084024432438465657245014402821885252470935190620929023136493273497565513958720559654228749774011413346962715422845862377387538230483865688976461927383814900140767310446640259899490222221765904339901886018566526485061799702356193897017860040811889729918311021171229845901641921068884387121855646124960798722908519296819372388642614839657382291123125024186649353143970137428531926649875337218940694281434118520158014123344828015051399694290153483077644569099073152433278288269864602789864321139083506217095002597389863554277196742822248757586765752344220207573630569498825087968928162753848863396909959826280956121450994871701244516461260379029309120889086942028510640182154399457156805941872748998094254742173582401063677404595741785160829230135358081840096996372524230560855903700624271243416909004153690105933983835777939410970027753472000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 In [21]: factorial(100000) --------------------------------------------------------------------------- RecursionError Traceback (most recent call last) <ipython-input-21-43ad924d46ef> in <module> ----> 1 factorial(100000) <ipython-input-16-b3332bd42a71> in factorial(n) 3 return 1 4 else: ----> 5 return n * factorial(n-1) ... last 1 frames repeated, from the frame below ... <ipython-input-16-b3332bd42a71> in factorial(n) 3 return 1 4 else: ----> 5 return n * factorial(n-1) RecursionError: maximum recursion depth exceeded in comparison \u4e0a\u9762\u4ee3\u7801\u8fd0\u884c\u7ed3\u679c\u663e\u793a\u5f53\u8ba1\u7b97 1000 \u7684\u9636\u4e58\u65f6\uff0c\u8ba1\u7b97\u673a\u8fd8\u80fd\u6b63\u5e38\u8fd0\u884c\u5e76\u8ba1\u7b97\u51fa\u7ed3\u679c\uff0c\u800c\u5c06\u8f93\u5165\u53c2\u6570\u8bbe\u4e3a 100,000 \u65f6\uff0cPython \u76f4\u63a5\u62a5\u9519\u63d0\u793a\u9012\u5f52\u5df2\u7ecf\u8d85\u51fa\u652f\u6301\u7684\u6700\u5927\u6df1\u5ea6\u3002","title":"5.1.5 \u9012\u5f52\u51fd\u6570"},{"location":"05-function-and-module/#52","text":"\u5b9a\u4e49\u51fd\u6570\u7684\u65f6\u5019\u628a\u53c2\u6570\u7684\u540d\u5b57\u548c\u4f4d\u7f6e\u786e\u5b9a\u4e0b\u6765\uff0c\u5c31\u5b8c\u6210\u4e86\u51fd\u6570\u7684\u63a5\u53e3\u7684\u5b9a\u4e49\u3002\u5bf9\u4e8e\u51fd\u6570\u7684\u4f7f\u7528\u8005\u6765\u8bf4\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5982\u4f55\u4f20\u9012\u6b63\u786e\u7684\u53c2\u6570\uff0c\u4ee5\u53ca\u51fd\u6570\u5c06\u8fd4\u56de\u4ec0\u4e48\u6837\u7684\u503c\u5c31\u591f\u4e86\uff0c\u51fd\u6570\u5185\u90e8\u7684\u590d\u6742\u903b\u8f91\u88ab\u5c01\u88c5\u8d77\u6765\uff0c\u4f7f\u7528\u8005\u65e0\u9700\u4e86\u89e3\u3002\u8fd9\u5c31\u5982\u540c\u7528\u94c5\u7b14\u5199\u5b57\u3001\u7d20\u63cf\u6216\u505a\u5176\u4ed6\u4e8b\u60c5\uff0c\u8bfb\u8005\u65e0\u9700\u77e5\u9053\u94c5\u7b14\u7684\u5236\u9020\u8fc7\u7a0b\u3002\u53cd\u4e4b\uff0c\u51fd\u6570\u521b\u5efa\u8005\u5e94\u5f53\u8003\u8651\u51fd\u6570\u5185\u90e8\u7684\u903b\u8f91\uff0c\u5408\u9002\u5730\u8bbe\u5b9a\u51fd\u6570\u7684\u53c2\u6570\u4ee5\u65b9\u4fbf\u4f7f\u7528\u8005\u80fd\u591f\u8f7b\u677e\u8c03\u7528\u3002 Python \u7684\u51fd\u6570\u5b9a\u4e49\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u7075\u6d3b\u5ea6\u5f88\u5927\u3002\u51fd\u6570\u7684\u53c2\u6570\u4e3b\u8981\u53ef\u4ee5\u5206\u4e3a\u4f4d\u7f6e\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\u4e0e\u53ef\u53d8\u53c2\u6570 3 \u79cd\u7c7b\u578b\uff0c\u5408\u7406\u7ec4\u5408 3 \u79cd\u53c2\u6570\u7c7b\u578b\u5b9a\u4e49\u51fd\u6570\u63a5\u53e3\uff0c\u4e0d\u4f46\u80fd\u5904\u7406\u590d\u6742\u7684\u53c2\u6570\uff0c\u8fd8\u53ef\u4ee5\u7b80\u5316\u51fd\u6570\u8c03\u7528\u8005\u7684\u4ee3\u7801\u3002","title":"5.2 \u51fd\u6570\u7684\u53c2\u6570"},{"location":"05-function-and-module/#521","text":"\u4f4d\u7f6e\u53c2\u6570\u7684\u542b\u4e49\u53ef\u4ee5\u6bd4\u8f83\u76f4\u89c2\u7684\u7406\u89e3\uff0c\u5b83\u662f\u901a\u8fc7\u4f4d\u7f6e\u6307\u5b9a\u7684\u53c2\u6570\u3002\u65e2\u7136\u5173\u952e\u5728\u4e8e\u4f4d\u7f6e\uff0c\u90a3\u4e48\u53c2\u6570\u540d\u5c31\u663e\u5f97\u4e0d\u90a3\u4e48\u91cd\u8981\u4e86\u3002\u4f4d\u7f6e\u53c2\u6570\u662f\u521b\u5efa\u51fd\u6570\u65f6\u901a\u5e38\u4f7f\u7528\u7684\u53c2\u6570\uff0c\u4e0b\u9762\u7528\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\u8bf4\u660e\u3002 \u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u8ba1\u7b97\u6570\u503c x \u7684 n \u6b21\u5e42\u3002 In [22]: def power(x, n): ...: s = 1 ...: while n > 0: ...: n = n - 1 ...: s = s * x ...: return s In [23]: power(2, 2) Out[23]: 4 In [24]: power(2, 3) Out[24]: 8 \u8fd9\u91cc power(x, n) \u51fd\u6570\u4e24\u4e2a\u53c2\u6570 x \u548c n \u90fd\u662f\u4f4d\u7f6e\u53c2\u6570\uff0c\u5728\u8c03\u7528\u65f6\u4f20\u5165\u7684\u503c\u4f1a\u4f9d\u6b21\u4f20\u7ed9 x \u548c n\u3002 \u6709\u610f\u601d\u7684\u662f\uff0c\u5982\u679c\u663e\u5f0f\u5730\u6307\u5b9a\u53c2\u6570\u540d\uff0c\u4f1a\u5b58\u5728\u62a5\u9519\u7684\u60c5\u51b5\uff0c\u5982\u4e0b\u6240\u793a\uff1a In [25]: power(x = 2, 5) File \"<ipython-input-40-b1e390a5e3ac>\", line 1 power(x = 2, 5) ^ SyntaxError: positional argument follows keyword argument In [26]: power(2, n = 5) Out[26]: 32 In [27]: power(x = 2, n = 5) Out[27]: 32 \u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u51e0\u79cd\u8c03\u7528\u65b9\u5f0f\u4e2d\uff0c\u5982\u679c\u5148\u8f93\u5165\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\uff0c\u540e\u9762\u5c31\u4e0d\u80fd\u63a5\u4f4d\u7f6e\u53c2\u6570\u4e86\u3002","title":"5.2.1 \u4f4d\u7f6e\u53c2\u6570"},{"location":"05-function-and-module/#522","text":"\u4e3a\u4ec0\u4e48\u4e0a\u9762\u53c2\u6570\u5e26\u540d\u5b57\u4f1a\u62a5\u9519\u5462\uff1f\u8fd9\u662f\u56e0\u4e3a\u5728\u4f7f\u7528 power(x = 2, 5) \u65f6\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u53c2\u6570\u7c7b\u578b\u2014\u2014\u5173\u952e\u5b57\u53c2\u6570\uff0c\u5b83\u5e72\u6270\u4e86 Python \u5bf9\u4e8e\u53c2\u6570\u7684\u89e3\u6790\u3002\u5728 Python \u7684\u903b\u8f91\u91cc\u9762\uff0c\u5173\u952e\u5b57\u53c2\u6570\u5fc5\u987b\u653e\u5230\u4f4d\u7f6e\u53c2\u6570\u7684\u540e\u9762\uff0c\u4e0d\u7136\u5b83\u4e0d\u77e5\u9053\u8c01\u662f\u8c01\uff0c\u800c\u8fd9\u91cc\u6070\u6070\u76f8\u53cd\uff0c\u6240\u4ee5 Python \u629b\u51fa\u9519\u8bef\u3002 \u5bf9\u4e8e\u5173\u952e\u5b57\u53c2\u6570\uff0c\u4f4d\u7f6e\u5c31\u4e0d\u91cd\u8981\u4e86\uff0c\u800c\u662f\u901a\u8fc7\u540d\u5b57\u6307\u5b9a\uff0c\u8fd9\u65f6\u8c03\u7528\u8005\u53ef\u4ee5\u4efb\u610f\u5730\u4fee\u6539\u987a\u5e8f\u3002\u5173\u952e\u5b57\u53c2\u6570\u6700\u6709\u7528\u7684\u5f62\u5f0f\u662f\u7ed9\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\u6307\u5b9a\u4e00\u4e2a\u9ed8\u8ba4\u53c2\u6570\u503c\uff0c\u8fd9\u6837\u521b\u5efa\u51fa\u6765\u7684\u51fd\u6570\u7528\u6237\u901a\u8fc7\u8bbe\u5b9a\u5c11\u91cf\u53c2\u6570\u5373\u53ef\u8c03\u7528\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684 ask_ok() \u51fd\u6570\uff1a\u5b83\u5411\u7528\u6237\u53d1\u51fa\u8be2\u95ee\uff0c\u5982\u679c\u7528\u6237\u540c\u610f\u5e76\u8f93\u5165 y \u6216 ye \u6216 yes\uff0c\u51fd\u6570\u90fd\u4f1a\u8fd4\u56de True\uff1b\u5982\u679c\u7528\u6237\u4e0d\u540c\u610f\u5e76\u8f93\u5165 n \u6216 no \u6216 nop \u6216 nope\uff0c\u51fd\u6570\u4f1a\u8fd4\u56de False\uff1b\u5176\u4ed6\u60c5\u51b5\u4f1a\u63d0\u793a\u7528\u6237\u518d\u6b21\u8f93\u5165\u3002 In [28]: def ask_ok(prompt, retries=4, reminder='Please try again!'): ...: while True: ...: ok = input(prompt) ...: if ok in ('y', 'ye', 'yes'): ...: return True ...: if ok in ('n', 'no', 'nop', 'nope'): ...: return False ...: retries = retries - 1 ...: if retries < 0: ...: raise ValueError('invalid user response') ...: print(reminder) \u8be5\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u51e0\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u8c03\u7528\uff1a \u4ec5\u7ed9\u51fa\u4e00\u4e2a\u5fc5\u9700\u53c2\u6570\uff1aask_ok(\u201c\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\u201d)\u3002 \u6307\u5b9a\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff1aask_ok(\u201c\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\u201d, 2)\u3002 \u6216\u8005\u7ed9\u51fa\u6240\u6709\u7684\u53c2\u6570\uff1aask_ok(\u201c\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\u201d, 1, \u201c\u4e0d\u597d\u610f\u601d\uff0c\u53ea\u80fd\u662fyes\u6216no\uff01\u201d) \u4e0b\u9762\u5bf9\u8fd9\u51e0\u79cd\u8c03\u7528\u65b9\u5f0f\u8fdb\u884c\u7b80\u5355\u7684\u6d4b\u8bd5\u3002 In [29]: ask_ok(\"\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\") \u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1fy Out[29]: True In [30]: ask_ok(\"\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\", 2) \u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1ffgfg Please try again! \u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1ffewe Please try again! \u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1fgdhgds --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-24-e2ab09b6f802> in <module> ----> 1 ask_ok(\"\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\", 2) <ipython-input-22-16d7c37266ff> in ask_ok(prompt, retries, reminder) 8 retries = retries - 1 9 if retries < 0: ---> 10 raise ValueError('invalid user response') 11 print(reminder) ValueError: invalid user response In [31]: ask_ok(\"\u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1f\", 1, \"\u4e0d\u597d\u610f\u601d\uff0c\u53ea\u80fd\u662fyes\u6216no\uff01\") \u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1fnpe \u4e0d\u597d\u610f\u601d\uff0c\u53ea\u80fd\u662fyes\u6216no\uff01 \u4f60\u771f\u60f3\u9000\u51fa\u5417\uff1fyes Out[31]: True \u53ef\u4ee5\u770b\u5230\uff0c\u65e0\u8bba\u662f\u7b80\u5355\u8c03\u7528\u8fd8\u662f\u590d\u6742\u8c03\u7528\uff0c\u51fd\u6570\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\uff0c\u56e0\u6b64\u5173\u952e\u5b57\u53c2\u6570\u964d\u4f4e\u4e86\u51fd\u6570\u7684\u4f7f\u7528\u96be\u5ea6\uff0c\u4e5f\u7ed9\u51fd\u6570\u7684\u4f7f\u7528\u63d0\u4f9b\u4e86\u7075\u6d3b\u6027\u3002 \u867d\u7136\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u8bbe\u5b9a\u9ed8\u8ba4\u503c\u975e\u5e38\u6709\u7528\uff0c\u4f46\u4f7f\u7528\u4e0d\u5f53\u4f1a\u51fa\u73b0\u8f83\u5927\u7684\u95ee\u9898\u3002\u4e0b\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u6765\u8bf4\u660e\u8fd9\u4e2a\u95ee\u9898\u3002 In [32]: def f(a, L=[]): ...: L.append(a) ...: return L In [33]: print(f(1)) ...: print(f(2)) ...: print(f(3)) [1] [1, 2] [1, 2, 3] \u7ed3\u679c\u975e\u5e38\u5947\u602a\uff0c\u5728\u7b2c 2 \u6b21\u548c\u7b2c 3 \u6b21\u8c03\u7528\u65f6\u524d\u9762\u7684\u7ed3\u679c\u5c45\u7136\u8fd8\u5728\uff0c\u53ef\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u65f6\u8bbe\u5b9a\u4e86\u9ed8\u8ba4\u53c2\u6570\u4e3a\u7a7a\u5217\u8868\uff01\u8fd9\u662f\u56e0\u4e3a Python \u53ea\u5bf9\u51fd\u6570\u7684\u9ed8\u8ba4\u503c\u8ba1\u7b97\u4e00\u6b21\uff0c\u6240\u4ee5\u5f53\u9ed8\u8ba4\u53c2\u6570\u662f\u53ef\u53d8\u5bf9\u8c61\u5982\u5217\u8868\u3001\u5b57\u5178\u65f6\uff0c\u53c2\u6570\u4f1a\u7d2f\u79ef\u53d8\u5316\uff0c\u770b\u8d77\u6765\u5b83\u7ee7\u627f\u4e86\u524d\u9762\u8c03\u7528\u7684\u8f93\u5165\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u5c06\u9ed8\u8ba4\u53c2\u6570\u8bbe\u5b9a\u4e3a\u4e0d\u53ef\u53d8\u5bf9\u8c61 None\u3002 In [34]: def f(a, L=None): ...: if L is None: ...: L = [] ...: L.append(a) ...: return L In [35]: print(f(1)) ...: print(f(2)) ...: print(f(3)) [1] [2] [3] \u73b0\u5728\u65e0\u8bba\u8c03\u7528\u591a\u5c11\u6b21\uff0c\u51fd\u6570\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u4e86\u3002","title":"5.2.2 \u5173\u952e\u5b57\u53c2\u6570"},{"location":"05-function-and-module/#523","text":"\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u80fd\u591f\u4f20\u5165\u7684\u53c2\u6570\u662f\u6709\u9650\u7684\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u5411\u51fd\u6570\u4f20\u5165\u6210\u5343\u4e0a\u4e07\u4e2a\uff08\u867d\u7136\u8bf4\u6709\u70b9\u5938\u5f20\uff0c\u4f46\u4e00\u4e9b\u5b9e\u9645\u60c5\u51b5\u5c31\u662f\u5982\u6b64\uff09\u53c2\u6570\uff0c\u6211\u4eec\u9700\u8981\u65b0\u7684\u89e3\u51b3\u529e\u6cd5\u3002 \u73b0\u5728\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u4efb\u610f\u4e2a\u53c2\u6570\u7684\u5e73\u65b9\u548c\uff1a In [36]: def calcSquareSum(*numbers): ...: sum = 0 ...: for n in numbers: ...: sum = sum + n * n ...: return sum In [37]: calcSquareSum(1, 2, 3) Out[37]: 14 In [38]: calcSquareSum() Out[38]: 0 In [39]: input = [3, 4, 5] In [40]: calcSquareSum(*input) Out[40]: 50 \u8fd9\u91cc\u65e0\u8bba input \u6709\u591a\u957f\uff0c\u51fd\u6570\u90fd\u662f\u53ef\u4ee5\u4f7f\u7528\u7684\u3002\u663e\u7136\uff0c\u661f\u53f7\u53d1\u6325\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\uff0c\u51fd\u6570\u8bc6\u522b\u5230\u8be5\u7b26\u53f7\u4f1a\u5c06\u8f93\u5165\u7684\u4f4d\u7f6e\u53c2\u6570\u81ea\u52a8\u7ec4\u88c5\u4e3a\u5143\u7ec4\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u9a8c\u8bc1\u3002 In [41]: def print_params(*params): ...: print(params) ...: In [42]: print_params(1, 3, 5, 7, 9) (1, 3, 5, 7, 9) \u7b80\u800c\u8a00\u4e4b\uff0c\u661f\u53f7\u8d77\u7740\u6536\u96c6\u201c\u5269\u4f59\u201d\u4f4d\u7f6e\u53c2\u6570\u7684\u4f5c\u7528\u3002\u4e3a\u4ec0\u4e48\u8981\u5f3a\u8c03\u201c\u5269\u4f59\u201d\u548c\u201c\u4f4d\u7f6e\u53c2\u6570\u201d\u5462\uff1f\u4e00\u65b9\u9762\uff0c\u8be5\u64cd\u4f5c\u53ef\u4ee5\u4e0e\u5355\u4e2a\u4f4d\u7f6e\u53c2\u6570\u642d\u914d\u4f7f\u7528\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u8be5\u64cd\u4f5c\u4e0d\u80fd\u7528\u4e8e\u5173\u952e\u5b57\u53c2\u6570\u3002 In [43]: def print_params2(name, *params): ...: print(name, params) ...: In [44]: print_params2(\"Admin\", 1, 2, 3, 4) # \u6211\u4eec\u4f1a\u770b\u5230 name \u548c params \u662f\u5206\u5f00\u7684 Admin (1, 2, 3, 4) In [45]: print_params({\"a\":1, \"b\":2}) # \u6211\u4eec\u5f97\u5230\u7684\u662f\u5143\u7ec4\u800c\u4e0d\u662f\u5b57\u5178 ({'a': 1, 'b': 2},) \u76f8\u5e94\u5730\uff0c\u4e3a\u4e86\u5904\u7406\u5173\u952e\u5b57\u53c2\u6570\uff0cPython \u5f15\u5165\u4e86\u4e24\u4e2a\u661f\u53f7\u3002 In [46]: def person(name, age, **kw): # \u8fd9\u91cc\u7684kw\u5c31\u662f\u5173\u952e\u5b57\u53c2\u6570 ...: print('\u6027\u522b\uff1a', name, '\u5e74\u9f84', age, '\u5176\u4ed6', kw) In [47]: person(\"Shixiang\", 25) \u6027\u522b\uff1a Shixiang \u5e74\u9f84 25 \u5176\u4ed6 {} In [48]: person(\"\u5c0f\u4e39\", 25, city = \"\u4e0a\u6d77\", job = \"\u6570\u636e\u5206\u6790\u5de5\u7a0b\u5e08\") \u6027\u522b\uff1a \u5c0f\u4e39 \u5e74\u9f84 25 \u5176\u4ed6 {'city': '\u4e0a\u6d77', 'job': '\u6570\u636e\u5206\u6790\u5de5\u7a0b\u5e08'} \u603b\u7ed3\u4e00\u4e0b\uff0c\u53ef\u53d8\u53c2\u6570\u5e76\u6ca1\u6709\u6982\u5ff5\u4e0a\u7684\u521b\u65b0\uff0c\u5b83\u5b9e\u8d28\u4e0a\u662f\u4f4d\u7f6e\u53c2\u6570\u548c\u5173\u952e\u5b57\u53c2\u6570\u7684\u53d8\u4f53\uff0c\u7528\u6765\u5904\u7406\u4efb\u610f\u8f93\u5165\u53c2\u6570\u7684\u60c5\u5f62\u3002","title":"5.2.3 \u53ef\u53d8\u53c2\u6570"},{"location":"05-function-and-module/#53","text":"\u5b9e\u9645\u5b8c\u6210\u4e00\u4e2a\u8f6f\u4ef6\u5f00\u53d1\u6216\u8005\u6570\u636e\u5206\u6790\u6d41\u7a0b\u7684\u4ee3\u7801\u91cf\u5f80\u5f80\u662f\u5de8\u5927\u7684\uff0c\u4e00\u4e2a\u6587\u4ef6\u91cc\u6240\u5b58\u50a8\u7684\u4ee3\u7801\u8d8a\u957f\u5c31\u8d8a\u4e0d\u5bb9\u6613\u7ef4\u62a4\u3002\u4e3a\u4e86\u7f16\u5199\u53ef\u7ef4\u62a4\u7684\u4ee3\u7801\uff0c\u7a0b\u5e8f\u5458\u901a\u5e38\u5c06\u51fd\u6570\u6309\u7167\u529f\u80fd\u8fdb\u884c\u5206\u7ec4\u5e76\u5c06\u5b83\u4eec\u653e\u5230\u4e0d\u540c\u7684\u6587\u4ef6\u4e2d\u53bb\uff0c\u8fd9\u6837\u6bcf\u4e2a\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u5c31\u5c11\u4e86\u5f88\u591a\uff0c\u529f\u80fd\u4e13\u4e00\uff0c\u56e0\u6b64\u4fbf\u4e8e\u67e5\u627e\u3001\u8c03\u8bd5\u9519\u8bef\uff0c\u589e\u52a0\u529f\u80fd\u7279\u6027\u7b49\uff0c\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u91c7\u7528\u8fd9\u79cd\u7ec4\u7ec7\u4ee3\u7801\u7684\u65b9\u5f0f\u3002 Python \u4e2d\uff0c\u6bcf\u4e00\u4e2a\u4ee5 .py \u4e3a\u6587\u4ef6\u6269\u5c55\u540d\u7684\u4ee3\u7801\u6587\u4ef6\u90fd\u662f\u4e00\u4e2a\u6a21\u5757\uff08Module\uff09\u3002\u6a21\u5757\u5927\u5927\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u5e94\u7528\u8303\u56f4\uff0c\u7f16\u5199\u4ee3\u7801\u4e0d\u9700\u8981\u4ece\u5934\u5f00\u59cb\uff0c\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u5f15\u7528\u522b\u4eba\u5df2\u7ecf\u521b\u5efa\u597d\u7684\u4f18\u79c0\u6a21\u5757\uff0c\u8fd9\u5305\u62ec Python \u5185\u7f6e\u7684\u6a21\u5757\u548c\u6765\u81ea\u7b2c\u4e09\u65b9\u7684\u6a21\u5757\u3002\u6570\u636e\u5206\u6790\u5e38\u5e38\u5c31\u662f\u5efa\u7acb\u5728\u4f17\u591a\u7684\u8ba1\u7b97\u6a21\u5757\u57fa\u7840\u4e4b\u4e0a\uff0c\u5982 Numpy\u3001Pandas \u548c Scipy \u7b49\uff0c\u57fa\u4e8e\u8fd9\u4e9b\u884c\u4e1a\u6807\u51c6\u7ea7\u522b\u7684\u6a21\u5757\uff0c\u8bfb\u8005\u53ef\u4ee5\u5feb\u901f\u5b9e\u73b0\u6570\u636e\u7684\u8bfb\u53d6\u3001\u64cd\u4f5c\u3001\u5206\u6790\u3001\u53ef\u89c6\u5316\u4ee5\u53ca\u7ed3\u679c\u8f93\u51fa\u3002 \u6a21\u5757\u5b66\u4e60\u7684\u6838\u5fc3\u5728\u4e8e\u4e86\u89e3\u6a21\u5757\u3001\u5b89\u88c5\u6a21\u5757\u4ee5\u53ca\u5b66\u4e60\u4f7f\u7528\u6a21\u5757\u63d0\u4f9b\u7684\u51fd\u6570\u3002\u4e0b\u9762\u5206\u522b\u8fdb\u884c\u4ecb\u7ecd\u3002","title":"5.3 \u6a21\u5757"},{"location":"05-function-and-module/#531","text":"\u4e0a\u9762\u63d0\u5230\uff0c\u4e00\u4e2a .py \u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u4f8b\u5982\u4e00\u4e2a abc.py \u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u53eb abc \u7684\u6a21\u5757\u3002\u56e0\u4e3a\u4e16\u754c\u4e0a\u975e\u5e38\u591a\u7684 Python \u4f7f\u7528\u8005\uff0c\u5927\u5bb6\u5728\u521b\u5efa\u6a21\u5757\u65f6\u6587\u4ef6\u540d\u90fd\u4f1a\u91c7\u7528\u6613\u7528\u6613\u61c2\u7684\u547d\u540d\u89c4\u5219\uff0c\u6240\u4ee5\u6a21\u5757\u540d\u5f88\u5bb9\u6613\u4e0e\u5176\u4ed6\u7684\u6a21\u5757\u51b2\u7a81\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cPython \u5f15\u5165\u4e86\u5305\u5bf9\u6a21\u5757\u8fdb\u884c\u7ec4\u7ec7\u3002\u5305\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5305\u542b\u4f17\u591a\u6a21\u5757\u7684\u76ee\u5f55\uff0c\u53ea\u8981\u5305\u540d\u4e0d\u4e0e\u522b\u7684\u5305\u540d\u51b2\u7a81\uff0c\u90a3\u4e48\u8be5\u5305\u6240\u6709\u7684\u6a21\u5757\u90fd\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002 \u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u540d\u5b57\u4e3a fib \u5305\u7684\u7ed3\u6784\uff0c\u8be5\u5305\u4e0b\u9762\u6709 3 \u4e2a\u6a21\u5757\uff0c\u8fd9\u91cc\u7684 abc.py \u6a21\u5757\u540d\u5b57\u4e0d\u518d\u662f abc\uff0c\u800c\u662f fib.abc\u3002 fib \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 abc.py \u2514\u2500\u2500 fib.py \u6bcf\u4e00\u4e2a\u5305\u76ee\u5f55\u4e0b\u90fd\u4f1a\u6709\u4e00\u4e2a __init__.py\u6587\u4ef6\uff0c\u5b83\u7684\u6a21\u5757\u540d\u4e3a\u5305\u540d fib\uff0c\u8be5\u6587\u4ef6\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4e5f\u53ef\u4ee5\u6709 Python \u4ee3\u7801\uff0c\u5b83\u5fc5\u987b\u5b58\u5728\u4e8e\u5305\u7684\u76ee\u5f55\u4e0b\uff0c\u4e0d\u7136 Python \u4f1a\u5c06\u8be5\u76ee\u5f55\u5f53\u505a\u666e\u901a\u76ee\u5f55\uff0c\u800c\u975e\u5305\u3002 \u5305\u4e5f\u53ef\u4ee5\u5d4c\u5957\u5b58\u5728\uff0c\u7ec4\u6210\u591a\u5c42\u6b21\u7684\u5305\u7ed3\u6784\uff0c\u5982\u4e0b\u6240\u793a\uff1a fib \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 abc.py \u2514\u2500\u2500 fib.py \u2514\u2500\u2500 calc \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 def.py \u2514\u2500\u2500 calculation.py \u8fd9\u91cc def.py \u7684\u6a21\u5757\u540d\u662f fib.calc.def\u3002\u6bcf\u591a\u4e00\u4e2a\u5c42\u7ea7\uff0c\u5176\u4e2d\u7684\u6a21\u5757\u540d\u5c31\u591a\u4e00\u4e2a\u5c42\u7ea7\uff0c\u5c42\u7ea7\u4e4b\u95f4\u7528\u82f1\u6587\u53e5\u53f7 . \u533a\u5206\u3002\u6a21\u5757\u540d\u8981\u9075\u5faa Python \u53d8\u91cf\u547d\u540d\u89c4\u8303\uff0c\u4e0d\u8981\u4f7f\u7528\u4e2d\u6587\u3001\u7279\u6b8a\u5b57\u7b26\u3002","title":"5.3.1 \u6a21\u5757\u4e0e\u5305\u7ed3\u6784"},{"location":"05-function-and-module/#532","text":"\u672c\u5c0f\u8282\u4ee5\u5185\u7f6e\u7684 sys \u548c math \u6a21\u5757\u4e3a\u4f8b\uff0c\u7f16\u5199\u4e00\u4e2a fact \u6a21\u5757\uff0c\u7528\u4e8e\u8ba1\u7b97\u9636\u4e58\u3002 \u9996\u5148\u7528\u6587\u672c\u7f16\u8f91\u5668\u521b\u5efa\u4e00\u4e2a\u4ee5 .py \u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\u7684\u6587\u672c\u6587\u4ef6\uff0c\u7136\u540e\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a #!/usr/bin/env python3 # -*- coding: utf-8 -*- \"\"\"\u8fd9\u662f\u4e00\u4e2a\u8ba1\u7b97\u9636\u4e58\u7684\u6a21\u5757\uff0c \u5b83\u5229\u7528\u4e86math\u6a21\u5757\u548csys\u6a21\u5757\"\"\" __author__ = 'Shixiang' import sys import math def fact(): args = sys.argv if len(args)==1: print('\u8bf7\u91cd\u65b0\u8fd0\u884c\u5e76\u8f93\u5165\u4e00\u4e2a\u6570\u5b57\u3002') elif len(args)==2: print(math.factorial(int(args[1]))) else: print('\u8fd9\u4e2a\u51fd\u6570\u53ea\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u800c\u4e14\u5fc5\u987b\u662f\u6570\u5b57\uff01') if __name__=='__main__': fact() \u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u7b2c 1\u30012 \u884c\u662f\u6807\u51c6\u7684\u6ce8\u91ca\uff0c\u5176\u4e2d\u7b2c\u4e00\u884c\u7684\u6ce8\u91ca\u53ef\u4ee5\u8ba9\u8be5\u6a21\u5757\u76f4\u63a5\u5728 Linux \u7cfb\u7edf\u548c macOS \u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u7b2c 2 \u884c\u6ce8\u91ca\u6307\u5b9a\u4ee3\u7801\u6587\u4ef6\u4f7f\u7528\u6807\u51c6\u7684 UTF-8 \u7f16\u7801\u3002\u8fd9\u4e24\u884c\u6ce8\u91ca\u662f\u6807\u51c6\u7684\u89c4\u8303\uff0c\u8bf7\u8bfb\u8005\u5728\u7f16\u5199\u6a21\u5757\u65f6\u52a1\u5fc5\u9075\u5b88\u3002 \u63a5\u4e0b\u6765\u7684\u4e00\u884c\u662f\u5b57\u7b26\u4e32\uff0c\u5b83\u662f\u5bf9\u6574\u4e2a\u6a21\u5757\u7684\u529f\u80fd\u8bf4\u660e\uff0c\u4e00\u822c\u79f0\u4e3a\u6587\u6863\u5b57\u7b26\u4e32\uff08docstring\uff09\uff0c\u8fd9\u8ddf\u7f16\u5199\u51fd\u6570\u662f\u4e00\u81f4\u7684\u3002\u4efb\u4f55\u6a21\u5757/\u51fd\u6570\u4ee3\u7801\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u90fd\u88ab\u89c6\u4e3a\u6587\u6863\u6ce8\u91ca\u3002 __author__ = \u2018Shixiang\u2019 \u8fd9\u91cc\u4f7f\u7528\u4e13\u95e8\u7684\u53d8\u91cf\u8bb0\u5f55\u6a21\u5757\u7684\u4f5c\u8005\uff0c\u522b\u4eba\u5728\u4f7f\u7528\u65f6\u53ef\u4ee5\u67e5\u770b\u6a21\u5757\u7684\u521b\u4f5c\u8005\u662f\u8c01\u3002 \u4e0a\u8ff0\u63d0\u53ca\u7684\u5185\u5bb9\u662f Python \u6a21\u5757\u6587\u4ef6\u7684\u6807\u51c6\u7248\u672c\uff0c\u662f\u4e00\u4e2a\u53ef\u9009\u9879\uff0c\u8bfb\u8005\u53ef\u4ee5\u5220\u9664\u4e0d\u5199\uff0c\u4f46\u672c\u4e66\u5efa\u8bae\u8bfb\u8005\u90fd\u4f7f\u7528\u6807\u51c6\u7684\u5199\u6cd5\u3002 \u968f\u540e\u7684\u5185\u5bb9\u662f\u771f\u6b63\u7684\u4ee3\u7801\u90e8\u5206\uff0c\u4f7f\u7528 import \u5173\u952e\u5b57\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165\u5df2\u7ecf\u5b89\u88c5\u597d\u7684 Python \u6a21\u5757\uff0c\u5bfc\u5165\u540e Python \u7528\u6237\u5c31\u53ef\u4ee5\u4f7f\u7528\u6a21\u5757\u540d\u6765\u5f15\u7528\u6a21\u5757\u63d0\u4f9b\u7684\u51fd\u6570\u3001\u53c2\u6570\u7b49\u7b49\u3002\u8fd9\u91cc\u5229\u7528 sys \u548c math \u53d8\u91cf\u540d\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e24\u4e2a\u6a21\u5757\u7684\u6240\u6709\u529f\u80fd\u3002 fact \u6a21\u5757\u4f7f\u7528\u4e86 sys \u6a21\u5757\u7684 argv \u503c\u4ee5\u53ca math \u6a21\u5757\u4e2d\u7684 factorial() \u51fd\u6570\u3002argv \u53d8\u91cf\u7528 list \u7684\u5f62\u5f0f\u5b58\u50a8\u4e86 Python \u547d\u4ee4\u884c\u7684\u6240\u6709\u53c2\u6570\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u6c38\u8fdc\u662f\u88ab\u8fd0\u884c Python \u6587\u4ef6\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u8fd9\u91cc\u5373\u662f fact.py\uff0c\u7b2c\u4e8c\u4e2a\u662f\u9700\u8981\u6a21\u5757\u4f7f\u7528\u8005\u8f93\u5165\u7684\u6570\u5b57\u3002 \u5728\u5b9e\u9645\u8fd0\u884c fact \u6a21\u5757\u524d\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b\u6700\u540e\u4e24\u884c\u4ee3\u7801\u7684\u542b\u4e49\u3002 if __name__=='__main__': fact() \u5f53\u4f7f\u7528\u547d\u4ee4\u884c\u8fd0\u884c fact \u6a21\u5757\u65f6\uff0cPython \u89e3\u91ca\u5668\u4f1a\u5c06\u7279\u6b8a\u53d8\u91cf __name__ \u53d8\u4e3a __main__\uff0c\u4f46\u5982\u679c\u5728\u5176\u4ed6\u5730\u65b9\u5bfc\u5165 fact \u6a21\u5757\uff0c\u8be5\u5224\u65ad\u8bed\u53e5\u5c06\u5931\u6548\u3002\u8fd9\u79cd\u64cd\u4f5c\u65b9\u4fbf\u6211\u4eec\u901a\u8fc7\u547d\u4ee4\u884c\u6d4b\u8bd5\u4ee3\u7801\uff0c\u4f46\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528 import \u5bfc\u5165\u8be5\u6a21\u5757\u4e5f\u4f9d\u7136\u6709\u6548\u3002 \u901a\u8fc7\u547d\u4ee4\u884c\u8fd0\u884c\u4ee3\u7801\u9700\u8981\u6253\u5f00\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ec8\u7aef\uff0c\u5e76\u5c06\u5176\u5207\u6362\u5230 fib.py \u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u3002\u4e0b\u9762\u7f8e\u5143\u7b26\u53f7\u662f\u7ec8\u7aef\u63d0\u793a\u7b26\uff0c\u8bfb\u8005\u65e0\u9700\u7406\u4f1a\u3002 $ python3 fib.py \u8bf7\u91cd\u65b0\u8fd0\u884c\u5e76\u8f93\u5165\u4e00\u4e2a\u6570\u5b57\u3002 $ python3 fib.py 3 6 IPython \u63d0\u4f9b\u4e86\u66f4\u4fbf\u6377\u7684\u65b9\u5f0f\u8fd0\u884c .py \u6587\u4ef6\uff08\u8fd9\u4e9b\u65b9\u5f0f\u5728 IPython Shell\u3001Jupyter Notebook \u4ee5\u53ca nteract \u8f6f\u4ef6\u4e2d\u64cd\u4f5c\u662f\u4e00\u81f4\u7684\uff09\uff0c\u4e00\u79cd\u65b9\u5f0f\u4e0e\u547d\u4ee4\u884c\u8fd0\u884c\u7c7b\u4f3c\uff0c\u5728\u547d\u4ee4\u524d\u52a0\u4e00\u4e2a\u82f1\u6587\u611f\u53f9\u53f7\uff0c\u8fd9\u6837 IPython \u4f1a\u5c06\u5176\u81ea\u52a8\u89e3\u6790\u4e3a\u7cfb\u7edf\u547d\u4ee4\u8fd0\u884c\u3002 In [49]: !python3 fib.py 3 6 IPython \u8fd8\u63d0\u4f9b\u4e86\u9b54\u672f\u547d\u4ee4 %run \u8fd0\u884c\u6a21\u5757\u6587\u4ef6\uff0c\u66f4\u591a\u9b54\u672f\u547d\u4ee4\u8bf7\u5728 IPython \u4e2d\u8f93\u5165 %magic \u9605\u8bfb\u4e0e\u5b66\u4e60\u3002 In [50]: %run fib.py 3 6 In [51]: %run fib.py 5 120","title":"5.3.2 \u6a21\u5757\u7684\u521b\u5efa"},{"location":"05-function-and-module/#533","text":"\u524d\u9762\u672c\u4e66\u4ecb\u7ecd\u8fc7\u51fd\u6570\u7684\u4f5c\u7528\u57df\uff0c\u6a21\u5757\u4e5f\u6709\u5176\u4f5c\u7528\u57df\u3002\u5728\u4e00\u4e2a\u6a21\u5757\u4e2d\uff0c\u8bfb\u8005\u53ef\u4ee5\u5b9a\u4e49\u5f88\u591a\u51fd\u6570\u548c\u53d8\u91cf\uff0c\u4f46\u6709\u7684\u51fd\u6570\u548c\u53d8\u91cf\u6211\u4eec\u5e0c\u671b\u7ed9\u522b\u4eba\u4f7f\u7528\uff0c\u6709\u7684\u51fd\u6570\u548c\u53d8\u91cf\u5e0c\u671b\u4ec5\u4ec5\u5728\u6a21\u5757\u5185\u90e8\u4f7f\u7528\u3002 \u5728 Python\u4e2d\uff0c\u6a21\u5757\u7684\u4f5c\u7528\u57df\u662f\u901a\u8fc7\u7b26\u53f7\u524d\u7f00 _ \u6765\u5b9e\u73b0\u7684\u3002\u6b63\u5e38\u7684\u51fd\u6570\u548c\u53d8\u91cf\u540d\u662f\u516c\u5f00\u7684\uff0c\u53ef\u4ee5\u88ab\u76f4\u63a5\u5f15\u7528\uff0c\u5982 abc\u3001weight123\u3002\u800c\u7c7b\u4f3c __xxx__ \u8fd9\u6837\u7684\u53d8\u91cf\u662f\u7279\u6b8a\u53d8\u91cf\uff0c\u5b83\u4eec\u867d\u7136\u4e5f\u53ef\u4ee5\u88ab\u76f4\u63a5\u5f15\u7528\uff0c\u4f46\u662f\u6709\u4e9b\u7279\u6b8a\u7528\u9014\uff0c\u4f8b\u5982\u4e0a\u9762\u7684\u9636\u4e58\u6a21\u5757\u4ee3\u7801\u4e2d\uff0c__author__\u3001__name__ \u5c31\u662f\u7279\u6b8a\u53d8\u91cf\uff0c\u53e6\u5916\u6a21\u5757\u5b9a\u4e49\u7684\u6587\u6863\u6ce8\u91ca\u4e5f\u53ef\u4ee5\u7528\u7279\u6b8a\u53d8\u91cf __doc__ \u8bbf\u95ee\u3002\u975e\u516c\u5f00\uff08\u6216\u79f0\u79c1\u6709\uff09\u7684\u51fd\u6570\u540d\u6216\u53d8\u91cf\u540d\u7c7b\u4f3c _xxx \u548c __xxx\uff0c\u5b83\u4eec\u4e0d\u5e94\u8be5\u88ab\u76f4\u63a5\u5f15\u7528\uff08\u800c\u975e\u4e0d\u80fd\uff09\uff0c\u5982 _abc\uff0c__abc\u3002 \u5728\u6a21\u5757\u7684\u903b\u8f91\u4e2d\uff0c\u5b83\u4f1a\u5c06\u79c1\u6709\u51fd\u6570\u6216\u53d8\u91cf\u9690\u85cf\u8d77\u6765\uff0c\u8fd9\u6837\u53ef\u4ee5\u5b9e\u73b0\u66f4\u9ad8\u5c42\u7ea7\u7684\u4ee3\u7801\u5c01\u88c5\u548c\u62bd\u8c61\u3002\u4f8b\u5982\uff0c\u67d0\u4e2a\u6a21\u5757\u53ea\u5b9e\u73b0\u4e00\u4e2a\u529f\u80fd\u51fd\u6570\uff0c\u4f46\u56e0\u4e3a\u5b9e\u73b0\u4ee3\u7801\u590d\u6742\uff0c\u4f5c\u8005\u5199\u4e86\u5f88\u591a\u7684\u51fd\u6570\u7ec4\u5408\u5b9e\u73b0\u5404\u4e2a\u7ec6\u8282\u90e8\u5206\uff0c\u4f7f\u7528\u4e00\u4e2a\u4e3b\u51fd\u6570\u8c03\u7528\uff0c\u56e0\u800c\u4f5c\u8005\u53ea\u60f3\u63d0\u4f9b\u4e3b\u51fd\u6570\u4f5c\u4e3a\u516c\u5f00\u51fd\u6570\uff0c\u5176\u4ed6\u7684\u51fd\u6570\u5bf9\u7528\u6237\u4e0d\u53ef\u89c1\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f7f\u7528\u79c1\u6709\u51fd\u6570\u5bf9\u7528\u6237\u4e5f\u662f\u6709\u597d\u5904\u7684\uff0c\u7528\u6237\u53ea\u9700\u8981\u5173\u6ce8\u5b9e\u73b0\u529f\u80fd\u7684\u4e3b\u51fd\u6570\uff0c\u5176\u4e2d\u7684\u5185\u90e8\u903b\u8f91\u65e0\u9700\u4e86\u89e3\uff0c\u79c1\u6709\u51fd\u6570\u90fd\u5176\u516c\u5f00\u53cd\u800c\u662f\u4e00\u79cd\u5e72\u6270\u3002 \u56e0\u6b64\uff0c\u5728\u7f16\u5199\u6a21\u5757\u65f6\uff0c\u8bfb\u8005\u4e0d\u9700\u8981\u4f7f\u7528\u7684\u51fd\u6570\u6216\u53d8\u91cf\u5168\u90e8\u5b9a\u4e49\u4e3a\u79c1\u6709\u51fd\u6570\u6216\u79c1\u6709\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\u7684\u51fd\u6570\u6216\u53d8\u91cf\u5219\u5b9a\u4e49\u4e3a\u516c\u5f00\u51fd\u6570\u6216\u79c1\u6709\u53d8\u91cf\u3002","title":"5.3.3 \u6a21\u5757\u7684\u4f5c\u7528\u57df"},{"location":"05-function-and-module/#534","text":"Python \u672c\u8eab\u5185\u7f6e\u4e86\u975e\u5e38\u591a\u7684\u6a21\u5757\uff08\u7ea6 200 \u4e2a\uff09\uff0c\u6db5\u76d6\u4e86\u4f17\u591a\u7684\u529f\u80fd\u9700\u6c42\uff0c\u5b89\u88c5 Python \u540e\u5c31\u53ef\u4ee5\u7acb\u523b\u4f7f\u7528\uff0c\u5982 sys \u6a21\u5757\u5305\u542b\u7cfb\u7edf\u76f8\u5173\u7684\u53c2\u6570\u4e0e\u51fd\u6570\u3001builtins \u6a21\u5757\u5305\u542b\u5185\u7f6e\u5bf9\u8c61\u3001os \u6a21\u5757\u5305\u542b\u591a\u65b9\u9762\u7684\u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3\u3001math \u6a21\u5757\u63d0\u4f9b\u4e86\u6570\u5b66\u5904\u7406\u51fd\u6570\u3002 \u5f53\u5185\u7f6e\u6a21\u5757\u4e0d\u80fd\u6ee1\u8db3\u9700\u6c42\u65f6\uff0c\u5982\u679c\u60f3\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u4ee3\u7801\u5e76\u4e0d\u590d\u6742\uff0c\u8bfb\u8005\u53ef\u4ee5\u5148\u5c1d\u8bd5\u81ea\u5df1\u7f16\u5199\u4ee3\u7801\u89e3\u51b3\u3002\u5982\u679c\u60f3\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u592a\u8fc7\u590d\u6742\uff0c\u8d85\u8fc7\u81ea\u8eab\u7684\u80fd\u529b\uff0c\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u641c\u7d22\u5b9e\u73b0\u76f8\u5173\u529f\u80fd\u7684\u4e09\u65b9\u6a21\u5757\u3002PyPI\uff08Python Package Index\uff09\u662f Python \u7684\u8f6f\u4ef6\u4ed3\u5e93\uff0c\u5b83\u76ee\u524d\u63d0\u4f9b\u4e86\u63a5\u8fd1 16 \u4e07\u4e2a Python \u8f6f\u4ef6\u5305\uff0c\u6db5\u76d6\u4e92\u8054\u7f51\u4e16\u754c\u7684\u5404\u4e2a\u9886\u57df\u3002Anaconda \u662f Python \u5e38\u7528\u8ba1\u7b97\u5305\u7684\u8f6f\u4ef6\u4ed3\u5e93\uff0c\u5b83\u76ee\u524d\u63d0\u4f9b\u4e86\u8fd1 2000 \u4e2a\u8ba1\u7b97\u8f6f\u4ef6\u5305\uff0c\u6db5\u76d6\u4e86\u6570\u636e\u5206\u6790\u9886\u57df\u5404\u4e2a\u65b9\u9762\u3002 PyPI \u548c Anaconda \u63d0\u4f9b\u7684\u8f6f\u4ef6\u5305\u5206\u522b\u53ef\u4ee5\u901a\u8fc7 pip \u5de5\u5177\u548c conda \u5de5\u5177\u8fdb\u884c\u5b89\u88c5\uff0c\u5b83\u4eec\u5177\u6709\u6781\u4e3a\u76f8\u4f3c\u7684\u8bed\u6cd5\uff0c\u7b80\u5355\u6613\u4e0a\u624b\u3002 \u56e0\u4e3a\u672c\u4e66\u7684\u5b66\u4e60\u662f\u57fa\u4e8e Anaconda \u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ecb\u7ecd conda \u5de5\u5177\u7684\u4f7f\u7528\u3002 conda \u5de5\u5177\u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5728\u7ec8\u7aef\u547d\u4ee4\u884c\u4e2d\u4f7f\u7528 \u2013help \u9009\u9879\u53ef\u4ee5\u5217\u51fa\u6240\u6709 conda \u652f\u6301\u7684\u547d\u4ee4\u4ee5\u53ca\u5b83\u4eec\u7684\u89e3\u91ca\u3002 $ conda --help usage: conda [-h] [-V] command ... conda is a tool for managing and deploying applications, environments and packages. Options: positional arguments: command clean Remove unused packages and caches. config Modify configuration values in .condarc. This is modeled after the git config command. Writes to the user .condarc file (/Users/wsx/.condarc) by default. create Create a new conda environment from a list of specified packages. help Displays a list of available conda commands and their help strings. info Display information about current conda install. install Installs a list of packages into a specified conda environment. list List linked packages in a conda environment. package Low-level conda package utility. (EXPERIMENTAL) remove Remove a list of packages from a specified conda environment. uninstall Alias for conda remove. See conda remove --help. search Search for packages and display associated information. The input is a MatchSpec, a query language for conda packages. See examples below. update Updates conda packages to the latest compatible version. This command accepts a list of package names and updates them to the latest versions that are compatible with all other packages in the environment. Conda attempts to install the newest versions of the requested packages. To accomplish this, it may update some packages that are already installed, or install additional packages. To prevent existing packages from updating, use the --no-update-deps option. This may force conda to install older versions of the requested packages, and it does not prevent additional dependency packages from being installed. If you wish to skip dependency checking altogether, use the '--force' option. This may result in an environment with incompatible packages, so this option must be used with great caution. upgrade Alias for conda update. See conda update --help. optional arguments: -h, --help Show this help message and exit. -V, --version Show the conda version number and exit. \u5982\u679c\u662f\u5728 IPython \u73af\u5883\u4e2d\uff0c\u8bfb\u8005\u4f7f\u7528 !conda \u2013help \u4e5f\u53ef\u4ee5\u8fd4\u56de\u4e0e\u4e0a\u8ff0\u4e00\u81f4\u7684\u7ed3\u679c\u3002 \u5e38\u7528\u7684\u64cd\u4f5c\u662f\u641c\u7d22\u3001\u5b89\u88c5\u4ee5\u53ca\u5220\u9664\uff08\u5378\u8f7d\uff09\u5305\uff0c\u5206\u522b\u5bf9\u5e94 search\u3001install \u548c remove \u5b50\u547d\u4ee4\u3002 \u4e0b\u9762\u662f\u641c\u7d22 ipython \u5305\u7684\u4f8b\u5b50\u3002 $ conda search ipython Loading channels: done # Name Version Build Channel ipython 0.13 py26_0 pkgs/free ipython 0.13 py27_0 pkgs/free ipython 0.13.1 py26_0 pkgs/free ipython 0.13.1 py26_1 pkgs/free ipython 0.13.1 py27_0 pkgs/free ipython 0.13.1 py27_1 pkgs/free ipython 0.13.1 py33_0 pkgs/free ipython 0.13.1 py33_1 pkgs/free ipython 0.13.2 py26_0 pkgs/free ipython 0.13.2 py27_0 pkgs/free ipython 0.13.2 py33_0 pkgs/free ipython 1.0.0 py26_0 pkgs/free ipython 1.0.0 py27_0 pkgs/free ipython 1.0.0 py33_0 pkgs/free ... \u6b64\u5904\u7701\u7565\u82e5\u5e72\u884c \u4e0a\u8ff0\u7ed3\u679c\u4e2d\u53ef\u4ee5\u770b\u5230\u5b58\u5728\u4e0d\u540c\u7684 Python \u7248\u672c\u548c\u5305\u7248\u672c\uff0c\u6240\u4ee5\u8bfb\u8005\u5b89\u88c5\u65f6\u9700\u8981\u6ce8\u610f\u81ea\u5df1\u4f7f\u7528\u7684 Python \u7248\u672c\u4ee5\u53ca\u60f3\u8981\u5b89\u88c5\u7684\u5305\u7248\u672c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cconda \u4f1a\u6839\u636e\u7528\u6237\u7684 Python \u7248\u672c\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684\u5305\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7b49\u53f7\u8fdb\u884c\u7248\u672c\u6307\u5b9a\u3002 $ conda install ipython # conda \u81ea\u52a8\u5b89\u88c5ipython\u5305\u7684\u6700\u65b0\u7248\u672c $ conda install ipython=0.13 # conda \u5b89\u88c5ipython\u5305\uff0c\u8fd9\u91cc\u6307\u5b9a\u7248\u672c\u4e3a0.13 \u4e3a\u4e86\u68c0\u6d4b\u662f\u5426\u5305\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\uff0c\u53ef\u4ee5\u5728 IPython \u4e2d\u7528 import \u8bed\u53e5\u5bfc\u5165\u5305\uff0c\u5982\u679c\u6ca1\u6709\u62a5\u9519\uff0c\u5219\u5b89\u88c5\u6210\u529f\u3002","title":"5.3.4 \u4e09\u65b9\u6a21\u5757\u7684\u5b89\u88c5"},{"location":"05-function-and-module/#535","text":"\u672c\u4e66\u5728\u524d\u9762\u4ecb\u7ecd\u7684\u7ae0\u8282\u4e2d\u5df2\u7ecf\u5728\u4e0d\u65f6\u5730\u4f7f\u7528\u7740\u6a21\u5757\uff0cPython \u901a\u8fc7 import \u5173\u952e\u5b57\u53ef\u4ee5\u5bfc\u5165\u6a21\u5757\uff0c\u7136\u540e\u4f7f\u7528\u5b83\u3002\u672c\u5c0f\u8282\u65e8\u5728\u66f4\u52a0\u8be6\u7ec6\u5730\u4ecb\u7ecd\u5bfc\u5165\u6a21\u5757\u7684\u65b9\u6cd5\u4ee5\u53ca\u7b80\u4ecb\u6a21\u5757\u641c\u7d22\u8def\u5f84\u7684\u77e5\u8bc6\u3002 \u5f53\u5b58\u5728\u591a\u4e2a\u6a21\u5757\u9700\u8981\u5bfc\u5165\u4f7f\u7528\u65f6\uff0c\u8bfb\u8005\u53ea\u9700\u8981\u7528\u82f1\u6587\u9017\u53f7\u5c06\u6a21\u5757\u540d\u5206\u5272\u5373\u53ef\u3002\u4f8b\u5982\u4e0b\u9762\u5bfc\u5165 3 \u4e2a\u6a21\u5757\uff1a import sys, os, time \u4e0d\u8fc7\uff0cPython \u98ce\u683c\u6307\u5357\u5efa\u8bae\u5c06\u6bcf\u4e2a\u5bfc\u5165\u8bed\u53e5\u5355\u72ec\u4e00\u884c\u4e66\u5199\u3002 import sys import os import time \u6709\u65f6\u6a21\u5757\u7684\u540d\u5b57\u8fc7\u957f\u6216\u8005\u4e0d\u597d\u7406\u89e3\uff0c\u6bcf\u6b21\u7f16\u5199\u663e\u5f97\u5f88\u9ebb\u70e6\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 as \u8bed\u53e5\u5c06\u6a21\u5757\u540d\u91cd\u547d\u540d\u3002 import sys as system \u73b0\u5728 sys \u6a21\u5757\u5c31\u6709\u4e86 system \u7684\u522b\u540d\u3002Python \u4e2d\u6709\u4e0d\u5c11\u5305\u90fd\u6709\u7740\u516c\u8ba4\u7684\u522b\u540d\uff0c\u5982 numpy \u5bfc\u5165\u4e3a np\u3002\u4f7f\u7528\u82f1\u6587\u53e5\u53f7\uff08\u6210\u5458\u64cd\u4f5c\u7b26\uff09\u53ef\u4ee5\u5bfc\u5165\u6307\u5b9a\u6a21\u5757\u7684\u5b50\u6a21\u5757\uff0cmatplotlib \u5305\u7684\u5b50\u6a21\u5757 pyplot \u5c31\u5e38\u88ab\u5bfc\u5165\u4e3a plt\u3002 import numpy as np import matplotlib.pyplot as plt \u6709\u65f6\u5019\u6211\u4eec\u4ec5\u60f3\u8981\u4f7f\u7528\u67d0\u4e2a\u6a21\u5757\u7279\u5b9a\u7684\u51fd\u6570\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 from \u8bed\u53e5\u8fdb\u884c\u5bfc\u5165\uff0c\u4f8b\u5982\u4ece math \u6a21\u5757\u4e2d\u5bfc\u5165\u9636\u4e58\u51fd\u6570 factorial()\u3002 from math import factorial \u8fd9\u6837\u8bfb\u8005\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 factorial() \u51fd\u6570\u4e86\u3002\u5982\u679c\u4f7f\u7528 import math \u7684\u65b9\u5f0f\uff0c\u8bfb\u8005\u5fc5\u987b\u901a\u8fc7 math.factorial() \u624d\u80fd\u8c03\u7528\u8be5\u51fd\u6570\u3002 \u5982\u679c\u60f3\u8981\u5bfc\u5165\u6a21\u5757\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u7528\u661f\u53f7\u7b26\u3002 from os import * \u8fd9\u6837\u5bfc\u5165\u7684\u597d\u5904\u662f\u8c03\u7528\u8d77\u6765\u65b9\u4fbf\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u6210\u5458\u64cd\u4f5c\u7b26\uff0c\u4f46\u5e26\u6765\u7684\u9ebb\u70e6\u66f4\u5927\uff0c\u5f53\u5bfc\u5165\u7684\u591a\u4e2a\u6a21\u5757\u5b58\u5728\u540c\u540d\u51fd\u6570\u6216\u53d8\u91cf\u65f6\uff0c\u8fd9\u6837 Python \u7684\u547d\u540d\u7a7a\u95f4\u5f88\u6df7\u4e71\uff0c\u4f60\u4e0d\u77e5\u9053\u4f60\u4f7f\u7528\u7684\u5230\u5e95\u662f\u54ea\u4e00\u4e2a\uff0c\u56e0\u6b64\u672c\u4e66\u4e0d\u63a8\u8350\u4f7f\u7528\u8be5\u65b9\u5f0f\u5bfc\u5165\u6a21\u5757\u51fd\u6570\u3002 \u4f7f\u7528\u6a21\u5757\u65f6\u8bfb\u8005\u9664\u4e86\u9700\u8981\u4e86\u89e3\u51e0\u79cd\u4e0d\u540c\u7684\u5bfc\u5165\u65b9\u5f0f\uff0c\u8fd8\u9700\u8981\u6ce8\u610f\u6a21\u5757\u7684\u641c\u7d22\u8def\u5f84\u3002 \u5f53 Python \u7528\u6237\u52a0\u8f7d\u6a21\u5757\u65f6\uff0cPython \u4f1a\u5728\u6307\u5b9a\u7684\u8def\u5f84\u4e0b\u641c\u7d22\u5bf9\u5e94\u7684 .py \u6587\u4ef6\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5c31\u4f1a\u62a5\u9519\uff1a In [1]: import somemodule --------------------------------------------------------------------------- ModuleNotFoundError Traceback (most recent call last) <ipython-input-1-b58142f7538b> in <module>() ----> 1 import somemodule ModuleNotFoundError: No module named 'somemodule' \u9ed8\u8ba4\u60c5\u51b5\u4e0b Python \u4f1a\u641c\u7d22 Python \u81ea\u8eab\u7684\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff08\u627e\u5230\u5b89\u88c5\u5305\u6240\u5728\u8def\u5f84\uff09\u4ee5\u53ca\u5f53\u524d\u76ee\u5f55\uff08\u7528\u6237\u53ef\u80fd\u81ea\u5df1\u521b\u5efa\u7684\u6a21\u5757\u8def\u5f84\uff09\u3002Python \u7684\u641c\u7d22\u8def\u5f84\u53ef\u4ee5\u901a\u8fc7 sys \u6a21\u5757\u7684 path \u53d8\u91cf\u83b7\u53d6\uff0c\u5982\u4e0b\u6240\u793a\uff1a In [2]: import sys In [3]: sys.path Out[3]: ['', '/home/zd/anaconda3/bin', '/home/zd/anaconda3/lib/python37.zip', '/home/zd/anaconda3/lib/python3.7', '/home/zd/anaconda3/lib/python3.7/lib-dynload', '/home/zd/anaconda3/lib/python3.7/site-packages', '/home/zd/anaconda3/lib/python3.7/site-packages/IPython/extensions', '/home/zd/.ipython'] \u6709\u4e24\u79cd\u529e\u6cd5\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u641c\u7d22\u8def\u5f84\uff1a\u4e00\u79cd\u662f\u4fee\u6539\u4e0a\u9762\u6240\u89c1\u7684 sys.path \u53d8\u91cf\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7 append() \u65b9\u6cd5\u6dfb\u52a0\u8def\u5f84\uff08\u5b57\u7b26\u4e32\uff09\uff0c\u8be5\u64cd\u4f5c\u5728 Python \u9000\u51fa\u540e\u4f1a\u5931\u6548\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e00\u6b21\u8fdb\u5165 Python \u90fd\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e\uff1b\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf PYTHONPATH\uff0c\u8be5\u53d8\u91cf\u5185\u5bb9\u4f1a\u88ab\u81ea\u52a8\u52a0\u5165\u5230\u6a21\u5757\u641c\u7d22\u8def\u5f84\u4e2d\uff0c\u4e00\u65e6\u8bbe\u5b9a\uff0c\u6c38\u4e45\u6709\u6548\u3002\u4e0d\u8fc7\u8be5\u65b9\u6cd5\u9700\u8981\u8bfb\u8005\u638c\u63e1\u4e00\u5b9a\u7cfb\u7edf\u77e5\u8bc6\uff0c\u56e0\u6b64\u672c\u4e66\u4e0d\u4f5c\u8be6\u7ec6\u4ecb\u7ecd\u3002","title":"5.3.5 \u6a21\u5757\u7684\u4f7f\u7528"},{"location":"05-function-and-module/#54","text":"\u51fd\u6570\u548c\u6a21\u5757\u662f Python \u7528\u6237\u5e38\u89c1\u7684\u64cd\u4f5c\u5bf9\u8c61\uff0c\u56e0\u6b64\u719f\u7ec3\u5730\u638c\u63e1\u5982\u4f55\u4f7f\u7528\u548c\u521b\u5efa\u51fd\u6570\u3001\u4f7f\u7528\u6a21\u5757\u6781\u4e3a\u91cd\u8981\u3002\u672c\u7ae0\u4ece\u51fd\u6570\u7684\u4f7f\u7528\u3001\u521b\u5efa\u3001\u53c2\u6570\u8bbe\u5b9a\uff0c\u6a21\u5757\u7684\u5b89\u88c5\u3001\u5bfc\u5165\u4e0e\u521b\u5efa\u4ee5\u53ca\u76f8\u5173\u6ce8\u610f\u4e8b\u9879\u65b9\u9762\u90fd\u4f5c\u4e86\u8be6\u5c3d\u7684\u4ecb\u7ecd\uff0c\u8bfb\u8005\u5728\u5b9e\u9645\u7684\u64cd\u4f5c\u4e2d\u9700\u8981\u591a\u52a0\u7ec3\u4e60\u3002\u5173\u4e8e\u7f16\u5199\u51fd\u6570\u4e0e\u6a21\u5757\u6709\u4e24\u6761\u6ce8\u610f\u4e8b\u9879\uff1a\u4e00\u4e2a\u597d\u7684\u51fd\u6570\u4e00\u822c\u6765\u8bf4\u8c03\u7528\u8005\uff08\u7528\u6237\uff09\u9700\u8981\u8bbe\u5b9a\u7684\u53c2\u6570\u6570\u76ee\u5f88\u5c11\uff0c\u56e0\u6b64\u8bfb\u8005\u5728\u7f16\u5199\u65f6\u9700\u8981\u5408\u9002\u8bbe\u7f6e\u4e00\u4e9b\u9ed8\u8ba4\u53c2\u6570\uff1b\u521b\u5efa\u6a21\u5757\u65f6\u540d\u5b57\u4e0d\u80fd\u548c Python \u81ea\u5e26\u7684\u6a21\u5757\u540d\u79f0\u4e00\u6837\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002","title":"5.4 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"06-numpy/","text":"\u7b2c 6 \u7ae0 NumPy \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a NumPy \u7b80\u4ecb\u4e0e ndarray ndarray \u6570\u7ec4\u64cd\u4f5c ndarray \u6570\u7ec4\u51fd\u6570\u4e0e\u65b9\u6cd5 \u524d\u51e0\u7ae0\u672c\u4e66\u4ecb\u7ecd\u4e86 Python \u57fa\u672c\u7684\u7f16\u7a0b\u77e5\u8bc6\uff0c\u4ece\u8fd9\u4e00\u7ae0\u5f00\u59cb\u8bfb\u8005\u5c06\u8fdb\u5165 Python \u6570\u636e\u5206\u6790\u57fa\u7840\u6a21\u5757\u7684\u5b66\u4e60\uff0c\u5305\u62ec NumPy\u3001Matplotlib \u548c Pandas \u4e09\u5927\u6a21\u5757\uff0c\u5b83\u4eec\u5c06\u5206\u4e3a 3 \u4e2a\u7ae0\u8282\u5206\u522b\u8fdb\u884c\u4ecb\u7ecd\u3002 NumPy \u662f Python \u6570\u636e\u5904\u7406\u6700\u91cd\u8981\u7684\u57fa\u7840\u5305\uff0c\u7edd\u5927\u591a\u6570\u7684 Python \u6570\u636e\u5206\u6790\u8f6f\u4ef6\u5305\u90fd\u662f\u57fa\u4e8e NumPy \u6784\u5efa\u7684\uff0c\u56e0\u6b64\u5b66\u4f1a\u64cd\u4f5c NumPy \u662f\u8bfb\u8005\u719f\u7ec3\u4f7f\u7528 Python \u8fdb\u884c\u6570\u636e\u5206\u6790\u7684\u57fa\u77f3\u3002 6.1 NumPy \u7b80\u4ecb\u4e0e ndarray \u00b6 6.1.1 NumPy \u7b80\u4ecb \u00b6 \u5728\u5b66\u4e60 NumPy \u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\u5b83\u7684\u5386\u53f2\u3002 Python \u7684\u9762\u5411\u6570\u7ec4\u8ba1\u7b97\u53ef\u4ee5\u8ffd\u6eaf\u5230 1995 \u5e74\uff0cJim Hugunin \u521b\u5efa\u4e86 Numeric \u5e93\u3002\u5728\u63a5\u4e0b\u6765\u7684 10 \u5e74\u4e2d\uff0c\u8bb8\u591a\u79d1\u5b66\u7f16\u7a0b\u793e\u533a\u7eb7\u7eb7\u5f00\u59cb\u4f7f\u7528 Python \u7684\u6570\u7ec4\u7f16\u7a0b\uff0c\u4f46\u662f\u8fdb\u5165 21 \u4e16\u7eaa\u540e\uff0cNumeric \u5e93\u7684\u751f\u6001\u7cfb\u7edf\u53d8\u5f97\u788e\u7247\u5316\u4e86\u30022005 \u5e74\uff0cTravis Oliphant \u4ece Numeric \u548c Numarray \u9879\u76ee\u6574\u7406\u51fa\u4e86 NumPy \u9879\u76ee\uff0c\u5c06\u6240\u6709 Python \u8ba1\u7b97\u793e\u533a\u90fd\u96c6\u5408\u5230\u4e86\u8fd9\u4e2a\u6846\u67b6\u4e0b\u3002 NumPy \u6709\u7740\u8f83\u6f2b\u957f\u7684\u6f14\u5316\u5386\u53f2\uff0c\u5b83\u672c\u8eab\u5173\u6ce8\u4e0e\u5e95\u5c42\u8bed\u8a00\uff08\u5982 C\u3001C++\uff09\u7684\u4ea4\u4e92\u3001\u6570\u7ec4\u8fd0\u7b97\u3001\u6570\u5b66\u51fd\u6570\u8fd0\u7b97\u3001\u78c1\u76d8\u6570\u636e\u7684\u8bfb\u5199\u7b49\u3002NumPy \u5728\u8ba1\u7b97\u673a\u4e00\u4e2a\u72ec\u7acb\u4e8e\u5176\u4ed6 Python \u5185\u7f6e\u5bf9\u8c61\u7684\u8fde\u7eed\u7684\u5185\u5b58\u5757\u4e2d\u5b58\u50a8\u6570\u636e\uff0c\u5b83\u5185\u90e8\u7684 C \u8bed\u8a00\u7b97\u6cd5\u5e93\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\uff0c\u53ef\u4ee5\u5bf9\u6570\u7ec4\u6267\u884c\u590d\u6742\u7684\u8ba1\u7b97\uff0c\u51cf\u5c11\u5185\u5b58\u7684\u6d88\u8017\u4ee5\u53ca\u63d0\u5347\u8ba1\u7b97\u6548\u7387\u3002\u867d\u7136 NumPy \u672c\u8eab\u5e76\u6ca1\u6709\u63d0\u4f9b\u5f88\u9ad8\u7ea7\u7684\u6570\u5b66\u5206\u6790\u529f\u80fd\uff0c\u4f46\u5b83\u6240\u63d0\u4f9b\u7684\u5e95\u5c42\u8bed\u8a00\u63a5\u53e3\u3001\u65e0\u9700\u7f16\u5199\u5faa\u73af\u7684\u5feb\u901f\u8fd0\u7b97\u6570\u5b66\u51fd\u6570\u3001\u64cd\u4f5c\u5feb\u901f\u4e14\u8282\u7701\u7a7a\u95f4\u7684\u591a\u7ef4\u6570\u7ec4\u7b49\u7279\u6027\u8ba9\u5b83\u6210\u4e3a Python \u6570\u636e\u5206\u6790\u6700\u6838\u5fc3\u7684\u8ba1\u7b97\u5e93\u4e4b\u4e00\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u7406\u89e3\u548c\u719f\u7ec3\u64cd\u4f5c NumPy \u6570\u7ec4\u5c06\u6709\u52a9\u4e8e\u8bfb\u8005\u4f7f\u7528 Pandas \u7b49\u9ad8\u7ea7\u5e93\u3002 \u5728\u6570\u636e\u5206\u6790\u65f6\uff0cNumPy \u80fd\u4e3a\u8bfb\u8005\u63d0\u4f9b\u7684\u6709\u7528\u529f\u80fd\u4e3b\u8981\u6709\uff1a \u5411\u91cf\u5316\u6570\u7ec4\u64cd\u4f5c\uff0c\u5305\u62ec\u6570\u636e\u5b50\u96c6\u7684\u6784\u5efa\u3001\u6570\u636e\u8fc7\u6ee4\u4e0e\u6570\u636e\u8f6c\u6362\u7b49\u3002 \u5e38\u7528\u7684\u6570\u7ec4\u7b97\u6cd5\u64cd\u4f5c\uff0c\u5305\u62ec\u6392\u5e8f\u3001\u552f\u4e00\u503c\u3001\u96c6\u5408\u8fd0\u7b97\u7b49\u3002 \u63cf\u8ff0\u6027\u7edf\u8ba1\u91cf\u548c\u6570\u636e\u6c47\u603b\u6458\u8981\u3002 \u5173\u7cfb\u578b\u6570\u636e\u64cd\u4f5c\uff0c\u5305\u62ec\u6570\u636e\u96c6\u7684\u5408\u5e76\u3001\u8fde\u63a5\u7b49\u3002 \u6570\u7ec4\u7684\u5206\u7ec4\u8fd0\u7b97\uff0c\u5305\u62ec\u805a\u5408\u3001\u8f6c\u6362\u3001\u51fd\u6570\u5e94\u7528\u7b49\u3002 \u6761\u4ef6\u5faa\u73af\u7ed3\u6784\u7684\u6570\u7ec4\u5316\uff0c\u5373\u4f7f\u7528\u6570\u7ec4\u64cd\u4f5c\u66ff\u6362 if-else \u7b49\u7ed3\u6784\uff0c\u83b7\u5f97\u9ad8\u6548\u7684\u8ba1\u7b97\u6548\u7387\u3002 \u4e3a\u4e86\u8ba9\u8bfb\u8005\u660e\u767d NumPy \u4e0e Python \u672c\u8eab\u5177\u4f53\u7684\u8ba1\u7b97\u6027\u80fd\u5dee\u5f02\uff0c\u8fd9\u91cc\u7528\u4e00\u4e2a\u4e00\u5343\u4e07\u6574\u6570\u7684\u6570\u7ec4\u548c\u4e00\u4e2a\u7b49\u957f\u7684 Python \u5217\u8868\u8fdb\u884c\u6d4b\u8bd5\u3002 In [1]: import numpy as np In [2]: np_array = np.arange(10000000) In [3]: py_array = list(range(10000000)) In [4]: %time for i in range(10): np_array * 2 CPU times: user 136 ms, sys: 300 ms, total: 436 ms Wall time: 435 ms In [5]: %time for i in range(10): [ x*2 for x in py_array ] CPU times: user 6.04 s, sys: 1.66 s, total: 7.7 s Wall time: 7.7 s \u4e0a\u9762\u4ee3\u7801\u5c06\u4e24\u4e2a\u5e8f\u5217\u90fd\u5206\u522b\u4e58\u4ee5 2\uff0c\u8ba1\u7b97\u4e86 10 \u6b21\u3002\u5f88\u660e\u663e\uff0cNumPy \u6bd4\u5217\u8868\u63a8\u5bfc\u5f0f\u8282\u7701\u4e86 10 \u591a\u500d\u7684\u65f6\u95f4\uff0c\u53e6\u5916\u5728\u64cd\u4f5c\u4e0a\uff0cNumPy \u66f4\u7b80\u5355\u76f4\u63a5\uff08\u53e6\u5916 NumPy \u5360\u7528\u7684\u5185\u5b58\u66f4\u5c11\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u6ca1\u6709\u4f53\u73b0\u51fa\u6765\uff09\u3002 \u8fd9\u91cc\u6700\u8ba9\u4eba\u60ca\u53f9\u7684\u662f\u5bf9\u4e8e\u4e00\u4e2a 1000 \u4e07\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\uff08\u6210\u4e3a\u5411\u91cf\u6216\u77e2\u91cf\uff09\u4e58\u6cd5\u64cd\u4f5c\uff0cNumPy \u4f7f\u7528\u65b9\u6cd5\u8ddf\u5355\u4e2a\u503c\uff08\u79f0\u4e3a\u6807\u91cf\uff09\u5b8c\u5168\u4e00\u81f4\u3002\u8fd9\u79cd\u9ad8\u6548\u4e14\u7b80\u6613\u64cd\u4f5c\u7684 NumPy \u6570\u7ec4\u5176\u6b63\u5f0f\u5bf9\u8c61\u540d\u4e3a ndarray\u3002 6.1.2 \u521b\u5efa ndarray \u00b6 ndarray\uff08N \u7ef4\u6570\u7ec4\u5bf9\u8c61\uff09\u662f\u4e00\u4e2a\u5feb\u901f\u4e14\u7075\u6d3b\u7684\u6570\u636e\u96c6\u5bb9\u5668\uff0cPython \u7528\u6237\u53ef\u4ee5\u5229\u7528 ndarray \u5bf9\u6570\u7ec4\u7684\u6574\u5757\u6570\u636e\u6216\u9009\u62e9\u6027\u6570\u636e\u6267\u884c\u6279\u91cf\u64cd\u4f5c\uff0c\u5b83\u7684\u8bed\u6cd5\u4e0e\u6807\u91cf\u8fd0\u7b97\u4e00\u81f4\u3002 \u5728\u4e0a\u4e00\u5c0f\u8282\u7684\u4ecb\u7ecd\u4e2d\uff0c\u672c\u4e66\u4f7f\u7528\u4e86 arange() \u51fd\u6570\u5feb\u901f\u521b\u5efa\u4e86\u4e00\u4e2a\u542b\u8fde\u7eed\u503c\u7684 ndarray \u5bf9\u8c61\uff0c\u8fd9\u5bf9\u5e94 Python \u5e38\u7528\u7684\u5185\u7f6e\u51fd\u6570 range()\u3002\u9664\u4e86 arange() \u51fd\u6570\uff0c\u521b\u5efa ndarray \u6700\u7b80\u5355\u7684\u529e\u6cd5\u662f\u7528 array() \u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u5e8f\u5217\uff08\u5217\u8868\u3001\u5143\u7ec4\u7b49\uff09\u4f5c\u4e3a\u8f93\u5165\uff0c\u8f93\u51fa\u4e00\u4e2a\u5305\u542b\u8f93\u5165\u6570\u636e\u7684 ndarray\u3002 \u4e0b\u9762\u4ee3\u7801\u6f14\u793a\u4f7f\u7528\u5217\u8868\u548c\u5143\u7ec4\u521b\u5efa ndarray \u4ee5\u53ca\u4e00\u4e2a\u9519\u8bef\u793a\u4f8b\uff1a In [7]: np.array([1, 3, 5, 7]) Out[7]: array([1, 3, 5, 7]) In [8]: np.array((2, 4, 6, 8)) Out[8]: array([2, 4, 6, 8]) In [9]: np.array(2, 4, 6, 8) --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-9-1ec14a5e9a23> in <module>() ----> 1 np.array(2, 4, 6, 8) ValueError: only 2 non-keyword arguments accepted \u5d4c\u5957\u5217\u8868\u53ef\u4ee5\u8f6c\u6362\u4e3a\u4e00\u4e2a\u591a\u7ef4\u6570\u7ec4\uff0c\u6570\u7ec4\u5143\u7d20\u7b49\u957f\u548c\u4e0d\u7b49\u957f\u5f97\u5230\u7684\u7ed3\u679c\u662f\u4e0d\u4e00\u6837\u7c7b\u578b\u3002\u4ece\u4e0b\u9762\u4ee3\u7801\u8f93\u51fa\u4e2d\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u8f93\u5165\u7684\u5d4c\u5957\u5217\u8868\u5143\u7d20\u7b49\u957f\u65f6\uff0c\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u591a\u7ef4\u6570\u7ec4\uff08\u8fd9\u91cc\u662f 2 \u7ef4\uff09\uff0c\u800c\u5143\u7d20\u4e0d\u7b49\u957f\u65f6\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u5185\u90e8\u7684\u5b50\u5217\u8868\u662f ndarray \u4e00\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u4e24\u4e2a\u5143\u7d20\u3002 In [10]: np.array([[1, 3, 5, 7], [2, 4, 6, 8]]) Out[10]: array([[1, 3, 5, 7], [2, 4, 6, 8]]) In [11]: np.array([[1, 3, 5, 7], [2, 4, 6]]) Out[11]: array([list([1, 3, 5, 7]), list([2, 4, 6])], dtype=object) ndarray \u4e00\u65e6\u521b\u5efa\uff0c\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u5c5e\u6027\u83b7\u53d6\u6570\u7ec4\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u4f8b\u5982\uff0cndim \u5c5e\u6027\u53ef\u4ee5\u83b7\u53d6\u7ef4\u5ea6\uff0cshape \u5c5e\u6027\u53ef\u4ee5\u83b7\u53d6\u6bcf\u4e2a\u7ef4\u5ea6\u5177\u4f53\u7684\u957f\u5ea6\u3002 In [12]: arr1 = np.array([[1, 3, 5, 7], [2, 4, 6, 8]]) In [14]: arr1.ndim Out[14]: 2 In [15]: arr1.shape Out[15]: (2, 4) ndarray \u9664\u4e86\u5b58\u50a8\u5e38\u89c1\u7684\u6570\u503c\u7c7b\u578b\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u5b58\u50a8 Python \u5176\u4ed6\u7684\u5e38\u89c1\u6570\u636e\u7c7b\u578b\uff0c\u5982\u5b57\u7b26\u4e32\u3001\u903b\u8f91\u503c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNumPy \u7684 array() \u51fd\u6570\u4f1a\u81ea\u52a8\u4e3a\u8f93\u5165\u5e8f\u5217\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7c7b\u578b\u503c\u4f1a\u88ab\u4fdd\u5b58\u5728\u4e00\u4e2a\u79f0\u4e3a dtype \u7684\u7279\u6b8a\u5bf9\u8c61\u4e2d\uff0c\u5b83\u540c\u6837\u53ef\u4ee5\u4ee5\u5c5e\u6027\u7684\u5f62\u5f0f\u8bbf\u95ee\u3002 In [16]: arr1.dtype Out[16]: dtype('int64') \u4e0a\u8ff0\u7ed3\u679c\u663e\u793a\u8f93\u5165\u7684\u90fd\u662f\u6574\u6570\u65f6\uff0cNumPy \u5b58\u50a8\u7684\u6570\u636e\u7c7b\u578b\u662f int64\uff0c\u5373 64 \u4f4d\u6574\u6570\u3002\u5f53\u8f93\u5165\u7684\u6570\u636e\u5305\u542b\u6d6e\u70b9\u7c7b\u578b\uff0cNumPy \u751f\u6210\u7684 ndarray \u90fd\u5c06\u4e3a\u6d6e\u70b9\u6570\u3002ndarray \u4f1a\u5f3a\u5236\u6240\u6709\u7684\u5143\u7d20\u6570\u636e\u7c7b\u578b\u4fdd\u6301\u4e00\u81f4\u3002 In [17]: arr2 = np.array([[1.0, 3, 5, 7], [2, 4.0, 6, 8]]) In [18]: arr2.dtype Out[18]: dtype('float64') \u5c3d\u7ba1\u5bf9\u8c61 arr2 \u4e0e arr1 \u5b58\u50a8\u7684\u6570\u636e\u5728\u4fe1\u606f\u5c42\u9762\u6ca1\u6709\u5dee\u5f02\uff0c\u4f46 NumPy \u5b58\u50a8\u5b83\u4eec\u7684\u65b9\u5f0f\u662f\u4e0d\u4e00\u6837\u7684\u3002 \u4e00\u822c\u5728\u6570\u636e\u5206\u6790\u64cd\u4f5c\u7684\u5bf9\u8c61\u662f\u6570\u503c\u578b\u7684\u6570\u7ec4\uff0c\u4e3a\u4e86\u65b9\u4fbf\u4e00\u4e9b\u5e38\u7528\u6570\u7ec4\u7684\u521b\u5efa\uff0cNumPy \u63d0\u4f9b\u4e86\u4e13\u95e8\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff0czeros() \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u5168 0 \u6570\u7ec4\uff0cones() \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u5168 1 \u6570\u7ec4\uff0cempty() \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u7a7a\u6570\u7ec4\u3002\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u65f6\u53ea\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u8868\u793a\u5f62\u72b6\u7684\u6570\u503c\u6216\u5143\u7ec4\u3002 \u4e0b\u9762\u4ee3\u7801\u6f14\u793a\u4e86 1 \u7ef4\u5230 3 \u7ef4\u6570\u7ec4\u7684\u521b\u5efa\u3002 In [19]: np.ones(5) Out[19]: array([1., 1., 1., 1., 1.]) In [20]: np.empty((2, 5)) Out[20]: array([[6.94152610e-310, 4.66070032e-310, 4.66070031e-310, 6.94152610e-310, 7.35167805e+223], [5.40761401e-067, 1.39835953e-076, 7.01413727e-009, 2.17150970e+214, 6.45967520e+270]]) In [21]: np.zeros((2,3,4)) Out[21]: array([[[0., 0., 0., 0.], [0., 0., 0., 0.], [0., 0., 0., 0.]], [[0., 0., 0., 0.], [0., 0., 0., 0.], [0., 0., 0., 0.]]]) \u521b\u5efa\u7684\u6570\u7ec4\u9ed8\u8ba4\u6570\u636e\u7c7b\u578b\u90fd\u662f\u6d6e\u70b9\u6570\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u5728\u521b\u5efa\u65f6\u6307\u5b9a dtype \u53c2\u6570\u8fdb\u884c\u66f4\u6539\u3002\u5728 IPython Shell \u6216 Jupyter Notebook \u4e2d\u952e\u5165 np.ones? \u53ef\u4ee5\u67e5\u770b\u8be6\u7ec6\u7684\u53c2\u6570\u8bf4\u660e\u4ee5\u53ca\u793a\u4f8b\uff0c\u8fd9\u51e0\u4e2a\u51fd\u6570\u7684\u7528\u6cd5\u5927\u4f53\u662f\u4e00\u81f4\u7684\u3002 Signature: np.ones(shape, dtype=None, order='C') Docstring: Return a new array of given shape and type, filled with ones. Parameters ---------- shape : int or sequence of ints Shape of the new array, e.g., ``(2, 3)`` or ``2``. dtype : data-type, optional The desired data-type for the array, e.g., `numpy.int8`. Default is `numpy.float64`. order : {'C', 'F'}, optional, default: C Whether to store multi-dimensional data in row-major (C-style) or column-major (Fortran-style) order in memory. Returns ------- out : ndarray Array of ones with the given shape, dtype, and order. See Also -------- ones_like : Return an array of ones with shape and type of input. empty : Return a new uninitialized array. zeros : Return a new array setting values to zero. full : Return a new array of given shape filled with value. \u5b57\u7b26\u4e32\u6570\u7ec4\u5b58\u50a8\u7684\u6570\u636e\u5982\u679c\u90fd\u662f\u6570\u5b57\uff0c\u6211\u4eec\u5e38\u5c06\u5b83\u8f6c\u6362\u4e3a\u6570\u503c\u578b\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u901a\u8fc7 ndarray \u5bf9\u8c61\u7684 astype() \u65b9\u6cd5\u5b9e\u73b0\u3002 In [24]: num_string = np.array(['1.0', '2', '3.45'], dtype = np.string_) In [25]: num_string Out[25]: array([b'1.0', b'2', b'3.45'], dtype='|S4') In [26]: num_string.astype(float) Out[26]: array([1. , 2. , 3.45]) \u4e0a\u9762\u4f8b\u5b50\u7684 astype() \u4e2d\u4f7f\u7528\u4e86 float\uff0c\u5b83\u662f Python \u5185\u7f6e\u7684\u6570\u636e\u7c7b\u578b\uff0cNumPy \u4f1a\u5c06\u5176\u81ea\u52a8\u6620\u5c04\u5230\u7b49\u4ef7\u7684 dtype \u4e0a\uff0c\u5373 float64\u3002\u5982\u679c\u5c06\u6574\u6570\u578b\u6570\u636e\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\uff0c\u4fe1\u606f\u4e0d\u4f1a\u4e22\u5931\uff0c\u4f46\u5c06\u6d6e\u70b9\u6570\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u5c0f\u6570\u90e8\u5206\u5c06\u88ab\u4e22\u5931\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u5728\u4e0a\u9762\u4f8b\u5b50\u7684\u57fa\u7840\u4e0a\u6784\u5efa\uff0c\u9664\u4e86\u4f7f\u7528 Python \u5185\u7f6e\u7684 float\u3001int \u7b49\u6570\u636e\u7c7b\u578b\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 NumPy \u63d0\u4f9b\u7684\u66f4\u7cbe\u786e\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982 int32\u3001int64\u3001float32\u3001float64 \u7b49\u3002 In [28]: num_string.astype(float).astype(np.int32) Out[28]: array([1, 2, 3], dtype=int32) In [29]: num_string.astype(float).astype(np.int64) Out[29]: array([1, 2, 3]) 6.2 \u6570\u7ec4\u64cd\u4f5c \u00b6 6.2.1 \u6570\u7ec4\u8fd0\u7b97 \u00b6 \u5229\u7528 NumPy \u6570\u7ec4\uff0cPython \u7528\u6237\u5728\u4e0d\u4f7f\u7528\u5faa\u73af\u7684\u60c5\u51b5\u4e0b\u5c31\u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u6279\u91cf\u8fd0\u7b97\uff0c\u8be5\u7279\u6027\u79f0\u4e3a\u5411\u91cf\u5316\u8ba1\u7b97\u3002\u5411\u91cf\u5316\u8ba1\u7b97\u610f\u5473\u7740\u5927\u5c0f\u76f8\u540c\u7684\u6570\u7ec4\u4e4b\u95f4\u4efb\u4f55\u7b97\u672f\u8fd0\u7b97\u90fd\u4f1a\u5e94\u7528\u5230\u5176\u6210\u5bf9\u7684\u5143\u7d20\u3002\u4e0b\u9762\u4ee3\u7801\u5c55\u793a\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\u7684\u4f8b\u5b50\u3002 In [30]: arr = np.array([[2, 3., 4.], [4, 5.4, 6]]) In [31]: arr Out[31]: array([[2. , 3. , 4. ], [4. , 5.4, 6. ]]) In [32]: arr * arr Out[32]: array([[ 4. , 9. , 16. ], [16. , 29.16, 36. ]]) In [33]: arr ** 2 Out[33]: array([[ 4. , 9. , 16. ], [16. , 29.16, 36. ]]) In [34]: arr - arr Out[34]: array([[0., 0., 0.], [0., 0., 0.]]) In [35]: arr / arr Out[35]: array([[1., 1., 1.], [1., 1., 1.]]) In [36]: arr + arr Out[36]: array([[ 4. , 6. , 8. ], [ 8. , 10.8, 12. ]]) \u5f53\u4e0a\u8ff0\u64cd\u4f5c\u7684\u67d0\u4e00\u65b9\u662f\u6807\u91cf\u65f6\uff08\u6216\u7ef4\u5ea6\u66f4\u4f4e\uff09\uff0cNumPy \u4f1a\u81ea\u52a8\u8fdb\u884c\u586b\u5145\uff0c\u5c06\u6807\u91cf\u7684\u7ef4\u5ea6\u6269\u5c55\u5230\u4e0e ndarray \u6570\u7ec4\u4e00\u81f4\uff0c\u7136\u540e\u8fdb\u884c\u5411\u91cf\u5316\u8fd0\u7b97\u3002\u8be5\u65b9\u5f0f\u79f0\u4e3a\u5e7f\u64ad\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6807\u91cf\u5bf9\u4e00\u4e2a ndarray \u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u3002 In [37]: 1 + np.array([2, 3, 4]) Out[37]: array([3, 4, 5]) In [38]: 1 - np.array([2, 3, 4]) Out[38]: array([-1, -2, -3]) \u5f53 NumPy \u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u5b83\u9996\u5148\u5c06 1 \u8f6c\u53d8\u4e3a ndarray [1, 1, 1]\uff0c\u7136\u540e\u8fdb\u884c\u8fd0\u7b97\uff0c\u5373\uff1a In [39]: np.array([1, 1, 1]) + np.array([2, 3, 4]) Out[39]: array([3, 4, 5]) \u5982\u679c\u8fd0\u7b97\u7684\u662f\u4e24\u4e2a\u6570\u7ec4\uff0cNumPy \u4f1a\u5c1d\u8bd5\u540c\u65f6\u586b\u5145\u4e24\u4e2a\u6570\u7ec4\u4f7f\u5f97\u5b83\u4eec\u7ef4\u5ea6\u4e00\u81f4\uff0c\u5982\u679c\u4e0d\u80fd\u4f7f\u5f97\u7ef4\u5ea6\u4e00\u81f4\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f In [40]: np.array([1, 1]) + np.array([2, 3, 4]) --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-40-1fbcd8e2dd89> in <module>() ----> 1 np.array([1, 1]) + np.array([2, 3, 4]) ValueError: operands could not be broadcast together with shapes (2,) (3,) Python \u629b\u51fa\u9519\u8bef\uff0c\u8fd9\u91cc\u63d0\u793a\u65e0\u6cd5\u5c06\u7ef4\u5ea6\u5206\u522b\u662f (2,) \u548c (3,) \u7684\u6570\u7ec4\u5e7f\u64ad\u5230\u4e00\u8d77\u3002 ndarray \u6570\u7ec4\u4e4b\u95f4\u9664\u4e86\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\uff0c\u8fd8\u80fd\u8fdb\u884c\u6bd4\u8f83\u64cd\u4f5c\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u662f\u76f8\u540c\u7ef4\u5ea6\u7684\u5e03\u5c14\u578b\u6570\u7ec4\u3002\u6ce8\u610f\u5b83\u4eec\u6bd4\u8f83\u7684\u65b9\u5f0f\u4e5f\u662f\u6210\u5bf9\u5730\uff0c\u5373\u6309\u5143\u7d20\u6bd4\u8f83\u3002 In [43]: np.array([5, 1, 7, 2]) > np.array([2, 3, 4, 5]) Out[43]: array([ True, False, True, False]) \u4e0a\u9762\u4ee3\u7801\u4e2d\u6bd4\u8f83\u7684\u7ed3\u679c\u662f 5 \u6bd4 2 \u5927\u30011 \u6bd4 3 \u5c0f\u30017 \u6bd4 4 \u5927\u30012 \u6bd4 5 \u5c0f\u3002 NumPy \u53ef\u4ee5\u8ba9\u591a\u79cd\u6570\u636e\u5904\u7406\u4efb\u52a1\u8868\u793a\u4e3a\u7b80\u6d01\u7684\u6570\u7ec4\u8868\u8fbe\u5f0f\uff0c\u51cf\u5c11\u4e86\u5faa\u73af\u7684\u7f16\u5199\uff0c\u63d0\u9ad8\u4e86\u8ba1\u7b97\u7684\u6548\u7387\u3002\u901a\u5e38\u5411\u91cf\u5316\u7684\u6570\u7ec4\u8fd0\u7b97\u8981\u6bd4\u7b49\u4ef7\u7684\u7eaf Python \u64cd\u4f5c\u81f3\u5c11\u5feb 1 \u4e2a\u6570\u91cf\u7ea7\uff0c\u7279\u522b\u662f\u8fdb\u884c\u5404\u79cd\u6570\u503c\u8ba1\u7b97\u7684\u60c5\u51b5\u4e0b\u3002 \u7f51\u683c\u641c\u7d22\u7b97\u6cd5\u662f\u79d1\u5b66\u8ba1\u7b97\u4e2d\u5bfb\u627e\u5168\u5c40\u6700\u4f18\u89e3\u7684\u4e00\u79cd\u5e38\u7528\u624b\u6bb5\uff0c\u5b83\u7684\u4e00\u4e2a\u8ba1\u7b97\u5b9e\u73b0\u57fa\u7840\u662f\u9996\u5148\u6784\u5efa\u89e3\u7684\u7f51\u683c\u7a7a\u95f4\u3002\u73b0\u5728\u5047\u8bbe\u6211\u4eec\u8981\u5728\u4e00\u7ec4\u7f51\u683c\u578b\u503c\u4e0a\u8ba1\u7b97\u51fd\u6570 x+y^2\uff0c\u9996\u5148\u4f7f\u7528 np.meshgrid() \u51fd\u6570\u4ea7\u751f x \u4e0e y \u7684\u5b9a\u4e49\u57df\uff08\u53d6\u503c\u533a\u95f4\uff09\u3002 In [7]: x = np.arange(-5, 2, 0.01) In [8]: y = np.arange(-20, -10, 0.2) In [9]: xspace, yspace = np.meshgrid(x, y) In [10]: xspace Out[10]: array([[-5. , -4.99, -4.98, ..., 1.97, 1.98, 1.99], [-5. , -4.99, -4.98, ..., 1.97, 1.98, 1.99], [-5. , -4.99, -4.98, ..., 1.97, 1.98, 1.99], ..., [-5. , -4.99, -4.98, ..., 1.97, 1.98, 1.99], [-5. , -4.99, -4.98, ..., 1.97, 1.98, 1.99], [-5. , -4.99, -4.98, ..., 1.97, 1.98, 1.99]]) In [11]: yspace Out[11]: array([[-20. , -20. , -20. , ..., -20. , -20. , -20. ], [-19.8, -19.8, -19.8, ..., -19.8, -19.8, -19.8], [-19.6, -19.6, -19.6, ..., -19.6, -19.6, -19.6], ..., [-10.6, -10.6, -10.6, ..., -10.6, -10.6, -10.6], [-10.4, -10.4, -10.4, ..., -10.4, -10.4, -10.4], [-10.2, -10.2, -10.2, ..., -10.2, -10.2, -10.2]]) In [12]: xspace + yspace ** 2 Out[12]: array([[395. , 395.01, 395.02, ..., 401.97, 401.98, 401.99], [387.04, 387.05, 387.06, ..., 394.01, 394.02, 394.03], [379.16, 379.17, 379.18, ..., 386.13, 386.14, 386.15], ..., [107.36, 107.37, 107.38, ..., 114.33, 114.34, 114.35], [103.16, 103.17, 103.18, ..., 110.13, 110.14, 110.15], [ 99.04, 99.05, 99.06, ..., 106.01, 106.02, 106.03]]) \u8fd9\u91cc meshgrid() \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u4e00\u7ef4 ndarray\uff0c\u4ea7\u751f\u4e24\u4e2a\u4e8c\u7ef4\u77e9\u9635\uff0c\u5b83\u4eec\u5206\u522b\u5bf9\u5e94\u4e24\u4e2a ndarray \u7684\u5143\u7d20\u5bf9\u3002 \u4e3a\u4e86\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\uff0c\u4e0b\u9762\u751f\u6210\u4e24\u4e2a\u77ed\u5c0f\u7684\u77e9\u9635\u89e3\u91ca\u4e0a\u8ff0\u8fc7\u7a0b\u3002 In [13]: x = np.arange(-5, -2, 1) In [16]: y = np.arange(-20, -15, 1) In [17]: xspace, yspace = np.meshgrid(x, y) In [18]: x Out[18]: array([-5, -4, -3]) In [19]: y Out[19]: array([-20, -19, -18, -17, -16]) In [20]: xspace Out[20]: array([[-5, -4, -3], [-5, -4, -3], [-5, -4, -3], [-5, -4, -3], [-5, -4, -3]]) In [21]: yspace Out[21]: array([[-20, -20, -20], [-19, -19, -19], [-18, -18, -18], [-17, -17, -17], [-16, -16, -16]]) \u6570\u7ec4 x \u6709 3 \u4e2a\u5143\u7d20\uff0c\u6570\u7ec4 y \u6709 5 \u4e2a\u5143\u7d20\uff0c\u5b83\u4eec\u7ec4\u5408\u8d77\u6765\u5c31\u6709 15 \u79cd\u60c5\u51b5\uff0c\u5373 [(-5, -20), (-5, -19), \u2026]\uff0c\u6211\u4eec\u53ef\u4ee5\u79f0\u4e3a xy \u5bf9\uff0cmeshgrid() \u51fd\u6570\u8fd4\u56de\u7ed3\u679c\u65f6\u5c06 xy \u5bf9\u62c6\u5f00\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230 xy \u5bf9\u4e2d 15 \u4e2a x \u503c\uff0c15 \u4e2a y \u503c\u3002 6.2.2 \u7d22\u5f15\u4e0e\u5207\u7247 \u00b6 \u5728\u5217\u8868\u7ae0\u8282\u8bfb\u8005\u5df2\u7ecf\u5b66\u4e60\u8fc7 Python \u7d22\u5f15\uff0c\u5b83\u662f\u975e\u5e38\u4e30\u5bcc\u7684\u4e3b\u9898\uff0c\u540c\u4e00\u4e2a\u76ee\u7684\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u8fbe\u6210\u3002\u672c\u5c0f\u8282\u4e13\u6ce8\u4e8e\u4ecb\u7ecd ndarray \u7684\u7d22\u5f15\u4e0e\u5207\u7247\u64cd\u4f5c\uff0c\u5b83\u5728\u539f\u7406\u4e0a\u4e0e\u5217\u8868\u7d22\u5f15\u4e0e\u5207\u7247\u57fa\u672c\u4e00\u81f4\uff0c\u4f46\u5728\u5b9e\u9645\u64cd\u4f5c\u65f6\u66f4\u4e3a\u590d\u6742\uff0c\u4e14\u5177\u6709\u66f4\u591a\u7684\u7279\u6027\u3002 \u4e00\u7ef4\u6570\u7ec4\u7684\u7d22\u5f15\u975e\u5e38\u7b80\u5355\uff0c\u8ddf\u5217\u8868\u7d22\u5f15\u5dee\u4e0d\u591a\u3002\u4e0b\u9762\u4ee3\u7801\u6f14\u793a\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u7d22\u5f15\u64cd\u4f5c\uff0c\u5305\u62ec\u5355\u503c\u7d22\u5f15\u3001\u8303\u56f4\u7d22\u5f15\u548c\u91cd\u65b0\u8d4b\u503c\u3002\u518d\u6b21\u6ce8\u610f\uff0cPython \u7d22\u5f15\u4ece 0 \u5f00\u59cb\uff0c\u6d89\u53ca\u8303\u56f4\u64cd\u4f5c\u65f6\u7528\u7684\u533a\u95f4\u90fd\u662f\u5de6\u95ed\u53f3\u5f00\uff0c\u5982 2:5 \u8868\u793a\u7b2c 3 \u5230\u7b2c 5 \u4e2a\u5143\u7d20\uff0c\u5305\u542b 2\uff08\u7b2c 3 \u4e2a\u5143\u7d20\uff09\u4e0d\u5305\u542b 5\uff08\u7b2c 6 \u4e2a\u5143\u7d20\uff09\u3002 In [44]: arr = np.arange(20) In [45]: arr Out[45]: array([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]) In [46]: arr[5] # \u5355\u4e2a\u503c\u7d22\u5f15, \u63d0\u53d6\u7b2c 6 \u4e2a\u5143\u7d20 Out[46]: 5 In [47]: arr[2:5] # \u8303\u56f4\u7d22\u5f15\uff0c\u53d6\u7b2c 3 \u4e2a\u5230\u7b2c 5 \u4e2a\u5143\u7d20 Out[47]: array([2, 3, 4]) In [48]: arr[2:5] = 10 # \u5c06\u7b2c 3 \u5230\u7b2c 5 \u5230\u5143\u7d20\u91cd\u65b0\u8d4b\u503c\u4e3a 10 In [49]: arr Out[49]: array([ 0, 1, 10, 10, 10, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]) In [50]: arr[10:13] = [111, 222, 333] # \u5c06\u7b2c 11\u300112\u300113 \u4e2a\u5143\u7d20\u5206\u522b\u8d4b\u503c\u4e3a 111\u3001222\u3001333 In [51]: arr Out[51]: array([ 0, 1, 10, 10, 10, 5, 6, 7, 8, 9, 111, 222, 333, 13, 14, 15, 16, 17, 18, 19]) NumPy \u6570\u7ec4\u5207\u7247\u4e0e\u6570\u7ec4\u5207\u7247\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u533a\u522b\uff0cNumPy \u5207\u7247\u540e\u8d4b\u503c\u7ed9\u53d8\u91cf\u4e0d\u4f1a\u4ea7\u751f\u6570\u7ec4\u5b50\u96c6\u7684\u62f7\u8d1d\uff0c\u5b83\u4f9d\u65e7\u6307\u5411\u539f\u59cb\u6570\u636e\uff0c\u6240\u4ee5\u8bfb\u8005\u5728\u83b7\u53d6\u6570\u7ec4\u5b50\u96c6\u65f6\u9700\u8981\u7279\u522b\u6ce8\u610f\u3002\u4e0b\u9762\u7528\u4e00\u4e2a\u5b9e\u4f8b\u6765\u6f14\u793a ndarray \u5207\u7247\u548c list \u5207\u7247\u7684\u533a\u522b\u3002 \u5148\u5206\u522b\u521b\u5efa\u4e00\u4e2a list \u548c\u4e00\u4e2a ndarray\uff0c\u5b83\u4eec\u90fd\u4fdd\u5b58 0 \u5230 9 \u8fd9 10 \u4e2a\u6570\u5b57\u3002 In [52]: ls = [i for i in range(10)] In [53]: ls Out[53]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] In [54]: arr = np.arange(10) In [55]: arr Out[55]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) \u73b0\u5728\u5bf9\u7b2c 5 \u5230 8 \u4e2a\u5143\u7d20\u5207\u7247\u5e76\u8d4b\u503c\u7ed9\u65b0\u7684\u53d8\u91cf\u3002 In [56]: ls2 = ls[4:8] In [57]: ls2 Out[57]: [4, 5, 6, 7] In [60]: arr2 = arr[4:8] In [61]: arr2 Out[61]: array([4, 5, 6, 7]) \u73b0\u5728\u66f4\u6539\u65b0\u7684\u53d8\u91cf\u7b2c 1 \u4e2a\u5143\u7d20\uff0c\u7136\u540e\u67e5\u770b\u539f\u59cb\u53d8\u91cf\u662f\u5426\u4f1a\u88ab\u5f71\u54cd\u3002 In [67]: ls2[0] = 100 # \u4fee\u6539\u5217\u8868\u7b2c 1 \u4e2a\u5143\u7d20\u503c\u4e3a 100 In [68]: ls2 Out[68]: [100, 5, 6, 7] In [69]: ls Out[69]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] In [70]: arr2[0] = 100 # \u4fee\u6539 ndarray \u7b2c 1 \u4e2a\u5143\u7d20\u503c\u4e3a 100 In [71]: arr2 Out[71]: array([100, 5, 6, 7]) In [72]: arr Out[72]: array([ 0, 1, 2, 3, 100, 5, 6, 7, 8, 9]) \u4ee3\u7801\u7ed3\u679c\u76f4\u89c2\u5c55\u793a\u4e86\u4e24\u4e2a Python \u5217\u8868\u770b\u8d77\u6765\u4e92\u4e0d\u5e72\u6270\uff0c\u4f46\u4e24\u4e2a ndarray \u662f\u76f8\u4e92\u5f71\u54cd\u7684\u3002\u8fd9\u91cc\u4ea7\u751f\u4e24\u79cd\u4e0d\u540c\u7ed3\u679c\u7684\u539f\u56e0\u662f\uff0c\u5f53 Python \u5217\u8868\u5207\u7247\u5e76\u8d4b\u503c\u65f6\uff0cPython \u4f1a\u5bf9\u5207\u7247\u7684\u6570\u636e\uff08\u8fd9\u91cc\u662f 4 \u5230 7\uff09\u91cd\u65b0\u751f\u6210\u4e00\u4efd\u62f7\u8d1d\uff0c\u7136\u540e\u5c06\u65b0\u53d8\u91cf ls2 \u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u6570\u636e\u62f7\u8d1d\u3002\u800c NumPy \u6570\u7ec4\u8fdb\u884c\u5207\u7247\u65f6\u5b83\u53ea\u662f\u628a\u539f\u59cb\u6570\u636e\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff084 \u5230 7\uff09\u6307\u5411\u65b0\u53d8\u91cf arr2\uff0c\u6240\u4ee5\u4e00\u6539\u5219\u5168\u6539\u3002 \u4ece\u7b80\u5355\u7684\u4f7f\u7528\u6765\u770b\u5217\u8868\u66f4\u4ee4\u4eba\u611f\u89c9\u8212\u9002\uff0c\u4f7f\u7528 NumPy \u6570\u7ec4\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u53ef\u80fd\u72af\u9519\u3002\u4f46 NumPy \u8fd9\u6837\u505a\u662f\u6709\u6f5c\u5728\u7684\u597d\u5904\u7684\uff0c\u7b26\u5408\u5b83\u5904\u7406\u5927\u6570\u636e\u7684\u76ee\u7684\uff0c\u5f53\u5b58\u5728\u5927\u6570\u636e\u5904\u7406\u65f6\u9700\u8981\u591a\u6b21\u8fdb\u884c\u6ca1\u5fc5\u8981\u7684\u62f7\u8d1d\u64cd\u4f5c\u4f1a\u5360\u7528\u5927\u91cf\u7684\u5185\u5b58\uff0c\u964d\u4f4e\u8ba1\u7b97\u6027\u80fd\u3002 \u9ad8\u7ef4\u5ea6\u7684 ndarray \u80fd\u5b58\u50a8\u66f4\u5e7f\u6cdb\u7684\u6570\u636e\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4f4e\u4e00\u7ef4\u7684\u6570\u7ec4\uff0c\u5982\u77e9\u9635\u7684\u5143\u7d20\u662f\u4e00\u7ef4\u6570\u7ec4\u3001\u4e09\u7ef4\u6570\u7ec4\u7684\u5143\u7d20\u662f\u77e9\u9635\u3002\u5bf9\u9ad8\u7ef4\u5ea6 ndarray \u8fdb\u884c\u7d22\u5f15\u53d6\u503c\u3001\u8d4b\u503c\u9700\u8981\u4f7f\u7528 1 \u5230\u591a\u4e2a\u7d22\u5f15\u7b26\u3001\u5207\u7247\u7b26\u4ee5\u53ca\u5b83\u4eec\u7684\u7ec4\u5408\u3002 \u4e0b\u9762\u4ee5\u4e8c\u7ef4\u6570\u7ec4\u548c\u4e09\u7ef4\u6570\u7ec4\u4e3a\u5bf9\u8c61\u8fdb\u884c\u4e00\u4e9b\u5e38\u89c1\u7684\u7d22\u5f15\u548c\u5207\u7247\u64cd\u4f5c\u3002\u4e8c\u7ef4\u6570\u7ec4\u53ef\u4ee5\u60f3\u8c61\u4e3a\u4e00\u4e2a\u5927\u7684\u6b63\u65b9\u5f62\u6216\u77e9\u5f62\uff0c\u5185\u90e8\u7684\u5c0f\u6b63\u65b9\u5f62\u662f\u5b83\u7684\u5143\u7d20\u3002\u4e09\u7ef4\u77e9\u9635\u53ef\u4ee5\u60f3\u8c61\u4e3a\u4e00\u4e2a\u5927\u7684\u6b63\u65b9\u4f53\uff08\u9b54\u65b9\uff09\u6216\u957f\u65b9\u4f53\uff0c\u6784\u6210\u5b83\u7684\u5c0f\u6b63\u65b9\u4f53\u662f\u5b83\u7684\u5143\u7d20\u3002\u66f4\u9ad8\u7ef4\u5ea6\u7684\u6570\u7ec4\u64cd\u4f5c\u539f\u7406\u76f8\u901a\uff0c\u4f46\u9ad8\u7eac\u5ea6\u592a\u8fc7\u62bd\u8c61\u4e0d\u65b9\u4fbf\u7406\u89e3\uff0c\u56e0\u6b64\u672c\u4e66\u4e0d\u4e3e\u4f8b\u4ecb\u7ecd\u3002 In [1]: import numpy as np In [2]: arr2d = np.array([[1, 2, 3], [4, 5, 6]]) # \u521d\u59cb\u5316\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5373\u77e9\u9635 In [3]: arr2d[0] # \u63d0\u53d6\u77e9\u9635\u7684\u7b2c 1 \u884c Out[3]: array([1, 2, 3]) In [4]: arr2d[:,0] # \u63d0\u53d6\u77e9\u9635\u7684\u7b2c 1 \u5217 Out[4]: array([1, 4]) In [5]: arr2d[0, 0] # \u63d0\u53d6\u77e9\u9635\u4f4d\u4e8e\u7b2c 1 \u884c\u7b2c 1 \u5217\u7684\u5143\u7d20 Out[5]: 1 In [6]: arr2d[0:2, 0] # \u63d0\u53d6\u77e9\u9635\u7b2c 1 \u5217\u524d\u4e24\u4e2a\u5143\u7d20 Out[6]: array([1, 4]) In [7]: arr2d[0:2] # \u63d0\u53d6\u77e9\u9635\u7684\u524d\u4e24\u884c\uff0c\u8fd9\u8ddf arr2d[0:2, :] \u7ed3\u679c\u662f\u4e00\u81f4\u7684 Out[7]: array([[1, 2, 3], [4, 5, 6]]) In [8]: arr2d[:2, 1:] = 0 # \u77e9\u9635\u524d\u4e24\u884c\u7684\u7b2c 2 \u5217\u5f00\u59cb\u5f80\u53f3\u5143\u7d20\u503c\u5168\u4e3a 0 In [9]: arr2d Out[9]: array([[1, 0, 0], [4, 0, 0]]) In [10]: arr3d = np.array([[[1,2,3],[4,5,6],[7,8,9]]]) # \u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 3 \u7ef4\u6570\u7ec4 In [11]: arr3d Out[11]: array([[[1, 2, 3], [4, 5, 6], [7, 8, 9]]]) In [12]: arr3d[0] # \u8fd9\u662f\u6cbf\u7740\u7b2c 0 \u8f74\uff08\u7b2c\u4e00\u4e2a\u8f74\uff09\u5207\u7247\u7684\u7ed3\u679c\uff0c\u6ce8\u610f\u4e0e arr3d \u7684\u533a\u522b\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a 3x3 \u6570\u7ec4\uff08\u77e9\u9635\uff09 Out[12]: array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) In [13]: new_array = arr3d[0].copy() # \u521b\u5efa\u77e9\u9635\u65b0\u7684\u62f7\u8d1d In [14]: new_array Out[14]: array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) In [15]: arr3d[0] = 42 # \u5bf9\u539f\u59cb 3 \u7ef4\u6570\u7ec4\u7b2c 1 \u4e2a\u5b50\u7ef4\u5ea6\u91cd\u65b0\u8d4b\u503c In [16]: arr3d # \u6b64\u5904 42 \u8fdb\u884c\u4e86\u5e7f\u64ad\uff0c\u77e9\u9635\u5168\u90e8\u5143\u7d20\u90fd\u4e3a 42 Out[16]: array([[[42, 42, 42], [42, 42, 42], [42, 42, 42]]]) In [17]: arr3d[0] = new_array # \u5c06\u5b58\u50a8\u5728 new_array \u7684\u539f\u59cb\u503c\u91cd\u65b0\u8d4b\u503c\u56de\u53bb In [18]: arr3d Out[18]: array([[[1, 2, 3], [4, 5, 6], [7, 8, 9]]]) 6.2.3 \u5e03\u5c14\u578b\u7d22\u5f15 \u00b6 \u9664\u4e86\u6574\u6570\u7d22\u5f15\u548c\u5207\u7247\uff0cNumPy \u8fd8\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u503c\u578b\u7684\u7d22\u5f15\u3002\u5e03\u5c14\u503c\u4e00\u822c\u7531\u6570\u7ec4\u7684\u6bd4\u8f83\u8fd0\u7b97\u5f97\u5230\uff0c\u8be5\u8fc7\u7a0b\u4e5f\u662f\u5411\u91cf\u5316\u7684\uff0c\u53ef\u5e7f\u64ad\u7684\u3002 \u6cbf\u7528\u4e0a\u9762\u4f7f\u7528\u7684 arr3d \u53d8\u91cf\uff0c\u4e0b\u9762\u4f7f\u7528\u5b83\u4e0e\u6570\u503c 5 \u8fdb\u884c\u6bd4\u8f83\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u662f\u4e0e arr3d \u7ef4\u5ea6\u4e00\u81f4\u7684\u6570\u7ec4\u3002 In [19]: arr3d > 5 Out[19]: array([[[False, False, False], [False, False, True], [ True, True, True]]]) \u5229\u7528\u903b\u8f91\u6570\u7ec4\uff0c\u8bfb\u8005\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u63d0\u53d6\u51fa\u60f3\u8981\u7684\u6570\u636e\u3002\u4e0b\u9762\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a\u4e00\u7ef4\u7684\u6570\u7ec4\u548c\u4e00\u4e2a\u4e8c\u7ef4\u7684\u968f\u673a\u77e9\u9635\uff0c\u4e00\u7ef4\u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\u4e0e\u77e9\u9635\u7684\u884c\u6570\u4e00\u81f4\u3002 In [20]: subject = np.array(['chinese', 'math', 'chinese', 'english', 'history']) In [21]: df = np.random.randn(5, 3) In [22]: df Out[22]: array([[ 0.50025766, -0.4625053 , -1.85743193], [ 0.63757593, 0.55624546, -1.7669166 ], [-0.18061614, -0.71896639, -0.26744936], [ 1.37094842, -0.21829646, -0.34926808], [-0.90192432, -0.2821726 , 0.54411861]]) \u8fd9\u91cc\u5047\u8bbe\u6bcf\u4e2a subject \u90fd\u5bf9\u5e94\u968f\u673a\u77e9\u9635\u7684\u4e00\u884c\uff0c\u800c\u6211\u4eec\u60f3\u8981\u63d0\u53d6\u51fa\u4e0e chinese \u76f8\u5bf9\u5e94\u7684\u884c\uff0c\u8fd9\u91cc\u5229\u7528\u6570\u7ec4 subject \u4e0e\u5b57\u7b26 \u2018chinese\u2019 \u7684\u6bd4\u8f83\u7ed3\u679c\u8fdb\u884c\u6570\u7ec4\u7d22\u5f15\u3002 In [23]: subject == 'chinese' Out[23]: array([ True, False, True, False, False]) In [24]: df[subject == 'chinese'] Out[24]: array([[ 0.50025766, -0.4625053 , -1.85743193], [-0.18061614, -0.71896639, -0.26744936]]) \u6ce8\u610f\uff0c\u5e03\u5c14\u7d22\u5f15\u6570\u7ec4\u7684\u957f\u5ea6\u4e0e\u88ab\u7d22\u5f15\u7684\u8f74\u957f\u5ea6\u4e00\u81f4\uff0c\u5728\u4e0d\u52a0\u82f1\u6587\u9017\u53f7\u7684\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u6bd4\u8f83\u7684\u90fd\u662f 0 \u8f74\uff0c\u5373\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u3002 \u5e03\u5c14\u7d22\u5f15\u6570\u7ec4\u53ef\u4ee5\u548c\u5207\u7247\u3001\u6574\u6570\u7d22\u5f15\u7b49\u642d\u914d\u4f7f\u7528\uff0c\u4ece\u800c\u9ad8\u5ea6\u81ea\u5b9a\u4e49\u60f3\u8981\u83b7\u53d6\u7684\u6570\u7ec4\u5b50\u96c6\u3002 In [25]: df[subject == 'chinese', 1:] # \u6ee1\u8db3 chinese \u5bf9\u5e94\u884c\uff0c\u53bb\u9664\u7b2c 1 \u5217 Out[25]: array([[-0.4625053 , -1.85743193], [-0.71896639, -0.26744936]]) In [26]: df[subject == 'chinese', 2:] # \u6ee1\u8db3 chinese \u5bf9\u5e94\u884c\uff0c\u53bb\u9664\u7b2c 1\u30012 \u5217 Out[26]: array([[-1.85743193], [-0.26744936]]) In [27]: df[subject != 'chinese', 2:] # \u4e0d\u6ee1\u8db3 chinese \u5bf9\u5e94\u884c\uff0c\u53bb\u9664\u7b2c 1\u30012 \u5217 Out[27]: array([[-1.7669166 ], [-0.34926808], [ 0.54411861]]) \u9664\u4e86\u4f7f\u7528\u4e0d\u7b49\u53f7 != \u8fd8\u8868\u793a\u5426\u5b9a\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6ce2\u6d6a\u53f7 ~ \u8868\u793a\u5bf9\u6761\u4ef6\u7ed3\u679c\u7684\u53d6\u53cd\u3002 In [29]: df[~ (subject == 'chinese'), 2:] # \u8be5\u4ee3\u7801\u884c\u4e0e\u4e0a\u4e00\u4e2a\u4ee3\u7801\u884c\u7ed3\u679c\u4e00\u81f4 Out[29]: array([[-1.7669166 ], [-0.34926808], [ 0.54411861]]) \u5982\u679c\u9700\u8981\u5e94\u7528\u591a\u4e2a\u903b\u8f91\u5224\u65ad\uff0c\u53ef\u4ee5\u4f7f\u7528\u548c\uff08&\uff09\u3001\u6216\uff08|\uff09\u7b49\u5e03\u5c14\u64cd\u4f5c\u7b26\u3002\u8bfb\u8005\u9700\u8981\u6ce8\u610f\uff0c\u5f53\u5b58\u5728\u591a\u4e2a\u5224\u65ad\u65f6\u4e00\u5b9a\u8981\u7528\u62ec\u53f7\u5c06\u6bcf\u4e00\u4e2a\u903b\u8f91\u6bd4\u8f83\u8fd0\u7b97\u62ec\u8d77\u6765\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 In [31]: df[subject == \"chinese\" | subject == \"math\"] --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-31-ec9c993564c8> in <module>() ----> 1 df[subject == \"chinese\" | subject == \"math\"] \u6b63\u786e\u7684\u5199\u6cd5\u5982\u4e0b\u3002 In [33]: df[(subject == \"chinese\") | (subject == \"math\")] Out[33]: array([[ 0.50025766, -0.4625053 , -1.85743193], [ 0.63757593, 0.55624546, -1.7669166 ], [-0.18061614, -0.71896639, -0.26744936]]) \u901a\u8fc7\u5e03\u5c14\u578b\u6570\u7ec4\u7d22\u5f15\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u5730\u5bf9\u7b26\u5408\u6761\u4ef6\u7684\u6570\u636e\u8fdb\u884c\u91cd\u8d4b\u503c\uff0c\u8fd9\u662f\u6570\u636e\u5206\u6790\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u4e4b\u4e00\u3002 In [34]: df[df < 0] = 0 In [35]: df Out[35]: array([[0.50025766, 0. , 0. ], [0.63757593, 0.55624546, 0. ], [0. , 0. , 0. ], [1.37094842, 0. , 0. ], [0. , 0. , 0.54411861]]) \u9664\u4e86\u4e0a\u8ff0\u5229\u7528\u903b\u8f91\u7ec4\u5408\u9009\u53d6\u5b50\u96c6\u8fdb\u884c\u91cd\u65b0\u8d4b\u503c\uff0cNumPy \u63d0\u4f9b\u7684 where() \u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u6574\u4e2a\u6570\u7ec4\u7684\u6761\u4ef6\u903b\u8f91\u8fd0\u7b97\uff0c\u5b83\u662f\u4e09\u5143\u8868\u8fbe\u5f0f x if condition else y \u7684\u5411\u91cf\u5316\u7248\u672c\u3002 \u4f8b\u5982\uff0c\u89e3\u51b3\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u5c06\u4e00\u4e2a\u968f\u673a\u6570\u636e\u6570\u7ec4\u4e2d\u7684\u6b63\u6570\u66ff\u6362\u4e3a 1\uff0c\u800c\u8d1f\u6570\u4e3a 0\uff0c\u53ef\u4ee5\u7528\u5982\u4e0b\u4ee3\u7801\u8f7b\u677e\u5b9e\u73b0\u3002 ```python In [22]: arr_random = np.random.randn(4, 4) In [23]: arr_random Out[23]: array([[-1.48064102, 1.4408966 , -0.13313057, 1.09683071], [ 0.44698237, 0.01854261, 0.56719151, -1.03926198], [ 1.45070221, 0.04421898, 0.787423 , -1.28715644], [ 2.27759091, -0.06808282, -0.99294482, -0.39755302]]) In [24]: arr_random > 0 Out[24]: array([[False, True, False, True], [ True, True, True, False], [ True, True, True, False], [ True, False, False, False]]) In [25]: np.where(arr_random > 0, 1, 0) Out[25]: array([[0, 1, 0, 1], [1, 1, 1, 0], [1, 1, 1, 0], [1, 0, 0, 0]]) ``` where() \u51fd\u6570\u4e2d\u66ff\u6362\u7684 1 \u548c 0 \u53ef\u4ee5\u662f\u4e00\u4e2a\u4e0e arr_random \u7b49\u7ef4\u5ea6\u7684\u6570\u7ec4\u3002 6.2.3 \u6570\u7ec4\u8f6c\u7f6e\u4e0e\u8f74\u8f6c\u6362 \u00b6 \u8f6c\u7f6e\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u6570\u5b66\u77e9\u9635\u64cd\u4f5c\uff0c\u662f\u5c06\u77e9\u9635\u7684\u884c\u5217\u8fdb\u884c\u4e92\u6362\uff0c\u5982\u4f4d\u4e8e\u7b2c 1 \u884c\u7b2c 2 \u5217\u7684\u5143\u7d20\u8f6c\u7f6e\u540e\u4f4d\u4e8e\u7b2c 2 \u884c\u7b2c 1 \u5217\uff0c\u7b2c 2 \u884c\u7b2c 1 \u5217\u7684\u5143\u7d20\u8f6c\u7f6e\u540e\u4f4d\u4e8e\u7b2c 1 \u884c\u7b2c 2 \u5217\u3002NumPy \u5c06\u8fd9\u4e00\u6982\u5ff5\u5e94\u7528\u5230\u4e86\u591a\u7ef4\u6570\u7ec4\uff0cndarray \u4e0d\u4ec5\u6709\u8f6c\u7f6e\u65b9\u6cd5\uff0c\u8fd8\u6709\u4e00\u4e2a\u7279\u6b8a\u7684 T \u5c5e\u6027\u3002 In [2]: import numpy as np In [3]: arr = np.arange(12).reshape((3, 4)) In [4]: arr Out[4]: array([[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9, 10, 11]]) In [5]: arr.T Out[5]: array([[ 0, 4, 8], [ 1, 5, 9], [ 2, 6, 10], [ 3, 7, 11]]) In [6]: arr.transpose() Out[6]: array([[ 0, 4, 8], [ 1, 5, 9], [ 2, 6, 10], [ 3, 7, 11]]) \u4e3a\u4e86\u7b80\u4fbf\u5730\u5bf9\u6570\u7ec4\u5f62\u72b6\u8fdb\u884c\u91cd\u5851\uff0cNumPy \u63d0\u4f9b\u4e86reshape()\u65b9\u6cd5\u3002\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u4e3a\u4e86\u5feb\u901f\u751f\u6210\u4e00\u4e2a 3 \u884c 4 \u5217\u7684\u6837\u4f8b\u77e9\u9635\uff0c\u6211\u4eec\u4f7f\u7528 arange \u65b9\u6cd5\u5148\u751f\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a 12 \u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u7136\u540e\u4f7f\u7528 reshape() \u65b9\u6cd5\u91cd\u5851\u4e3a 3 \u884c 4 \u5217\u7684 ndarray\uff0c\u4f7f\u7528 T \u5c5e\u6027\u6216\u8005 transpose() \u65b9\u6cd5\u90fd\u53ef\u4ee5\u83b7\u5f97\u8f6c\u7f6e\u6570\u7ec4\u3002\u8fd9\u91cc reshape() \u65b9\u6cd5\u4e2d\u8981\u4f7f\u7528\u5143\u7ec4\u63d0\u4f9b\u6570\u7ec4\u7ef4\u5ea6\uff0c\u6570\u7ec4\u7684\u7ef4\u5ea6\u53ef\u4ee5\u901a\u8fc7 shape \u5c5e\u6027\u83b7\u53d6\u3002 In [10]: arr.shape Out[10]: (3, 4) \u6709\u4e00\u4e9b\u64cd\u4f5c\u5728\u8fdb\u884c\u77e9\u9635\u8ba1\u7b97\u65f6\u7ecf\u5e38\u7528\u5230\uff0c\u5982\u8ba1\u7b97\u77e9\u9635\u7684\u5185\u79ef\u53ef\u4ee5\u4f7f\u7528 np.dot() \u51fd\u6570\u3002 In [11]: np.dot(arr, arr.T) Out[11]: array([[ 14, 38, 62], [ 38, 126, 214], [ 62, 214, 366]]) \u5982\u679c\u5904\u7406\u7684\u662f\u9ad8\u7ef4\u6570\u7ec4\uff0c\u8fdb\u884c\u8f6c\u7f6e\u65f6\u9700\u8981\u901a\u8fc7\u8f74\u5e8f\u6307\u5b9a\u4e92\u6362\u7684\u7ef4\u5ea6\u3002 In [12]: arr = np.arange(24).reshape((2,3,4)) In [13]: arr Out[13]: array([[[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9, 10, 11]], [[12, 13, 14, 15], [16, 17, 18, 19], [20, 21, 22, 23]]]) In [14]: arr.transpose((1,0,2)) # 0\u8868\u793a\u7b2c1\u8f74\u30011\u8868\u793a\u7b2c2\u8f74\u30012\u8868\u793a\u7b2c3\u8f74 Out[14]: array([[[ 0, 1, 2, 3], [12, 13, 14, 15]], [[ 4, 5, 6, 7], [16, 17, 18, 19]], [[ 8, 9, 10, 11], [20, 21, 22, 23]]]) \u9ed8\u8ba4\u7684\u8f74\u5e8f\u662f (0, 1, 2)\uff0c\u4e0a\u8ff0\u4ee3\u7801 transpose() \u65b9\u6cd5\u4e2d\u6307\u5b9a\u7684\u662f (1, 0, 2)\uff0c\u56e0\u6b64\u8f6c\u7f6e\u7684\u7ed3\u679c\u662f\u6570\u7ec4\u7b2c 1 \u4e2a\u8f74\u53d8\u6210\u4e86\u7b2c 2 \u4e2a\u8f74\u3001\u7b2c 2 \u4e2a\u8f74\u53d8\u6210\u4e86\u7b2c 1 \u4e2a\u8f74\uff0c\u800c\u7b2c 3 \u4e2a\u8f74\u4e0d\u53d8\u3002\u53ea\u8981\u7406\u6e05\u695a\u9700\u8981\u4e92\u6362\u7684\u8f74\uff0c\u76f8\u540c\u7684\u64cd\u4f5c\u53ef\u4ee5\u5e94\u7528\u5230\u66f4\u9ad8\u7ef4\u5ea6\u3002 \u53e6\u5916\uff0cNumPy \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a swapaxes() \u65b9\u6cd5\u8f6c\u6362\u8f74\uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u8f93\u5165\u4e92\u6362\u7684\u4e00\u5bf9\u8f74\u7f16\u53f7\u3002 In [15]: arr.swapaxes(1, 2) Out[15]: array([[[ 0, 4, 8], [ 1, 5, 9], [ 2, 6, 10], [ 3, 7, 11]], [[12, 16, 20], [13, 17, 21], [14, 18, 22], [15, 19, 23]]]) In [16]: arr.swapaxes(0, 1) Out[16]: array([[[ 0, 1, 2, 3], [12, 13, 14, 15]], [[ 4, 5, 6, 7], [16, 17, 18, 19]], [[ 8, 9, 10, 11], [20, 21, 22, 23]]]) 6.3 \u6570\u7ec4\u51fd\u6570\u4e0e\u65b9\u6cd5 \u00b6 6.3.1 \u901a\u7528\u51fd\u6570 \u00b6 NumPy \u4e2d\u9664\u4e86 ndarray \u6570\u7ec4\u64cd\u4f5c\u662f\u64cd\u4f5c\u7b26\uff08\u7b97\u672f\u3001\u6bd4\u8f83\u7b49\uff09\u8fd0\u7b97\u662f\u5143\u7d20\u7ea7\u522b\u7684\uff0c\u53ef\u4ee5\u64cd\u4f5c ndarray \u7684\u5404\u7c7b\u901a\u7528\u51fd\u6570\u4e5f\u662f\u6267\u884c\u5143\u7d20\u7ea7\u8fd0\u7b97\u3002NumPy \u7684\u7b80\u4fbf\u5728\u4e8e\u7528\u6237\u64cd\u4f5c\u5411\u91cf\u5316\u8ba1\u7b97\u8ddf\u6807\u91cf\u8ba1\u7b97\u7684\u64cd\u4f5c\u65b9\u6cd5\u57fa\u672c\u76f8\u540c\u3002 NumPy \u63d0\u4f9b\u7684\u901a\u7528\u6570\u5b66\u8fd0\u7b97\u51fd\u6570\u5f88\u591a\u662f Python \u5143\u7d20\u7ea7\u51fd\u6570\uff08\u6765\u81ea\u5185\u7f6e\u6a21\u5757\u3001math\u6a21\u5757\u7b49\uff09\u7684\u53d8\u4f53\uff0c\u5982\u5f00\u65b9\u51fd\u6570 sqrt()\u3001\u6307\u6570\u51fd\u6570 exp()\u3002 In [17]: arr = np.arange(10).reshape((2, 5)) In [18]: arr Out[18]: array([[0, 1, 2, 3, 4], [5, 6, 7, 8, 9]]) In [19]: np.sqrt(arr) Out[19]: array([[0. , 1. , 1.41421356, 1.73205081, 2. ], [2.23606798, 2.44948974, 2.64575131, 2.82842712, 3. ]]) In [20]: np.exp(arr) Out[20]: array([[1.00000000e+00, 2.71828183e+00, 7.38905610e+00, 2.00855369e+01, 5.45981500e+01], [1.48413159e+02, 4.03428793e+02, 1.09663316e+03, 2.98095799e+03, 8.10308393e+03]]) \u6709\u4e00\u4e9b\u51fd\u6570\u63a5\u6536 2 \u4e2a\u6216\u591a\u4e2a\u6570\u7ec4\uff0c\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\u3002 In [21]: arr2 = np.random.randn(10).reshape((2,5)) In [22]: arr2 Out[22]: array([[-0.81547072, 0.02248639, -0.3004805 , 1.53433534, 0.59514916], [ 1.60022692, -0.68780704, 0.79007821, 0.72034177, -1.33966745]]) In [23]: np.add(arr, arr2) # \u5bf9\u5e94\u5143\u7d20\u76f8\u52a0 Out[23]: array([[-0.81547072, 1.02248639, 1.6995195 , 4.53433534, 4.59514916], [ 6.60022692, 5.31219296, 7.79007821, 8.72034177, 7.66033255]]) In [24]: np.maximum(arr, arr2) # \u8fd4\u56de\u5bf9\u5e94\u5143\u7d20\u8f83\u5927\u7684\u90a3\u4e2a Out[24]: array([[0., 1., 2., 3., 4.], [5., 6., 7., 8., 9.]]) \u53e6\u5916\u8fd8\u6709\u4e00\u4e9b\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u591a\u4e2a\u6570\u7ec4\uff0c\u5982 modf() \u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u6d6e\u70b9 ndarray \u6570\u7ec4\u7684\u5c0f\u6570\u4e0e\u6574\u6570\u90e8\u5206\u3002 In [25]: part1, part2 = np.modf(arr2) In [26]: part1 Out[26]: array([[-0.81547072, 0.02248639, -0.3004805 , 0.53433534, 0.59514916], [ 0.60022692, -0.68780704, 0.79007821, 0.72034177, -0.33966745]]) In [27]: part2 Out[27]: array([[-0., 0., -0., 1., 0.], [ 1., -0., 0., 0., -1.]]) \u4e0b\u8868\u5217\u51fa\u4e86\u5e38\u89c1\u901a\u7528\u51fd\u6570\u3002NumPy \u63d0\u4f9b\u7684\u901a\u7528\u51fd\u6570\u975e\u5e38\u591a\uff0c\u672c\u4e66\u4e0d\u518d\u4e00\u4e00\u4e3e\u4f8b\u4ecb\u7ecd\uff0c\u8bfb\u8005\u5728\u5b9e\u9645\u4f7f\u7528\u65f6\u53ef\u4ee5\u53c2\u8003\u5bf9\u5e94\u7684\u5e2e\u52a9\u6587\u6863\u3002 \u88686-1 NumPy \u5e38\u89c1\u901a\u7528\u51fd\u6570 \u51fd\u6570 \u8bf4\u660e abs\u3001fabs \u8ba1\u7b97\u7edd\u5bf9\u503c sqrt \u8ba1\u7b97\u5143\u7d20\u7684\u5e73\u65b9\u6839\uff0c\u7b49\u4ef7\u4e8e arr ** 0.5 square \u8ba1\u7b97\u5143\u7d20\u7684\u5e73\u65b9\uff0c\u7b49\u4ef7\u4e8e arr ** 2 exp \u8ba1\u7b97\u5143\u7d20\u7684\u6307\u6570 log\u3001log2\u3001log10 \u5206\u522b\u8ba1\u7b97\u81ea\u7136\u5bf9\u6570\u3001\u5e95\u6570\u662f 2 \u7684\u5bf9\u6570\u3001\u5e95\u6570\u662f 10 \u7684\u5bf9\u6570 sign \u8ba1\u7b97\u5143\u7d20\u7684\u6b63\u8d1f\u53f7\uff1a\u7ed3\u679c 1 \u8868\u793a\u6b63\u6570\u30010 \u8868\u793a\u96f6\u3001-1 \u8868\u793a\u8d1f\u6570 floor \u8ba1\u7b97\u5c0f\u4e8e\u5143\u7d20\u7684\u6700\u5927\u6574\u6570\uff0c\u5982 floor(5.3) \u7ed3\u679c\u4e3a 5 ceil \u8ba1\u7b97\u5927\u4e8e\u5143\u7d20\u7684\u6700\u5927\u6b63\u6570\uff0c\u5982 ceil(5.3) \u7ed3\u679c\u4e3a 6 rint \u5143\u7d20\u56db\u820d\u4e94\u5165\uff0c\u5e76\u4fdd\u7559 dtype modf \u5c06\u6570\u7ec4\u7684\u5c0f\u6570\u4e0e\u6574\u6570\u90e8\u5206\u4ee5\u4e24\u4e2a\u72ec\u7acb\u6570\u7ec4\u8fd4\u56de isnan \u8fd4\u56de\u6570\u7ec4\u5143\u7d20\u662f\u5426\u4e3a NaN \u7684\u5e03\u5c14\u578b\u6570\u7ec4 isfinite \u8fd4\u56de\u6570\u7ec4\u5143\u7d20\u662f\u5426\u4e3a\u6709\u9650\u503c\u7684\u5e03\u5c14\u578b\u6570\u7ec4 isinf \u8fd4\u56de\u6570\u7ec4\u5143\u7d20\u662f\u5426\u4e3a\u65e0\u7a77\u503c\u7684\u5e03\u5c14\u578b\u6570\u7ec4 cos\u3001cosh\u3001sin\u3001sinh\u3001tan\u3001tanh \u666e\u901a\u548c\u53cc\u66f2\u578b\u4e09\u89d2\u51fd\u6570 arccos\u3001arccosh\u3001arcsin\u3001arcsinh\u3001arctan\u3001arctanh \u53cd\u4e09\u89d2\u51fd\u6570 logical_not \u8ba1\u7b97\u903b\u8f91\u578b\u5143\u7d20\u7684\u53cd\uff0c\u5982 arr([True, False]) \u7684\u7ed3\u679c\u662f arr([False, True]) add \u5c06\u6570\u7ec4\u5bf9\u5e94\u7684\u5143\u7d20\u76f8\u52a0 subtract \u5c06\u6570\u7ec4\u5bf9\u5e94\u7684\u5143\u7d20\u76f8\u51cf multiply \u5c06\u6570\u7ec4\u5bf9\u5e94\u7684\u5143\u7d20\u76f8\u4e58 divide\u3001floor_divide \u9664\u6cd5\u548c\u6574\u9664\u6cd5\uff08\u4e22\u6389\u4f59\u6570\uff09 power \u7b2c\u4e00\u4e2a\u6570\u7ec4\u5143\u7d20\u4e3a\u5e95\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u5143\u7d20\u4e3a\u5e42 maximum\u3001fmax \u6700\u5927\u503c\u8ba1\u7b97\uff0cfmax \u4f1a\u5ffd\u7565 NaN minimum\u3001fmin \u6700\u5c0f\u503c\u8ba1\u7b97\uff0cfmin \u4f1a\u5ffd\u7565 NaN mod \u6c42\u6a21\u8ba1\u7b97\uff08\u9664\u6cd5\u7684\u4f59\u6570\uff09 copysign \u5c06\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u4e2d\u5143\u7d20\u503c\u7684\u7b26\u53f7\u590d\u5236\u7ed9\u7b2c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u503c greater\u3001greater_equal\u3001less\u3001less_equal\u3001equal\u3001not_equal \u6267\u884c\u5143\u7d20\u7ea7\u6bd4\u8f83\u8fd0\u7b97\uff0c\u4ea7\u751f\u5e03\u5c14\u578b\u6570\u7ec4\uff0c\u7b49\u4ef7\u4e8e\u64cd\u4f5c\u7b26 >\u3001>=\u3001<\u3001<=\u3001==\u3001!= logical_and\u3001logical_or\u3001logical_xor \u5143\u7d20\u7ea7\u903b\u8f91\u8fd0\u7b97\uff0c\u7b49\u4ef7\u4e8e\u64cd\u4f5c\u7b26 &\u3001!\u3001^ 6.3.2 \u57fa\u672c\u7edf\u8ba1 \u00b6 NumPy \u9664\u4e86\u63d0\u4f9b\u4e86\u5f88\u591a\u65b9\u4fbf\u4f7f\u7528\u7684\u901a\u7528\u51fd\u6570\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6570\u5b66\u7edf\u8ba1\u7684\u57fa\u672c\u65b9\u6cd5\uff0c\u7528\u4e8e\u8ba1\u7b97\u5e38\u89c1\u7684\u7edf\u8ba1\u91cf\uff0c\u5982\u5747\u503c\u3001\u65b9\u5dee\u3001\u6807\u51c6\u5dee\u3002\u8fd9\u4e9b\u7edf\u8ba1\u65b9\u6cd5\u53ef\u4ee5\u5904\u7406\u6574\u4e2a\u6570\u7ec4\u6216\u8005\u4ee5\u7279\u5b9a\u7684\u6570\u8f74\u4e3a\u65b9\u5411\u7684\u6570\u7ec4\u5b50\u96c6\u3002 \u4e3a\u4e86\u5c55\u793a\u57fa\u672c\u7edf\u8ba1\u65b9\u6cd5\u7684\u4f7f\u7528\uff0c\u4e0b\u9762\u521b\u5efa\u4e00\u4e2a\u6b63\u6001\u5206\u5e03\u968f\u673a\u77e9\u9635\u4f5c\u4e3a\u793a\u4f8b\u6570\u636e\u3002 \u9996\u5148\u5bf9\u6574\u4e2a\u6570\u7ec4\u8ba1\u7b97\u57fa\u672c\u7edf\u8ba1\u91cf\uff1a\u5747\u503c\u3001\u6c42\u548c\u3001\u65b9\u5dee\u4ee5\u53ca\u6807\u51c6\u5dee\u3002 In [2]: import numpy as np In [3]: arr = np.random.randn(5, 5) In [4]: arr Out[4]: array([[-0.51132191, -0.88525544, -1.10119999, -2.3272623 , 0.24502215], [ 0.22767771, -0.43164608, 0.62262033, -1.68672377, -0.19473212], [-0.65820486, -1.62823718, 0.0798516 , 0.1056899 , -0.45333499], [ 0.86035323, 1.79121647, 0.75648603, 0.56113024, -1.57487612], [ 0.90551266, -2.35820418, 0.34951423, -1.23775123, -0.62627856]]) In [5]: arr.mean() # \u6c42\u5747\u503c Out[5]: -0.36679816721832453 In [6]: arr.sum() # \u6c42\u548c Out[6]: -9.169954180458113 In [7]: arr.var() # \u6c42\u65b9\u5dee Out[7]: 1.0772072348109176 In [8]: arr.std() # \u6c42\u6807\u51c6\u5dee Out[8]: 1.037885944991509 \u9488\u5bf9\u6574\u4e2a\u6570\u7ec4\u7684\u8ba1\u7b97\u7ed3\u679c\u6700\u540e\u90fd\u4f1a\u662f\u6807\u91cf\uff0c\u4e0d\u8fc7\uff0c\u5982\u679c\u6307\u5b9a\u4e00\u4e2a\u8f74\u5411\u53c2\u6570 axis\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u4f1a\u662f\u4e00\u4e2a\u5c11\u4e00\u7ef4\u7684\u6570\u7ec4\u3002 In [9]: arr.mean(axis=0) # \u8ba1\u7b97\u5217\u7684\u5e73\u5747\u503c Out[9]: array([ 0.16480337, -0.70242528, 0.14145444, -0.91698343, -0.52083993]) In [10]: arr.mean(axis=1) # \u8ba1\u7b97\u884c\u7684\u5e73\u5747\u503c Out[10]: array([-0.9160035 , -0.29256078, -0.51084711, 0.47886197, -0.59344142]) \u8fd9\u7c7b\u65b9\u6cd5\u8ba1\u7b97\u7684\u7ed3\u679c\u6bd4\u8f93\u5165\u7ef4\u5ea6\u5c0f\uff0c\u6240\u4ee5\u5e38\u88ab\u79f0\u4e3a\u805a\u5408\uff08aggregation\uff09\u8ba1\u7b97\u3002 \u5f53\u7136\uff0c\u4e5f\u5b58\u5728\u4e00\u4e9b\u975e\u805a\u5408\u8ba1\u7b97\u7684\u65b9\u6cd5\uff0c\u5982\u7d2f\u8ba1\u548c\uff08\u5373\u7d2f\u52a0\uff09cumsum()\u3002 In [11]: arr = np.arange(10) In [12]: arr Out[12]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) In [13]: arr.cumsum() Out[13]: array([ 0, 1, 3, 6, 10, 15, 21, 28, 36, 45]) \u7d2f\u52a0\u5f97\u5230\u7684\u6570\u7ec4\u7b2c i \u4e2a\u5143\u7d20\u90fd\u662f\u8f93\u5165\u6570\u7ec4\u524d i-1 \u4e2a\u5143\u7d20\u4e4b\u548c\u3002 \u9664\u4e86\u4e0a\u9762\u63d0\u5230\u7684 mean()\u3001sum()\u3001var()\u3001std()\u3001cumsum() \u65b9\u6cd5\uff0c\u8fd8\u6709\u51e0\u4e2a\u5e38\u7528\u7684\u6570\u7ec4\u7edf\u8ba1\u65b9\u6cd5\uff1amin() \u7528\u4e8e\u8ba1\u7b97\u6700\u5c0f\u503c\u3001max() \u7528\u4e8e\u8ba1\u7b97\u6700\u5927\u503c\u3001argmin() \u7528\u4e8e\u83b7\u53d6\u6700\u5c0f\u5143\u7d20\u7d22\u5f15\u3001argmax() \u7528\u4e8e\u83b7\u53d6\u6700\u5927\u5143\u7d20\u7d22\u5f15\u3001cumprod() \u7528\u4e8e\u8ba1\u7b97\u7d2f\u8ba1\u79ef\u3002 6.3.3 \u6392\u5e8f\u4e0e\u96c6\u5408\u64cd\u4f5c \u00b6 \u6570\u636e\u5904\u7406\u79bb\u4e0d\u5f00\u6392\u5e8f\u548c\u96c6\u5408\u64cd\u4f5c\uff0cNumPy \u4e5f\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u64cd\u4f5c\u65b9\u6cd5\u6216\u51fd\u6570\u3002 sort() \u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0 ndarray \u7684\u5c31\u5730\u6392\u5e8f\u3002 In [2]: arr = np.random.randn(10) In [3]: arr Out[3]: array([-1.03434834, -0.1066477 , -0.18138105, -0.02874672, 0.37446326, -0.19669119, 0.00594903, 0.19048595, 0.14961745, 0.5749973 ]) In [4]: arr.sort() In [5]: arr Out[5]: array([-1.03434834, -0.19669119, -0.18138105, -0.1066477 , -0.02874672, 0.00594903, 0.14961745, 0.19048595, 0.37446326, 0.5749973 ]) \u5982\u679c\u64cd\u4f5c\u7684\u662f\u591a\u7ef4\u6570\u7ec4\uff0c\u60f3\u6309\u7167\u67d0\u4e2a\u8f74\u8fdb\u884c\u6392\u5e8f\uff0c\u53ea\u9700\u8981\u6307\u5b9a\u8f74\u7684\u7f16\u53f7\u3002 In [8]: arr = np.random.randn(3, 4) In [9]: arr Out[9]: array([[-1.36520054, -1.61647551, -1.19945064, 1.37181547], [-0.10126557, -0.39124394, -0.34307793, -0.8307224 ], [ 0.76972754, 1.10906676, -0.17070844, 0.06256465]]) In [10]: arr.sort(1) # \u6bcf\u884c\u6309\u5347\u5e8f\u6392\u5217 In [11]: arr Out[11]: array([[-1.61647551, -1.36520054, -1.19945064, 1.37181547], [-0.8307224 , -0.39124394, -0.34307793, -0.10126557], [-0.17070844, 0.06256465, 0.76972754, 1.10906676]]) \u53e6\u5916 NumPy \u63d0\u4f9b\u7684 sort() \u51fd\u6570\uff08\u4f7f\u7528\u65b9\u5f0f\u662f np.sort(arr)\uff09\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\uff0c\u4e24\u8005\u7684\u533a\u522b\u662f sort() \u65b9\u6cd5\uff08\u4f7f\u7528\u65b9\u5f0f\u662f arr.sort()\uff09\u662f\u5b9e\u73b0\u88ab\u64cd\u4f5c\u6570\u7ec4\u7684\u5c31\u5730\u4fee\u6539\uff0c\u800c sort() \u51fd\u6570\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u62f7\u8d1d\u3002 NumPy \u63d0\u4f9b\u7684\u96c6\u5408\u8fd0\u7b97\u4e3b\u8981\u9488\u5bf9\u7684\u662f\u4e00\u7ef4 ndarray\u3002\u51fd\u6570 unique()\u3001intersect1d()\u3001union1d()\u3001setdiff1d() \u5206\u522b\u5b9e\u73b0\u552f\u4e00\u5316\u3001\u4ea4\u96c6\u3001\u5e76\u96c6\u4ee5\u53ca\u5dee\u96c6\u64cd\u4f5c\uff0c\u5176\u4e2d\u552f\u4e00\u5316\u6700\u4e3a\u5e38\u7528\u3002 unique() \u51fd\u6570\u4e0d\u4ec5\u4f1a\u627e\u51fa\u6570\u7ec4\u7684\u552f\u4e00\u503c\uff0c\u8fd8\u4f1a\u5bf9\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f\u3002 In [14]: arr_int = np.array([3, 4, 5, 8, 4, 3, 2, 1, 6, 10]) In [15]: arr_int Out[15]: array([ 3, 4, 5, 8, 4, 3, 2, 1, 6, 10]) In [16]: np.unique(arr_int) Out[16]: array([ 1, 2, 3, 4, 5, 6, 8, 10]) \u7b49\u6548\u7684\u7eaf Python \u9700\u8981\u8c03\u7528\u4e24\u4e2a\u51fd\u6570\u5b9e\u73b0\u8be5\u64cd\u4f5c\u3002 In [17]: sorted(set(arr_int)) Out[17]: [1, 2, 3, 4, 5, 6, 8, 10] \u4ea4\u96c6\u3001\u5e76\u96c6\u4e0e\u5dee\u96c6\u64cd\u4f5c\u5206\u522b\u4e3e\u4f8b\u5982\u4e0b\u3002 In [18]: arr_int2 = np.array([1, 3, 22, 5, 6]) # \u53e6\u5916\u65b0\u5efa\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4 In [19]: np.intersect1d(arr_int, arr_int2) # \u4ea4\u96c6 Out[19]: array([1, 3, 5, 6]) In [20]: np.union1d(arr_int, arr_int2) # \u5e76\u96c6 Out[20]: array([ 1, 2, 3, 4, 5, 6, 8, 10, 22]) In [21]: np.setdiff1d(arr_int, arr_int2) # \u5dee\u96c6 Out[21]: array([ 2, 4, 8, 10]) \u96c6\u5408\u64cd\u4f5c\u540e\u7684\u7ed3\u679c\u90fd\u81ea\u52a8\u8fdb\u884c\u4e86\u6392\u5e8f\u3002 6.3.4 \u7ebf\u6027\u4ee3\u6570\u64cd\u4f5c \u00b6 \u7ebf\u6027\u4ee3\u6570\u7684\u4e3b\u8981\u5185\u5bb9\u662f\u77e9\u9635\u4e58\u6cd5\u3001\u77e9\u9635\u5206\u89e3\u4ee5\u53ca\u884c\u5217\u5f0f\u7b49\uff0c\u7531\u4e8e\u77e9\u9635\u8fd0\u7b97\u65b9\u6cd5\u4e0e\u57fa\u672c\u7684\u6570\u503c\u8ba1\u7b97\u6709\u6781\u5927\u4e0d\u540c\uff0cNumPy \u63d0\u4f9b\u4e86\u4e13\u95e8\u7684\u65b9\u6cd5\u6216\u51fd\u6570\u8fdb\u884c\u7ebf\u6027\u4ee3\u6570\u64cd\u4f5c\u3002 In [22]: x = np.array([[1, 2, 3], [4, 5, 6]]) In [23]: y = np.array([[3, 5, 6], [7, 8, 9]]) In [24]: x * y Out[24]: array([[ 3, 10, 18], [28, 40, 54]]) \u5982\u679c\u4f7f\u7528\u4e58\u6cd5\u8fd0\u7b97\u7b26\uff0c\u5f97\u5230\u7684\u662f\u4e24\u4e2a\u6570\u7ec4\u5143\u7d20\u7ea7\u522b\u7684\u76f8\u4e58\uff0c\u800c\u4e0d\u662f\u77e9\u9635\u7684\u70b9\u79ef\uff0c\u70b9\u79ef\u64cd\u4f5c\u9700\u8981\u4f7f\u7528 dot() \u51fd\u6570\uff08\u6216\u65b9\u6cd5\uff09\u3002 In [25]: np.dot(x, y) --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-25-c3a58f1d73f8> in <module>() ----> 1 np.dot(x, y) ValueError: shapes (2,3) and (2,3) not aligned: 3 (dim 1) != 2 (dim 0) \u8f93\u5165\u4e24\u4e2a\u77e9\u9635\u5e76\u4e0d\u4ee3\u8868\u51fd\u6570\u80fd\u591f\u6210\u529f\u8fd0\u884c\uff0c\u8fdb\u884c\u70b9\u79ef\u7684\u4e24\u4e2a\u77e9\u9635\u9700\u8981\u6ee1\u8db3\u7279\u6b8a\u7684\u8981\u6c42\uff0c\u5047\u8bbe\u77e9\u9635 x \u7ef4\u5ea6\u662f m \u884c n \u5217\uff0c\u90a3\u4e48\u77e9\u9635y\u5fc5\u987b\u4e3a n \u884c p \u5217\uff0c\u5373\u77e9\u9635 x \u7684\u5217\u6570\u4e0e\u77e9\u9635 y \u7684\u884c\u6570\u5fc5\u987b\u76f8\u7b49\uff0c\u5f97\u5230\u7684\u77e9\u9635\u7ef4\u5ea6\u662f m \u884c p \u5217\u3002 In [27]: np.dot(x, y) Out[27]: array([[ 39, 46], [ 90, 109]]) \u8fd9\u91cc\u77e9\u9635 x \u7ef4\u5ea6\u662f 2 \u884c 3 \u5217\uff0c\u77e9\u9635y\u7ef4\u5ea6\u662f 3 \u884c 2 \u5217\uff0c\u6240\u4ee5\u70b9\u79ef\u5f97\u5230\u7684\u77e9\u9635\u662f 2 \u884c 2 \u5217\u3002 np.dot(x, y) \u51fd\u6570\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u7528\u7b49\u4ef7\u7684 x.dot(y) \u65b9\u6cd5\u64cd\u4f5c\u5b9e\u73b0\uff0c\u53e6\u5916\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e2d\u7f00\u8fd0\u7b97\u7b26 @\u3002 In [28]: x.dot(y) Out[28]: array([[ 39, 46], [ 90, 109]]) In [29]: x @ y Out[29]: array([[ 39, 46], [ 90, 109]]) NumPy \u7684\u5b50\u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u4e00\u7ec4\u5b9e\u73b0\u6807\u51c6\u7684\u77e9\u9635\u5206\u89e3\u8fd0\u7b97\u3001\u6c42\u9006\u3001\u6c42\u884c\u5217\u5f0f\u7b49\u7684\u51fd\u6570\uff0c\u4e0b\u9762\u5217\u51fa\u4e86\u6700\u5e38\u7528\u7684\u7ebf\u6027\u4ee3\u6570\u51fd\u6570\u3002 \u88686-2 \u5e38\u7528\u7ebf\u6027\u4ee3\u6570\u64cd\u4f5c \u51fd\u6570 \u8bf4\u660e diag \u8fd4\u56de\u65b9\u9635\u7684\u5bf9\u89d2\u7ebf\uff08\u6216\u975e\u5bf9\u89d2\u7ebf\uff09\u5143\u7d20 dot \u77e9\u9635\u4e58\u6cd5 trace \u6c42\u5bf9\u89d2\u7ebf\u5143\u7d20\u548c det \u6c42\u884c\u5217\u5f0f eig \u6c42\u65b9\u9635\u7684\u672c\u5f81\u503c\u3001\u672c\u5f81\u5411\u91cf inv \u6c42\u65b9\u9635\u7684\u9006 pinv \u6c42 Moore-Penrose \u4f2a\u9006 qr QR \u5206\u89e3 svd \u5947\u5f02\u503c\u5206\u89e3 solve \u89e3\u7ebf\u6027\u65b9\u7a0b lstsq \u6c42\u7ebf\u6027\u65b9\u7a0b\u6700\u5c0f\u4e8c\u4e58\u89e3 6.3.5 \u4f2a\u968f\u673a\u6570\u751f\u6210 \u00b6 NumPy \u7684 random \u5b50\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u9ad8\u6548\u751f\u6210\u591a\u79cd\u6982\u7387\u5206\u5e03\u7684\u51fd\u6570\u3002\u5728\u524d\u9762\u7684\u7ae0\u8282\u91cc\uff0c\u672c\u4e66\u5df2\u7ecf\u5229\u7528\u8fc7\u5176\u4e2d\u7684 randn() \u51fd\u6570\u521b\u5efa\u968f\u673a\u6570\u636e\uff0c\u672c\u5c0f\u8282\u5c06\u5bf9\u5b83\u4eec\u8fdb\u884c\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002 \u4f7f\u7528 normal() \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u6807\u51c6\u7684\u6b63\u6001\u5206\u5e03\u62bd\u6837\u6570\u636e\uff0c\u4e0b\u9762\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a 5x5 \u7684\u6570\u7ec4\u3002 In [30]: np.random.normal(size=(5,5)) Out[30]: array([[ 0.03488939, -1.58459629, -1.46781029, -1.13217542, -1.06312407], [ 0.83678804, 1.21880709, -0.90811673, -1.71748912, 0.92877163], [-0.49898785, -0.17523296, -1.73258953, -0.47749123, -1.49576169], [ 0.15254935, 0.46308905, 0.1221845 , -2.15762674, 2.23510318], [-0.70557981, 0.96598878, 0.43192638, -0.2049251 , 0.23281444]]) randn() \u51fd\u6570\u53ef\u4ee5\u4ea7\u751f\u5e73\u5747\u503c\u4e3a 0\uff0c\u6807\u51c6\u5dee\u4e3a 1 \u7684\u6b63\u6001\u5206\u5e03\u6837\u672c\u3002 In [31]: np.random.randn(10) Out[31]: array([-0.559106 , 1.36880898, -0.24559224, -0.16668403, 2.42001793, 0.39617551, -1.06446839, 1.02696512, 0.08217648, 1.07538155]) In [36]: np.random.randn(5,5) Out[36]: array([[-0.77315232, 0.4786622 , -1.38927237, -0.20433972, -2.43830605], [ 0.34922348, 0.87849643, 1.5239394 , -0.73135812, 2.21068918], [ 0.12944191, 1.01207972, -0.57685143, 2.63207061, -0.74326986], [ 0.73286193, 0.42616076, -0.42334269, -0.98384705, -0.02632024], [-0.6184617 , 0.40202667, -0.3722806 , 0.16819083, 0.55132166]]) \u6ce8\u610f\u4e0a\u9762 normal() \u51fd\u6570\u4e0e randn() \u51fd\u6570\u5728\u4ea7\u751f 5x5 \u6570\u7ec4\u4e0a\u7684\u4e0d\u540c\u4e4b\u5904\uff1anormal() \u9700\u8981\u4f20\u5165\u4e00\u4e2a\u5143\u7ec4\uff0c\u800c randn() \u53ea\u9700\u8981\u4f20\u5165\u4e00\u7cfb\u5217\u7ef4\u5ea6\u503c\u3002 \u9664\u4e86\u751f\u6210\u968f\u673a\u7684\u6570\u636e\uff0c\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u662f\u8bbe\u7f6e\u968f\u673a\u79cd\u5b50\u3002\u4e0a\u8ff0\u6240\u770b\u5230\u7684\u968f\u673a\u6570\u5b9e\u9645\u4e0a\u662f\u8ba1\u7b97\u673a\u4f9d\u636e\u968f\u673a\u6570\u751f\u6210\u5668\u5728\u786e\u5b9a\u6027\u6761\u4ef6\u4e0b\u751f\u6210\u7684\u6570\u636e\uff0c\u6211\u4eec\u4e00\u822c\u4e5f\u5e38\u79f0\u4e3a\u4f2a\u968f\u673a\u6570\u3002\u901a\u8fc7\u8bbe\u7f6e\u968f\u673a\u79cd\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u590d\u4e4b\u524d\u751f\u6210\u7684\u968f\u673a\u6570\u636e\uff0c\u8fd9\u4e3a\u91cd\u590d\u540c\u6837\u7684\u5206\u6790\u7ed3\u679c\uff08\u8be5\u5206\u6790\u4f7f\u7528\u5230\u4e86\u968f\u673a\u6570\u636e\uff09\u63d0\u4f9b\u4e86\u5e2e\u52a9\u3002 In [37]: np.random.seed(1234) \u6b64\u5904\u4f7f\u7528 random \u5b50\u6a21\u5757\u7684 seed() \u51fd\u6570\u8bbe\u5b9a\u7684\u662f\u4e00\u4e2a\u5168\u5c40\u7684\u968f\u673a\u79cd\u5b50\u3002\u5982\u679c\u60f3\u8981\u907f\u514d\u5168\u5c40\u72b6\u6001\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 RandomState() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u9694\u79bb\u7684\u968f\u673a\u6570\u751f\u6210\u5668\u3002 In [37]: r = np.random.RandomState(123456) In [38]: r.randn(10) Out[38]: array([ 0.4691123 , -0.28286334, -1.5090585 , -1.13563237, 1.21211203, -0.17321465, 0.11920871, -1.04423597, -0.86184896, -2.10456922]) \u4e0b\u8868\u7ed9\u51fa\u4e86 random \u5b50\u6a21\u5757\u4e2d\u5e38\u7528\u7684\u968f\u673a\u51fd\u6570\u3002 \u88686-3 \u5e38\u7528\u968f\u673a\u51fd\u6570 \u51fd\u6570 \u8bf4\u660e seed \u8bbe\u5b9a\u5168\u5c40\u968f\u673a\u6570\u751f\u6210\u5668\u79cd\u5b50 RandomState \u8bbe\u5b9a\u5c40\u90e8\u968f\u673a\u6570\u751f\u6210\u5668\u79cd\u5b50 permutation \u968f\u673a\u6392\u5217\u8f93\u5165\u5e8f\u5217 shuffle \u5bf9\u8f93\u5165\u5e8f\u5217\u5c31\u5730\u968f\u673a\u6392\u5217\uff08\u6d17\u724c\uff09 rand \u751f\u6210\u968f\u673a\u503c randint \u6839\u636e\u6307\u5b9a\u8303\u56f4\u968f\u673a\u9009\u53d6\u6574\u6570 randn \u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\u4e2d\u968f\u673a\u62bd\u6837 binomial \u4e8c\u9879\u5206\u5e03\u53d6\u6837 normal \u6b63\u6001\u5206\u5e03\u53d6\u6837 beta \u8d1d\u5854\u5206\u5e03\u53d6\u6837 chisquare \u5361\u65b9\u5206\u5e03\u53d6\u6837 gamma \u4f3d\u9a6c\u5206\u5e03\u53d6\u6837 uniform \u5747\u5300\u5206\u5e03\u53d6\u6837 6.3.6 \u6570\u7ec4\u6587\u4ef6\u8f93\u5165\u4e0e\u5bfc\u51fa \u00b6 Numpy \u9664\u4e86\u63d0\u4f9b\u591a\u7ef4\u6570\u7ec4\u5bf9\u8c61 ndarrary\u3001\u9ad8\u6548\u7684\u6570\u7ec4\u64cd\u4f5c\u51fd\u6570\u548c\u65b9\u6cd5\uff0c\u5b83\u8fd8\u652f\u6301\u78c1\u76d8\u6587\u672c\u6216\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u8bfb\u5199\u64cd\u4f5c\u3002\u672c\u5c0f\u8282\u4e3b\u8981\u4ecb\u7ecd NumPy \u5185\u7f6e\u7684\u6570\u636e\u5b58\u50a8\u4e8c\u8fdb\u5236\u683c\u5f0f\uff0c\u6570\u636e\u5904\u7406\u5e38\u89c1\u7684\u6587\u672c\u683c\u5f0f\u7684\u5bfc\u5165\u4e0e\u4fdd\u5b58\u5c06\u5728 Pandas \u7ae0\u8282\u8fdb\u884c\u4ecb\u7ecd\u3002 Numpy \u63d0\u4f9b\u4e86\u4e24\u4e2a\u4e3b\u8981\u7684\u51fd\u6570\u5206\u522b\u7528\u4e8e\u5c06 ndarray \u5199\u5165\u78c1\u76d8\u548c\u4ece\u78c1\u76d8\u4e2d\u8bfb\u5165\u4fdd\u5b58\u7684\u6570\u7ec4\u6570\u636e\u6587\u4ef6\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6570\u7ec4\u4f1a\u4ee5\u672a\u538b\u7f29\u7684\u4e8c\u8fdb\u5236\u683c\u5f0f\u4fdd\u5b58\u5728\u6587\u4ef6\u6269\u5c55\u540d\u4e3a .npy \u7684\u6587\u4ef6\u4e2d\u3002 In [2]: arr1 = np.random.randn(10) # \u521b\u5efa\u4e00\u4e9b\u6570\u7ec4 In [3]: arr2 = np.random.randn(10) In [4]: arr_res = arr1 + arr2 # \u64cd\u4f5c\u6570\u7ec4 In [5]: np.save('result', arr_res) # \u4fdd\u5b58\u7ed3\u679c\u6570\u7ec4 np.save() \u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u6587\u4ef6\u540d\uff08\u53ef\u4ee5\u5305\u542b\u6307\u5b9a\u8def\u5f84\uff09\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u4fdd\u5b58\u7684\u6570\u7ec4\u3002\u5982\u679c\u7528\u6237\u6ca1\u6709\u6307\u5b9a\u6587\u4ef6\u6269\u5c55\u540d\u65f6\uff0cNumPy \u4f1a\u5728\u5b9e\u9645\u4fdd\u5b58\u65f6\u5c06 .npy \u52a0\u4e0a\u3002\u3002 \u8fd9\u6837\uff0c\u6570\u636e\u5c31\u88ab\u4fdd\u5b58\u5230\u4e86\u8ba1\u7b97\u673a\u78c1\u76d8\u4e0a\uff0c\u5f53\u9700\u8981\u5bfc\u5165\u8be5\u6570\u636e\u65f6\uff0c\u53ea\u9700\u8981\u8c03\u7528 np.load() \u51fd\u6570\u5e76\u4f20\u5165\u6587\u4ef6\u8def\u5f84\u3002 In [6]: np.load('result.npy') Out[6]: array([-1.62141731, 0.22330449, 0.52851935, -0.34489954, 0.00938235, 3.27527395, -0.83738875, 0.45741888, -0.12050226, -0.90452199]) \u6ce8\u610f\uff0c\u5bfc\u5165\u65f6\u9700\u8981\u5b8c\u6574\u8f93\u5165\u6587\u4ef6\u540d\u53ca\u6587\u4ef6\u6269\u5c55\u540d\uff0c\u5426\u5219 load() \u51fd\u6570\u5c06\u627e\u4e0d\u5230\u6587\u4ef6\u6240\u5728\u3002 In [7]: np.load('result') --------------------------------------------------------------------------- FileNotFoundError Traceback (most recent call last) <ipython-input-7-f17638fbbc1f> in <module>() ----> 1 np.load('result') ~/anaconda3/lib/python3.7/site-packages/numpy/lib/npyio.py in load(file, mmap_mode, allow_pickle, fix_imports, encoding) 382 own_fid = False 383 if isinstance(file, basestring): --> 384 fid = open(file, \"rb\") 385 own_fid = True 386 elif is_pathlib_path(file): FileNotFoundError: [Errno 2] No such file or directory: 'result' \u5728\u5b9e\u9645\u8fdb\u884c\u6570\u7ec4\u64cd\u4f5c\u65f6\u5f80\u5f80\u4f1a\u4ea7\u751f\u591a\u4e2a\u9700\u8981\u4fdd\u5b58\u7684\u6570\u636e\u7ed3\u679c\uff0cnp.savez() \u51fd\u6570\u53ef\u4ee5\u5c06\u591a\u4e2a ndarray \u4fdd\u5b58\u5230\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u3002\u8be5\u51fd\u6570\u9700\u8981\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e0e np.save() \u4e00\u6837\u4e5f\u662f\u4fdd\u5b58\u7684\u6587\u4ef6\u540d\uff0c\u4e0d\u8fc7\u4ee5 .npz \u4f5c\u4e3a\u6587\u4ef6\u6269\u5c55\u540d\uff0c\u540e\u9762\u7684\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u610f\u591a\u4e2a\u7528\u6237\u6307\u5b9a\u7684\u5173\u952e\u5b57\u53c2\u6570\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u4e4b\u524d\u751f\u6210\u7684 3 \u4e2a\u6570\u7ec4\u4fdd\u5b58\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002 In [8]: np.savez('array_save.npz', input1=arr1, input2=arr2, result=arr_res) \u5982\u679c\u76f4\u63a5\u5c06\u5176\u5bfc\u5165\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u4e0d\u53ef\u67e5\u770b\u7684 NpzFile \u5bf9\u8c61\u3002 In [9]: np.load('array_save.npz') Out[9]: <numpy.lib.npyio.NpzFile at 0x7f917c6caba8> \u6211\u4eec\u9700\u8981\u5c06\u5176\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u7136\u540e\u901a\u8fc7\u4fdd\u5b58\u65f6\u8bbe\u5b9a\u7684\u5173\u952e\u5b57\u53c2\u6570\u8fdb\u884c\u7d22\u5f15\u67e5\u770b\u5355\u4e2a\u7684\u6570\u7ec4\u6570\u636e\u3002 In [10]: arr_save = np.load('array_save.npz') In [11]: arr_save['input1'] Out[11]: array([-0.79417709, 0.57095314, 1.59839779, -0.96875458, -1.35098779, 2.5673315 , 0.64841217, 0.28681969, 0.26718872, 0.26876572]) In [12]: arr_save['input2'] Out[12]: array([-0.82724022, -0.34764864, -1.06987844, 0.62385504, 1.36037014, 0.70794245, -1.48580092, 0.17059919, -0.38769099, -1.17328771]) In [13]: arr_save['result'] Out[13]: array([-1.62141731, 0.22330449, 0.52851935, -0.34489954, 0.00938235, 3.27527395, -0.83738875, 0.45741888, -0.12050226, -0.90452199]) \u4e0a\u8ff0\u4fdd\u5b58\u7684\u6587\u4ef6\u90fd\u662f\u672a\u538b\u7f29\u7684\uff0c\u5982\u679c\u60f3\u8981\u5c06\u6570\u636e\u538b\u7f29\uff0c\u8bfb\u8005\u4e0d\u59a8\u4f7f\u7528 np.savez_compressed() \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0e np.savez() \u4e00\u81f4\uff0c\u56e0\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002 6.4 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 NumPy \u6a21\u5757\u4e2d ndarray \u6570\u636e\u5b58\u50a8\u5bf9\u8c61\u548c\u4e00\u7cfb\u5217\u9ad8\u6548\u6570\u636e\u64cd\u4f5c\u65b9\u6cd5\u3001\u51fd\u6570\u7684\u5f15\u5165\u4e3a\u66f4\u9ad8\u7ea7\u522b\u7684\u6570\u636e\u5904\u7406\u3001\u7edf\u8ba1\u5efa\u6a21\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u5e95\u5c42\u5b9e\u73b0\u3002 \u901a\u8fc7\u672c\u7ae0\u7684\u5b66\u4e60\uff0c\u8bfb\u8005\u5e94\u5f53\u5bf9 NumPy \u7684\u957f\u5904\u6709\u6240\u8ba4\u77e5\uff1aNumPy \u6a21\u5757\u63d0\u4f9b\u4e86\u72ec\u7acb\u4e8e Python \u5185\u7f6e\u5bf9\u8c61\u7684 ndarray \u591a\u7ef4\u6570\u7ec4\u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u4e00\u4e2a\u8fde\u7eed\u7684\u5185\u5b58\u5757\u4e2d\uff0c\u5229\u7528 C \u8bed\u8a00\u5b9e\u73b0\u7684\u7b97\u6cd5\u5e93\u64cd\u4f5c\u548c\u4fee\u6539\u6570\u636e\uff0c\u51cf\u5c11\u5bf9\u5185\u5b58\u8d44\u6e90\u7684\u6d88\u8017\uff1bNumPy \u53ef\u4ee5\u5bf9\u6574\u4e2a\u6570\u7ec4\u6267\u884c\u590d\u6742\u7684\u6570\u503c\u8ba1\u7b97\uff0c\u907f\u514d\u4e86 for \u5faa\u73af\u7684\u4f7f\u7528\uff0c\u63d0\u5347\u4e86\u8ba1\u7b97\u7684\u901f\u5ea6\u3002\u76f8\u5e94\u5730\uff0c\u8bfb\u8005\u5728\u5904\u7406\u5927\u6570\u636e\u96c6\u65f6\uff0c\u5e94\u5f53\u5c3d\u91cf\u5229\u7528 NumPy \u7684\u4f18\u52bf\uff0c\u4e00\u65b9\u9762\u5728\u6570\u7ec4\u64cd\u4f5c\u65f6\u907f\u514d\u521b\u5efa\u8fc7\u591a\u7684\u4e2d\u95f4\u53d8\u91cf\uff0c\u53e6\u4e00\u65b9\u9762\u719f\u7ec3\u4f7f\u7528 NumPy \u63d0\u4f9b\u7684\u5411\u91cf\u5316\u8ba1\u7b97\u51fd\u6570\u548c\u65b9\u6cd5\u3002","title":"\u7b2c 6 \u7ae0 NumPy"},{"location":"06-numpy/#6-numpy","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a NumPy \u7b80\u4ecb\u4e0e ndarray ndarray \u6570\u7ec4\u64cd\u4f5c ndarray \u6570\u7ec4\u51fd\u6570\u4e0e\u65b9\u6cd5 \u524d\u51e0\u7ae0\u672c\u4e66\u4ecb\u7ecd\u4e86 Python \u57fa\u672c\u7684\u7f16\u7a0b\u77e5\u8bc6\uff0c\u4ece\u8fd9\u4e00\u7ae0\u5f00\u59cb\u8bfb\u8005\u5c06\u8fdb\u5165 Python \u6570\u636e\u5206\u6790\u57fa\u7840\u6a21\u5757\u7684\u5b66\u4e60\uff0c\u5305\u62ec NumPy\u3001Matplotlib \u548c Pandas \u4e09\u5927\u6a21\u5757\uff0c\u5b83\u4eec\u5c06\u5206\u4e3a 3 \u4e2a\u7ae0\u8282\u5206\u522b\u8fdb\u884c\u4ecb\u7ecd\u3002 NumPy \u662f Python \u6570\u636e\u5904\u7406\u6700\u91cd\u8981\u7684\u57fa\u7840\u5305\uff0c\u7edd\u5927\u591a\u6570\u7684 Python \u6570\u636e\u5206\u6790\u8f6f\u4ef6\u5305\u90fd\u662f\u57fa\u4e8e NumPy \u6784\u5efa\u7684\uff0c\u56e0\u6b64\u5b66\u4f1a\u64cd\u4f5c NumPy \u662f\u8bfb\u8005\u719f\u7ec3\u4f7f\u7528 Python \u8fdb\u884c\u6570\u636e\u5206\u6790\u7684\u57fa\u77f3\u3002","title":"\u7b2c 6 \u7ae0 NumPy"},{"location":"06-numpy/#61-numpy-ndarray","text":"","title":"6.1 NumPy \u7b80\u4ecb\u4e0e ndarray"},{"location":"06-numpy/#611-numpy","text":"\u5728\u5b66\u4e60 NumPy \u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\u5b83\u7684\u5386\u53f2\u3002 Python \u7684\u9762\u5411\u6570\u7ec4\u8ba1\u7b97\u53ef\u4ee5\u8ffd\u6eaf\u5230 1995 \u5e74\uff0cJim Hugunin \u521b\u5efa\u4e86 Numeric \u5e93\u3002\u5728\u63a5\u4e0b\u6765\u7684 10 \u5e74\u4e2d\uff0c\u8bb8\u591a\u79d1\u5b66\u7f16\u7a0b\u793e\u533a\u7eb7\u7eb7\u5f00\u59cb\u4f7f\u7528 Python \u7684\u6570\u7ec4\u7f16\u7a0b\uff0c\u4f46\u662f\u8fdb\u5165 21 \u4e16\u7eaa\u540e\uff0cNumeric \u5e93\u7684\u751f\u6001\u7cfb\u7edf\u53d8\u5f97\u788e\u7247\u5316\u4e86\u30022005 \u5e74\uff0cTravis Oliphant \u4ece Numeric \u548c Numarray \u9879\u76ee\u6574\u7406\u51fa\u4e86 NumPy \u9879\u76ee\uff0c\u5c06\u6240\u6709 Python \u8ba1\u7b97\u793e\u533a\u90fd\u96c6\u5408\u5230\u4e86\u8fd9\u4e2a\u6846\u67b6\u4e0b\u3002 NumPy \u6709\u7740\u8f83\u6f2b\u957f\u7684\u6f14\u5316\u5386\u53f2\uff0c\u5b83\u672c\u8eab\u5173\u6ce8\u4e0e\u5e95\u5c42\u8bed\u8a00\uff08\u5982 C\u3001C++\uff09\u7684\u4ea4\u4e92\u3001\u6570\u7ec4\u8fd0\u7b97\u3001\u6570\u5b66\u51fd\u6570\u8fd0\u7b97\u3001\u78c1\u76d8\u6570\u636e\u7684\u8bfb\u5199\u7b49\u3002NumPy \u5728\u8ba1\u7b97\u673a\u4e00\u4e2a\u72ec\u7acb\u4e8e\u5176\u4ed6 Python \u5185\u7f6e\u5bf9\u8c61\u7684\u8fde\u7eed\u7684\u5185\u5b58\u5757\u4e2d\u5b58\u50a8\u6570\u636e\uff0c\u5b83\u5185\u90e8\u7684 C \u8bed\u8a00\u7b97\u6cd5\u5e93\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\uff0c\u53ef\u4ee5\u5bf9\u6570\u7ec4\u6267\u884c\u590d\u6742\u7684\u8ba1\u7b97\uff0c\u51cf\u5c11\u5185\u5b58\u7684\u6d88\u8017\u4ee5\u53ca\u63d0\u5347\u8ba1\u7b97\u6548\u7387\u3002\u867d\u7136 NumPy \u672c\u8eab\u5e76\u6ca1\u6709\u63d0\u4f9b\u5f88\u9ad8\u7ea7\u7684\u6570\u5b66\u5206\u6790\u529f\u80fd\uff0c\u4f46\u5b83\u6240\u63d0\u4f9b\u7684\u5e95\u5c42\u8bed\u8a00\u63a5\u53e3\u3001\u65e0\u9700\u7f16\u5199\u5faa\u73af\u7684\u5feb\u901f\u8fd0\u7b97\u6570\u5b66\u51fd\u6570\u3001\u64cd\u4f5c\u5feb\u901f\u4e14\u8282\u7701\u7a7a\u95f4\u7684\u591a\u7ef4\u6570\u7ec4\u7b49\u7279\u6027\u8ba9\u5b83\u6210\u4e3a Python \u6570\u636e\u5206\u6790\u6700\u6838\u5fc3\u7684\u8ba1\u7b97\u5e93\u4e4b\u4e00\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u7406\u89e3\u548c\u719f\u7ec3\u64cd\u4f5c NumPy \u6570\u7ec4\u5c06\u6709\u52a9\u4e8e\u8bfb\u8005\u4f7f\u7528 Pandas \u7b49\u9ad8\u7ea7\u5e93\u3002 \u5728\u6570\u636e\u5206\u6790\u65f6\uff0cNumPy \u80fd\u4e3a\u8bfb\u8005\u63d0\u4f9b\u7684\u6709\u7528\u529f\u80fd\u4e3b\u8981\u6709\uff1a \u5411\u91cf\u5316\u6570\u7ec4\u64cd\u4f5c\uff0c\u5305\u62ec\u6570\u636e\u5b50\u96c6\u7684\u6784\u5efa\u3001\u6570\u636e\u8fc7\u6ee4\u4e0e\u6570\u636e\u8f6c\u6362\u7b49\u3002 \u5e38\u7528\u7684\u6570\u7ec4\u7b97\u6cd5\u64cd\u4f5c\uff0c\u5305\u62ec\u6392\u5e8f\u3001\u552f\u4e00\u503c\u3001\u96c6\u5408\u8fd0\u7b97\u7b49\u3002 \u63cf\u8ff0\u6027\u7edf\u8ba1\u91cf\u548c\u6570\u636e\u6c47\u603b\u6458\u8981\u3002 \u5173\u7cfb\u578b\u6570\u636e\u64cd\u4f5c\uff0c\u5305\u62ec\u6570\u636e\u96c6\u7684\u5408\u5e76\u3001\u8fde\u63a5\u7b49\u3002 \u6570\u7ec4\u7684\u5206\u7ec4\u8fd0\u7b97\uff0c\u5305\u62ec\u805a\u5408\u3001\u8f6c\u6362\u3001\u51fd\u6570\u5e94\u7528\u7b49\u3002 \u6761\u4ef6\u5faa\u73af\u7ed3\u6784\u7684\u6570\u7ec4\u5316\uff0c\u5373\u4f7f\u7528\u6570\u7ec4\u64cd\u4f5c\u66ff\u6362 if-else \u7b49\u7ed3\u6784\uff0c\u83b7\u5f97\u9ad8\u6548\u7684\u8ba1\u7b97\u6548\u7387\u3002 \u4e3a\u4e86\u8ba9\u8bfb\u8005\u660e\u767d NumPy \u4e0e Python \u672c\u8eab\u5177\u4f53\u7684\u8ba1\u7b97\u6027\u80fd\u5dee\u5f02\uff0c\u8fd9\u91cc\u7528\u4e00\u4e2a\u4e00\u5343\u4e07\u6574\u6570\u7684\u6570\u7ec4\u548c\u4e00\u4e2a\u7b49\u957f\u7684 Python \u5217\u8868\u8fdb\u884c\u6d4b\u8bd5\u3002 In [1]: import numpy as np In [2]: np_array = np.arange(10000000) In [3]: py_array = list(range(10000000)) In [4]: %time for i in range(10): np_array * 2 CPU times: user 136 ms, sys: 300 ms, total: 436 ms Wall time: 435 ms In [5]: %time for i in range(10): [ x*2 for x in py_array ] CPU times: user 6.04 s, sys: 1.66 s, total: 7.7 s Wall time: 7.7 s \u4e0a\u9762\u4ee3\u7801\u5c06\u4e24\u4e2a\u5e8f\u5217\u90fd\u5206\u522b\u4e58\u4ee5 2\uff0c\u8ba1\u7b97\u4e86 10 \u6b21\u3002\u5f88\u660e\u663e\uff0cNumPy \u6bd4\u5217\u8868\u63a8\u5bfc\u5f0f\u8282\u7701\u4e86 10 \u591a\u500d\u7684\u65f6\u95f4\uff0c\u53e6\u5916\u5728\u64cd\u4f5c\u4e0a\uff0cNumPy \u66f4\u7b80\u5355\u76f4\u63a5\uff08\u53e6\u5916 NumPy \u5360\u7528\u7684\u5185\u5b58\u66f4\u5c11\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u6ca1\u6709\u4f53\u73b0\u51fa\u6765\uff09\u3002 \u8fd9\u91cc\u6700\u8ba9\u4eba\u60ca\u53f9\u7684\u662f\u5bf9\u4e8e\u4e00\u4e2a 1000 \u4e07\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\uff08\u6210\u4e3a\u5411\u91cf\u6216\u77e2\u91cf\uff09\u4e58\u6cd5\u64cd\u4f5c\uff0cNumPy \u4f7f\u7528\u65b9\u6cd5\u8ddf\u5355\u4e2a\u503c\uff08\u79f0\u4e3a\u6807\u91cf\uff09\u5b8c\u5168\u4e00\u81f4\u3002\u8fd9\u79cd\u9ad8\u6548\u4e14\u7b80\u6613\u64cd\u4f5c\u7684 NumPy \u6570\u7ec4\u5176\u6b63\u5f0f\u5bf9\u8c61\u540d\u4e3a ndarray\u3002","title":"6.1.1 NumPy \u7b80\u4ecb"},{"location":"06-numpy/#612-ndarray","text":"ndarray\uff08N \u7ef4\u6570\u7ec4\u5bf9\u8c61\uff09\u662f\u4e00\u4e2a\u5feb\u901f\u4e14\u7075\u6d3b\u7684\u6570\u636e\u96c6\u5bb9\u5668\uff0cPython \u7528\u6237\u53ef\u4ee5\u5229\u7528 ndarray \u5bf9\u6570\u7ec4\u7684\u6574\u5757\u6570\u636e\u6216\u9009\u62e9\u6027\u6570\u636e\u6267\u884c\u6279\u91cf\u64cd\u4f5c\uff0c\u5b83\u7684\u8bed\u6cd5\u4e0e\u6807\u91cf\u8fd0\u7b97\u4e00\u81f4\u3002 \u5728\u4e0a\u4e00\u5c0f\u8282\u7684\u4ecb\u7ecd\u4e2d\uff0c\u672c\u4e66\u4f7f\u7528\u4e86 arange() \u51fd\u6570\u5feb\u901f\u521b\u5efa\u4e86\u4e00\u4e2a\u542b\u8fde\u7eed\u503c\u7684 ndarray \u5bf9\u8c61\uff0c\u8fd9\u5bf9\u5e94 Python \u5e38\u7528\u7684\u5185\u7f6e\u51fd\u6570 range()\u3002\u9664\u4e86 arange() \u51fd\u6570\uff0c\u521b\u5efa ndarray \u6700\u7b80\u5355\u7684\u529e\u6cd5\u662f\u7528 array() \u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u5e8f\u5217\uff08\u5217\u8868\u3001\u5143\u7ec4\u7b49\uff09\u4f5c\u4e3a\u8f93\u5165\uff0c\u8f93\u51fa\u4e00\u4e2a\u5305\u542b\u8f93\u5165\u6570\u636e\u7684 ndarray\u3002 \u4e0b\u9762\u4ee3\u7801\u6f14\u793a\u4f7f\u7528\u5217\u8868\u548c\u5143\u7ec4\u521b\u5efa ndarray \u4ee5\u53ca\u4e00\u4e2a\u9519\u8bef\u793a\u4f8b\uff1a In [7]: np.array([1, 3, 5, 7]) Out[7]: array([1, 3, 5, 7]) In [8]: np.array((2, 4, 6, 8)) Out[8]: array([2, 4, 6, 8]) In [9]: np.array(2, 4, 6, 8) --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-9-1ec14a5e9a23> in <module>() ----> 1 np.array(2, 4, 6, 8) ValueError: only 2 non-keyword arguments accepted \u5d4c\u5957\u5217\u8868\u53ef\u4ee5\u8f6c\u6362\u4e3a\u4e00\u4e2a\u591a\u7ef4\u6570\u7ec4\uff0c\u6570\u7ec4\u5143\u7d20\u7b49\u957f\u548c\u4e0d\u7b49\u957f\u5f97\u5230\u7684\u7ed3\u679c\u662f\u4e0d\u4e00\u6837\u7c7b\u578b\u3002\u4ece\u4e0b\u9762\u4ee3\u7801\u8f93\u51fa\u4e2d\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u8f93\u5165\u7684\u5d4c\u5957\u5217\u8868\u5143\u7d20\u7b49\u957f\u65f6\uff0c\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u591a\u7ef4\u6570\u7ec4\uff08\u8fd9\u91cc\u662f 2 \u7ef4\uff09\uff0c\u800c\u5143\u7d20\u4e0d\u7b49\u957f\u65f6\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u5185\u90e8\u7684\u5b50\u5217\u8868\u662f ndarray \u4e00\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u4e24\u4e2a\u5143\u7d20\u3002 In [10]: np.array([[1, 3, 5, 7], [2, 4, 6, 8]]) Out[10]: array([[1, 3, 5, 7], [2, 4, 6, 8]]) In [11]: np.array([[1, 3, 5, 7], [2, 4, 6]]) Out[11]: array([list([1, 3, 5, 7]), list([2, 4, 6])], dtype=object) ndarray \u4e00\u65e6\u521b\u5efa\uff0c\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u5c5e\u6027\u83b7\u53d6\u6570\u7ec4\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u4f8b\u5982\uff0cndim \u5c5e\u6027\u53ef\u4ee5\u83b7\u53d6\u7ef4\u5ea6\uff0cshape \u5c5e\u6027\u53ef\u4ee5\u83b7\u53d6\u6bcf\u4e2a\u7ef4\u5ea6\u5177\u4f53\u7684\u957f\u5ea6\u3002 In [12]: arr1 = np.array([[1, 3, 5, 7], [2, 4, 6, 8]]) In [14]: arr1.ndim Out[14]: 2 In [15]: arr1.shape Out[15]: (2, 4) ndarray \u9664\u4e86\u5b58\u50a8\u5e38\u89c1\u7684\u6570\u503c\u7c7b\u578b\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u5b58\u50a8 Python \u5176\u4ed6\u7684\u5e38\u89c1\u6570\u636e\u7c7b\u578b\uff0c\u5982\u5b57\u7b26\u4e32\u3001\u903b\u8f91\u503c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNumPy \u7684 array() \u51fd\u6570\u4f1a\u81ea\u52a8\u4e3a\u8f93\u5165\u5e8f\u5217\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7c7b\u578b\u503c\u4f1a\u88ab\u4fdd\u5b58\u5728\u4e00\u4e2a\u79f0\u4e3a dtype \u7684\u7279\u6b8a\u5bf9\u8c61\u4e2d\uff0c\u5b83\u540c\u6837\u53ef\u4ee5\u4ee5\u5c5e\u6027\u7684\u5f62\u5f0f\u8bbf\u95ee\u3002 In [16]: arr1.dtype Out[16]: dtype('int64') \u4e0a\u8ff0\u7ed3\u679c\u663e\u793a\u8f93\u5165\u7684\u90fd\u662f\u6574\u6570\u65f6\uff0cNumPy \u5b58\u50a8\u7684\u6570\u636e\u7c7b\u578b\u662f int64\uff0c\u5373 64 \u4f4d\u6574\u6570\u3002\u5f53\u8f93\u5165\u7684\u6570\u636e\u5305\u542b\u6d6e\u70b9\u7c7b\u578b\uff0cNumPy \u751f\u6210\u7684 ndarray \u90fd\u5c06\u4e3a\u6d6e\u70b9\u6570\u3002ndarray \u4f1a\u5f3a\u5236\u6240\u6709\u7684\u5143\u7d20\u6570\u636e\u7c7b\u578b\u4fdd\u6301\u4e00\u81f4\u3002 In [17]: arr2 = np.array([[1.0, 3, 5, 7], [2, 4.0, 6, 8]]) In [18]: arr2.dtype Out[18]: dtype('float64') \u5c3d\u7ba1\u5bf9\u8c61 arr2 \u4e0e arr1 \u5b58\u50a8\u7684\u6570\u636e\u5728\u4fe1\u606f\u5c42\u9762\u6ca1\u6709\u5dee\u5f02\uff0c\u4f46 NumPy \u5b58\u50a8\u5b83\u4eec\u7684\u65b9\u5f0f\u662f\u4e0d\u4e00\u6837\u7684\u3002 \u4e00\u822c\u5728\u6570\u636e\u5206\u6790\u64cd\u4f5c\u7684\u5bf9\u8c61\u662f\u6570\u503c\u578b\u7684\u6570\u7ec4\uff0c\u4e3a\u4e86\u65b9\u4fbf\u4e00\u4e9b\u5e38\u7528\u6570\u7ec4\u7684\u521b\u5efa\uff0cNumPy \u63d0\u4f9b\u4e86\u4e13\u95e8\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff0czeros() \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u5168 0 \u6570\u7ec4\uff0cones() \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u5168 1 \u6570\u7ec4\uff0cempty() \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u7a7a\u6570\u7ec4\u3002\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u65f6\u53ea\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u8868\u793a\u5f62\u72b6\u7684\u6570\u503c\u6216\u5143\u7ec4\u3002 \u4e0b\u9762\u4ee3\u7801\u6f14\u793a\u4e86 1 \u7ef4\u5230 3 \u7ef4\u6570\u7ec4\u7684\u521b\u5efa\u3002 In [19]: np.ones(5) Out[19]: array([1., 1., 1., 1., 1.]) In [20]: np.empty((2, 5)) Out[20]: array([[6.94152610e-310, 4.66070032e-310, 4.66070031e-310, 6.94152610e-310, 7.35167805e+223], [5.40761401e-067, 1.39835953e-076, 7.01413727e-009, 2.17150970e+214, 6.45967520e+270]]) In [21]: np.zeros((2,3,4)) Out[21]: array([[[0., 0., 0., 0.], [0., 0., 0., 0.], [0., 0., 0., 0.]], [[0., 0., 0., 0.], [0., 0., 0., 0.], [0., 0., 0., 0.]]]) \u521b\u5efa\u7684\u6570\u7ec4\u9ed8\u8ba4\u6570\u636e\u7c7b\u578b\u90fd\u662f\u6d6e\u70b9\u6570\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u5728\u521b\u5efa\u65f6\u6307\u5b9a dtype \u53c2\u6570\u8fdb\u884c\u66f4\u6539\u3002\u5728 IPython Shell \u6216 Jupyter Notebook \u4e2d\u952e\u5165 np.ones? \u53ef\u4ee5\u67e5\u770b\u8be6\u7ec6\u7684\u53c2\u6570\u8bf4\u660e\u4ee5\u53ca\u793a\u4f8b\uff0c\u8fd9\u51e0\u4e2a\u51fd\u6570\u7684\u7528\u6cd5\u5927\u4f53\u662f\u4e00\u81f4\u7684\u3002 Signature: np.ones(shape, dtype=None, order='C') Docstring: Return a new array of given shape and type, filled with ones. Parameters ---------- shape : int or sequence of ints Shape of the new array, e.g., ``(2, 3)`` or ``2``. dtype : data-type, optional The desired data-type for the array, e.g., `numpy.int8`. Default is `numpy.float64`. order : {'C', 'F'}, optional, default: C Whether to store multi-dimensional data in row-major (C-style) or column-major (Fortran-style) order in memory. Returns ------- out : ndarray Array of ones with the given shape, dtype, and order. See Also -------- ones_like : Return an array of ones with shape and type of input. empty : Return a new uninitialized array. zeros : Return a new array setting values to zero. full : Return a new array of given shape filled with value. \u5b57\u7b26\u4e32\u6570\u7ec4\u5b58\u50a8\u7684\u6570\u636e\u5982\u679c\u90fd\u662f\u6570\u5b57\uff0c\u6211\u4eec\u5e38\u5c06\u5b83\u8f6c\u6362\u4e3a\u6570\u503c\u578b\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u901a\u8fc7 ndarray \u5bf9\u8c61\u7684 astype() \u65b9\u6cd5\u5b9e\u73b0\u3002 In [24]: num_string = np.array(['1.0', '2', '3.45'], dtype = np.string_) In [25]: num_string Out[25]: array([b'1.0', b'2', b'3.45'], dtype='|S4') In [26]: num_string.astype(float) Out[26]: array([1. , 2. , 3.45]) \u4e0a\u9762\u4f8b\u5b50\u7684 astype() \u4e2d\u4f7f\u7528\u4e86 float\uff0c\u5b83\u662f Python \u5185\u7f6e\u7684\u6570\u636e\u7c7b\u578b\uff0cNumPy \u4f1a\u5c06\u5176\u81ea\u52a8\u6620\u5c04\u5230\u7b49\u4ef7\u7684 dtype \u4e0a\uff0c\u5373 float64\u3002\u5982\u679c\u5c06\u6574\u6570\u578b\u6570\u636e\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\uff0c\u4fe1\u606f\u4e0d\u4f1a\u4e22\u5931\uff0c\u4f46\u5c06\u6d6e\u70b9\u6570\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u5c0f\u6570\u90e8\u5206\u5c06\u88ab\u4e22\u5931\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u5728\u4e0a\u9762\u4f8b\u5b50\u7684\u57fa\u7840\u4e0a\u6784\u5efa\uff0c\u9664\u4e86\u4f7f\u7528 Python \u5185\u7f6e\u7684 float\u3001int \u7b49\u6570\u636e\u7c7b\u578b\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 NumPy \u63d0\u4f9b\u7684\u66f4\u7cbe\u786e\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982 int32\u3001int64\u3001float32\u3001float64 \u7b49\u3002 In [28]: num_string.astype(float).astype(np.int32) Out[28]: array([1, 2, 3], dtype=int32) In [29]: num_string.astype(float).astype(np.int64) Out[29]: array([1, 2, 3])","title":"6.1.2 \u521b\u5efa ndarray"},{"location":"06-numpy/#62","text":"","title":"6.2 \u6570\u7ec4\u64cd\u4f5c"},{"location":"06-numpy/#621","text":"\u5229\u7528 NumPy \u6570\u7ec4\uff0cPython \u7528\u6237\u5728\u4e0d\u4f7f\u7528\u5faa\u73af\u7684\u60c5\u51b5\u4e0b\u5c31\u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u6279\u91cf\u8fd0\u7b97\uff0c\u8be5\u7279\u6027\u79f0\u4e3a\u5411\u91cf\u5316\u8ba1\u7b97\u3002\u5411\u91cf\u5316\u8ba1\u7b97\u610f\u5473\u7740\u5927\u5c0f\u76f8\u540c\u7684\u6570\u7ec4\u4e4b\u95f4\u4efb\u4f55\u7b97\u672f\u8fd0\u7b97\u90fd\u4f1a\u5e94\u7528\u5230\u5176\u6210\u5bf9\u7684\u5143\u7d20\u3002\u4e0b\u9762\u4ee3\u7801\u5c55\u793a\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\u7684\u4f8b\u5b50\u3002 In [30]: arr = np.array([[2, 3., 4.], [4, 5.4, 6]]) In [31]: arr Out[31]: array([[2. , 3. , 4. ], [4. , 5.4, 6. ]]) In [32]: arr * arr Out[32]: array([[ 4. , 9. , 16. ], [16. , 29.16, 36. ]]) In [33]: arr ** 2 Out[33]: array([[ 4. , 9. , 16. ], [16. , 29.16, 36. ]]) In [34]: arr - arr Out[34]: array([[0., 0., 0.], [0., 0., 0.]]) In [35]: arr / arr Out[35]: array([[1., 1., 1.], [1., 1., 1.]]) In [36]: arr + arr Out[36]: array([[ 4. , 6. , 8. ], [ 8. , 10.8, 12. ]]) \u5f53\u4e0a\u8ff0\u64cd\u4f5c\u7684\u67d0\u4e00\u65b9\u662f\u6807\u91cf\u65f6\uff08\u6216\u7ef4\u5ea6\u66f4\u4f4e\uff09\uff0cNumPy \u4f1a\u81ea\u52a8\u8fdb\u884c\u586b\u5145\uff0c\u5c06\u6807\u91cf\u7684\u7ef4\u5ea6\u6269\u5c55\u5230\u4e0e ndarray \u6570\u7ec4\u4e00\u81f4\uff0c\u7136\u540e\u8fdb\u884c\u5411\u91cf\u5316\u8fd0\u7b97\u3002\u8be5\u65b9\u5f0f\u79f0\u4e3a\u5e7f\u64ad\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6807\u91cf\u5bf9\u4e00\u4e2a ndarray \u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u3002 In [37]: 1 + np.array([2, 3, 4]) Out[37]: array([3, 4, 5]) In [38]: 1 - np.array([2, 3, 4]) Out[38]: array([-1, -2, -3]) \u5f53 NumPy \u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u5b83\u9996\u5148\u5c06 1 \u8f6c\u53d8\u4e3a ndarray [1, 1, 1]\uff0c\u7136\u540e\u8fdb\u884c\u8fd0\u7b97\uff0c\u5373\uff1a In [39]: np.array([1, 1, 1]) + np.array([2, 3, 4]) Out[39]: array([3, 4, 5]) \u5982\u679c\u8fd0\u7b97\u7684\u662f\u4e24\u4e2a\u6570\u7ec4\uff0cNumPy \u4f1a\u5c1d\u8bd5\u540c\u65f6\u586b\u5145\u4e24\u4e2a\u6570\u7ec4\u4f7f\u5f97\u5b83\u4eec\u7ef4\u5ea6\u4e00\u81f4\uff0c\u5982\u679c\u4e0d\u80fd\u4f7f\u5f97\u7ef4\u5ea6\u4e00\u81f4\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f In [40]: np.array([1, 1]) + np.array([2, 3, 4]) --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-40-1fbcd8e2dd89> in <module>() ----> 1 np.array([1, 1]) + np.array([2, 3, 4]) ValueError: operands could not be broadcast together with shapes (2,) (3,) Python \u629b\u51fa\u9519\u8bef\uff0c\u8fd9\u91cc\u63d0\u793a\u65e0\u6cd5\u5c06\u7ef4\u5ea6\u5206\u522b\u662f (2,) \u548c (3,) \u7684\u6570\u7ec4\u5e7f\u64ad\u5230\u4e00\u8d77\u3002 ndarray \u6570\u7ec4\u4e4b\u95f4\u9664\u4e86\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\uff0c\u8fd8\u80fd\u8fdb\u884c\u6bd4\u8f83\u64cd\u4f5c\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u662f\u76f8\u540c\u7ef4\u5ea6\u7684\u5e03\u5c14\u578b\u6570\u7ec4\u3002\u6ce8\u610f\u5b83\u4eec\u6bd4\u8f83\u7684\u65b9\u5f0f\u4e5f\u662f\u6210\u5bf9\u5730\uff0c\u5373\u6309\u5143\u7d20\u6bd4\u8f83\u3002 In [43]: np.array([5, 1, 7, 2]) > np.array([2, 3, 4, 5]) Out[43]: array([ True, False, True, False]) \u4e0a\u9762\u4ee3\u7801\u4e2d\u6bd4\u8f83\u7684\u7ed3\u679c\u662f 5 \u6bd4 2 \u5927\u30011 \u6bd4 3 \u5c0f\u30017 \u6bd4 4 \u5927\u30012 \u6bd4 5 \u5c0f\u3002 NumPy \u53ef\u4ee5\u8ba9\u591a\u79cd\u6570\u636e\u5904\u7406\u4efb\u52a1\u8868\u793a\u4e3a\u7b80\u6d01\u7684\u6570\u7ec4\u8868\u8fbe\u5f0f\uff0c\u51cf\u5c11\u4e86\u5faa\u73af\u7684\u7f16\u5199\uff0c\u63d0\u9ad8\u4e86\u8ba1\u7b97\u7684\u6548\u7387\u3002\u901a\u5e38\u5411\u91cf\u5316\u7684\u6570\u7ec4\u8fd0\u7b97\u8981\u6bd4\u7b49\u4ef7\u7684\u7eaf Python \u64cd\u4f5c\u81f3\u5c11\u5feb 1 \u4e2a\u6570\u91cf\u7ea7\uff0c\u7279\u522b\u662f\u8fdb\u884c\u5404\u79cd\u6570\u503c\u8ba1\u7b97\u7684\u60c5\u51b5\u4e0b\u3002 \u7f51\u683c\u641c\u7d22\u7b97\u6cd5\u662f\u79d1\u5b66\u8ba1\u7b97\u4e2d\u5bfb\u627e\u5168\u5c40\u6700\u4f18\u89e3\u7684\u4e00\u79cd\u5e38\u7528\u624b\u6bb5\uff0c\u5b83\u7684\u4e00\u4e2a\u8ba1\u7b97\u5b9e\u73b0\u57fa\u7840\u662f\u9996\u5148\u6784\u5efa\u89e3\u7684\u7f51\u683c\u7a7a\u95f4\u3002\u73b0\u5728\u5047\u8bbe\u6211\u4eec\u8981\u5728\u4e00\u7ec4\u7f51\u683c\u578b\u503c\u4e0a\u8ba1\u7b97\u51fd\u6570 x+y^2\uff0c\u9996\u5148\u4f7f\u7528 np.meshgrid() \u51fd\u6570\u4ea7\u751f x \u4e0e y \u7684\u5b9a\u4e49\u57df\uff08\u53d6\u503c\u533a\u95f4\uff09\u3002 In [7]: x = np.arange(-5, 2, 0.01) In [8]: y = np.arange(-20, -10, 0.2) In [9]: xspace, yspace = np.meshgrid(x, y) In [10]: xspace Out[10]: array([[-5. , -4.99, -4.98, ..., 1.97, 1.98, 1.99], [-5. , -4.99, -4.98, ..., 1.97, 1.98, 1.99], [-5. , -4.99, -4.98, ..., 1.97, 1.98, 1.99], ..., [-5. , -4.99, -4.98, ..., 1.97, 1.98, 1.99], [-5. , -4.99, -4.98, ..., 1.97, 1.98, 1.99], [-5. , -4.99, -4.98, ..., 1.97, 1.98, 1.99]]) In [11]: yspace Out[11]: array([[-20. , -20. , -20. , ..., -20. , -20. , -20. ], [-19.8, -19.8, -19.8, ..., -19.8, -19.8, -19.8], [-19.6, -19.6, -19.6, ..., -19.6, -19.6, -19.6], ..., [-10.6, -10.6, -10.6, ..., -10.6, -10.6, -10.6], [-10.4, -10.4, -10.4, ..., -10.4, -10.4, -10.4], [-10.2, -10.2, -10.2, ..., -10.2, -10.2, -10.2]]) In [12]: xspace + yspace ** 2 Out[12]: array([[395. , 395.01, 395.02, ..., 401.97, 401.98, 401.99], [387.04, 387.05, 387.06, ..., 394.01, 394.02, 394.03], [379.16, 379.17, 379.18, ..., 386.13, 386.14, 386.15], ..., [107.36, 107.37, 107.38, ..., 114.33, 114.34, 114.35], [103.16, 103.17, 103.18, ..., 110.13, 110.14, 110.15], [ 99.04, 99.05, 99.06, ..., 106.01, 106.02, 106.03]]) \u8fd9\u91cc meshgrid() \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u4e00\u7ef4 ndarray\uff0c\u4ea7\u751f\u4e24\u4e2a\u4e8c\u7ef4\u77e9\u9635\uff0c\u5b83\u4eec\u5206\u522b\u5bf9\u5e94\u4e24\u4e2a ndarray \u7684\u5143\u7d20\u5bf9\u3002 \u4e3a\u4e86\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\uff0c\u4e0b\u9762\u751f\u6210\u4e24\u4e2a\u77ed\u5c0f\u7684\u77e9\u9635\u89e3\u91ca\u4e0a\u8ff0\u8fc7\u7a0b\u3002 In [13]: x = np.arange(-5, -2, 1) In [16]: y = np.arange(-20, -15, 1) In [17]: xspace, yspace = np.meshgrid(x, y) In [18]: x Out[18]: array([-5, -4, -3]) In [19]: y Out[19]: array([-20, -19, -18, -17, -16]) In [20]: xspace Out[20]: array([[-5, -4, -3], [-5, -4, -3], [-5, -4, -3], [-5, -4, -3], [-5, -4, -3]]) In [21]: yspace Out[21]: array([[-20, -20, -20], [-19, -19, -19], [-18, -18, -18], [-17, -17, -17], [-16, -16, -16]]) \u6570\u7ec4 x \u6709 3 \u4e2a\u5143\u7d20\uff0c\u6570\u7ec4 y \u6709 5 \u4e2a\u5143\u7d20\uff0c\u5b83\u4eec\u7ec4\u5408\u8d77\u6765\u5c31\u6709 15 \u79cd\u60c5\u51b5\uff0c\u5373 [(-5, -20), (-5, -19), \u2026]\uff0c\u6211\u4eec\u53ef\u4ee5\u79f0\u4e3a xy \u5bf9\uff0cmeshgrid() \u51fd\u6570\u8fd4\u56de\u7ed3\u679c\u65f6\u5c06 xy \u5bf9\u62c6\u5f00\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230 xy \u5bf9\u4e2d 15 \u4e2a x \u503c\uff0c15 \u4e2a y \u503c\u3002","title":"6.2.1 \u6570\u7ec4\u8fd0\u7b97"},{"location":"06-numpy/#622","text":"\u5728\u5217\u8868\u7ae0\u8282\u8bfb\u8005\u5df2\u7ecf\u5b66\u4e60\u8fc7 Python \u7d22\u5f15\uff0c\u5b83\u662f\u975e\u5e38\u4e30\u5bcc\u7684\u4e3b\u9898\uff0c\u540c\u4e00\u4e2a\u76ee\u7684\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u8fbe\u6210\u3002\u672c\u5c0f\u8282\u4e13\u6ce8\u4e8e\u4ecb\u7ecd ndarray \u7684\u7d22\u5f15\u4e0e\u5207\u7247\u64cd\u4f5c\uff0c\u5b83\u5728\u539f\u7406\u4e0a\u4e0e\u5217\u8868\u7d22\u5f15\u4e0e\u5207\u7247\u57fa\u672c\u4e00\u81f4\uff0c\u4f46\u5728\u5b9e\u9645\u64cd\u4f5c\u65f6\u66f4\u4e3a\u590d\u6742\uff0c\u4e14\u5177\u6709\u66f4\u591a\u7684\u7279\u6027\u3002 \u4e00\u7ef4\u6570\u7ec4\u7684\u7d22\u5f15\u975e\u5e38\u7b80\u5355\uff0c\u8ddf\u5217\u8868\u7d22\u5f15\u5dee\u4e0d\u591a\u3002\u4e0b\u9762\u4ee3\u7801\u6f14\u793a\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u7d22\u5f15\u64cd\u4f5c\uff0c\u5305\u62ec\u5355\u503c\u7d22\u5f15\u3001\u8303\u56f4\u7d22\u5f15\u548c\u91cd\u65b0\u8d4b\u503c\u3002\u518d\u6b21\u6ce8\u610f\uff0cPython \u7d22\u5f15\u4ece 0 \u5f00\u59cb\uff0c\u6d89\u53ca\u8303\u56f4\u64cd\u4f5c\u65f6\u7528\u7684\u533a\u95f4\u90fd\u662f\u5de6\u95ed\u53f3\u5f00\uff0c\u5982 2:5 \u8868\u793a\u7b2c 3 \u5230\u7b2c 5 \u4e2a\u5143\u7d20\uff0c\u5305\u542b 2\uff08\u7b2c 3 \u4e2a\u5143\u7d20\uff09\u4e0d\u5305\u542b 5\uff08\u7b2c 6 \u4e2a\u5143\u7d20\uff09\u3002 In [44]: arr = np.arange(20) In [45]: arr Out[45]: array([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]) In [46]: arr[5] # \u5355\u4e2a\u503c\u7d22\u5f15, \u63d0\u53d6\u7b2c 6 \u4e2a\u5143\u7d20 Out[46]: 5 In [47]: arr[2:5] # \u8303\u56f4\u7d22\u5f15\uff0c\u53d6\u7b2c 3 \u4e2a\u5230\u7b2c 5 \u4e2a\u5143\u7d20 Out[47]: array([2, 3, 4]) In [48]: arr[2:5] = 10 # \u5c06\u7b2c 3 \u5230\u7b2c 5 \u5230\u5143\u7d20\u91cd\u65b0\u8d4b\u503c\u4e3a 10 In [49]: arr Out[49]: array([ 0, 1, 10, 10, 10, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]) In [50]: arr[10:13] = [111, 222, 333] # \u5c06\u7b2c 11\u300112\u300113 \u4e2a\u5143\u7d20\u5206\u522b\u8d4b\u503c\u4e3a 111\u3001222\u3001333 In [51]: arr Out[51]: array([ 0, 1, 10, 10, 10, 5, 6, 7, 8, 9, 111, 222, 333, 13, 14, 15, 16, 17, 18, 19]) NumPy \u6570\u7ec4\u5207\u7247\u4e0e\u6570\u7ec4\u5207\u7247\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u533a\u522b\uff0cNumPy \u5207\u7247\u540e\u8d4b\u503c\u7ed9\u53d8\u91cf\u4e0d\u4f1a\u4ea7\u751f\u6570\u7ec4\u5b50\u96c6\u7684\u62f7\u8d1d\uff0c\u5b83\u4f9d\u65e7\u6307\u5411\u539f\u59cb\u6570\u636e\uff0c\u6240\u4ee5\u8bfb\u8005\u5728\u83b7\u53d6\u6570\u7ec4\u5b50\u96c6\u65f6\u9700\u8981\u7279\u522b\u6ce8\u610f\u3002\u4e0b\u9762\u7528\u4e00\u4e2a\u5b9e\u4f8b\u6765\u6f14\u793a ndarray \u5207\u7247\u548c list \u5207\u7247\u7684\u533a\u522b\u3002 \u5148\u5206\u522b\u521b\u5efa\u4e00\u4e2a list \u548c\u4e00\u4e2a ndarray\uff0c\u5b83\u4eec\u90fd\u4fdd\u5b58 0 \u5230 9 \u8fd9 10 \u4e2a\u6570\u5b57\u3002 In [52]: ls = [i for i in range(10)] In [53]: ls Out[53]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] In [54]: arr = np.arange(10) In [55]: arr Out[55]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) \u73b0\u5728\u5bf9\u7b2c 5 \u5230 8 \u4e2a\u5143\u7d20\u5207\u7247\u5e76\u8d4b\u503c\u7ed9\u65b0\u7684\u53d8\u91cf\u3002 In [56]: ls2 = ls[4:8] In [57]: ls2 Out[57]: [4, 5, 6, 7] In [60]: arr2 = arr[4:8] In [61]: arr2 Out[61]: array([4, 5, 6, 7]) \u73b0\u5728\u66f4\u6539\u65b0\u7684\u53d8\u91cf\u7b2c 1 \u4e2a\u5143\u7d20\uff0c\u7136\u540e\u67e5\u770b\u539f\u59cb\u53d8\u91cf\u662f\u5426\u4f1a\u88ab\u5f71\u54cd\u3002 In [67]: ls2[0] = 100 # \u4fee\u6539\u5217\u8868\u7b2c 1 \u4e2a\u5143\u7d20\u503c\u4e3a 100 In [68]: ls2 Out[68]: [100, 5, 6, 7] In [69]: ls Out[69]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] In [70]: arr2[0] = 100 # \u4fee\u6539 ndarray \u7b2c 1 \u4e2a\u5143\u7d20\u503c\u4e3a 100 In [71]: arr2 Out[71]: array([100, 5, 6, 7]) In [72]: arr Out[72]: array([ 0, 1, 2, 3, 100, 5, 6, 7, 8, 9]) \u4ee3\u7801\u7ed3\u679c\u76f4\u89c2\u5c55\u793a\u4e86\u4e24\u4e2a Python \u5217\u8868\u770b\u8d77\u6765\u4e92\u4e0d\u5e72\u6270\uff0c\u4f46\u4e24\u4e2a ndarray \u662f\u76f8\u4e92\u5f71\u54cd\u7684\u3002\u8fd9\u91cc\u4ea7\u751f\u4e24\u79cd\u4e0d\u540c\u7ed3\u679c\u7684\u539f\u56e0\u662f\uff0c\u5f53 Python \u5217\u8868\u5207\u7247\u5e76\u8d4b\u503c\u65f6\uff0cPython \u4f1a\u5bf9\u5207\u7247\u7684\u6570\u636e\uff08\u8fd9\u91cc\u662f 4 \u5230 7\uff09\u91cd\u65b0\u751f\u6210\u4e00\u4efd\u62f7\u8d1d\uff0c\u7136\u540e\u5c06\u65b0\u53d8\u91cf ls2 \u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u6570\u636e\u62f7\u8d1d\u3002\u800c NumPy \u6570\u7ec4\u8fdb\u884c\u5207\u7247\u65f6\u5b83\u53ea\u662f\u628a\u539f\u59cb\u6570\u636e\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff084 \u5230 7\uff09\u6307\u5411\u65b0\u53d8\u91cf arr2\uff0c\u6240\u4ee5\u4e00\u6539\u5219\u5168\u6539\u3002 \u4ece\u7b80\u5355\u7684\u4f7f\u7528\u6765\u770b\u5217\u8868\u66f4\u4ee4\u4eba\u611f\u89c9\u8212\u9002\uff0c\u4f7f\u7528 NumPy \u6570\u7ec4\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u53ef\u80fd\u72af\u9519\u3002\u4f46 NumPy \u8fd9\u6837\u505a\u662f\u6709\u6f5c\u5728\u7684\u597d\u5904\u7684\uff0c\u7b26\u5408\u5b83\u5904\u7406\u5927\u6570\u636e\u7684\u76ee\u7684\uff0c\u5f53\u5b58\u5728\u5927\u6570\u636e\u5904\u7406\u65f6\u9700\u8981\u591a\u6b21\u8fdb\u884c\u6ca1\u5fc5\u8981\u7684\u62f7\u8d1d\u64cd\u4f5c\u4f1a\u5360\u7528\u5927\u91cf\u7684\u5185\u5b58\uff0c\u964d\u4f4e\u8ba1\u7b97\u6027\u80fd\u3002 \u9ad8\u7ef4\u5ea6\u7684 ndarray \u80fd\u5b58\u50a8\u66f4\u5e7f\u6cdb\u7684\u6570\u636e\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4f4e\u4e00\u7ef4\u7684\u6570\u7ec4\uff0c\u5982\u77e9\u9635\u7684\u5143\u7d20\u662f\u4e00\u7ef4\u6570\u7ec4\u3001\u4e09\u7ef4\u6570\u7ec4\u7684\u5143\u7d20\u662f\u77e9\u9635\u3002\u5bf9\u9ad8\u7ef4\u5ea6 ndarray \u8fdb\u884c\u7d22\u5f15\u53d6\u503c\u3001\u8d4b\u503c\u9700\u8981\u4f7f\u7528 1 \u5230\u591a\u4e2a\u7d22\u5f15\u7b26\u3001\u5207\u7247\u7b26\u4ee5\u53ca\u5b83\u4eec\u7684\u7ec4\u5408\u3002 \u4e0b\u9762\u4ee5\u4e8c\u7ef4\u6570\u7ec4\u548c\u4e09\u7ef4\u6570\u7ec4\u4e3a\u5bf9\u8c61\u8fdb\u884c\u4e00\u4e9b\u5e38\u89c1\u7684\u7d22\u5f15\u548c\u5207\u7247\u64cd\u4f5c\u3002\u4e8c\u7ef4\u6570\u7ec4\u53ef\u4ee5\u60f3\u8c61\u4e3a\u4e00\u4e2a\u5927\u7684\u6b63\u65b9\u5f62\u6216\u77e9\u5f62\uff0c\u5185\u90e8\u7684\u5c0f\u6b63\u65b9\u5f62\u662f\u5b83\u7684\u5143\u7d20\u3002\u4e09\u7ef4\u77e9\u9635\u53ef\u4ee5\u60f3\u8c61\u4e3a\u4e00\u4e2a\u5927\u7684\u6b63\u65b9\u4f53\uff08\u9b54\u65b9\uff09\u6216\u957f\u65b9\u4f53\uff0c\u6784\u6210\u5b83\u7684\u5c0f\u6b63\u65b9\u4f53\u662f\u5b83\u7684\u5143\u7d20\u3002\u66f4\u9ad8\u7ef4\u5ea6\u7684\u6570\u7ec4\u64cd\u4f5c\u539f\u7406\u76f8\u901a\uff0c\u4f46\u9ad8\u7eac\u5ea6\u592a\u8fc7\u62bd\u8c61\u4e0d\u65b9\u4fbf\u7406\u89e3\uff0c\u56e0\u6b64\u672c\u4e66\u4e0d\u4e3e\u4f8b\u4ecb\u7ecd\u3002 In [1]: import numpy as np In [2]: arr2d = np.array([[1, 2, 3], [4, 5, 6]]) # \u521d\u59cb\u5316\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5373\u77e9\u9635 In [3]: arr2d[0] # \u63d0\u53d6\u77e9\u9635\u7684\u7b2c 1 \u884c Out[3]: array([1, 2, 3]) In [4]: arr2d[:,0] # \u63d0\u53d6\u77e9\u9635\u7684\u7b2c 1 \u5217 Out[4]: array([1, 4]) In [5]: arr2d[0, 0] # \u63d0\u53d6\u77e9\u9635\u4f4d\u4e8e\u7b2c 1 \u884c\u7b2c 1 \u5217\u7684\u5143\u7d20 Out[5]: 1 In [6]: arr2d[0:2, 0] # \u63d0\u53d6\u77e9\u9635\u7b2c 1 \u5217\u524d\u4e24\u4e2a\u5143\u7d20 Out[6]: array([1, 4]) In [7]: arr2d[0:2] # \u63d0\u53d6\u77e9\u9635\u7684\u524d\u4e24\u884c\uff0c\u8fd9\u8ddf arr2d[0:2, :] \u7ed3\u679c\u662f\u4e00\u81f4\u7684 Out[7]: array([[1, 2, 3], [4, 5, 6]]) In [8]: arr2d[:2, 1:] = 0 # \u77e9\u9635\u524d\u4e24\u884c\u7684\u7b2c 2 \u5217\u5f00\u59cb\u5f80\u53f3\u5143\u7d20\u503c\u5168\u4e3a 0 In [9]: arr2d Out[9]: array([[1, 0, 0], [4, 0, 0]]) In [10]: arr3d = np.array([[[1,2,3],[4,5,6],[7,8,9]]]) # \u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 3 \u7ef4\u6570\u7ec4 In [11]: arr3d Out[11]: array([[[1, 2, 3], [4, 5, 6], [7, 8, 9]]]) In [12]: arr3d[0] # \u8fd9\u662f\u6cbf\u7740\u7b2c 0 \u8f74\uff08\u7b2c\u4e00\u4e2a\u8f74\uff09\u5207\u7247\u7684\u7ed3\u679c\uff0c\u6ce8\u610f\u4e0e arr3d \u7684\u533a\u522b\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a 3x3 \u6570\u7ec4\uff08\u77e9\u9635\uff09 Out[12]: array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) In [13]: new_array = arr3d[0].copy() # \u521b\u5efa\u77e9\u9635\u65b0\u7684\u62f7\u8d1d In [14]: new_array Out[14]: array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) In [15]: arr3d[0] = 42 # \u5bf9\u539f\u59cb 3 \u7ef4\u6570\u7ec4\u7b2c 1 \u4e2a\u5b50\u7ef4\u5ea6\u91cd\u65b0\u8d4b\u503c In [16]: arr3d # \u6b64\u5904 42 \u8fdb\u884c\u4e86\u5e7f\u64ad\uff0c\u77e9\u9635\u5168\u90e8\u5143\u7d20\u90fd\u4e3a 42 Out[16]: array([[[42, 42, 42], [42, 42, 42], [42, 42, 42]]]) In [17]: arr3d[0] = new_array # \u5c06\u5b58\u50a8\u5728 new_array \u7684\u539f\u59cb\u503c\u91cd\u65b0\u8d4b\u503c\u56de\u53bb In [18]: arr3d Out[18]: array([[[1, 2, 3], [4, 5, 6], [7, 8, 9]]])","title":"6.2.2 \u7d22\u5f15\u4e0e\u5207\u7247"},{"location":"06-numpy/#623","text":"\u9664\u4e86\u6574\u6570\u7d22\u5f15\u548c\u5207\u7247\uff0cNumPy \u8fd8\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u503c\u578b\u7684\u7d22\u5f15\u3002\u5e03\u5c14\u503c\u4e00\u822c\u7531\u6570\u7ec4\u7684\u6bd4\u8f83\u8fd0\u7b97\u5f97\u5230\uff0c\u8be5\u8fc7\u7a0b\u4e5f\u662f\u5411\u91cf\u5316\u7684\uff0c\u53ef\u5e7f\u64ad\u7684\u3002 \u6cbf\u7528\u4e0a\u9762\u4f7f\u7528\u7684 arr3d \u53d8\u91cf\uff0c\u4e0b\u9762\u4f7f\u7528\u5b83\u4e0e\u6570\u503c 5 \u8fdb\u884c\u6bd4\u8f83\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u662f\u4e0e arr3d \u7ef4\u5ea6\u4e00\u81f4\u7684\u6570\u7ec4\u3002 In [19]: arr3d > 5 Out[19]: array([[[False, False, False], [False, False, True], [ True, True, True]]]) \u5229\u7528\u903b\u8f91\u6570\u7ec4\uff0c\u8bfb\u8005\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u63d0\u53d6\u51fa\u60f3\u8981\u7684\u6570\u636e\u3002\u4e0b\u9762\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a\u4e00\u7ef4\u7684\u6570\u7ec4\u548c\u4e00\u4e2a\u4e8c\u7ef4\u7684\u968f\u673a\u77e9\u9635\uff0c\u4e00\u7ef4\u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\u4e0e\u77e9\u9635\u7684\u884c\u6570\u4e00\u81f4\u3002 In [20]: subject = np.array(['chinese', 'math', 'chinese', 'english', 'history']) In [21]: df = np.random.randn(5, 3) In [22]: df Out[22]: array([[ 0.50025766, -0.4625053 , -1.85743193], [ 0.63757593, 0.55624546, -1.7669166 ], [-0.18061614, -0.71896639, -0.26744936], [ 1.37094842, -0.21829646, -0.34926808], [-0.90192432, -0.2821726 , 0.54411861]]) \u8fd9\u91cc\u5047\u8bbe\u6bcf\u4e2a subject \u90fd\u5bf9\u5e94\u968f\u673a\u77e9\u9635\u7684\u4e00\u884c\uff0c\u800c\u6211\u4eec\u60f3\u8981\u63d0\u53d6\u51fa\u4e0e chinese \u76f8\u5bf9\u5e94\u7684\u884c\uff0c\u8fd9\u91cc\u5229\u7528\u6570\u7ec4 subject \u4e0e\u5b57\u7b26 \u2018chinese\u2019 \u7684\u6bd4\u8f83\u7ed3\u679c\u8fdb\u884c\u6570\u7ec4\u7d22\u5f15\u3002 In [23]: subject == 'chinese' Out[23]: array([ True, False, True, False, False]) In [24]: df[subject == 'chinese'] Out[24]: array([[ 0.50025766, -0.4625053 , -1.85743193], [-0.18061614, -0.71896639, -0.26744936]]) \u6ce8\u610f\uff0c\u5e03\u5c14\u7d22\u5f15\u6570\u7ec4\u7684\u957f\u5ea6\u4e0e\u88ab\u7d22\u5f15\u7684\u8f74\u957f\u5ea6\u4e00\u81f4\uff0c\u5728\u4e0d\u52a0\u82f1\u6587\u9017\u53f7\u7684\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u6bd4\u8f83\u7684\u90fd\u662f 0 \u8f74\uff0c\u5373\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u3002 \u5e03\u5c14\u7d22\u5f15\u6570\u7ec4\u53ef\u4ee5\u548c\u5207\u7247\u3001\u6574\u6570\u7d22\u5f15\u7b49\u642d\u914d\u4f7f\u7528\uff0c\u4ece\u800c\u9ad8\u5ea6\u81ea\u5b9a\u4e49\u60f3\u8981\u83b7\u53d6\u7684\u6570\u7ec4\u5b50\u96c6\u3002 In [25]: df[subject == 'chinese', 1:] # \u6ee1\u8db3 chinese \u5bf9\u5e94\u884c\uff0c\u53bb\u9664\u7b2c 1 \u5217 Out[25]: array([[-0.4625053 , -1.85743193], [-0.71896639, -0.26744936]]) In [26]: df[subject == 'chinese', 2:] # \u6ee1\u8db3 chinese \u5bf9\u5e94\u884c\uff0c\u53bb\u9664\u7b2c 1\u30012 \u5217 Out[26]: array([[-1.85743193], [-0.26744936]]) In [27]: df[subject != 'chinese', 2:] # \u4e0d\u6ee1\u8db3 chinese \u5bf9\u5e94\u884c\uff0c\u53bb\u9664\u7b2c 1\u30012 \u5217 Out[27]: array([[-1.7669166 ], [-0.34926808], [ 0.54411861]]) \u9664\u4e86\u4f7f\u7528\u4e0d\u7b49\u53f7 != \u8fd8\u8868\u793a\u5426\u5b9a\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6ce2\u6d6a\u53f7 ~ \u8868\u793a\u5bf9\u6761\u4ef6\u7ed3\u679c\u7684\u53d6\u53cd\u3002 In [29]: df[~ (subject == 'chinese'), 2:] # \u8be5\u4ee3\u7801\u884c\u4e0e\u4e0a\u4e00\u4e2a\u4ee3\u7801\u884c\u7ed3\u679c\u4e00\u81f4 Out[29]: array([[-1.7669166 ], [-0.34926808], [ 0.54411861]]) \u5982\u679c\u9700\u8981\u5e94\u7528\u591a\u4e2a\u903b\u8f91\u5224\u65ad\uff0c\u53ef\u4ee5\u4f7f\u7528\u548c\uff08&\uff09\u3001\u6216\uff08|\uff09\u7b49\u5e03\u5c14\u64cd\u4f5c\u7b26\u3002\u8bfb\u8005\u9700\u8981\u6ce8\u610f\uff0c\u5f53\u5b58\u5728\u591a\u4e2a\u5224\u65ad\u65f6\u4e00\u5b9a\u8981\u7528\u62ec\u53f7\u5c06\u6bcf\u4e00\u4e2a\u903b\u8f91\u6bd4\u8f83\u8fd0\u7b97\u62ec\u8d77\u6765\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 In [31]: df[subject == \"chinese\" | subject == \"math\"] --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-31-ec9c993564c8> in <module>() ----> 1 df[subject == \"chinese\" | subject == \"math\"] \u6b63\u786e\u7684\u5199\u6cd5\u5982\u4e0b\u3002 In [33]: df[(subject == \"chinese\") | (subject == \"math\")] Out[33]: array([[ 0.50025766, -0.4625053 , -1.85743193], [ 0.63757593, 0.55624546, -1.7669166 ], [-0.18061614, -0.71896639, -0.26744936]]) \u901a\u8fc7\u5e03\u5c14\u578b\u6570\u7ec4\u7d22\u5f15\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u5730\u5bf9\u7b26\u5408\u6761\u4ef6\u7684\u6570\u636e\u8fdb\u884c\u91cd\u8d4b\u503c\uff0c\u8fd9\u662f\u6570\u636e\u5206\u6790\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u4e4b\u4e00\u3002 In [34]: df[df < 0] = 0 In [35]: df Out[35]: array([[0.50025766, 0. , 0. ], [0.63757593, 0.55624546, 0. ], [0. , 0. , 0. ], [1.37094842, 0. , 0. ], [0. , 0. , 0.54411861]]) \u9664\u4e86\u4e0a\u8ff0\u5229\u7528\u903b\u8f91\u7ec4\u5408\u9009\u53d6\u5b50\u96c6\u8fdb\u884c\u91cd\u65b0\u8d4b\u503c\uff0cNumPy \u63d0\u4f9b\u7684 where() \u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u6574\u4e2a\u6570\u7ec4\u7684\u6761\u4ef6\u903b\u8f91\u8fd0\u7b97\uff0c\u5b83\u662f\u4e09\u5143\u8868\u8fbe\u5f0f x if condition else y \u7684\u5411\u91cf\u5316\u7248\u672c\u3002 \u4f8b\u5982\uff0c\u89e3\u51b3\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u5c06\u4e00\u4e2a\u968f\u673a\u6570\u636e\u6570\u7ec4\u4e2d\u7684\u6b63\u6570\u66ff\u6362\u4e3a 1\uff0c\u800c\u8d1f\u6570\u4e3a 0\uff0c\u53ef\u4ee5\u7528\u5982\u4e0b\u4ee3\u7801\u8f7b\u677e\u5b9e\u73b0\u3002 ```python In [22]: arr_random = np.random.randn(4, 4) In [23]: arr_random Out[23]: array([[-1.48064102, 1.4408966 , -0.13313057, 1.09683071], [ 0.44698237, 0.01854261, 0.56719151, -1.03926198], [ 1.45070221, 0.04421898, 0.787423 , -1.28715644], [ 2.27759091, -0.06808282, -0.99294482, -0.39755302]]) In [24]: arr_random > 0 Out[24]: array([[False, True, False, True], [ True, True, True, False], [ True, True, True, False], [ True, False, False, False]]) In [25]: np.where(arr_random > 0, 1, 0) Out[25]: array([[0, 1, 0, 1], [1, 1, 1, 0], [1, 1, 1, 0], [1, 0, 0, 0]]) ``` where() \u51fd\u6570\u4e2d\u66ff\u6362\u7684 1 \u548c 0 \u53ef\u4ee5\u662f\u4e00\u4e2a\u4e0e arr_random \u7b49\u7ef4\u5ea6\u7684\u6570\u7ec4\u3002","title":"6.2.3 \u5e03\u5c14\u578b\u7d22\u5f15"},{"location":"06-numpy/#623_1","text":"\u8f6c\u7f6e\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u6570\u5b66\u77e9\u9635\u64cd\u4f5c\uff0c\u662f\u5c06\u77e9\u9635\u7684\u884c\u5217\u8fdb\u884c\u4e92\u6362\uff0c\u5982\u4f4d\u4e8e\u7b2c 1 \u884c\u7b2c 2 \u5217\u7684\u5143\u7d20\u8f6c\u7f6e\u540e\u4f4d\u4e8e\u7b2c 2 \u884c\u7b2c 1 \u5217\uff0c\u7b2c 2 \u884c\u7b2c 1 \u5217\u7684\u5143\u7d20\u8f6c\u7f6e\u540e\u4f4d\u4e8e\u7b2c 1 \u884c\u7b2c 2 \u5217\u3002NumPy \u5c06\u8fd9\u4e00\u6982\u5ff5\u5e94\u7528\u5230\u4e86\u591a\u7ef4\u6570\u7ec4\uff0cndarray \u4e0d\u4ec5\u6709\u8f6c\u7f6e\u65b9\u6cd5\uff0c\u8fd8\u6709\u4e00\u4e2a\u7279\u6b8a\u7684 T \u5c5e\u6027\u3002 In [2]: import numpy as np In [3]: arr = np.arange(12).reshape((3, 4)) In [4]: arr Out[4]: array([[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9, 10, 11]]) In [5]: arr.T Out[5]: array([[ 0, 4, 8], [ 1, 5, 9], [ 2, 6, 10], [ 3, 7, 11]]) In [6]: arr.transpose() Out[6]: array([[ 0, 4, 8], [ 1, 5, 9], [ 2, 6, 10], [ 3, 7, 11]]) \u4e3a\u4e86\u7b80\u4fbf\u5730\u5bf9\u6570\u7ec4\u5f62\u72b6\u8fdb\u884c\u91cd\u5851\uff0cNumPy \u63d0\u4f9b\u4e86reshape()\u65b9\u6cd5\u3002\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u4e3a\u4e86\u5feb\u901f\u751f\u6210\u4e00\u4e2a 3 \u884c 4 \u5217\u7684\u6837\u4f8b\u77e9\u9635\uff0c\u6211\u4eec\u4f7f\u7528 arange \u65b9\u6cd5\u5148\u751f\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a 12 \u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u7136\u540e\u4f7f\u7528 reshape() \u65b9\u6cd5\u91cd\u5851\u4e3a 3 \u884c 4 \u5217\u7684 ndarray\uff0c\u4f7f\u7528 T \u5c5e\u6027\u6216\u8005 transpose() \u65b9\u6cd5\u90fd\u53ef\u4ee5\u83b7\u5f97\u8f6c\u7f6e\u6570\u7ec4\u3002\u8fd9\u91cc reshape() \u65b9\u6cd5\u4e2d\u8981\u4f7f\u7528\u5143\u7ec4\u63d0\u4f9b\u6570\u7ec4\u7ef4\u5ea6\uff0c\u6570\u7ec4\u7684\u7ef4\u5ea6\u53ef\u4ee5\u901a\u8fc7 shape \u5c5e\u6027\u83b7\u53d6\u3002 In [10]: arr.shape Out[10]: (3, 4) \u6709\u4e00\u4e9b\u64cd\u4f5c\u5728\u8fdb\u884c\u77e9\u9635\u8ba1\u7b97\u65f6\u7ecf\u5e38\u7528\u5230\uff0c\u5982\u8ba1\u7b97\u77e9\u9635\u7684\u5185\u79ef\u53ef\u4ee5\u4f7f\u7528 np.dot() \u51fd\u6570\u3002 In [11]: np.dot(arr, arr.T) Out[11]: array([[ 14, 38, 62], [ 38, 126, 214], [ 62, 214, 366]]) \u5982\u679c\u5904\u7406\u7684\u662f\u9ad8\u7ef4\u6570\u7ec4\uff0c\u8fdb\u884c\u8f6c\u7f6e\u65f6\u9700\u8981\u901a\u8fc7\u8f74\u5e8f\u6307\u5b9a\u4e92\u6362\u7684\u7ef4\u5ea6\u3002 In [12]: arr = np.arange(24).reshape((2,3,4)) In [13]: arr Out[13]: array([[[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9, 10, 11]], [[12, 13, 14, 15], [16, 17, 18, 19], [20, 21, 22, 23]]]) In [14]: arr.transpose((1,0,2)) # 0\u8868\u793a\u7b2c1\u8f74\u30011\u8868\u793a\u7b2c2\u8f74\u30012\u8868\u793a\u7b2c3\u8f74 Out[14]: array([[[ 0, 1, 2, 3], [12, 13, 14, 15]], [[ 4, 5, 6, 7], [16, 17, 18, 19]], [[ 8, 9, 10, 11], [20, 21, 22, 23]]]) \u9ed8\u8ba4\u7684\u8f74\u5e8f\u662f (0, 1, 2)\uff0c\u4e0a\u8ff0\u4ee3\u7801 transpose() \u65b9\u6cd5\u4e2d\u6307\u5b9a\u7684\u662f (1, 0, 2)\uff0c\u56e0\u6b64\u8f6c\u7f6e\u7684\u7ed3\u679c\u662f\u6570\u7ec4\u7b2c 1 \u4e2a\u8f74\u53d8\u6210\u4e86\u7b2c 2 \u4e2a\u8f74\u3001\u7b2c 2 \u4e2a\u8f74\u53d8\u6210\u4e86\u7b2c 1 \u4e2a\u8f74\uff0c\u800c\u7b2c 3 \u4e2a\u8f74\u4e0d\u53d8\u3002\u53ea\u8981\u7406\u6e05\u695a\u9700\u8981\u4e92\u6362\u7684\u8f74\uff0c\u76f8\u540c\u7684\u64cd\u4f5c\u53ef\u4ee5\u5e94\u7528\u5230\u66f4\u9ad8\u7ef4\u5ea6\u3002 \u53e6\u5916\uff0cNumPy \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a swapaxes() \u65b9\u6cd5\u8f6c\u6362\u8f74\uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u8f93\u5165\u4e92\u6362\u7684\u4e00\u5bf9\u8f74\u7f16\u53f7\u3002 In [15]: arr.swapaxes(1, 2) Out[15]: array([[[ 0, 4, 8], [ 1, 5, 9], [ 2, 6, 10], [ 3, 7, 11]], [[12, 16, 20], [13, 17, 21], [14, 18, 22], [15, 19, 23]]]) In [16]: arr.swapaxes(0, 1) Out[16]: array([[[ 0, 1, 2, 3], [12, 13, 14, 15]], [[ 4, 5, 6, 7], [16, 17, 18, 19]], [[ 8, 9, 10, 11], [20, 21, 22, 23]]])","title":"6.2.3 \u6570\u7ec4\u8f6c\u7f6e\u4e0e\u8f74\u8f6c\u6362"},{"location":"06-numpy/#63","text":"","title":"6.3 \u6570\u7ec4\u51fd\u6570\u4e0e\u65b9\u6cd5"},{"location":"06-numpy/#631","text":"NumPy \u4e2d\u9664\u4e86 ndarray \u6570\u7ec4\u64cd\u4f5c\u662f\u64cd\u4f5c\u7b26\uff08\u7b97\u672f\u3001\u6bd4\u8f83\u7b49\uff09\u8fd0\u7b97\u662f\u5143\u7d20\u7ea7\u522b\u7684\uff0c\u53ef\u4ee5\u64cd\u4f5c ndarray \u7684\u5404\u7c7b\u901a\u7528\u51fd\u6570\u4e5f\u662f\u6267\u884c\u5143\u7d20\u7ea7\u8fd0\u7b97\u3002NumPy \u7684\u7b80\u4fbf\u5728\u4e8e\u7528\u6237\u64cd\u4f5c\u5411\u91cf\u5316\u8ba1\u7b97\u8ddf\u6807\u91cf\u8ba1\u7b97\u7684\u64cd\u4f5c\u65b9\u6cd5\u57fa\u672c\u76f8\u540c\u3002 NumPy \u63d0\u4f9b\u7684\u901a\u7528\u6570\u5b66\u8fd0\u7b97\u51fd\u6570\u5f88\u591a\u662f Python \u5143\u7d20\u7ea7\u51fd\u6570\uff08\u6765\u81ea\u5185\u7f6e\u6a21\u5757\u3001math\u6a21\u5757\u7b49\uff09\u7684\u53d8\u4f53\uff0c\u5982\u5f00\u65b9\u51fd\u6570 sqrt()\u3001\u6307\u6570\u51fd\u6570 exp()\u3002 In [17]: arr = np.arange(10).reshape((2, 5)) In [18]: arr Out[18]: array([[0, 1, 2, 3, 4], [5, 6, 7, 8, 9]]) In [19]: np.sqrt(arr) Out[19]: array([[0. , 1. , 1.41421356, 1.73205081, 2. ], [2.23606798, 2.44948974, 2.64575131, 2.82842712, 3. ]]) In [20]: np.exp(arr) Out[20]: array([[1.00000000e+00, 2.71828183e+00, 7.38905610e+00, 2.00855369e+01, 5.45981500e+01], [1.48413159e+02, 4.03428793e+02, 1.09663316e+03, 2.98095799e+03, 8.10308393e+03]]) \u6709\u4e00\u4e9b\u51fd\u6570\u63a5\u6536 2 \u4e2a\u6216\u591a\u4e2a\u6570\u7ec4\uff0c\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\u3002 In [21]: arr2 = np.random.randn(10).reshape((2,5)) In [22]: arr2 Out[22]: array([[-0.81547072, 0.02248639, -0.3004805 , 1.53433534, 0.59514916], [ 1.60022692, -0.68780704, 0.79007821, 0.72034177, -1.33966745]]) In [23]: np.add(arr, arr2) # \u5bf9\u5e94\u5143\u7d20\u76f8\u52a0 Out[23]: array([[-0.81547072, 1.02248639, 1.6995195 , 4.53433534, 4.59514916], [ 6.60022692, 5.31219296, 7.79007821, 8.72034177, 7.66033255]]) In [24]: np.maximum(arr, arr2) # \u8fd4\u56de\u5bf9\u5e94\u5143\u7d20\u8f83\u5927\u7684\u90a3\u4e2a Out[24]: array([[0., 1., 2., 3., 4.], [5., 6., 7., 8., 9.]]) \u53e6\u5916\u8fd8\u6709\u4e00\u4e9b\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u591a\u4e2a\u6570\u7ec4\uff0c\u5982 modf() \u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u6d6e\u70b9 ndarray \u6570\u7ec4\u7684\u5c0f\u6570\u4e0e\u6574\u6570\u90e8\u5206\u3002 In [25]: part1, part2 = np.modf(arr2) In [26]: part1 Out[26]: array([[-0.81547072, 0.02248639, -0.3004805 , 0.53433534, 0.59514916], [ 0.60022692, -0.68780704, 0.79007821, 0.72034177, -0.33966745]]) In [27]: part2 Out[27]: array([[-0., 0., -0., 1., 0.], [ 1., -0., 0., 0., -1.]]) \u4e0b\u8868\u5217\u51fa\u4e86\u5e38\u89c1\u901a\u7528\u51fd\u6570\u3002NumPy \u63d0\u4f9b\u7684\u901a\u7528\u51fd\u6570\u975e\u5e38\u591a\uff0c\u672c\u4e66\u4e0d\u518d\u4e00\u4e00\u4e3e\u4f8b\u4ecb\u7ecd\uff0c\u8bfb\u8005\u5728\u5b9e\u9645\u4f7f\u7528\u65f6\u53ef\u4ee5\u53c2\u8003\u5bf9\u5e94\u7684\u5e2e\u52a9\u6587\u6863\u3002 \u88686-1 NumPy \u5e38\u89c1\u901a\u7528\u51fd\u6570 \u51fd\u6570 \u8bf4\u660e abs\u3001fabs \u8ba1\u7b97\u7edd\u5bf9\u503c sqrt \u8ba1\u7b97\u5143\u7d20\u7684\u5e73\u65b9\u6839\uff0c\u7b49\u4ef7\u4e8e arr ** 0.5 square \u8ba1\u7b97\u5143\u7d20\u7684\u5e73\u65b9\uff0c\u7b49\u4ef7\u4e8e arr ** 2 exp \u8ba1\u7b97\u5143\u7d20\u7684\u6307\u6570 log\u3001log2\u3001log10 \u5206\u522b\u8ba1\u7b97\u81ea\u7136\u5bf9\u6570\u3001\u5e95\u6570\u662f 2 \u7684\u5bf9\u6570\u3001\u5e95\u6570\u662f 10 \u7684\u5bf9\u6570 sign \u8ba1\u7b97\u5143\u7d20\u7684\u6b63\u8d1f\u53f7\uff1a\u7ed3\u679c 1 \u8868\u793a\u6b63\u6570\u30010 \u8868\u793a\u96f6\u3001-1 \u8868\u793a\u8d1f\u6570 floor \u8ba1\u7b97\u5c0f\u4e8e\u5143\u7d20\u7684\u6700\u5927\u6574\u6570\uff0c\u5982 floor(5.3) \u7ed3\u679c\u4e3a 5 ceil \u8ba1\u7b97\u5927\u4e8e\u5143\u7d20\u7684\u6700\u5927\u6b63\u6570\uff0c\u5982 ceil(5.3) \u7ed3\u679c\u4e3a 6 rint \u5143\u7d20\u56db\u820d\u4e94\u5165\uff0c\u5e76\u4fdd\u7559 dtype modf \u5c06\u6570\u7ec4\u7684\u5c0f\u6570\u4e0e\u6574\u6570\u90e8\u5206\u4ee5\u4e24\u4e2a\u72ec\u7acb\u6570\u7ec4\u8fd4\u56de isnan \u8fd4\u56de\u6570\u7ec4\u5143\u7d20\u662f\u5426\u4e3a NaN \u7684\u5e03\u5c14\u578b\u6570\u7ec4 isfinite \u8fd4\u56de\u6570\u7ec4\u5143\u7d20\u662f\u5426\u4e3a\u6709\u9650\u503c\u7684\u5e03\u5c14\u578b\u6570\u7ec4 isinf \u8fd4\u56de\u6570\u7ec4\u5143\u7d20\u662f\u5426\u4e3a\u65e0\u7a77\u503c\u7684\u5e03\u5c14\u578b\u6570\u7ec4 cos\u3001cosh\u3001sin\u3001sinh\u3001tan\u3001tanh \u666e\u901a\u548c\u53cc\u66f2\u578b\u4e09\u89d2\u51fd\u6570 arccos\u3001arccosh\u3001arcsin\u3001arcsinh\u3001arctan\u3001arctanh \u53cd\u4e09\u89d2\u51fd\u6570 logical_not \u8ba1\u7b97\u903b\u8f91\u578b\u5143\u7d20\u7684\u53cd\uff0c\u5982 arr([True, False]) \u7684\u7ed3\u679c\u662f arr([False, True]) add \u5c06\u6570\u7ec4\u5bf9\u5e94\u7684\u5143\u7d20\u76f8\u52a0 subtract \u5c06\u6570\u7ec4\u5bf9\u5e94\u7684\u5143\u7d20\u76f8\u51cf multiply \u5c06\u6570\u7ec4\u5bf9\u5e94\u7684\u5143\u7d20\u76f8\u4e58 divide\u3001floor_divide \u9664\u6cd5\u548c\u6574\u9664\u6cd5\uff08\u4e22\u6389\u4f59\u6570\uff09 power \u7b2c\u4e00\u4e2a\u6570\u7ec4\u5143\u7d20\u4e3a\u5e95\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u5143\u7d20\u4e3a\u5e42 maximum\u3001fmax \u6700\u5927\u503c\u8ba1\u7b97\uff0cfmax \u4f1a\u5ffd\u7565 NaN minimum\u3001fmin \u6700\u5c0f\u503c\u8ba1\u7b97\uff0cfmin \u4f1a\u5ffd\u7565 NaN mod \u6c42\u6a21\u8ba1\u7b97\uff08\u9664\u6cd5\u7684\u4f59\u6570\uff09 copysign \u5c06\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u4e2d\u5143\u7d20\u503c\u7684\u7b26\u53f7\u590d\u5236\u7ed9\u7b2c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u503c greater\u3001greater_equal\u3001less\u3001less_equal\u3001equal\u3001not_equal \u6267\u884c\u5143\u7d20\u7ea7\u6bd4\u8f83\u8fd0\u7b97\uff0c\u4ea7\u751f\u5e03\u5c14\u578b\u6570\u7ec4\uff0c\u7b49\u4ef7\u4e8e\u64cd\u4f5c\u7b26 >\u3001>=\u3001<\u3001<=\u3001==\u3001!= logical_and\u3001logical_or\u3001logical_xor \u5143\u7d20\u7ea7\u903b\u8f91\u8fd0\u7b97\uff0c\u7b49\u4ef7\u4e8e\u64cd\u4f5c\u7b26 &\u3001!\u3001^","title":"6.3.1 \u901a\u7528\u51fd\u6570"},{"location":"06-numpy/#632","text":"NumPy \u9664\u4e86\u63d0\u4f9b\u4e86\u5f88\u591a\u65b9\u4fbf\u4f7f\u7528\u7684\u901a\u7528\u51fd\u6570\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6570\u5b66\u7edf\u8ba1\u7684\u57fa\u672c\u65b9\u6cd5\uff0c\u7528\u4e8e\u8ba1\u7b97\u5e38\u89c1\u7684\u7edf\u8ba1\u91cf\uff0c\u5982\u5747\u503c\u3001\u65b9\u5dee\u3001\u6807\u51c6\u5dee\u3002\u8fd9\u4e9b\u7edf\u8ba1\u65b9\u6cd5\u53ef\u4ee5\u5904\u7406\u6574\u4e2a\u6570\u7ec4\u6216\u8005\u4ee5\u7279\u5b9a\u7684\u6570\u8f74\u4e3a\u65b9\u5411\u7684\u6570\u7ec4\u5b50\u96c6\u3002 \u4e3a\u4e86\u5c55\u793a\u57fa\u672c\u7edf\u8ba1\u65b9\u6cd5\u7684\u4f7f\u7528\uff0c\u4e0b\u9762\u521b\u5efa\u4e00\u4e2a\u6b63\u6001\u5206\u5e03\u968f\u673a\u77e9\u9635\u4f5c\u4e3a\u793a\u4f8b\u6570\u636e\u3002 \u9996\u5148\u5bf9\u6574\u4e2a\u6570\u7ec4\u8ba1\u7b97\u57fa\u672c\u7edf\u8ba1\u91cf\uff1a\u5747\u503c\u3001\u6c42\u548c\u3001\u65b9\u5dee\u4ee5\u53ca\u6807\u51c6\u5dee\u3002 In [2]: import numpy as np In [3]: arr = np.random.randn(5, 5) In [4]: arr Out[4]: array([[-0.51132191, -0.88525544, -1.10119999, -2.3272623 , 0.24502215], [ 0.22767771, -0.43164608, 0.62262033, -1.68672377, -0.19473212], [-0.65820486, -1.62823718, 0.0798516 , 0.1056899 , -0.45333499], [ 0.86035323, 1.79121647, 0.75648603, 0.56113024, -1.57487612], [ 0.90551266, -2.35820418, 0.34951423, -1.23775123, -0.62627856]]) In [5]: arr.mean() # \u6c42\u5747\u503c Out[5]: -0.36679816721832453 In [6]: arr.sum() # \u6c42\u548c Out[6]: -9.169954180458113 In [7]: arr.var() # \u6c42\u65b9\u5dee Out[7]: 1.0772072348109176 In [8]: arr.std() # \u6c42\u6807\u51c6\u5dee Out[8]: 1.037885944991509 \u9488\u5bf9\u6574\u4e2a\u6570\u7ec4\u7684\u8ba1\u7b97\u7ed3\u679c\u6700\u540e\u90fd\u4f1a\u662f\u6807\u91cf\uff0c\u4e0d\u8fc7\uff0c\u5982\u679c\u6307\u5b9a\u4e00\u4e2a\u8f74\u5411\u53c2\u6570 axis\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u4f1a\u662f\u4e00\u4e2a\u5c11\u4e00\u7ef4\u7684\u6570\u7ec4\u3002 In [9]: arr.mean(axis=0) # \u8ba1\u7b97\u5217\u7684\u5e73\u5747\u503c Out[9]: array([ 0.16480337, -0.70242528, 0.14145444, -0.91698343, -0.52083993]) In [10]: arr.mean(axis=1) # \u8ba1\u7b97\u884c\u7684\u5e73\u5747\u503c Out[10]: array([-0.9160035 , -0.29256078, -0.51084711, 0.47886197, -0.59344142]) \u8fd9\u7c7b\u65b9\u6cd5\u8ba1\u7b97\u7684\u7ed3\u679c\u6bd4\u8f93\u5165\u7ef4\u5ea6\u5c0f\uff0c\u6240\u4ee5\u5e38\u88ab\u79f0\u4e3a\u805a\u5408\uff08aggregation\uff09\u8ba1\u7b97\u3002 \u5f53\u7136\uff0c\u4e5f\u5b58\u5728\u4e00\u4e9b\u975e\u805a\u5408\u8ba1\u7b97\u7684\u65b9\u6cd5\uff0c\u5982\u7d2f\u8ba1\u548c\uff08\u5373\u7d2f\u52a0\uff09cumsum()\u3002 In [11]: arr = np.arange(10) In [12]: arr Out[12]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) In [13]: arr.cumsum() Out[13]: array([ 0, 1, 3, 6, 10, 15, 21, 28, 36, 45]) \u7d2f\u52a0\u5f97\u5230\u7684\u6570\u7ec4\u7b2c i \u4e2a\u5143\u7d20\u90fd\u662f\u8f93\u5165\u6570\u7ec4\u524d i-1 \u4e2a\u5143\u7d20\u4e4b\u548c\u3002 \u9664\u4e86\u4e0a\u9762\u63d0\u5230\u7684 mean()\u3001sum()\u3001var()\u3001std()\u3001cumsum() \u65b9\u6cd5\uff0c\u8fd8\u6709\u51e0\u4e2a\u5e38\u7528\u7684\u6570\u7ec4\u7edf\u8ba1\u65b9\u6cd5\uff1amin() \u7528\u4e8e\u8ba1\u7b97\u6700\u5c0f\u503c\u3001max() \u7528\u4e8e\u8ba1\u7b97\u6700\u5927\u503c\u3001argmin() \u7528\u4e8e\u83b7\u53d6\u6700\u5c0f\u5143\u7d20\u7d22\u5f15\u3001argmax() \u7528\u4e8e\u83b7\u53d6\u6700\u5927\u5143\u7d20\u7d22\u5f15\u3001cumprod() \u7528\u4e8e\u8ba1\u7b97\u7d2f\u8ba1\u79ef\u3002","title":"6.3.2 \u57fa\u672c\u7edf\u8ba1"},{"location":"06-numpy/#633","text":"\u6570\u636e\u5904\u7406\u79bb\u4e0d\u5f00\u6392\u5e8f\u548c\u96c6\u5408\u64cd\u4f5c\uff0cNumPy \u4e5f\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u64cd\u4f5c\u65b9\u6cd5\u6216\u51fd\u6570\u3002 sort() \u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0 ndarray \u7684\u5c31\u5730\u6392\u5e8f\u3002 In [2]: arr = np.random.randn(10) In [3]: arr Out[3]: array([-1.03434834, -0.1066477 , -0.18138105, -0.02874672, 0.37446326, -0.19669119, 0.00594903, 0.19048595, 0.14961745, 0.5749973 ]) In [4]: arr.sort() In [5]: arr Out[5]: array([-1.03434834, -0.19669119, -0.18138105, -0.1066477 , -0.02874672, 0.00594903, 0.14961745, 0.19048595, 0.37446326, 0.5749973 ]) \u5982\u679c\u64cd\u4f5c\u7684\u662f\u591a\u7ef4\u6570\u7ec4\uff0c\u60f3\u6309\u7167\u67d0\u4e2a\u8f74\u8fdb\u884c\u6392\u5e8f\uff0c\u53ea\u9700\u8981\u6307\u5b9a\u8f74\u7684\u7f16\u53f7\u3002 In [8]: arr = np.random.randn(3, 4) In [9]: arr Out[9]: array([[-1.36520054, -1.61647551, -1.19945064, 1.37181547], [-0.10126557, -0.39124394, -0.34307793, -0.8307224 ], [ 0.76972754, 1.10906676, -0.17070844, 0.06256465]]) In [10]: arr.sort(1) # \u6bcf\u884c\u6309\u5347\u5e8f\u6392\u5217 In [11]: arr Out[11]: array([[-1.61647551, -1.36520054, -1.19945064, 1.37181547], [-0.8307224 , -0.39124394, -0.34307793, -0.10126557], [-0.17070844, 0.06256465, 0.76972754, 1.10906676]]) \u53e6\u5916 NumPy \u63d0\u4f9b\u7684 sort() \u51fd\u6570\uff08\u4f7f\u7528\u65b9\u5f0f\u662f np.sort(arr)\uff09\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\uff0c\u4e24\u8005\u7684\u533a\u522b\u662f sort() \u65b9\u6cd5\uff08\u4f7f\u7528\u65b9\u5f0f\u662f arr.sort()\uff09\u662f\u5b9e\u73b0\u88ab\u64cd\u4f5c\u6570\u7ec4\u7684\u5c31\u5730\u4fee\u6539\uff0c\u800c sort() \u51fd\u6570\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u62f7\u8d1d\u3002 NumPy \u63d0\u4f9b\u7684\u96c6\u5408\u8fd0\u7b97\u4e3b\u8981\u9488\u5bf9\u7684\u662f\u4e00\u7ef4 ndarray\u3002\u51fd\u6570 unique()\u3001intersect1d()\u3001union1d()\u3001setdiff1d() \u5206\u522b\u5b9e\u73b0\u552f\u4e00\u5316\u3001\u4ea4\u96c6\u3001\u5e76\u96c6\u4ee5\u53ca\u5dee\u96c6\u64cd\u4f5c\uff0c\u5176\u4e2d\u552f\u4e00\u5316\u6700\u4e3a\u5e38\u7528\u3002 unique() \u51fd\u6570\u4e0d\u4ec5\u4f1a\u627e\u51fa\u6570\u7ec4\u7684\u552f\u4e00\u503c\uff0c\u8fd8\u4f1a\u5bf9\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f\u3002 In [14]: arr_int = np.array([3, 4, 5, 8, 4, 3, 2, 1, 6, 10]) In [15]: arr_int Out[15]: array([ 3, 4, 5, 8, 4, 3, 2, 1, 6, 10]) In [16]: np.unique(arr_int) Out[16]: array([ 1, 2, 3, 4, 5, 6, 8, 10]) \u7b49\u6548\u7684\u7eaf Python \u9700\u8981\u8c03\u7528\u4e24\u4e2a\u51fd\u6570\u5b9e\u73b0\u8be5\u64cd\u4f5c\u3002 In [17]: sorted(set(arr_int)) Out[17]: [1, 2, 3, 4, 5, 6, 8, 10] \u4ea4\u96c6\u3001\u5e76\u96c6\u4e0e\u5dee\u96c6\u64cd\u4f5c\u5206\u522b\u4e3e\u4f8b\u5982\u4e0b\u3002 In [18]: arr_int2 = np.array([1, 3, 22, 5, 6]) # \u53e6\u5916\u65b0\u5efa\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4 In [19]: np.intersect1d(arr_int, arr_int2) # \u4ea4\u96c6 Out[19]: array([1, 3, 5, 6]) In [20]: np.union1d(arr_int, arr_int2) # \u5e76\u96c6 Out[20]: array([ 1, 2, 3, 4, 5, 6, 8, 10, 22]) In [21]: np.setdiff1d(arr_int, arr_int2) # \u5dee\u96c6 Out[21]: array([ 2, 4, 8, 10]) \u96c6\u5408\u64cd\u4f5c\u540e\u7684\u7ed3\u679c\u90fd\u81ea\u52a8\u8fdb\u884c\u4e86\u6392\u5e8f\u3002","title":"6.3.3 \u6392\u5e8f\u4e0e\u96c6\u5408\u64cd\u4f5c"},{"location":"06-numpy/#634","text":"\u7ebf\u6027\u4ee3\u6570\u7684\u4e3b\u8981\u5185\u5bb9\u662f\u77e9\u9635\u4e58\u6cd5\u3001\u77e9\u9635\u5206\u89e3\u4ee5\u53ca\u884c\u5217\u5f0f\u7b49\uff0c\u7531\u4e8e\u77e9\u9635\u8fd0\u7b97\u65b9\u6cd5\u4e0e\u57fa\u672c\u7684\u6570\u503c\u8ba1\u7b97\u6709\u6781\u5927\u4e0d\u540c\uff0cNumPy \u63d0\u4f9b\u4e86\u4e13\u95e8\u7684\u65b9\u6cd5\u6216\u51fd\u6570\u8fdb\u884c\u7ebf\u6027\u4ee3\u6570\u64cd\u4f5c\u3002 In [22]: x = np.array([[1, 2, 3], [4, 5, 6]]) In [23]: y = np.array([[3, 5, 6], [7, 8, 9]]) In [24]: x * y Out[24]: array([[ 3, 10, 18], [28, 40, 54]]) \u5982\u679c\u4f7f\u7528\u4e58\u6cd5\u8fd0\u7b97\u7b26\uff0c\u5f97\u5230\u7684\u662f\u4e24\u4e2a\u6570\u7ec4\u5143\u7d20\u7ea7\u522b\u7684\u76f8\u4e58\uff0c\u800c\u4e0d\u662f\u77e9\u9635\u7684\u70b9\u79ef\uff0c\u70b9\u79ef\u64cd\u4f5c\u9700\u8981\u4f7f\u7528 dot() \u51fd\u6570\uff08\u6216\u65b9\u6cd5\uff09\u3002 In [25]: np.dot(x, y) --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-25-c3a58f1d73f8> in <module>() ----> 1 np.dot(x, y) ValueError: shapes (2,3) and (2,3) not aligned: 3 (dim 1) != 2 (dim 0) \u8f93\u5165\u4e24\u4e2a\u77e9\u9635\u5e76\u4e0d\u4ee3\u8868\u51fd\u6570\u80fd\u591f\u6210\u529f\u8fd0\u884c\uff0c\u8fdb\u884c\u70b9\u79ef\u7684\u4e24\u4e2a\u77e9\u9635\u9700\u8981\u6ee1\u8db3\u7279\u6b8a\u7684\u8981\u6c42\uff0c\u5047\u8bbe\u77e9\u9635 x \u7ef4\u5ea6\u662f m \u884c n \u5217\uff0c\u90a3\u4e48\u77e9\u9635y\u5fc5\u987b\u4e3a n \u884c p \u5217\uff0c\u5373\u77e9\u9635 x \u7684\u5217\u6570\u4e0e\u77e9\u9635 y \u7684\u884c\u6570\u5fc5\u987b\u76f8\u7b49\uff0c\u5f97\u5230\u7684\u77e9\u9635\u7ef4\u5ea6\u662f m \u884c p \u5217\u3002 In [27]: np.dot(x, y) Out[27]: array([[ 39, 46], [ 90, 109]]) \u8fd9\u91cc\u77e9\u9635 x \u7ef4\u5ea6\u662f 2 \u884c 3 \u5217\uff0c\u77e9\u9635y\u7ef4\u5ea6\u662f 3 \u884c 2 \u5217\uff0c\u6240\u4ee5\u70b9\u79ef\u5f97\u5230\u7684\u77e9\u9635\u662f 2 \u884c 2 \u5217\u3002 np.dot(x, y) \u51fd\u6570\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u7528\u7b49\u4ef7\u7684 x.dot(y) \u65b9\u6cd5\u64cd\u4f5c\u5b9e\u73b0\uff0c\u53e6\u5916\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e2d\u7f00\u8fd0\u7b97\u7b26 @\u3002 In [28]: x.dot(y) Out[28]: array([[ 39, 46], [ 90, 109]]) In [29]: x @ y Out[29]: array([[ 39, 46], [ 90, 109]]) NumPy \u7684\u5b50\u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u4e00\u7ec4\u5b9e\u73b0\u6807\u51c6\u7684\u77e9\u9635\u5206\u89e3\u8fd0\u7b97\u3001\u6c42\u9006\u3001\u6c42\u884c\u5217\u5f0f\u7b49\u7684\u51fd\u6570\uff0c\u4e0b\u9762\u5217\u51fa\u4e86\u6700\u5e38\u7528\u7684\u7ebf\u6027\u4ee3\u6570\u51fd\u6570\u3002 \u88686-2 \u5e38\u7528\u7ebf\u6027\u4ee3\u6570\u64cd\u4f5c \u51fd\u6570 \u8bf4\u660e diag \u8fd4\u56de\u65b9\u9635\u7684\u5bf9\u89d2\u7ebf\uff08\u6216\u975e\u5bf9\u89d2\u7ebf\uff09\u5143\u7d20 dot \u77e9\u9635\u4e58\u6cd5 trace \u6c42\u5bf9\u89d2\u7ebf\u5143\u7d20\u548c det \u6c42\u884c\u5217\u5f0f eig \u6c42\u65b9\u9635\u7684\u672c\u5f81\u503c\u3001\u672c\u5f81\u5411\u91cf inv \u6c42\u65b9\u9635\u7684\u9006 pinv \u6c42 Moore-Penrose \u4f2a\u9006 qr QR \u5206\u89e3 svd \u5947\u5f02\u503c\u5206\u89e3 solve \u89e3\u7ebf\u6027\u65b9\u7a0b lstsq \u6c42\u7ebf\u6027\u65b9\u7a0b\u6700\u5c0f\u4e8c\u4e58\u89e3","title":"6.3.4 \u7ebf\u6027\u4ee3\u6570\u64cd\u4f5c"},{"location":"06-numpy/#635","text":"NumPy \u7684 random \u5b50\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u9ad8\u6548\u751f\u6210\u591a\u79cd\u6982\u7387\u5206\u5e03\u7684\u51fd\u6570\u3002\u5728\u524d\u9762\u7684\u7ae0\u8282\u91cc\uff0c\u672c\u4e66\u5df2\u7ecf\u5229\u7528\u8fc7\u5176\u4e2d\u7684 randn() \u51fd\u6570\u521b\u5efa\u968f\u673a\u6570\u636e\uff0c\u672c\u5c0f\u8282\u5c06\u5bf9\u5b83\u4eec\u8fdb\u884c\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002 \u4f7f\u7528 normal() \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u6807\u51c6\u7684\u6b63\u6001\u5206\u5e03\u62bd\u6837\u6570\u636e\uff0c\u4e0b\u9762\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a 5x5 \u7684\u6570\u7ec4\u3002 In [30]: np.random.normal(size=(5,5)) Out[30]: array([[ 0.03488939, -1.58459629, -1.46781029, -1.13217542, -1.06312407], [ 0.83678804, 1.21880709, -0.90811673, -1.71748912, 0.92877163], [-0.49898785, -0.17523296, -1.73258953, -0.47749123, -1.49576169], [ 0.15254935, 0.46308905, 0.1221845 , -2.15762674, 2.23510318], [-0.70557981, 0.96598878, 0.43192638, -0.2049251 , 0.23281444]]) randn() \u51fd\u6570\u53ef\u4ee5\u4ea7\u751f\u5e73\u5747\u503c\u4e3a 0\uff0c\u6807\u51c6\u5dee\u4e3a 1 \u7684\u6b63\u6001\u5206\u5e03\u6837\u672c\u3002 In [31]: np.random.randn(10) Out[31]: array([-0.559106 , 1.36880898, -0.24559224, -0.16668403, 2.42001793, 0.39617551, -1.06446839, 1.02696512, 0.08217648, 1.07538155]) In [36]: np.random.randn(5,5) Out[36]: array([[-0.77315232, 0.4786622 , -1.38927237, -0.20433972, -2.43830605], [ 0.34922348, 0.87849643, 1.5239394 , -0.73135812, 2.21068918], [ 0.12944191, 1.01207972, -0.57685143, 2.63207061, -0.74326986], [ 0.73286193, 0.42616076, -0.42334269, -0.98384705, -0.02632024], [-0.6184617 , 0.40202667, -0.3722806 , 0.16819083, 0.55132166]]) \u6ce8\u610f\u4e0a\u9762 normal() \u51fd\u6570\u4e0e randn() \u51fd\u6570\u5728\u4ea7\u751f 5x5 \u6570\u7ec4\u4e0a\u7684\u4e0d\u540c\u4e4b\u5904\uff1anormal() \u9700\u8981\u4f20\u5165\u4e00\u4e2a\u5143\u7ec4\uff0c\u800c randn() \u53ea\u9700\u8981\u4f20\u5165\u4e00\u7cfb\u5217\u7ef4\u5ea6\u503c\u3002 \u9664\u4e86\u751f\u6210\u968f\u673a\u7684\u6570\u636e\uff0c\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u662f\u8bbe\u7f6e\u968f\u673a\u79cd\u5b50\u3002\u4e0a\u8ff0\u6240\u770b\u5230\u7684\u968f\u673a\u6570\u5b9e\u9645\u4e0a\u662f\u8ba1\u7b97\u673a\u4f9d\u636e\u968f\u673a\u6570\u751f\u6210\u5668\u5728\u786e\u5b9a\u6027\u6761\u4ef6\u4e0b\u751f\u6210\u7684\u6570\u636e\uff0c\u6211\u4eec\u4e00\u822c\u4e5f\u5e38\u79f0\u4e3a\u4f2a\u968f\u673a\u6570\u3002\u901a\u8fc7\u8bbe\u7f6e\u968f\u673a\u79cd\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u590d\u4e4b\u524d\u751f\u6210\u7684\u968f\u673a\u6570\u636e\uff0c\u8fd9\u4e3a\u91cd\u590d\u540c\u6837\u7684\u5206\u6790\u7ed3\u679c\uff08\u8be5\u5206\u6790\u4f7f\u7528\u5230\u4e86\u968f\u673a\u6570\u636e\uff09\u63d0\u4f9b\u4e86\u5e2e\u52a9\u3002 In [37]: np.random.seed(1234) \u6b64\u5904\u4f7f\u7528 random \u5b50\u6a21\u5757\u7684 seed() \u51fd\u6570\u8bbe\u5b9a\u7684\u662f\u4e00\u4e2a\u5168\u5c40\u7684\u968f\u673a\u79cd\u5b50\u3002\u5982\u679c\u60f3\u8981\u907f\u514d\u5168\u5c40\u72b6\u6001\uff0c\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 RandomState() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u9694\u79bb\u7684\u968f\u673a\u6570\u751f\u6210\u5668\u3002 In [37]: r = np.random.RandomState(123456) In [38]: r.randn(10) Out[38]: array([ 0.4691123 , -0.28286334, -1.5090585 , -1.13563237, 1.21211203, -0.17321465, 0.11920871, -1.04423597, -0.86184896, -2.10456922]) \u4e0b\u8868\u7ed9\u51fa\u4e86 random \u5b50\u6a21\u5757\u4e2d\u5e38\u7528\u7684\u968f\u673a\u51fd\u6570\u3002 \u88686-3 \u5e38\u7528\u968f\u673a\u51fd\u6570 \u51fd\u6570 \u8bf4\u660e seed \u8bbe\u5b9a\u5168\u5c40\u968f\u673a\u6570\u751f\u6210\u5668\u79cd\u5b50 RandomState \u8bbe\u5b9a\u5c40\u90e8\u968f\u673a\u6570\u751f\u6210\u5668\u79cd\u5b50 permutation \u968f\u673a\u6392\u5217\u8f93\u5165\u5e8f\u5217 shuffle \u5bf9\u8f93\u5165\u5e8f\u5217\u5c31\u5730\u968f\u673a\u6392\u5217\uff08\u6d17\u724c\uff09 rand \u751f\u6210\u968f\u673a\u503c randint \u6839\u636e\u6307\u5b9a\u8303\u56f4\u968f\u673a\u9009\u53d6\u6574\u6570 randn \u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\u4e2d\u968f\u673a\u62bd\u6837 binomial \u4e8c\u9879\u5206\u5e03\u53d6\u6837 normal \u6b63\u6001\u5206\u5e03\u53d6\u6837 beta \u8d1d\u5854\u5206\u5e03\u53d6\u6837 chisquare \u5361\u65b9\u5206\u5e03\u53d6\u6837 gamma \u4f3d\u9a6c\u5206\u5e03\u53d6\u6837 uniform \u5747\u5300\u5206\u5e03\u53d6\u6837","title":"6.3.5 \u4f2a\u968f\u673a\u6570\u751f\u6210"},{"location":"06-numpy/#636","text":"Numpy \u9664\u4e86\u63d0\u4f9b\u591a\u7ef4\u6570\u7ec4\u5bf9\u8c61 ndarrary\u3001\u9ad8\u6548\u7684\u6570\u7ec4\u64cd\u4f5c\u51fd\u6570\u548c\u65b9\u6cd5\uff0c\u5b83\u8fd8\u652f\u6301\u78c1\u76d8\u6587\u672c\u6216\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u8bfb\u5199\u64cd\u4f5c\u3002\u672c\u5c0f\u8282\u4e3b\u8981\u4ecb\u7ecd NumPy \u5185\u7f6e\u7684\u6570\u636e\u5b58\u50a8\u4e8c\u8fdb\u5236\u683c\u5f0f\uff0c\u6570\u636e\u5904\u7406\u5e38\u89c1\u7684\u6587\u672c\u683c\u5f0f\u7684\u5bfc\u5165\u4e0e\u4fdd\u5b58\u5c06\u5728 Pandas \u7ae0\u8282\u8fdb\u884c\u4ecb\u7ecd\u3002 Numpy \u63d0\u4f9b\u4e86\u4e24\u4e2a\u4e3b\u8981\u7684\u51fd\u6570\u5206\u522b\u7528\u4e8e\u5c06 ndarray \u5199\u5165\u78c1\u76d8\u548c\u4ece\u78c1\u76d8\u4e2d\u8bfb\u5165\u4fdd\u5b58\u7684\u6570\u7ec4\u6570\u636e\u6587\u4ef6\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6570\u7ec4\u4f1a\u4ee5\u672a\u538b\u7f29\u7684\u4e8c\u8fdb\u5236\u683c\u5f0f\u4fdd\u5b58\u5728\u6587\u4ef6\u6269\u5c55\u540d\u4e3a .npy \u7684\u6587\u4ef6\u4e2d\u3002 In [2]: arr1 = np.random.randn(10) # \u521b\u5efa\u4e00\u4e9b\u6570\u7ec4 In [3]: arr2 = np.random.randn(10) In [4]: arr_res = arr1 + arr2 # \u64cd\u4f5c\u6570\u7ec4 In [5]: np.save('result', arr_res) # \u4fdd\u5b58\u7ed3\u679c\u6570\u7ec4 np.save() \u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u6587\u4ef6\u540d\uff08\u53ef\u4ee5\u5305\u542b\u6307\u5b9a\u8def\u5f84\uff09\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u4fdd\u5b58\u7684\u6570\u7ec4\u3002\u5982\u679c\u7528\u6237\u6ca1\u6709\u6307\u5b9a\u6587\u4ef6\u6269\u5c55\u540d\u65f6\uff0cNumPy \u4f1a\u5728\u5b9e\u9645\u4fdd\u5b58\u65f6\u5c06 .npy \u52a0\u4e0a\u3002\u3002 \u8fd9\u6837\uff0c\u6570\u636e\u5c31\u88ab\u4fdd\u5b58\u5230\u4e86\u8ba1\u7b97\u673a\u78c1\u76d8\u4e0a\uff0c\u5f53\u9700\u8981\u5bfc\u5165\u8be5\u6570\u636e\u65f6\uff0c\u53ea\u9700\u8981\u8c03\u7528 np.load() \u51fd\u6570\u5e76\u4f20\u5165\u6587\u4ef6\u8def\u5f84\u3002 In [6]: np.load('result.npy') Out[6]: array([-1.62141731, 0.22330449, 0.52851935, -0.34489954, 0.00938235, 3.27527395, -0.83738875, 0.45741888, -0.12050226, -0.90452199]) \u6ce8\u610f\uff0c\u5bfc\u5165\u65f6\u9700\u8981\u5b8c\u6574\u8f93\u5165\u6587\u4ef6\u540d\u53ca\u6587\u4ef6\u6269\u5c55\u540d\uff0c\u5426\u5219 load() \u51fd\u6570\u5c06\u627e\u4e0d\u5230\u6587\u4ef6\u6240\u5728\u3002 In [7]: np.load('result') --------------------------------------------------------------------------- FileNotFoundError Traceback (most recent call last) <ipython-input-7-f17638fbbc1f> in <module>() ----> 1 np.load('result') ~/anaconda3/lib/python3.7/site-packages/numpy/lib/npyio.py in load(file, mmap_mode, allow_pickle, fix_imports, encoding) 382 own_fid = False 383 if isinstance(file, basestring): --> 384 fid = open(file, \"rb\") 385 own_fid = True 386 elif is_pathlib_path(file): FileNotFoundError: [Errno 2] No such file or directory: 'result' \u5728\u5b9e\u9645\u8fdb\u884c\u6570\u7ec4\u64cd\u4f5c\u65f6\u5f80\u5f80\u4f1a\u4ea7\u751f\u591a\u4e2a\u9700\u8981\u4fdd\u5b58\u7684\u6570\u636e\u7ed3\u679c\uff0cnp.savez() \u51fd\u6570\u53ef\u4ee5\u5c06\u591a\u4e2a ndarray \u4fdd\u5b58\u5230\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u3002\u8be5\u51fd\u6570\u9700\u8981\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e0e np.save() \u4e00\u6837\u4e5f\u662f\u4fdd\u5b58\u7684\u6587\u4ef6\u540d\uff0c\u4e0d\u8fc7\u4ee5 .npz \u4f5c\u4e3a\u6587\u4ef6\u6269\u5c55\u540d\uff0c\u540e\u9762\u7684\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u610f\u591a\u4e2a\u7528\u6237\u6307\u5b9a\u7684\u5173\u952e\u5b57\u53c2\u6570\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u4e4b\u524d\u751f\u6210\u7684 3 \u4e2a\u6570\u7ec4\u4fdd\u5b58\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002 In [8]: np.savez('array_save.npz', input1=arr1, input2=arr2, result=arr_res) \u5982\u679c\u76f4\u63a5\u5c06\u5176\u5bfc\u5165\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u4e0d\u53ef\u67e5\u770b\u7684 NpzFile \u5bf9\u8c61\u3002 In [9]: np.load('array_save.npz') Out[9]: <numpy.lib.npyio.NpzFile at 0x7f917c6caba8> \u6211\u4eec\u9700\u8981\u5c06\u5176\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u7136\u540e\u901a\u8fc7\u4fdd\u5b58\u65f6\u8bbe\u5b9a\u7684\u5173\u952e\u5b57\u53c2\u6570\u8fdb\u884c\u7d22\u5f15\u67e5\u770b\u5355\u4e2a\u7684\u6570\u7ec4\u6570\u636e\u3002 In [10]: arr_save = np.load('array_save.npz') In [11]: arr_save['input1'] Out[11]: array([-0.79417709, 0.57095314, 1.59839779, -0.96875458, -1.35098779, 2.5673315 , 0.64841217, 0.28681969, 0.26718872, 0.26876572]) In [12]: arr_save['input2'] Out[12]: array([-0.82724022, -0.34764864, -1.06987844, 0.62385504, 1.36037014, 0.70794245, -1.48580092, 0.17059919, -0.38769099, -1.17328771]) In [13]: arr_save['result'] Out[13]: array([-1.62141731, 0.22330449, 0.52851935, -0.34489954, 0.00938235, 3.27527395, -0.83738875, 0.45741888, -0.12050226, -0.90452199]) \u4e0a\u8ff0\u4fdd\u5b58\u7684\u6587\u4ef6\u90fd\u662f\u672a\u538b\u7f29\u7684\uff0c\u5982\u679c\u60f3\u8981\u5c06\u6570\u636e\u538b\u7f29\uff0c\u8bfb\u8005\u4e0d\u59a8\u4f7f\u7528 np.savez_compressed() \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0e np.savez() \u4e00\u81f4\uff0c\u56e0\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002","title":"6.3.6 \u6570\u7ec4\u6587\u4ef6\u8f93\u5165\u4e0e\u5bfc\u51fa"},{"location":"06-numpy/#64","text":"NumPy \u6a21\u5757\u4e2d ndarray \u6570\u636e\u5b58\u50a8\u5bf9\u8c61\u548c\u4e00\u7cfb\u5217\u9ad8\u6548\u6570\u636e\u64cd\u4f5c\u65b9\u6cd5\u3001\u51fd\u6570\u7684\u5f15\u5165\u4e3a\u66f4\u9ad8\u7ea7\u522b\u7684\u6570\u636e\u5904\u7406\u3001\u7edf\u8ba1\u5efa\u6a21\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u5e95\u5c42\u5b9e\u73b0\u3002 \u901a\u8fc7\u672c\u7ae0\u7684\u5b66\u4e60\uff0c\u8bfb\u8005\u5e94\u5f53\u5bf9 NumPy \u7684\u957f\u5904\u6709\u6240\u8ba4\u77e5\uff1aNumPy \u6a21\u5757\u63d0\u4f9b\u4e86\u72ec\u7acb\u4e8e Python \u5185\u7f6e\u5bf9\u8c61\u7684 ndarray \u591a\u7ef4\u6570\u7ec4\u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u4e00\u4e2a\u8fde\u7eed\u7684\u5185\u5b58\u5757\u4e2d\uff0c\u5229\u7528 C \u8bed\u8a00\u5b9e\u73b0\u7684\u7b97\u6cd5\u5e93\u64cd\u4f5c\u548c\u4fee\u6539\u6570\u636e\uff0c\u51cf\u5c11\u5bf9\u5185\u5b58\u8d44\u6e90\u7684\u6d88\u8017\uff1bNumPy \u53ef\u4ee5\u5bf9\u6574\u4e2a\u6570\u7ec4\u6267\u884c\u590d\u6742\u7684\u6570\u503c\u8ba1\u7b97\uff0c\u907f\u514d\u4e86 for \u5faa\u73af\u7684\u4f7f\u7528\uff0c\u63d0\u5347\u4e86\u8ba1\u7b97\u7684\u901f\u5ea6\u3002\u76f8\u5e94\u5730\uff0c\u8bfb\u8005\u5728\u5904\u7406\u5927\u6570\u636e\u96c6\u65f6\uff0c\u5e94\u5f53\u5c3d\u91cf\u5229\u7528 NumPy \u7684\u4f18\u52bf\uff0c\u4e00\u65b9\u9762\u5728\u6570\u7ec4\u64cd\u4f5c\u65f6\u907f\u514d\u521b\u5efa\u8fc7\u591a\u7684\u4e2d\u95f4\u53d8\u91cf\uff0c\u53e6\u4e00\u65b9\u9762\u719f\u7ec3\u4f7f\u7528 NumPy \u63d0\u4f9b\u7684\u5411\u91cf\u5316\u8ba1\u7b97\u51fd\u6570\u548c\u65b9\u6cd5\u3002","title":"6.4 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"07-matplotlib/","text":"\u7b2c 7 \u7ae0 Matplotlib \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a Matplotlib \u547d\u540d\u7ea6\u5b9a Matplotlib \u4e09\u79cd\u7ed8\u56fe\u573a\u666f Matplotlib \u4e24\u79cd\u5e94\u7528\u63a5\u53e3 \u57fa\u672c\u56fe\u5f62\u7ed8\u5236 \u7b80\u5355\u7684\u56fe\u5f62\u53ef\u4ee5\u7ed9\u6570\u636e\u5206\u6790\u5e08\u5e26\u6765\u6bd4\u5176\u4ed6\u4efb\u4f55\u8bbe\u5907\u66f4\u591a\u7684\u4fe1\u606f\u3002\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u672c\u4e66\u4ecb\u7ecd\u4e86 Python \u6570\u636e\u5206\u6790\u6700\u6838\u5fc3\u7684\u5e95\u5c42\u5e93 NumPy\u3001\u57fa\u4e8e ndarray \u5bf9\u8c61\u7684\u6570\u7ec4\u64cd\u4f5c\u65b9\u6cd5\u4e0e\u57fa\u672c\u7edf\u8ba1\u3002\u672c\u7ae0\u5c06\u5f00\u59cb\u6307\u5f15\u8bfb\u8005\u4ece\u66f4\u76f4\u89c2\u7684\u89d2\u5ea6\u2014\u2014\u56fe\u5f62\u2014\u2014\u4e86\u89e3\u6570\u636e\u7684\u5206\u5e03\u4e0e\u89c4\u5f8b\uff0c\u5148\u5b66\u4e60 Matplotlib \u5e93\u7684\u57fa\u672c\u7406\u5ff5\u548c\u63a5\u53e3\uff0c\u7136\u540e\u5b66\u4e60\u5982\u4f55\u7ed8\u5236\u5e38\u89c1\u7684\u56fe\u5f62\u4ee5\u53ca\u66f4\u591a\u7684\u81ea\u5b9a\u4e49\u3002 7.1 Matplotlib\u5165\u95e8 \u00b6 7.1.1 Matplotlib\u5e93\u7b80\u4ecb \u00b6 \u6570\u636e\u53ef\u89c6\u5316\u662f\u6570\u636e\u5206\u6790\u6700\u6838\u5fc3\u7684\u5de5\u4f5c\u4e4b\u4e00\uff0c\u5b83\u65e2\u80fd\u5e2e\u52a9\u6211\u4eec\u63a2\u7d22\u6570\u636e\uff0c\u5982\u5bfb\u627e\u5f02\u5e38\u503c\uff0c\u4e5f\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u6c47\u603b\u5206\u6790\u7ed3\u679c\uff0c\u5373\u6240\u8c13\u7684\u4e00\u56fe\u80dc\u5343\u8a00\u3002Python \u6709\u7740\u4f17\u591a\u7684\u5e93\u53ef\u4ee5\u8fdb\u884c\u9759\u6001\u6216\u52a8\u6001\u7684\u6570\u636e\u53ef\u89c6\u5316\uff0c\u5176\u4e2d\u6700\u6d41\u884c\u7684\u662f Matplotlib\uff08 https://matplotlib.org/ \uff09\u3002\u56e0\u6b64\uff0c\u672c\u4e66\u4e3b\u8981\u5229\u7528 Matplotlib \u5411\u8bfb\u8005\u4ecb\u7ecd\u5982\u4f55\u5408\u7406\u5730\u9009\u62e9\u548c\u521b\u5efa\u56fe\u5f62\u3002 Matplotlib \u5e93\u7684\u5386\u53f2\u5e76\u4e0d\u662f\u5f88\u4e45\u8fdc\uff0c\u5b83\u662f John Hunter \u5728 2002 \u5e74\u542f\u52a8\u7684\u4e00\u4e2a\u9879\u76ee\uff0c\u76ee\u7684\u662f\u4e3a Python \u6784\u5efa\u5546\u4e1a\u79d1\u5b66\u8ba1\u7b97\u8f6f\u4ef6 MATLAB \u7684\u7ed8\u56fe\u63a5\u53e3\uff0c\u5728 2003 \u5e74\u53d1\u5e03\u4e86 0.1 \u7248\u672c\uff08\u5b9e\u9a8c\u7248\u672c\uff09\u3002Matplotlib \u7684\u6700\u91cd\u8981\u7279\u70b9\u662f\u5b83\u53ef\u4ee5\u5f88\u597d\u5730\u4e0e\u8bb8\u591a\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\u56fe\u5f62\u540e\u7aef\u5de5\u4f5c\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4e0d\u7ba1\u4f7f\u7528\u4ec0\u4e48\u64cd\u4f5c\u7cfb\u7edf\u6216\u662f\u60f3\u8981\u4ec0\u4e48\u8f93\u51fa\u683c\u5f0f\u7684\u56fe\u5f62\uff08PDF\u3001JPG\u3001PNG\u3001GIF \u7b49\uff09\u90fd\u53ef\u4ee5\u4f9d\u9760\u5b83\u3002\u8fd9\u79cd\u8de8\u5e73\u53f0\uff0c\u4e00\u5207\u7686\u53ef\u7528\u7684\u7279\u6027\u6210\u4e3a\u4e86 Matplotlib \u6700\u5927\u7684\u957f\u5904\uff0c\u5e76\u4e3a Matplotlib \u5e26\u6765\u4e86\u5927\u91cf\u7684\u57fa\u7840\u7528\u6237\u548c\u6d3b\u8dc3\u7684\u5f00\u53d1\u8005\u3002 \u76ee\u524d\uff0cMatplotlib \u5df2\u7ecf\u548c IPython \u5408\u4f5c\uff0c\u7b80\u5316\u4e86\u5728 IPython Shell \u548c Jupyter Notebook \u4e2d\u8fdb\u884c\u4ea4\u4e92\u5f0f\u7ed8\u56fe\u7684\u65b9\u5f0f\u3002\u9664\u6b64\u4e4b\u5916\uff0cPython \u793e\u533a\u51fa\u73b0\u4e86\u8bb8\u591a\u4ee5 Matplotlib \u4e3a\u5e95\u5c42\u7684\u53ef\u89c6\u5316\u8ba1\u7b97\u5e93\uff0c\u5176\u4e2d\u6700\u6709\u540d\u7684\u662f Seaborn\uff08 https://seaborn.pydata.org/ \uff09\uff0c\u5728\u672c\u4e66\u540e\u7eed\u7684\u7ae0\u8282\u6211\u4eec\u4f1a\u5b66\u4e60\u5b83\u3002 7.1.2 \u547d\u540d\u7ea6\u5b9a \u00b6 \u5728\u6df1\u5165\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 Matplotlib \u521b\u5efa\u56fe\u5f62\u4e4b\u524d\uff0c\u672c\u4e66\u5148\u5411\u8bfb\u8005\u4ecb\u7ecd\u4e00\u4e9b Python \u79d1\u5b66\u8ba1\u7b97\u793e\u533a\u901a\u7528\u7684\u547d\u540d\u7ea6\u5b9a\u3002 \u5728\u5bfc\u5165 NumPy \u5305\u65f6\uff0c\u6211\u4eec\u4f7f\u7528 Python \u793e\u533a\u7ea6\u5b9a\u7684 np \u66ff\u4ee3 numpy\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u4e5f\u4f7f\u7528 Matplotlib \u7684\u4e00\u4e9b\u6807\u51c6\u7b80\u5199\u7528\u4e8e\u5bfc\u5165\u3002 import matplotlib as mpl import matplotlib.pyplot as plt Python \u7528\u6237\u57fa\u672c\u4e0a\u7ed8\u56fe\u53ea\u4f1a\u7528\u5230 pyplot \u5b50\u6a21\u5757\u4e2d\u7684\u529f\u80fd\u7279\u6027\uff0c\u56e0\u6b64 plt \u662f\u4f7f\u7528 Matplotlib \u7ed8\u56fe\u6700\u5e38\u7528\u7684\u7b80\u5199\u3002 7.1.3 \u5982\u4f55\u5c55\u793a\u56fe\u5f62 \u00b6 Matplotlib \u6700\u4f73\u7684\u4f7f\u7528\u65b9\u6cd5\u4f9d\u8d56\u4e8e\u7528\u6237\u5982\u4f55\u4f7f\u7528\u5b83\uff0c\u901a\u5e38\u6709 3 \u79cd\u5e94\u7528\u7ed8\u56fe\u7684\u573a\u666f\uff1a\u811a\u672c\u3001IPython Shell \u548c Jupyter Notebook\u3002 \u4f7f\u7528\u811a\u672c\u7ed8\u5236 \u00b6 \u8bfb\u8005\u5982\u679c\u60f3\u8981\u5728\u811a\u672c\u4e2d\u4f7f\u7528 Matplotlib\uff0c\u901a\u5e38\u4f7f\u7528 plt.show() \u51fd\u6570\u3002\u8be5\u51fd\u6570\u4f1a\u5bfb\u627e\u5f53\u524d\u6d3b\u8dc3\u7684\u6240\u6709\u56fe\u5f62\u961f\u5f62\uff0c\u6253\u5f00\u4e00\u4e2a\u6216\u591a\u4e2a\u4ea4\u4e92\u5f0f\u7684\u7a97\u53e3\u5c55\u793a\u56fe\u5f62\u3002 \u5047\u8bbe\u4e0b\u9762\u662f\u4ee3\u7801\u6587\u4ef6 plot.py \u7684\u5185\u5bb9\uff1a # -*- coding: utf-8 -*- # \u5bfc\u5165\u6a21\u5757/\u5305 import matplotlib.pyplot as plt import numpy as np # \u751f\u6210\u6570\u636e x = np.linspace(0, 10, 200) # \u7ed8\u5236\u56fe\u5f62 plt.plot(x, np.sin(x)) plt.plot(x, np.cos(x)) # \u663e\u793a\u56fe\u5f62 plt.show() \u63a5\u4e0b\u6765\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\u8be5\u811a\u672c\uff0c\u8bfb\u8005\u5c06\u770b\u5230\u4e00\u4e2a\u663e\u793a\u56fe\u5f62\u7684\u7a97\u53e3\u5f39\u51fa\u6765\u3002\u5728\u6b64\u5904\uff0cplt.show() \u51fd\u6570\u5728\u540e\u53f0\u8fdb\u884c\u4e86\u591a\u9879\u5de5\u4f5c\uff0c\u5b83\u4e0e\u7cfb\u7edf\u7684\u4ea4\u4e92\u5f0f\u56fe\u5f62\u540e\u7aef\u8fdb\u884c\u4ea4\u6d41\uff0c\u800c Matplotlib \u5411\u6211\u4eec\u9690\u85cf\u4e86\u6240\u6709\u7684\u7ec6\u8282\u3002 $ python plot.py \u6ce8\u610f\uff0c\u5982\u679c\u662f\u7f16\u5199\u811a\u672c\u6587\u4ef6\u8fdb\u884c\u7ed8\u56fe\uff0c\u4e00\u4e2a\u6587\u4ef6\u5c3d\u91cf\u53ea\u4f7f\u7528\u4e00\u6b21 plt.show() \u51fd\u6570\uff0c\u5982\u679c\u4f7f\u7528\u591a\u6b21\uff0c\u56fe\u5f62\u540e\u7aef\u884c\u4e3a\u5c06\u53ef\u80fd\u56e0\u4e3a\u9891\u7e41\u7684\u8c03\u7528\u51fa\u6bdb\u75c5\u3002 \u4ece IPython Shell \u7ed8\u5236 \u00b6 \u5728 IPython Shell \u4e2d\u4f7f\u7528 Matplotlib \u975e\u5e38\u65b9\u4fbf\uff0c\u8bfb\u8005\u5982\u679c\u6307\u5b9a Matplotlib \u6a21\u5f0f\uff0cIPython \u53ef\u4ee5\u5de5\u4f5c\u5f97\u975e\u5e38\u597d\u3002\u542f\u52a8 IPython \u540e\u952e\u5165\u9b54\u672f\u547d\u4ee4 %matplotlib \u80fd\u591f\u6fc0\u6d3b\u8be5\u6a21\u5f0f\u3002 %matplotlib import matplotlib.pyplot as plt # Using matplotlib backend: Qt5Agg \u8fd9\u65f6\u5019\u8bfb\u8005\u5982\u679c\u8c03\u7528 plt.plot() \u51fd\u6570\u5c31\u4f1a\u6253\u5f00\u4e00\u4e2a\u56fe\u5f62\u7a97\u53e3\uff0c\u7136\u540e\u63a5\u4e0b\u6765\u8f93\u5165\u7684\u7ed8\u56fe\u6307\u4ee4\u4f1a\u4e0d\u65ad\u66f4\u65b0\u8fd9\u4e2a\u56fe\u3002\u6709\u65f6\u5019\uff0c\u4e00\u4e9b\u5bf9\u56fe\u5f62\u5c5e\u6027\u7684\u66f4\u6539\u4e0d\u4f1a\u53ca\u65f6\u751f\u6548\uff0c\u8bfb\u8005\u53ef\u4ee5\u5229\u7528 plt.draw() \u51fd\u6570\u5f3a\u5236\u6267\u884c\u3002 \u5728 Jupyter Notebook \u4e2d\u7ed8\u5236 \u00b6 \u5728 Jupyter Notebook \u4e2d\u4f7f\u7528 Matplotlib \u8fdb\u884c\u4ea4\u4e92\u5f0f\u7ed8\u56fe\u4e5f\u662f\u4f7f\u7528\u9b54\u672f\u547d\u4ee4 %matplotlib\uff0c\u5b83\u8ddf\u5728 IPython Shell \u4e2d\u7684\u5de5\u4f5c\u65b9\u5f0f\u5dee\u4e0d\u591a\u3002\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4e24\u79cd\u9009\u9879\uff1a %matplotlib notebook \u4f1a\u5728 Notebook \u4e2d\u5d4c\u5165\u4ea4\u4e92\u5f0f\u56fe\u5f62\u3002 %matplotlib inline \u4f1a\u5728 Notebook \u4e2d\u5d4c\u5165\u9759\u6001\u56fe\u5f62\u3002 \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u66f4\u4e3a\u5e38\u7528\u3002 %matplotlib inline \u8fd0\u884c\u8fd9\u6761\u547d\u4ee4\u540e\uff0cNotebook \u4efb\u4f55\u521b\u5efa\u56fe\u5f62\u7684\u5355\u5143\u683c\u90fd\u4f1a\u5d4c\u5165\u5bf9\u5e94\u7684 PNG \u56fe\u5f62\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u521b\u5efa\u4e86\u4e00\u5e45\u8ddf\u521a\u624d\u6267\u884c python \u811a\u672c\u7c7b\u4f3c\u7684\u56fe\u5f62\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u7565\u5fae\u4fee\u6539\u4e86\u7ed8\u56fe\u6570\u636e\u7684\u5e76\u8bbe\u7f6e\u4e86\u7ebf\u6761\u7684\u7c7b\u578b\u3002 import numpy as np x = np.linspace(0, 10, 100) fig = plt.figure() # \u751f\u6210\u4e00\u4e2a\u7a7a\u767d\u56fe\u5f62\u5e76\u5c06\u5176\u8d4b\u7ed9fig\u5bf9\u8c61 plt.plot(x, np.sin(x), '-') # \u7ed8\u5236\u5b9e\u7ebf plt.plot(x, np.cos(x), '--') # \u7ed8\u5236\u865a\u7ebf \u8bf7\u8bfb\u8005\u8bd5\u8bd5\u5148\u8fd0\u884c %matplotlib notebook\uff0c\u518d\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\u89c2\u5bdf\u6267\u884c\u7684\u7ed3\u679c\u4e0e %matplotlib inline \u6709\u4f55\u4e0d\u540c\u3002 \u5728\u672c\u7ae0\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u4e2d\uff0c\u672c\u4e66\u7edf\u4e00\u4f7f\u7528 IPython Shell \u7684\u65b9\u5f0f\u8fdb\u884c\u7ed8\u56fe\u3002 7.1.4 \u4fdd\u5b58\u56fe\u5f62 \u00b6 \u524d\u9762\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\uff0cMatplotlib \u652f\u6301\u5404\u79cd\u7cfb\u7edf\u548c\u56fe\u5f62\u683c\u5f0f\u3002Matplotlib \u7684\u597d\u7528\u70b9\u8fd8\u5728\u4e8e\uff0c\u4fdd\u5b58\u6240\u6709\u56fe\u5f62\u683c\u5f0f\u7684\u4ee3\u7801\u90fd\u662f\u4e00\u6837\u7684\uff0c\u53ea\u9700\u8981\u8c03\u7528\u56fe\u5f62\u5bf9\u8c61\u7684 savefig() \u65b9\u6cd5\uff0c\u975e\u5e38\u7b80\u5355\u6613\u7528\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u521b\u5efa\u4e0a\u9762\u6b63\u5f26\u4f59\u5f26\u66f2\u7ebf\u56fe\uff0c\u7136\u540e\u7528 png \u683c\u5f0f\u4fdd\u5b58\uff0c\u5e76\u8fdb\u884c\u68c0\u67e5\u3002 In [1]: %matplotlib ...: import matplotlib.pyplot as plt Using matplotlib backend: Qt5Agg In [2]: import numpy as np ...: x = np.linspace(0, 10, 100) ...: ...: fig = plt.figure() # \u751f\u6210\u4e00\u4e2a\u7a7a\u767d\u56fe\u5f62\u5e76\u5c06\u5176\u8d4b\u7ed9 fig \u5bf9\u8c61 ...: plt.plot(x, np.sin(x), '-') # \u7ed8\u5236\u5b9e\u7ebf ...: plt.plot(x, np.cos(x), '--') # \u7ed8\u5236\u865a\u7ebf Out[2]: [<matplotlib.lines.Line2D at 0x7f90d0955f98>] In [3]: # \u4fdd\u5b58\u56fe\u5f62 ...: fig.savefig(\"first.png\") ...: ...: # \u8c03\u7528\u7cfb\u7edf\u547d\u4ee4 ls \u68c0\u67e5 ...: !ls -l first.png -rw-r--r-- 1 wsx wsx 37468 8\u6708 17 10:26 first.png pdf \u662f\u5e38\u89c1\u7684\u77e2\u91cf\u56fe\u5f62\u683c\u5f0f\uff0c\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u4e00\u6837\u7684\u51fd\u6570\uff0c\u4ec5\u6539\u52a8\u4e00\u4e0b\u4fdd\u5b58\u7684\u6587\u4ef6\u62d3\u5c55\u540d\u3002 In [4]: # \u4fdd\u5b58 pdf \u77e2\u91cf\u56fe ...: fig.savefig(\"first.pdf\") ...: ...: # \u8c03\u7528\u7cfb\u7edf\u547d\u4ee4 ls \u68c0\u67e5 ...: !ls -l first.pdf -rw-r--r-- 1 wsx wsx 8555 8\u6708 17 10:26 first.pdf \u8bfb\u8005\u4e0d\u59a8\u4f7f\u7528 pdf \u9605\u8bfb\u5668\u6253\u5f00\u8be5\u6587\u4ef6\u770b\u770b\u3002 \u4e0b\u9762\u4ee3\u7801\u7ed3\u679c\u5217\u51fa Matplotlib \u652f\u6301\u7684\u6240\u6709\u56fe\u5f62\u683c\u5f0f\uff1a In [5]: fig.canvas.get_supported_filetypes() Out[5]: {'ps': 'Postscript', 'eps': 'Encapsulated Postscript', 'pdf': 'Portable Document Format', 'pgf': 'PGF code for LaTeX', 'png': 'Portable Network Graphics', 'raw': 'Raw RGBA bitmap', 'rgba': 'Raw RGBA bitmap', 'svg': 'Scalable Vector Graphics', 'svgz': 'Scalable Vector Graphics', 'jpg': 'Joint Photographic Experts Group', 'jpeg': 'Joint Photographic Experts Group', 'tif': 'Tagged Image File Format', 'tiff': 'Tagged Image File Format'} \u6ce8\u610f\uff0c\u7531\u4e8e\u4e0d\u540c\u8bfb\u8005\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u53ca\u5b89\u88c5\u7684\u56fe\u5f62\u540e\u7aef\u90fd\u53ef\u80fd\u4e0d\u540c\uff0c\u56e0\u6b64\u652f\u6301\u7684\u56fe\u5f62\u683c\u5f0f\u53ef\u80fd\u4e5f\u4f1a\u6709\u6240\u53d8\u5316\uff0c\u56e0\u800c\u5982\u679c\u4e0e\u4e0a\u8ff0\u8f93\u51fa\u4e0d\u4e00\u81f4\u4e5f\u662f\u6b63\u5e38\u7684\u3002 7.1.5 \u4e24\u79cd\u7ed8\u56fe\u63a5\u53e3 \u00b6 \u5728\u524d\u9762\u7684\u51e0\u5c0f\u8282\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7c7b\u4f3c MATLAB \u7684\u547d\u4ee4\u64cd\u4f5c\u65b9\u5f0f\u8fdb\u884c\u56fe\u5f62\u7684\u521b\u5efa\u5de5\u4f5c\u3002\u9664\u4e86\u8fd9\u79cd\u64cd\u4f5c\u65b9\u5f0f\uff0cMatplotlib \u8fd8\u63d0\u4f9b\u4e86\u6bd4\u8f83\u539f\u751f\u7684 Python \u65b9\u5f0f\u64cd\u4f5c\u56fe\u5f62\uff1a\u8fd9\u79cd\u65b9\u5f0f\u628a\u6bcf\u4e00\u4e2a\u56fe\u5f62\u90fd\u770b\u4f5c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u65b9\u6cd5\u7684\u8c03\u7528\u8fbe\u5230\u56fe\u5f62\u5143\u7d20\u589e\u6539\u7684\u76ee\u7684\u3002 MATLAB \u64cd\u4f5c\u65b9\u5f0f\u975e\u5e38\u5730\u7b80\u4fbf\uff0c\u800c\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u5219\u529f\u80fd\u5f3a\u5927\u3002\u5927\u591a\u6570\u6570\u636e\u5206\u6790\u5e08\u6216\u6570\u636e\u79d1\u5b66\u5bb6\u5728\u4ee3\u7801\u4e2d\u5f80\u5f80\u540c\u65f6\u4f7f\u7528\u4e24\u8005\uff0c\u56e0\u6b64\u4ee3\u7801\u9605\u8bfb\u65f6\u5bb9\u6613\u4ea7\u751f\u56f0\u60d1\u3002\u672c\u5c0f\u8282\u5bf9\u4e24\u79cd\u7ed8\u56fe\u63a5\u53e3\u8fdb\u884c\u7b80\u8981\u4ecb\u7ecd\uff0c\u5e2e\u52a9\u8bfb\u8005\u7406\u6e05\u5b83\u4eec\u7684\u533a\u522b\u3002 MATLAB \u6837\u5f0f\u63a5\u53e3 \u00b6 MATLAB \u6837\u5f0f\u63a5\u53e3\u7531 plt \u6a21\u5757\u63d0\u4f9b\uff0cplt \u5305\u542b\u4e00\u7cfb\u5217\u7ed8\u56fe\u547d\u4ee4\uff08\u51fd\u6570\uff09\uff0c\u540d\u79f0\u4e0e MATLAB \u57fa\u672c\u4e00\u81f4\u3002\u4e0b\u9762\u5c55\u793a\u4e86\u5982\u4f55\u5229\u7528 plt \u5feb\u901f\u7ed8\u5236\u5305\u542b\u4e24\u4e2a\u5b50\u56fe\u7684\u56fe\u5f62\uff1a In [6]: # \u521b\u5efa\u4e00\u4e2a\u56fe\u5f62 ...: plt.figure() ...: ...: # \u521b\u5efa\u4e24\u4e2a\u5b50\u56fe\u9762\u677f ...: # \u521b\u5efa\u7b2c1\u4e2a\u5b50\u56fe ...: plt.subplot(2, 1, 1) ...: plt.plot(x, np.cos(x)) # \u7ed8\u5236\u56fe\u5f62 ...: ...: # \u521b\u5efa\u7b2c2\u4e2a\u5b50\u56fe ...: plt.subplot(2, 1, 2) ...: plt.plot(x, np.sin(x)) # \u7ed8\u5236\u56fe\u5f62 Out[6]: [<matplotlib.lines.Line2D at 0x7f90d2fbfbe0>] \u8fd9\u91cc\u4f7f\u7528\u4e86 3 \u4e2a\u547d\u4ee4\uff0c\u6bcf\u4e00\u4e2a\u90fd\u975e\u5e38\u7b80\u660e\uff1a figure() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u7a7a\u767d\u56fe\u5f62\u3002 subplot(rows, columns, subplot_number) \u51fd\u6570\u521b\u5efa\u5b50\u56fe\uff0c\u7b2c 1 \u4e2a\u53c2\u6570\u8bbe\u5b9a\u5b50\u56fe\u884c\u6570\uff0c\u7b2c 2 \u4e2a\u53c2\u6570\u8bbe\u5b9a\u5b50\u56fe\u5217\u6570\uff0c\u7b2c 3 \u4e2a\u53c2\u6570\u8bbe\u5b9a\u5b50\u56fe\u5e8f\u53f7\u3002 plot(x, y) \u51fd\u6570\u7ed8\u5236\u56fe\u5f62\uff0c\u7b2c 1 \u4e2a\u53c2\u6570\u4e3a x \u8f74\u63d0\u4f9b\u6570\u636e\uff0c\u7b2c 2 \u4e2a\u53c2\u6570\u4e3a y \u8f74\u63d0\u4f9b\u6570\u636e\u3002 \u5bf9\u4e8e\u7b80\u5355\u7684\u56fe\u5f62\u6765\u8bf4\uff0c\u8fd9\u79cd\u63a5\u53e3\u662f\u6781\u597d\u7684\uff0c\u5b83\u65e2\u5feb\u53c8\u7b80\u5355\u3002\u7136\u800c\uff0c\u5982\u679c\u7ed8\u5236\u7684\u56fe\u5f62\u6bd4\u8f83\u590d\u6742\uff0c\u53ef\u80fd\u5c31\u4e0d\u9002\u5e94\u6216\u8005\u51fa\u95ee\u9898\u4e86\u3002\u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u5728\u64cd\u4f5c\u7b2c 2 \u4e2a\u5b50\u56fe\u7684\u65f6\u5019\uff0c\u60f3\u8981\u5bf9\u5df2\u7ecf\u7ed8\u5236\u7684\u7b2c 1 \u4e2a\u5b50\u56fe\u8fdb\u884c\u589e\u5220\u6539\uff0c\u8be5\u600e\u4e48\u529e\uff1fMATLAB \u6837\u5f0f\u63a5\u53e3\u4e0d\u53ef\u80fd\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u3002\u4e0d\u8fc7\uff0c\u6211\u4eec\u8fd8\u6709\u66f4\u597d\u7684\u529e\u6cd5\u2014\u2014\u9762\u5411\u5bf9\u8c61\u63a5\u53e3\u3002 \u9762\u5411\u5bf9\u8c61\u63a5\u53e3 \u00b6 \u9762\u5411\u5bf9\u8c61\u63a5\u53e3\u53ef\u4ee5\u5e94\u5bf9\u66f4\u4e3a\u590d\u6742\u7684\u7ed8\u56fe\u573a\u666f\uff0c\u5b83\u901a\u8fc7\u56fe\u548c\u5750\u6807\u8f74\u7b49\u56fe\u5f62\u5bf9\u8c61\u65b9\u6cd5\u7684\u8c03\u7528\u6765\u5b9e\u73b0\u5404\u79cd\u7ed8\u56fe\u64cd\u4f5c\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u7528\u9762\u5bf9\u5bf9\u8c61\u63a5\u53e3\u5b9e\u73b0\u521a\u624d\u7684\u56fe\u5f62\u3002 In [7]: # \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u56fe\u5f62\u7f51\u683c ...: fig, ax = plt.subplots(2) ...: ...: # \u5728\u5750\u6807\u8f74\u5bf9\u8c61\u4e0a\u8c03\u7528 plot() \u65b9\u6cd5 ...: ax[0].plot(x, np.cos(x)) ...: ax[1].plot(x, np.sin(x)) Out[7]: [<matplotlib.lines.Line2D at 0x7f90d2d9a160>] \u663e\u793a\u7684\u56fe\u5f62\u4e0e MATLAB \u63a5\u53e3\u5b9e\u73b0\u4e00\u81f4\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e0d\u518d\u5c55\u793a\u3002 \u8fd9\u91cc subplot() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u5176\u4e2d\u7b2c 2 \u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u5305\u542b\u5750\u6807\u8f74\u5bf9\u8c61\u7684\u6570\u7ec4\uff0c\u5728\u5750\u6807\u8f74\u5bf9\u8c61\u4e0a\u8c03\u7528\u65b9\u6cd5\u5373\u53ef\u7ed8\u5236\u3001\u4fee\u6539\u56fe\u5f62\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u4e24\u79cd\u63a5\u53e3\u7ed8\u5236\u56fe\u5f62\u7684\u64cd\u4f5c\u90fd\u6bd4\u8f83\u7b80\u5355\u3002\u5bf9\u4e8e\u7b80\u5355\u7684\u56fe\u5f62\uff0c\u9009\u62e9\u54ea\u4e00\u79cd\u63a5\u53e3\u53d6\u51b3\u4e8e\u8bfb\u8005\u7684\u559c\u597d\u3002\u81f3\u4e8e\u7ed8\u5236\u590d\u6742\u7684\u56fe\u5f62\uff0c\u8fd8\u662f\u9700\u8981\u638c\u63e1\u9762\u5411\u5bf9\u8c61\u7684\u63a5\u53e3\u3002 7.2 \u57fa\u672c\u56fe\u5f62\u7ed8\u5236 \u00b6 \u4e0a\u4e00\u8282\u672c\u4e66\u5411\u8bfb\u8005\u4ecb\u7ecd\u4e86 Matplotlib \u7684\u7ed8\u56fe\u573a\u666f\u4ee5\u53ca\u7ed8\u56fe\u63a5\u53e3\uff0c\u8fd9\u4e00\u8282\u6211\u4eec\u63a5\u7740\u5b66\u4e60\u5e38\u89c1\u56fe\u5f62\u7684\u7ed8\u5236\uff0c\u5305\u62ec\u7ebf\u56fe\u3001\u6563\u70b9\u56fe\u3001\u76f4\u65b9\u56fe\u3001\u997c\u56fe\u7b49\u3002\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u5f62\u6709\u5f88\u591a\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5728\u7ebf\u56fe\u4e00\u5c0f\u8282\u4e2d\u672c\u4e66\u4f1a\u8be6\u7ec6\u5730\u8fdb\u884c\u4ecb\u7ecd\uff0c\u4ee5\u4fbf\u4e8e\u8bfb\u8005\u5728\u5176\u4ed6\u7c7b\u578b\u56fe\u5f62\u7ed8\u5236\u7684\u5b66\u4e60\u4e2d\u80fd\u591f\u5feb\u901f\u7406\u89e3\u3001\u638c\u63e1\u548c\u5e94\u7528\u3002 7.2.1 \u7ebf\u56fe \u00b6 \u7ebf\u56fe\u5e38\u5e38\u7528\u6765\u8868\u793a\u67d0\u4e2a\u53d8\u91cf\u968f\u53e6\u4e00\u4e2a\u53d8\u91cf\u53d8\u5316\u7684\u8d8b\u52bf\uff0c\u5982\u91d1\u878d\u9886\u57df\u4e2d\u7684\u7ecf\u6d4e\u8d70\u52bf\u56fe\u3001\u533b\u9662\u4e2d\u7684\u5fc3\u7535\u56fe\u3002 pyplot \u6a21\u5757\u63d0\u4f9b\u7684 plot() \u51fd\u6570\u53ef\u4ee5\u8f7b\u677e\u5730\u7ed8\u5236\u7ebf\u56fe\uff0c\u8be5\u51fd\u6570\u9700\u8981\u8bfb\u8005\u63d0\u4f9b y \u8f74\u7684\u6570\u636e\u6216\u8005\u540c\u65f6\u63d0\u4f9b x \u8f74\u548c y \u8f74\u7684\u6570\u636e\u3002\u5982\u679c\u53ea\u63d0\u4f9b y \u8f74\u7684\u6570\u636e\uff0c\u90a3\u4e48\u51fd\u6570\u4f1a\u81ea\u52a8\u5c06 x \u8f74\u6570\u636e\u8bbe\u4e3a\u540c\u7b49\u957f\u5ea6\u7684\u6574\u6570\u5e8f\u5217\uff0c\u4ece 0 \u5f00\u59cb\u3002 \u4e0b\u9762\u4ee3\u7801\u7ed3\u679c\u663e\u793a\u65e0\u8bba\u662f\u4f7f\u7528 Python \u5185\u7f6e\u7684\u51fd\u6570 range() \u6216\u8005\u4f7f\u7528 numpy \u6a21\u5757\u63d0\u4f9b\u7684 arange() \u51fd\u6570\u751f\u6210\u5e8f\u5217 1 \u5230 10\uff0c\u7ed8\u5236\u7684\u56fe\u5f62\u5b8c\u5168\u4e00\u81f4\uff0c\u5982\u56fe7-4\u3001\u56fe7-5\u3002\u53ef\u89c1\u6211\u4eec\u4f7f\u7528 Matplotlib \u7ed8\u56fe\u7684\u91cd\u70b9\u662f\u51c6\u5907\u6570\u636e\uff0c\u5b83\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u5904\u7406\u597d\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002 In [8]: import numpy as np ...: import matplotlib.pyplot as plt ...: ...: plt.plot(range(1, 11)) Out[8]: [<matplotlib.lines.Line2D at 0x7f90d2d20c50>] In [9]: plt.plot(np.arange(1,11)) Out[9]: [<matplotlib.lines.Line2D at 0x7f90d2b2d160>] \u6211\u4eec\u518d\u6765\u770b\u770b\u9762\u5411\u5bf9\u8c61\u63a5\u53e3\u7684\u4f7f\u7528\u3002 In [10]: fig = plt.figure() ...: ax = plt.axes() In [11]: type(fig) Out[11]: matplotlib.figure.Figure In [12]: type(ax) Out[12]: matplotlib.axes._subplots.AxesSubplot \u4e0a\u9762\u4ee3\u7801\u5148\u4f7f\u7528 figure() \u51fd\u6570\u521b\u5efa\u4e86\u4e00\u4e2a Figure \u5bf9\u8c61\uff0cFigure \u5bf9\u8c61\u53ef\u4ee5\u770b\u505a\u5305\u542b\u4e00\u5207\u56fe\u5f62\u5143\u7d20\u7684\u5bb9\u5668\uff0c\u5982\u5750\u6807\u8f74\u3001\u6587\u5b57\u3001\u6807\u7b7e\u3002axes() \u7136\u540e\u521b\u5efa\u4e86\u4e00\u4e2a Axes\uff08\u5750\u6807\u8f74\uff09\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4e0a\u9762\u770b\u5230\u7684\u4e00\u4e2a\u5305\u542b\u523b\u5ea6\u548c\u6807\u7b7e\u7684\u7bb1\u5b50\uff0c\u5982\u56fe7-6\u3002 \u901a\u5e38\u5728\u4f7f\u7528 Matplotlib \u7ed8\u56fe\u65f6\uff0c\u6211\u4eec\u90fd\u4f7f\u7528 fig \u6307\u5411\u4e00\u4e2a Figure \u5bf9\u8c61\uff0cax \u6307\u5411\u4e00\u4e2a\u5750\u6807\u8f74\u5bf9\u8c61\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u5750\u6807\u8f74\uff0c\u6240\u9700\u8981\u505a\u7684\u662f\u5f80\u4e0a\u6dfb\u52a0\u6570\u636e\u3002 \u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 linspace() \u51fd\u6570\u4f46\u6ca1\u6709\u8fdb\u884c\u89e3\u91ca\uff0c\u8be5\u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u7b49\u957f\u7684\u6570\u636e\u5e8f\u5217\u3002\u4f8b\u5982\uff0clinspace(0, 5, 20) \u5c31\u4f1a\u5c06 0 \u5230 5 \u5206\u5272\u4e3a 20 \u4efd\u3002 In [13]: fig = plt.figure() ...: ax = plt.axes() ...: ...: x = np.linspace(0, 5, 20) ...: ax.plot(x, np.cos(x)) Out[13]: [<matplotlib.lines.Line2D at 0x7f90d2fa3fd0>] \u5f53\u6211\u4eec\u9700\u8981\u5728\u4e00\u4e2a\u56fe\u4e2d\u7ed8\u5236\u591a\u6761\u66f2\u7ebf\u65f6\uff0c\u6700\u7b80\u5355\u7684\u529e\u6cd5\u5c31\u662f\u591a\u6b21\u8c03\u7528 plot() \u51fd\u6570\u3002 In [14]: plt.plot(x, np.sin(x)) ...: plt.plot(x, np.cos(x)) Out[14]: [<matplotlib.lines.Line2D at 0x7f90d2a58eb8>] \u4e0a\u9762 Matplotlib \u4e3a\u66f2\u7ebf\u81ea\u52a8\u8bbe\u7f6e\u4e86\u989c\u8272\u548c\u7c7b\u578b\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u65f6\u6211\u4eec\u5e38\u9700\u8981\u81ea\u5b9a\u4e49\uff0c\u5b83\u4eec\u5206\u522b\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570 color \u548c linestype \u8fdb\u884c\u8bbe\u5b9a\u3002 color \u53c2\u6570\u63a5\u6536\u4e00\u4e2a\u4ee3\u8868\u4efb\u4f55\u989c\u8272\u7684\u5b57\u7b26\u4e32\uff0c\u652f\u6301\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u989c\u8272\u7f16\u7801\uff0c\u5982\u540d\u5b57\u3001\u989c\u8272\u4ee3\u7801\u3001\u5341\u516d\u8fdb\u5236\u3001RGB \u7b49\u3002 In [16]: plt.plot(x, 2*x, color = \"red\") # \u6309\u540d\u5b57\u6307\u5b9a\u989c\u8272 ...: plt.plot(x, 2*x+1, color = \"g\") # \u77ed\u989c\u8272\u7f16\u7801\uff08rgbcmyk\uff09 ...: ...: plt.plot(x, 2*x+2, color = \"0.6\") # \u7070\u5ea6\uff0c\u8303\u56f4\u57280-1\u4e4b\u95f4 ...: plt.plot(x, 2*x+3, color = \"#FFEE22\") # \u5341\u516d\u8fdb\u5236\u7f16\u7801 ...: plt.plot(x, 2*x+4, color = (0.8, 0.7, 0.1)) # RGB\u5143\u7ec4\uff0c\u503c\u4ece0\u52301 ...: plt.plot(x, 2*x+5, color = \"chartreuse\") # \u652f\u6301\u6240\u6709\u7684HTML\u989c\u8272\u540d ...: \u5b57 Out[16]: [<matplotlib.lines.Line2D at 0x7f90b3832630>] \u901a\u8fc7\u8bbe\u5b9a linestype \u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5c55\u793a\u975e\u5e38\u4e30\u5bcc\u7684\u7ebf\u6761\u7c7b\u578b\uff0c\u5305\u62ec\u865a\u7ebf\u3001\u5b9e\u73b0\u3001\u70b9\u5212\u7ebf\u3002 In [17]: plt.plot(x, 2*x, linestyle = 'solid') # \u5b9e\u7ebf ...: plt.plot(x, 2*x+1, linestyle = 'dashed') # \u865a\u7ebf ...: plt.plot(x, 2*x+2, linestyle = 'dashdot') # \u70b9\u5212\u7ebf ...: plt.plot(x, 2*x+3, linestyle = 'dotted') # \u5c0f\u5706\u70b9 Out[17]: [<matplotlib.lines.Line2D at 0x7f903f3b1cf8>] \u4e3a\u4e86\u7b80\u4fbf\uff0c\u8bfb\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u76f8\u5e94\u7684\u5b57\u7b26\u4ee3\u7801\u3002 In [18]: plt.plot(x, 2*x, linestyle = '-') # \u5b9e\u7ebf ...: plt.plot(x, 2*x+1, linestyle = '--') # \u865a\u7ebf ...: plt.plot(x, 2*x+2, linestyle = '-.') # \u70b9\u5212\u7ebf ...: plt.plot(x, 2*x+3, linestyle = ':') # \u5c0f\u5706\u70b9 Out[18]: [<matplotlib.lines.Line2D at 0x7f903f396fd0>] \u7ebf\u6761\u7c7b\u578b\u548c\u989c\u8272\u5f80\u5f80\u7ec4\u5408\u4f7f\u7528\uff0c\u4e3a\u4e86\u7b80\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u540c\u65f6\u5305\u542b\u7ebf\u6761\u7c7b\u578b\u4ee3\u7801\u548c\u989c\u8272\u4ee3\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4f5c\u4e3a\u975e\u5173\u952e\u5b57\u53c2\u6570\u4f20\u5165 plot() \u51fd\u6570\u3002 In [19]: plt.plot(x, 2*x, '--c') # \u9752\u8272\u7684\u865a\u7ebf ...: plt.plot(x, 2*x+2, '-.k') # \u9ed1\u8272\u7684\u70b9\u5212\u7ebf Out[19]: [<matplotlib.lines.Line2D at 0x7f903f3779b0>] \u4e86\u89e3\u4e86\u5982\u4f55\u4e3a\u7ebf\u56fe\u8bbe\u5b9a\u989c\u8272\u548c\u7ebf\u6761\u7c7b\u578b\u540e\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u7cfb\u7edf\u5730\u770b\u4e00\u4e0b plot() \u51fd\u6570\u5e38\u89c1\u7684\u53c2\u6570\u5217\u8868\u3002 plot(x, y, linestyle, linewidth, color, marker, markersize, markeredgecolor, label, alpha) \u4e0b\u9762\u662f\u5177\u4f53\u7684\u8bf4\u660e\uff1a x - \u7ebf\u56fex\u8f74\u6570\u636e y - \u7ebf\u56fey\u8f74\u6570\u636e linestyle - \u7ebf\u6761\u7c7b\u578b linewidth - \u7ebf\u6761\u5bbd\u5ea6 color - \u989c\u8272 marker - \u53ef\u4ee5\u4e3a\u7ebf\u56fe\u6dfb\u52a0\u6563\u70b9\uff0c\u8be5\u53c2\u6570\u6307\u5b9a\u70b9\u7684\u5f62\u72b6 markersize - \u6307\u5b9a\u70b9\u7684\u5927\u5c0f markeredgecolor - \u6307\u5b9a\u70b9\u7684\u8fb9\u6846\u8272 label - \u56fe\u4f8b\u6807\u7b7e \u867d\u7136 plot() \u51fd\u6570\u63d0\u4f9b\u4e86\u56fe\u4f8b\u6807\u7b7e\u4fe1\u606f\uff0c\u4f46\u9700\u8981\u914d\u5408 legend() \u51fd\u6570\u624d\u80fd\u663e\u793a\u3002 In [20]: x = np.linspace(0, 20, 100) ...: plt.plot(x, 2*x, '--c', label = 'dashed cyan') ...: plt.plot(x, 2*x+6, '-.k', label = 'dashdot black') ...: ...: plt.legend() Out[20]: <matplotlib.legend.Legend at 0x7f903de46c18> plot() \u51fd\u6570\u5176\u4ed6\u51e0\u4e2a\u9009\u9879\u4e3b\u8981\u7528\u4e8e\u81ea\u5b9a\u4e49\u7ebf\u6761\u548c\u63cf\u8ff0\u6570\u636e\u70b9\u3002\u7ebf\u56fe\u4e2d\u7ebf\u6761\u63cf\u8ff0\u4e86\u8fde\u7eed\u7684\u53d8\u5316\uff0c\u4f46\u5b9e\u9645\u89c2\u6d4b\u7684\u6570\u636e\u503c\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\u5728\u4e00\u4e9b\u5206\u6790\u4e2d\uff0c\u540c\u65f6\u89c2\u6d4b\u7ebf\u6761\u548c\u70b9\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u793a\u4f8b\u5c06 plot() \u51fd\u6570\u6d89\u53ca\u7684\u5e38\u89c1\u9009\u9879\u90fd\u8fdb\u884c\u81ea\u5b9a\u4e49\u8bbe\u5b9a\u3002 In [21]: x = range(0, 20) ...: y = np.cos(x) ...: ...: plt.plot(x, y, linestyle = '-.', ...: linewidth = 2, color = 'blue', marker = 'o', ...: markersize = 12, markeredgecolor = 'red', ...: label = 'Example Plot', alpha = 0.8) ...: plt.legend() Out[21]: <matplotlib.legend.Legend at 0x7f903de12d68> \u4e86\u89e3\u4e86\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u7f8e\u89c2\u7684\u5e26\u70b9\u7ebf\u56fe\u540e\uff0c\u8bfb\u8005\u53ea\u8981\u5bf9\u76f8\u5e94\u7684\u9009\u9879\u7565\u52a0\u66f4\u6539\u5c31\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u559c\u6b22\u7684\u7ebf\u56fe\u3002\u7ebf\u6761\u4e0e\u70b9\u7684\u7c7b\u578b\u3001\u989c\u8272\u4e0e\u5927\u5c0f\u7684\u9009\u62e9\u5728\u5b9e\u9645\u5e94\u7528\u65f6\u90fd\u9700\u8981\u82b1\u8d39\u65f6\u95f4\u8fdb\u884c\u63a2\u7d22\u3002 \u56fe\u5f62\u7684\u4f5c\u7528\u9664\u4e86\u663e\u793a\u6570\u636e\u7684\u53d8\u5316\u8d8b\u52bf\u6216\u6a21\u5f0f\uff0c\u8fd8\u5e38\u7528\u4e8e\u6bd4\u8f83\u3002\u4e0b\u9762\u4ee3\u7801\u65b0\u589e\u4e86\u4e00\u6761\u7ea2\u8272\u7684\u66f2\u7ebf\uff0c\u4e24\u8005\u7684\u5dee\u5f02\u4e00\u76ee\u4e86\u7136\u3002 In [22]: x = range(0, 20) ...: y = np.cos(x) ...: y2 = np.sin(x) - 0.5 ...: ...: plt.plot(x, y, linestyle = '-.', ...: linewidth = 2, color = 'blue', marker = 'o', ...: markersize = 12, markeredgecolor = 'red', ...: label = 'Blue line', alpha = 0.8) ...: plt.plot(x, y2, linestyle = '--', ...: linewidth = 2, color = 'red', marker = 'x', ...: markersize = 6, markeredgecolor = 'red', ...: label = 'Red line') ...: plt.legend() Out[22]: <matplotlib.legend.Legend at 0x7f903e7b7c18> \u56fe\u867d\u7136\u73b0\u5728\u5df2\u7ecf\u7ed8\u5236\u597d\u4e86\uff0c\u4f46\u7f3a\u4e4f\u4e00\u4e9b\u5fc5\u8981\u7684\u8bf4\u660e\uff1a\u5750\u6807\u8f74\u6807\u7b7e\u4ee5\u53ca\u56fe\u6807\u9898\u3002 \u5b9e\u73b0\u8fd9\u4e9b\u9700\u6c42\u975e\u5e38\u7b80\u5355\uff0cx \u4e0e y \u8f74\u6807\u7b7e\u53ef\u4ee5\u5206\u522b\u901a\u8fc7 xlabel() \u548c ylabel() \u51fd\u6570\u6dfb\u52a0\uff0c\u800c\u56fe\u6807\u9898\u53ef\u4ee5\u4f7f\u7528 title() \u6dfb\u52a0\u3002 \u4e3a\u65b9\u4fbf\u6f14\u793a\uff0c\u4e0b\u9762\u4ee3\u7801\u7ed8\u5236\u4e00\u6761\u7b80\u5355\u7684\u4f59\u5f26\u66f2\u7ebf\uff0c\u5e76\u6dfb\u52a0\u8f74\u6807\u7b7e\u548c\u6807\u9898\u3002 In [23]: x = np.linspace(0, 200, 100) ...: plt.plot(x, np.cos(x)) ...: plt.xlabel('Time (s)') ...: plt.ylabel('Cos(x)') ...: plt.title('A simple cosine curve') Out[23]: Text(0.5,1,'A simple cosine curve') \u4e0a\u9762\u6240\u6709\u7ed8\u5236\u7684\u56fe\u5f62\u90fd\u663e\u793a\u4e86\u6240\u6709\u7684\u6570\u636e\u533a\u57df\uff0c\u6709\u65f6\u5019\u6211\u4eec\u60f3\u8981\u628a\u7126\u70b9\u653e\u5230\u67d0\u4e00\u4e2a\u533a\u57df\uff0c\u8fd9\u65f6\u9700\u8981\u5bf9\u8f74\u7684\u8303\u56f4\u8fdb\u884c\u9650\u5236\uff0c\u9488\u5bf9 x \u8f74\u548c y \u8f74\u7684\u8303\u56f4\u7684\u9650\u5236 Matplotlib \u63d0\u4f9b\u4e86 xlim() \u548c ylim() \u5b9e\u73b0\u3002 \u73b0\u5728\u6211\u4eec\u5c06 x \u8f74\u8303\u56f4\u9650\u5b9a\u5728 50 \u5230 150\uff0cy\u8f74\u8303\u56f4\u9650\u5b9a\u5728 -0.5 \u5230 0.5\u3002 In [24]: plt.plot(x, np.cos(x)) ...: plt.xlim(50, 150) ...: plt.ylim(-0.5, 0.5) Out[24]: (-0.5, 0.5) \u5982\u679c\u6211\u4eec\u5c06\u4e0a\u9762\u8bbe\u5b9a\u7684\u53c2\u6570\u503c\u53cd\u8fc7\u6765\uff0c\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u5750\u6807\u8f74\u7684\u53cd\u8f6c\u3002 In [25]: plt.plot(x, np.cos(x)) ...: plt.xlim(150, 50) ...: plt.ylim(0.5, -0.5) Out[25]: (0.5, -0.5) \u9664\u4e86\u4f7f\u7528 xlim() \u548c ylim() \u51fd\u6570\u5206\u522b\u8bbe\u7f6e x \u8f74\u548c y \u8f74\u7684\u8303\u56f4\uff0cMatplotlib \u8fd8\u63d0\u4f9b\u4e86\u51fd\u6570 axis() \u5bf9\u5b83\u4eec\u540c\u65f6\u8fdb\u884c\u8bbe\u5b9a\uff0c\u8be5\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u5f62\u5982 [xmin, xmax, ymin, ymax] \u7684\u5217\u8868\u4f5c\u4e3a\u53c2\u6570\u3002 In [26]: plt.plot(x, np.cos(x)) ...: plt.axis([25, 150, -1, 0]) ...: plt.xlabel('Time (s)') ...: plt.ylabel('Cos(x)') ...: plt.title('A cosine curve with limited x and y') Out[26]: Text(0.5,1,'A cosine curve with limited x and y') \u6709\u610f\u601d\u7684\u662f\uff0caxis() \u51fd\u6570\u9664\u4e86\u652f\u6301\u6570\u503c\u5217\u8868\u4f5c\u4e3a\u8f93\u5165\uff0c\u8fd8\u652f\u6301\u5b57\u7b26\u9009\u9879\uff0cMatplotlib \u4f1a\u6839\u636e\u8f93\u5165\u7684\u5b57\u7b26\u9009\u9879\u81ea\u52a8\u5730\u5bf9\u8f74\u8fdb\u884c\u8c03\u6574\uff0c\u8fd9\u5bf9\u7528\u6237\u5b9e\u5728\u592a\u53cb\u597d\u4e0d\u8fc7\u4e86\u3002 axis() \u51fd\u6570\u5e38\u89c1\u652f\u6301\u7684\u9009\u9879\u6709\uff1a axis(\u2018off\u2019) - \u5173\u95ed\u8f74\u7ebf\u548c\u6807\u7b7e axis(\u2018equal\u2019) - \u4f7fx\u8f74\u4e0ey\u8f74\u4fdd\u6301\u4e0e\u5c4f\u5e55\u4e00\u81f4\u7684\u9ad8\u5bbd\u6bd4\uff08\u6a2a\u7eb5\u6bd4\uff09 axis(\u2018tight\u2019) - \u4f7fx\u4e0ey\u8f74\u9650\u5236\u5728\u6709\u6570\u636e\u7684\u533a\u57df axis(\u2018square\u2019) - \u4f7fx\u4e0ey\u8f74\u5750\u6807\u4e00\u81f4 \u4e0b\u9762\u901a\u8fc7\u4e00\u4e9b\u56fe\u6765\u8ba4\u8bc6\u8fd9\u4e9b\u9009\u9879\u7684\u5b9e\u9645\u6548\u679c\uff0c\u5176\u4ed6 axis() \u652f\u6301\u7684\u9009\u9879\u8bf7\u901a\u8fc7 plt.axis? \u8bbf\u95ee\u51fd\u6570\u6587\u6863\u3002 In [27]: plt.plot(x, np.cos(x)) ...: plt.axis('off') Out[27]: (-10.0, 210.0, -1.0999621189366728, 1.0999981961398415) In [28]: plt.plot(x, np.cos(x)) ...: plt.axis('square') Out[28]: (-10.0, 210.0, -1.0999621189366728, 218.90003788106333) In [29]: plt.plot(x, np.cos(x)) ...: plt.axis('equal') Out[29]: (-10.0, 210.0, -1.0999621189366728, 1.0999981961398415) In [30]: plt.plot(x, np.cos(x)) ...: plt.axis('tight') Out[30]: (-10.0, 210.0, -1.0999621189366728, 1.0999981961398415) \u8fd9\u4e00\u5c0f\u8282\u672c\u4e66\u4ee5\u7ebf\u56fe\u4e3a\u5bf9\u8c61\u5411\u8bfb\u8005\u8be6\u7ec6\u5730\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 Matplotlib \u7ed8\u5236\u7ebf\u56fe\u8fd9\u4e00\u5e38\u89c1\u7684\u56fe\u5f62\u4ee5\u53ca\u5982\u4f55\u6dfb\u52a0\u6807\u7b7e\u3001\u6807\u9898\u3001\u8f74\u8303\u56f4\u9650\u5b9a\u7b49\u7b49\u81ea\u5b9a\u81ea\u5b9a\u4e49\u64cd\u4f5c\u3002\u6709\u4e86\u7ebf\u56fe\u4f5c\u4e3a\u5b66\u4e60\u7684\u57fa\u7840\uff0c\u672c\u4e66\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u5c0f\u8282\u5c06\u4e0d\u518d\u5bf9\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\u8fdb\u884c\u8d58\u8ff0\uff0c\u53ea\u5bf9\u57fa\u7840\u56fe\u5f62\u7684\u7ed8\u56fe\u51fd\u6570\u8fdb\u884c\u5fc5\u8981\u7684\u4ecb\u7ecd\u3002 7.2.2 \u6563\u70b9\u56fe \u00b6 \u6563\u70b9\u56fe\u5728\u89c2\u5bdf\u6570\u636e\u91cf\u4ee5\u53ca\u6570\u636e\u7684\u5206\u5e03\u65f6\u975e\u5e38\u6709\u7528\u3002Matplotlib \u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u7ed8\u5236\u70b9\u56fe\uff1a\u4e00\u79cd\u662f\u6211\u4eec\u4e0a\u4e00\u5c0f\u8282\u5b66\u4e60\u7684 plot() \u51fd\u6570\uff0c\u53e6\u4e00\u79cd\u662f\u8fd9\u4e00\u5c0f\u8282\u5c06\u8981\u4ecb\u7ecd\u7684 scatter() \u51fd\u6570\u3002 \u5bf9\u4e8e\u7b80\u5355\u7684\u56fe\u5f62\uff0c\u8bfb\u8005\u9009\u62e9\u4f7f\u7528\u4e24\u79cd\u65b9\u5f0f\u7684\u54ea\u4e00\u79cd\u53d6\u51b3\u4e8e\u81ea\u5df1\u7684\u4e60\u60ef\u3002plot() \u51fd\u6570\u6bd4\u8f83\u7b80\u5355\uff0c\u800c scatter() \u5219\u63d0\u4f9b\u4e86\u66f4\u591a\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u7279\u6027\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u540e\u8005\u5728\u5b9e\u73b0\u4e0a\u4f1a\u9700\u8981\u66f4\u591a\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u56e0\u6b64\u5bf9\u4e8e\u5927\u578b\u7684\u6570\u636e\u96c6\uff0cplot() \u53ef\u80fd\u66f4\u4e3a\u5b9e\u7528\u3002 \u6211\u4eec\u5148\u901a\u8fc7\u4e24\u4e2a\u7b80\u5355\u7684\u70b9\u56fe\u6765\u4e86\u89e3\u4e24\u79cd\u65b9\u5f0f\u4f7f\u7528\u4e0a\u7684\u4e0d\u540c\u3002plot() \u51fd\u6570\u9ed8\u8ba4\u7ed8\u5236\u7684\u662f\u7ebf\u56fe\uff0c\u4e3a\u4e86\u663e\u793a\u70b9\u56fe\uff0c\u6211\u4eec\u9700\u8981\u4f20\u5165\u975e\u5173\u952e\u5b57\u53c2\u6570 \u201co\u201d \u8868\u793a\u70b9\uff0c\u800c scatter() \u51fd\u6570\u4e0d\u9700\u8981\u8fd9\u6837\u7684\u8bbe\u5b9a\u3002 In [31]: import numpy as np ...: import matplotlib.pyplot as plt ...: ...: x = range(1, 11) ...: plt.plot(x, x, \"o\", color = \"red\") # \u8bbe\u5b9a\u4e3a\u7ea2\u8272\u7684\u70b9 Out[31]: [<matplotlib.lines.Line2D at 0x7f903a168048>] scatter() \u51fd\u6570\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570 marker \u53ef\u4ee5\u8bbe\u5b9a\u70b9\u7684\u7c7b\u578b\uff0c\u9ed8\u8ba4\u662f\u7528 \u201co\u201d \u8868\u793a\u7684\u5c0f\u5706\u70b9\u3002 In [32]: x = range(1, 11) ...: plt.scatter(x, x) Out[32]: <matplotlib.collections.PathCollection at 0x7f903f04c668> In [33]: plt.scatter(x, x, marker = 'o') # \u4e0e\u4e0a\u9762\u4ee3\u7801\u8f93\u51fa\u56fe\u5f62\u4e00\u81f4 Python \u652f\u6301\u5f88\u591a\u79cd\u70b9\u7c7b\u578b\uff0c\u5982\u5706\u70b9\u3001\u65b9\u5757\u3001\u4e09\u89d2\u5f62\u3002\u4e3a\u4e86\u65b9\u4fbf\u5c55\u793a\u70b9\u7684\u7b26\u53f7\u4e0e\u5bf9\u5e94\u7684\u7c7b\u578b\uff0c\u4e0b\u9762\u751f\u6210\u4e00\u5806\u968f\u673a\u7684\u6570\u636e\u70b9\u5e76\u8c03\u7528 for \u5faa\u73af\u6839\u636e\u4e0d\u540c\u7684\u70b9\u7c7b\u578b\u7ed8\u5236\u56fe\u5f62\uff0c\u5e76\u7528\u56fe\u4f8b\u76f4\u89c2\u5c55\u793a\u7b26\u53f7\u4e0e\u70b9\u7c7b\u578b\u7684\u5bf9\u5e94\u5173\u7cfb\u3002 In [34]: # \u521b\u5efa\u4e00\u4e2a\u9694\u79bb\u7684\u968f\u673a\u6570\u751f\u6210\u5668 ...: rng = np.random.RandomState(123456) ...: ...: # \u5faa\u73af\u7ed8\u5236\u70b9\u56fe ...: for marker in ['o', '.', ',', 'x', '+', 'v', '^', '<', '>', 's', 'd ...: ']: ...: plt.scatter(list(rng.rand(5)), list(rng.rand(5)), marker = mark ...: er, ...: label=\"marker='{0}'\".format(marker)) ...: ...: # \u663e\u793a\u56fe\u4f8b ...: plt.legend(numpoints=1) ...: plt.xlim(0, 2) # \u907f\u514d\u56fe\u4f8b\u4e0e\u70b9\u91cd\u53e0 Out[34]: (0, 2) \u5982\u679c\u6570\u636e\u70b9\u592a\u591a\uff0c\u70b9\u548c\u70b9\u4f1a\u91cd\u53e0\u5230\u4e00\u8d77\uff0c\u8fd9\u6837\u56fe\u5f62\u53ef\u80fd\u4f1a\u4e0d\u7f8e\u89c2\u5e76\u4e14\u4f1a\u963b\u788d\u8bfb\u8005\u5bf9\u4e8e\u6570\u636e\u91cf\u7684\u5224\u65ad\uff08\u5982\u56fe7-26\uff09\u3002\u6bd4\u8f83\u597d\u7684\u89e3\u51b3\u529e\u6cd5\u662f\u4e3a\u70b9\u8bbe\u7f6e\u4e00\u5b9a\u7684\u900f\u660e\u5ea6\uff08\u5982\u56fe7-27\uff09\u3002 In [35]: rng = np.random.RandomState(12) ...: x = rng.randn(200) ...: y = rng.randn(200) ...: ...: _ = plt.scatter(x, y) In [36]: plt.scatter(x, y, alpha=0.5) # \u4e3a\u6570\u636e\u70b9\u8bbe\u7f6e\u900f\u660e\u5ea6 Out[36]: <matplotlib.collections.PathCollection at 0x7f903ec65b00> \u53e6\u5916\uff0c\u70b9\u7684\u5927\u5c0f\u548c\u989c\u8272\u5e38\u5e38\u7528\u6765\u8868\u793a\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u5b83\u4eec\u5206\u522b\u53ef\u4ee5\u901a\u8fc7\u5173\u952e\u5b57\u53c2\u6570 s \u548c c \u8fdb\u884c\u8bbe\u7f6e\u3002 In [37]: colors = rng.rand(200) ...: sizes = 1000 * rng.rand(200) ...: ...: plt.scatter(x, y, c=colors, s=sizes, alpha=0.3) Out[37]: <matplotlib.collections.PathCollection at 0x7f903e90cb70> \u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u989c\u8272\u6761\u52a0\u4e0a\uff0c\u4ee5\u663e\u793a\u989c\u8272\u4ee3\u8868\u7684\u6570\u503c\u4fe1\u606f\u3002 In [38]: plt.scatter(x, y, c=colors, s=sizes, alpha=0.3) ...: plt.colorbar() Out[38]: <matplotlib.colorbar.Colorbar at 0x7f903e89a438> 7.2.3 \u6761\u5f62\u56fe \u00b6 \u6761\u5f62\u56fe\u4e5f\u662f\u4e00\u79cd\u5e38\u7528\u7684\u56fe\u5f62\uff0c\u5e38\u89c1\u4e8e\u5404\u79cd PPT \u7684\u5c55\u793a\u4e2d\uff0c\u4e3a\u5404\u79cd\u804c\u4e1a\u4eba\u58eb\u6240\u559c\u7231\u3002\u5bf9\u4e8e\u5404\u79cd\u573a\u666f\u4e0b\u6570\u503c\u7684\u6bd4\u8f83\uff0c\u5b83\u975e\u5e38\u7b80\u5355\u76f4\u89c2\u3002Matplotlib \u63d0\u4f9b\u4e86 bar() \u51fd\u6570\u7ed8\u5236\u6761\u5f62\u56fe\uff0c\u672c\u5c0f\u8282\u901a\u8fc7\u51e0\u4e2a\u4f8b\u5b50\u5411\u8bfb\u8005\u4ecb\u7ecd\u5982\u4f55\u7ed8\u5236\u5782\u76f4\u6761\u5f62\u56fe\u3001\u6c34\u5e73\u6761\u5f62\u56fe\u3001\u5206\u7ec4\u6761\u5f62\u56fe\u4ee5\u53ca\u5806\u53e0\u6761\u5f62\u56fe\u3002 \u5782\u76f4\u6761\u5f62\u56fe \u00b6 \u73b0\u5728\u5047\u8bbe\u67d0\u9500\u552e\u516c\u53f8\u9700\u8981\u5728 PPT \u4e2d\u5c55\u793a\u51e0\u4f4d\u5458\u5de5\u7684\u5e74\u5ea6\u9500\u552e\u4e1a\u7ee9\uff0c\u6761\u5f62\u56fe\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u53ea\u7ed8\u5236\u5c0f\u7ea2\u3001\u5c0f\u738b\u3001\u5c0f\u674e\u3001\u5c0f\u5f20\u56db\u4f4d\u5458\u5de5\u7684\u4e1a\u7ee9\uff0c\u5b83\u4eec\u5206\u522b\u662f 400 \u4e07\u3001300 \u4e07\u3001250 \u4e07\u4ee5\u53ca 375 \u4e07\u3002 \u4e0b\u9762\u6211\u4eec\u4f1a\u5728\u56fe\u4e2d\u6807\u6ce8\u4e00\u4e9b\u4e2d\u6587\u4fe1\u606f\uff0c\u800c Matplotlib \u672c\u8eab\u5bf9\u4e2d\u6587\u7684\u652f\u6301\u5e76\u4e0d\u662f\u5f88\u4f18\u5316\uff0c\u5728\u7ed8\u56fe\u4e4b\u524d\uff0c\u8bf7\u4f7f\u7528\u4e0b\u9762\u4ee3\u7801\u8fdb\u884c\u8bbe\u7f6e\u3002 In [39]: import numpy as np ...: import matplotlib.pyplot as plt ...: ...: plt.rcParams['font.sans-serif']=['SimHei'] # \u7528\u6765\u6b63\u5e38\u663e\u793a\u4e2d\u6587\u6807\u7b7e ...: plt.rcParams['axes.unicode_minus']=False # \u7528\u6765\u6b63\u5e38\u663e\u793a\u8d1f\u53f7 \u63a5\u4e0b\u6765\u6211\u4eec\u751f\u6210\u6570\u636e\u5e76\u7ed8\u5236\u6761\u5f62\u56fe\u3002 In [40]: member = [u'\u5c0f\u7ea2', u'\u5c0f\u738b', u'\u5c0f\u674e', u'\u5c0f\u5f20'] ...: sales = [400, 300, 250, 375] ...: ...: # \u7ed8\u56fe ...: plt.bar(range(4), sales, align = 'center',color='steelblue', alpha ...: = 0.7) ...: # \u6dfb\u52a0y\u8f74\u6807\u7b7e ...: plt.ylabel(u'\u5e74\u5ea6\u9500\u552e\u989d\uff08\u4e07\uff09') ...: # \u6dfb\u52a0\u6807\u9898 ...: plt.title(u'\u5458\u5de5\u5e74\u5ea6\u9500\u552e\u989d\u5bf9\u6bd4') ...: # \u6dfb\u52a0\u523b\u5ea6\u6807\u7b7e ...: plt.xticks(range(4), member) ...: # \u8bbe\u7f6eY\u8f74\u7684\u523b\u5ea6\u8303\u56f4 ...: plt.ylim([200,500]) ...: ...: # \u5728\u6ca1\u6709\u6761\u5f62\u56fe\u4e0a\u65b9\u6dfb\u52a0\u6570\u503c\u6807\u7b7e ...: for x,y in enumerate(sales): ...: plt.text(x,y+10,'%s' %round(y,1),ha='center') \u521b\u5efa\u6761\u5f62\u56fe\u4e0e\u521b\u5efa\u70b9\u56fe\u6216\u7ebf\u56fe\u6ca1\u4ec0\u4e48\u5dee\u522b\uff0c\u6211\u4eec\u90fd\u662f\u7ed9\u51fd\u6570\u63d0\u4f9b x \u8f74\u4e0e y \u8f74\u6570\u636e\uff0c\u4e0d\u8fc7\u4e0d\u540c\u7684\u56fe\u5f62\u6709\u7740\u4e0d\u540c\u7684\u6570\u636e\u5c55\u793a\u65b9\u5f0f\u548c\u81ea\u5b9a\u4e49\u9009\u9879\u3002\u8fd9\u91cc bar() \u51fd\u6570\u8bbe\u7f6e x \u8f74\u523b\u5ea6\u6807\u7b7e\u4e3a\u6c34\u5e73\u5c45\u4e2d\uff0c\u6761\u5f62\u56fe\u7684\u586b\u5145\u8272\u4e3a\u94c1\u84dd\u8272\uff0c\u540c\u65f6\u8bbe\u7f6e\u900f\u660e\u5ea6\u4e3a 0.7\u3002 \u53e6\u5916\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86 y \u8f74\u6807\u7b7e\u3001\u6807\u9898\u3001x \u8f74\u523b\u5ea6\u6807\u7b7e\u503c\uff0c\u4f7f\u5f97\u56fe\u5f62\u66f4\u5bcc\u6709\u4fe1\u606f\u3002\u4e3a\u4e86\u7a81\u663e\u6761\u5f62\u56fe\u5404\u67f1\u4f53\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u8fd9\u91cc\u5c06 y \u8f74\u8303\u56f4\u8bbe\u7f6e\u5728 200 \u5230 500\u3002 \u6700\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u5faa\u73af\u7684\u65b9\u5f0f\uff0c\u5728\u6761\u5f62\u7684\u4e0a\u65b9\u6dfb\u52a0\u7684\u6570\u503c\u6807\u7b7e\uff0c\u6307\u5b9a\u5177\u4f53\u7684\u6570\u503c\uff0c\u66f4\u52a0\u65b9\u4fbf\u67e5\u770b\u3002 \u6c34\u5e73\u6761\u5f62\u56fe \u00b6 \u5982\u679c\u60f3\u8981\u5c06\u4e0a\u9762\u7684\u5782\u76f4\u6761\u5f62\u56fe\u6539\u53d8\u4e3a\u6c34\u5e73\u6761\u5f62\u56fe\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06 bar() \u51fd\u6570\u8c03\u6574\u4e3a barh() \u51fd\u6570\uff0c\u5e76\u5c06\u76f8\u5e94\u7684\u6807\u7b7e\u8fdb\u884c\u8c03\u6574\u5373\u53ef\u3002 In [41]: # \u7ed8\u56fe ...: plt.barh(range(4), sales, align = 'center',color='steelblue', alpha ...: = 0.7) ...: # \u6dfb\u52a0y\u8f74\u6807\u7b7e ...: plt.xlabel(u'\u5e74\u5ea6\u9500\u552e\u989d\uff08\u4e07\uff09') ...: # \u6dfb\u52a0\u6807\u9898 ...: plt.title(u'\u5458\u5de5\u5e74\u5ea6\u9500\u552e\u989d\u5bf9\u6bd4') ...: # \u6dfb\u52a0\u523b\u5ea6\u6807\u7b7e ...: plt.yticks(range(4), member) ...: # \u8bbe\u7f6eX\u8f74\u7684\u523b\u5ea6\u8303\u56f4 ...: plt.xlim([200,500]) ...: ...: # \u5728\u6ca1\u6709\u6761\u5f62\u56fe\u53f3\u65b9\u6dfb\u52a0\u6570\u503c\u6807\u7b7e ...: for x,y in enumerate(sales): ...: plt.text(y+10,x,'%s' %y,va='center') \u5728\u6dfb\u52a0\u6761\u5f62\u56fe\u7684\u6570\u503c\u6807\u7b7e\u65f6\u9700\u8981\u6ce8\u610f\uff0c\u5728\u6c34\u5e73\u6761\u5f62\u56fe\u4e2d\uff0cx \u8f74\u8868\u793a\u7684\u662f\u9500\u552e\u989d\uff0cy \u8f74\u8868\u793a\u5458\u5de5\uff0c\u6240\u4ee5 text() \u51fd\u6570\u524d\u4e24\u4e2a\u53c2\u6570\u7684\u987a\u5e8f\u6070\u597d\u4e0e\u4e0a\u4e00\u5e45\u56fe\u7684\u76f8\u53cd\u3002 \u5206\u7ec4\u6761\u5f62\u56fe \u00b6 \u5f88\u591a\u65f6\u5019\u9700\u8981\u5c55\u793a\u7684\u6570\u636e\u5e76\u4e0d\u50cf\u4e0a\u9762\u4e00\u6837\u7b80\u5355\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u62d3\u5c55\u4e00\u4e0b\u95ee\u9898\u7684\u590d\u6742\u5ea6\uff1a\u73b0\u5728\u9700\u8981\u4f7f\u7528\u6c34\u5e73\u6761\u5f62\u56fe\u5c55\u793a\u6bcf\u4f4d\u5458\u5de5\u524d 3 \u4e2a\u6708\u7684\u9500\u552e\u989d\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6bcf\u4f4d\u5458\u5de5\u7684\u9500\u552e\u989d\u6309\u6708\u5206\u7ec4\uff0c\u7136\u540e\u5206\u522b\u7ed8\u5236\u6761\u5f62\u56fe\u8fdb\u884c\u5c55\u793a\uff0c\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a In [42]: member = [u'\u5c0f\u7ea2', u'\u5c0f\u738b', u'\u5c0f\u674e', u'\u5c0f\u5f20'] ...: sales_jan = [30, 42, 25, 35] # \u4e00\u6708\u4efd\u7684\u9500\u552e\u989d ...: sales_feb = [60, 55, 10, 27] # \u4e8c\u6708\u4efd\u7684\u9500\u552e\u989d ...: sales_mar = [40, 20, 5, 70] # \u4e09\u6708\u4efd\u7684\u9500\u552e\u989d ...: ...: bar_width = 0.2 # \u8bbe\u7f6e\u5206\u7ec4\u6761\u5f62\u7684\u5bbd\u5ea6 ...: ...: # \u7ed8\u56fe ...: plt.bar(range(4), sales_jan, label = u'\u4e00\u6708', ...: color = 'steelblue', alpha = 0.7, width = bar_width) ...: # \u4e5f\u53ef\u4ee5\u4f7f\u7528numpy\u6a21\u5757\u7684arange()\u51fd\u6570\u6784\u9020\u6a2a\u5750\u6807 ...: plt.bar(np.arange(4) + bar_width, sales_feb, label = u\"\u4e8c\u6708\", ...: color = 'indianred', alpha = 0.7, width = bar_width) ...: plt.bar(np.arange(4) + bar_width*2, sales_mar, label = u\"\u4e09\u6708\", ...: color = 'green', alpha = 0.7, width = bar_width) ...: ...: # \u6dfb\u52a0y\u8f74\u6807\u7b7e ...: plt.ylabel('\u6708\u5ea6\u9500\u552e\u989d\uff08\u4e07\uff09') ...: # \u6dfb\u52a0\u6807\u9898 ...: plt.title('\u5458\u5de5\u7b2c\u4e00\u5b63\u5ea6\u6708\u5ea6\u9500\u552e\u989d\u5bf9\u6bd4') ...: # \u6dfb\u52a0\u523b\u5ea6\u6807\u7b7e ...: plt.xticks(np.arange(4)+bar_width, member) ...: # \u6dfb\u52a0\u56fe\u4f8b ...: plt.legend() ...: plt.xlim(-0.5, 4.5) Out[42]: (-0.5, 4.5) \u5206\u7ec4\u6761\u5f62\u56fe\u6bd4\u7b80\u5355\u6761\u5f62\u56fe\u66f4\u590d\u6742\u4e4b\u5904\u5728\u4e8e\uff0c\u5728\u6446\u653e\u6570\u636e x \u8f74\u5750\u6807\u548c\u523b\u5ea6\u4f4d\u7f6e\u65f6\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u8ba1\u7b97\u548c\u8c03\u6574\u3002\u5728\u6267\u884c\u5750\u6807\u7684\u8ba1\u7b97\u65f6\uff0c\u63a8\u8350\u8bfb\u8005\u4f7f\u7528 numpy\uff0c\u56e0\u4e3a\u5b83\u652f\u6301\u5e7f\u64ad\u673a\u5236\uff0c\u8fd9\u8ba9\u5411\u91cf\u5316\u7684\u7b97\u672f\u8fd0\u7b97\u53d8\u5f97\u7b80\u5355\u3002\u4f8b\u5982\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5728\u8bbe\u7f6e\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u6761\u5f62\u7684x\u8f74\u5750\u6807\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 np.arange(4) + bar_width \u548c np.arange(4) + bar_width*2\uff0c\u800c\u901a\u8fc7 Python \u5217\u8868\u5b9e\u73b0\u5c06\u5341\u5206\u590d\u6742\u3002 \u5806\u53e0\u6761\u5f62\u56fe \u00b6 \u5806\u53e0\u6761\u5f62\u56fe\u662f\u5206\u7ec4\u6761\u5f62\u56fe\u5c55\u793a\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f\uff0c\u5b83\u628a\u5206\u7c7b\u7684\u6570\u636e\u5806\u53e0\u5728\u4e00\u8d77\uff0c\u663e\u5f97\u66f4\u7b80\u7ea6\u7d27\u5bc6\uff0c\u540c\u65f6\u63d0\u4f9b\u4e86\u6c42\u548c\u4fe1\u606f\u3002\u5728\u5b9e\u73b0\u4e0a\uff0c\u7ed8\u5236\u7684\u601d\u8def\u4e0e\u4e0a\u4e00\u5c0f\u8282\u7684\u6761\u5f62\u56fe\u4e00\u6837\uff0c\u4e0d\u8fc7\u524d\u8005\u662f\u5782\u76f4\u504f\u79fb\uff0c\u540e\u8005\u662f\u6c34\u5e73\u504f\u79fb\u3002 \u4e0b\u9762\u4f7f\u7528\u540c\u6837\u7684\u6570\u636e\uff0c\u6211\u4eec\u5c06\u5176\u5c55\u793a\u4e3a\u5806\u53e0\u6761\u5f62\u56fe\u3002 In [43]: # \u7ed8\u56fe ...: plt.bar(np.arange(4), sales_jan, label = u'\u4e00\u6708', ...: color = 'steelblue', alpha = 0.7) ...: # \u4e5f\u53ef\u4ee5\u4f7f\u7528numpy\u6a21\u5757\u7684arange()\u51fd\u6570\u6784\u9020\u6a2a\u5750\u6807 ...: plt.bar(np.arange(4), sales_feb, bottom = sales_jan, label = u\"\u4e8c\u6708 ...: \", ...: color = 'indianred', alpha = 0.7) ...: plt.bar(np.arange(4), sales_mar, bottom = np.array(sales_jan) + np. ...: array(sales_feb), label = u\"\u4e09\u6708\", ...: color = 'green', alpha = 0.7) ...: ...: # \u6dfb\u52a0y\u8f74\u6807\u7b7e ...: plt.ylabel('\u6708\u5ea6\u9500\u552e\u989d\uff08\u4e07\uff09') ...: # \u6dfb\u52a0\u6807\u9898 ...: plt.title('\u5458\u5de5\u7b2c\u4e00\u5b63\u5ea6\u6708\u5ea6\u9500\u552e\u989d\u5bf9\u6bd4') ...: # \u6dfb\u52a0\u523b\u5ea6\u6807\u7b7e ...: plt.xticks(np.arange(4), member) ...: # \u6dfb\u52a0\u56fe\u4f8b ...: plt.legend() ...: plt.xlim(-0.5, 4.5) Out[43]: (-0.5, 4.5) \u8fd9\u91cc\u6709 2 \u70b9\u975e\u5e38\u5173\u952e\uff1a\u4e00\u662f bottom \u9009\u9879\u7684\u4f7f\u7528\uff0c\u5b83\u8ba9\u6570\u636e\u5728\u8be5\u57fa\u7840\u4e4b\u4e0a\u8fdb\u884c\u4e00\u4e2a\u504f\u79fb\uff1b\u4e8c\u662f NumPy \u6a21\u5757 array() \u51fd\u6570\u7684\u4f7f\u7528\uff0c\u5b83\u5c06\u5217\u8868\u7c7b\u578b\u7684\u6570\u636e\u8f6c\u6362\u4e3a ndarray \u4ee5\u4fbf\u4e8e\u5143\u7d20\u7ea7\u522b\uff08\u5411\u91cf\u5316\uff09\u8fd0\u7b97\u3002 \u672c\u4e66\u5173\u4e8e\u6761\u5f62\u56fe\u7ed8\u5236\u7684\u4ecb\u7ecd\u5230\u6b64\u7ed3\u675f\uff0c\u63a5\u4e0b\u6765\u7684\u4e00\u5c0f\u8282\u5c06\u5bf9\u4e0e\u6761\u5f62\u56fe\u5f62\u4f3c\u800c\u795e\u4e0d\u4f3c\u7684\u76f4\u65b9\u56fe\u8fdb\u884c\u4ecb\u7ecd\u3002 7.2.4 \u76f4\u65b9\u56fe \u00b6 \u4e00\u4e2a\u7b80\u5355\u7684\u76f4\u65b9\u56fe\u662f\u8bfb\u8005\u4e86\u89e3\u6570\u636e\u5f88\u597d\u7684\u5f00\u59cb\uff1a\u5b83\u53ef\u4ee5\u76f4\u89c2\u5730\u5c55\u793a\u4e86\u6570\u636e\u7684\u5206\u5e03\uff0c\u5305\u62ec\u6570\u503c\u5206\u5e03\u7684\u533a\u95f4\uff0c\u5bc6\u5ea6\u4e0e\u5f62\u72b6\u3002\u5728\u5b9e\u9645\u7684\u5de5\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u8bfb\u8005\u53ef\u80fd\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6570\u5b66\u5efa\u6a21\u548c\u7edf\u8ba1\u5206\u6790\uff0c\u8fd9\u4e9b\u6570\u636e\u5904\u7406\u6280\u672f\u5f80\u5f80\u57fa\u4e8e\u6570\u636e\u7b26\u5408\u67d0\u4e9b\u5047\u8bbe\uff0c\u800c\u76f4\u65b9\u56fe\u662f\u68c0\u67e5\u6570\u636e\u6700\u597d\u7684\u9009\u62e9\u4e4b\u4e00\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7 NumPy \u6a21\u5757\u63d0\u4f9b\u7684\u968f\u673a\u6570\u636e\u751f\u6210\u51fd\u6570\u4ea7\u751f\u7b26\u5408\u6b63\u6001\u5206\u5e03\u7684\u968f\u673a\u6570\u636e\uff0c\u5e76\u4ee5\u5b83\u4e3a\u6837\u4f8b\u7ed8\u5236\u76f4\u65b9\u56fe\u3002 In [44]: import numpy as np ...: import matplotlib.pyplot as plt ...: ...: randn_data = np.random.randn(1000) ...: ...: plt.hist(randn_data) Out[44]: (array([ 5., 20., 57., 130., 206., 215., 207., 106., 44., 10.]), array([-3.18406638, -2.57808999, -1.97211359, -1.3661372 , -0.76016081, -0.15418442, 0.45179198, 1.05776837, 1.66374476, 2.26972115, 2.87569755]), <a list of 10 Patch objects>) hist() \u51fd\u6570\u4e5f\u6709\u975e\u5e38\u591a\u7684\u9009\u9879\u7528\u4e8e\u8c03\u6574\u56fe\u5f62\u3002 plt.hist(x, bins=10, range=None, normed=False, weights=None, cumulative=False, bottom=None, histtype='bar', align='mid', orientation='vertical', rwidth=None, log=False, color=None, label=None, stacked=False) x - \u6307\u5b9a\u8981\u7ed8\u5236\u76f4\u65b9\u56fe\u7684\u6570\u636e bins - \u6307\u5b9a\u76f4\u65b9\u56fe\u6761\u5f62\u7684\u4e2a\u6570 range - \u6307\u5b9a\u76f4\u65b9\u56fe\u6570\u636e\u7684\u4e0a\u4e0b\u8fb9\u754c\uff0c\u9ed8\u8ba4\u5305\u542b\u7ed8\u56fe\u6570\u636e\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c density - \u662f\u5426\u5c06\u76f4\u65b9\u56fe\u7684\u9891\u6570\u8f6c\u6362\u6210\u9891\u7387 weights - \u4e3a\u6bcf\u4e00\u4e2a\u6570\u636e\u70b9\u8bbe\u7f6e\u6743\u91cd cumulative - \u662f\u5426\u9700\u8981\u8ba1\u7b97\u7d2f\u8ba1\u9891\u6570\u6216\u9891\u7387 bottom - \u53ef\u4ee5\u4e3a\u76f4\u65b9\u56fe\u7684\u6bcf\u4e2a\u6761\u5f62\u6dfb\u52a0\u57fa\u51c6\u7ebf\uff0c\u9ed8\u8ba4\u4e3a0 histtype - \u6307\u5b9a\u76f4\u65b9\u56fe\u7684\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3abar\uff0c\u9664\u6b64\u8fd8\u6709\u2019barstacked\u2019\u3001\u2018step\u2019\u3001\u2018stepfilled\u2019 align - \u8bbe\u7f6e\u6761\u5f62\u8fb9\u754c\u503c\u7684\u5bf9\u5176\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u4e3amid\uff0c\u9664\u6b64\u8fd8\u6709\u2019left\u2019\u548c\u2019right\u2019 orientation - \u8bbe\u7f6e\u76f4\u65b9\u56fe\u7684\u6446\u653e\u65b9\u5411\uff0c\u9ed8\u8ba4\u4e3a\u5782\u76f4\u65b9\u5411 rwidth - \u8bbe\u7f6e\u76f4\u65b9\u56fe\u6761\u5f62\u5bbd\u5ea6\u7684\u767e\u5206\u6bd4 log - \u662f\u5426\u9700\u8981\u5bf9\u7ed8\u56fe\u6570\u636e\u8fdb\u884clog\u53d8\u6362 color - \u8bbe\u7f6e\u76f4\u65b9\u56fe\u7684\u586b\u5145\u8272 label - \u8bbe\u7f6e\u76f4\u65b9\u56fe\u7684\u6807\u7b7e\uff0c\u53ef\u901a\u8fc7legend\u5c55\u793a\u5176\u56fe\u4f8b stacked - \u5f53\u6709\u591a\u4e2a\u6570\u636e\u65f6\uff0c\u662f\u5426\u9700\u8981\u5c06\u76f4\u65b9\u56fe\u5448\u5806\u53e0\u6446\u653e\uff0c\u9ed8\u8ba4\u6c34\u5e73\u6446\u653e \u73b0\u5728\u6211\u4eec\u66f4\u6539\u51e0\u4e2a\u6700\u5e38\u7528\u7684\u9009\u9879\u770b\u770b\u3002 In [45]: _ = plt.hist(randn_data, bins=30, density=True, ...: histtype='step', color='steelblue') \u5982\u679c\u8981\u6bd4\u8f83\u591a\u4e2a\u6570\u636e\u7684\u5206\u5e03\uff0c\u4f7f\u7528\u9009\u9879 histtype=\u2019stepfilled\u2019 \u548c\u8bbe\u7f6e\u4e00\u5b9a\u7684\u900f\u660e\u5ea6\u4f1a\u5f88\u597d\u7528\u3002 In [45]: _ = plt.hist(randn_data, bins=30, density=True, ...: histtype='step', color='steelblue') In [46]: x1 = np.random.normal(0, 0.4, 1000) ...: x2 = np.random.normal(-3, 1, 1000) ...: x3 = np.random.normal(2, 2, 1000) ...: ...: kwargs = dict(histtype='stepfilled', alpha=0.5, density=True, bins= ...: 50) ...: ...: _ = plt.hist(x1, **kwargs) ...: _ = plt.hist(x2, **kwargs) ...: _ = plt.hist(x3, **kwargs) \u6709\u65f6\u5019\uff0c\u6211\u4eec\u4e0d\u4ec5\u4ec5\u60f3\u901a\u8fc7\u76f4\u65b9\u56fe\u76f4\u89c2\u5730\u770b\u5230\uff0c\u800c\u4e14\u60f3\u83b7\u53d6\u4e0d\u540c\u6761\u5f62\u4e2a\u6570\u4e0b\u533a\u95f4\u5185\u7684\u9891\u6570/\u9891\u7387\u3002NumPy \u63d0\u4f9b\u7684 histogram() \u51fd\u6570\u53ef\u4ee5\u6ee1\u8db3\u8fd9\u4e2a\u9700\u6c42\u3002 \u4e0b\u9762\u6211\u4eec\u4ece randn_data \u4e2d\u63d0\u53d6\u8bbe\u7f6e 10 \u4e2a\u6761\u5f62\u65f6\u7684\u5404\u81ea\u7684\u9891\u6570\u3002 In [47]: counts, bin_edges = np.histogram(randn_data, bins=10) ...: print(counts) [ 5 20 57 130 206 215 207 106 44 10] \u8bbe\u7f6e density=True \u53ef\u4ee5\u83b7\u53d6\u76f8\u5e94\u7684\u9891\u7387\u3002 In [48]: density, bin_edges = np.histogram(randn_data, bins=10, density=True ...: ) ...: print(density) [0.00825115 0.03300459 0.09406307 0.21452981 0.33994724 0.3547993 0.34159747 0.17492431 0.07261009 0.01650229] \u5982\u679c\u4f7f\u7528\u7684\u662f\u4e8c\u7ef4\u6570\u636e\uff0cMatplotlib \u540c\u6837\u63d0\u4f9b\u4e86\u51fd\u6570 hist2d() \u6765\u67e5\u770b\u6570\u636e\u7684\u5206\u5e03\u3002\u76f8\u6bd4\u4e8e\u4e00\u7ef4\u6570\u636e\u4e2d\u76f4\u65b9\u56fe\u5c06\u6570\u636e\u5207\u5206\u5230\u4e0d\u540c\u7684\u533a\u95f4\u4e2d\u53bb\uff0c\u4e8c\u7ef4\u76f4\u65b9\u56fe\u5728\u4e24\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u5207\u5206\uff0c\u56e0\u6b64\u4f1a\u5f97\u5230\u4e00\u4e2a\u4e00\u4e2a\u7684\u5c0f\u77e9\u5f62\u3002 \u540c\u6837\u5730\uff0c\u6211\u4eec\u4f7f\u7528\u968f\u673a\u6570\u636e\u751f\u6210\u51fd\u6570\u751f\u6210\u4e8c\u7ef4\u7684\u968f\u673a\u6570\u636e\u7528\u4e8e\u7ed8\u56fe\u6f14\u793a\u3002 In [49]: # \u521b\u5efa\u4e8c\u7ef4\u968f\u673a\u6570\u636e ...: mean = [0, 0] # \u5747\u503c ...: cov = [[1, 1], [1, 2]] # \u534f\u65b9\u5dee\u77e9\u9635 ...: x, y = np.random.multivariate_normal(mean, cov, 10000).T ...: ...: # \u7ed8\u5236\u56fe\u5f62 ...: plt.hist2d(x, y, bins=30, cmap='Reds') ...: cb = plt.colorbar() ...: cb.set_label(u'\u8ba1\u6570') 7.2.5 \u997c\u56fe \u00b6 \u997c\u56fe\u4e5f\u662f\u5e38\u89c1\u4e14\u4e3a\u4eba\u559c\u7231\u7684\u4e00\u79cd\u56fe\u5f62\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u79bb\u6563\u53d8\u91cf\u5404\u6c34\u5e73\u7684\u5360\u6bd4\u60c5\u51b5\u3002Matplotlib \u63d0\u4f9b\u4e86 pie() \u51fd\u6570\u7528\u4e8e\u997c\u56fe\u7684\u7ed8\u5236\uff0c\u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a In [50]: import matplotlib.pyplot as plt ...: _ = plt.pie(range(5)) \u63a5\u7740\u6211\u4eec\u770b\u4e00\u4e0b pie() \u63d0\u4f9b\u7684\u4e00\u4e9b\u8be6\u7ec6\u9009\u9879\uff1a plt.pie(x, explode=None, labels=None, colors=None, autopct=None, pctdistance=0.6, shadow=False, labeldistance=1.1, startangle=None, radius=None, counterclock=True, wedgeprops=None, textprops=None, center=(0, 0), frame=False) x - \u7ed8\u56fe\u7684\u6570\u636e explode - \u6307\u5b9a\u997c\u56fe\u67d0\u4e9b\u90e8\u5206\u7684\u7a81\u51fa\u663e\u793a labels - \u6dfb\u52a0\u6807\u7b7e colors - \u6307\u5b9a\u586b\u5145\u8272 autopct - \u81ea\u52a8\u6dfb\u52a0\u767e\u5206\u6bd4\u663e\u793a\uff0c\u53ef\u4ee5\u91c7\u7528\u683c\u5f0f\u5316\u7684\u65b9\u6cd5\u663e\u793a pctdistance - \u8bbe\u7f6e\u767e\u5206\u6bd4\u6807\u7b7e\u4e0e\u5706\u5fc3\u7684\u8ddd\u79bb shadow - \u662f\u5426\u6dfb\u52a0\u9634\u5f71\u6548\u679c labeldistance - \u8bbe\u7f6e\u5404\u6247\u5f62\u6807\u7b7e\u4e0e\u5706\u5fc3\u7684\u8ddd\u79bb startangle - \u8bbe\u7f6e\u997c\u56fe\u7684\u521d\u59cb\u6446\u653e\u89d2\u5ea6 radius - \u8bbe\u7f6e\u997c\u56fe\u7684\u534a\u5f84\u5927\u5c0f counterclock - \u662f\u5426\u8ba9\u997c\u56fe\u6309\u9006\u65f6\u9488\u987a\u5e8f\u5448\u73b0 wedgeprops - \u8bbe\u7f6e\u997c\u56fe\u5185\u5916\u8fb9\u754c\u7684\u5c5e\u6027\uff0c\u5982\u8fb9\u754c\u7ebf\u7684\u7c97\u7ec6\u3001\u989c\u8272\u7b49 textprops - \u8bbe\u7f6e\u997c\u56fe\u4e2d\u6587\u672c\u7684\u5c5e\u6027\uff0c\u5982\u5b57\u4f53\u5927\u5c0f\u3001\u989c\u8272\u7b49 center - \u6307\u5b9a\u997c\u56fe\u7684\u4e2d\u5fc3\u70b9\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a\u539f\u70b9 frame - \u662f\u5426\u8981\u663e\u793a\u997c\u56fe\u80cc\u540e\u7684\u56fe\u6846\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3aTrue\u7684\u8bdd\uff0c\u9700\u8981\u540c\u65f6\u63a7\u5236\u56fe\u6846x\u8f74\u3001y\u8f74\u7684\u8303\u56f4\u548c\u997c\u56fe\u7684\u4e2d\u5fc3\u4f4d\u7f6e \u4f7f\u7528\u8fd9\u4e9b\u9009\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u4e30\u5bcc\u7684\u997c\u56fe\u5448\u73b0\u6548\u679c\u3002 \u5047\u8bbe\u67d0\u52b3\u52a1\u516c\u53f8\u73b0\u5728\u7edf\u8ba1\u4e86\u804c\u5de5\u7684\u5b66\u5386\u5360\u6bd4\u60c5\u51b5\uff0c\u73b0\u5728\u60f3\u8981\u4f7f\u7528\u997c\u56fe\u5c55\u73b0\u51fa\u6765\uff0c\u5e76\u7a81\u51fa\u7855\u58eb\u5b66\u4f4d\u7684\u7fa4\u4f53\u3002\u6211\u4eec\u901a\u8fc7\u8fd9\u4e2a\u9700\u6c42\u7684\u5b9e\u73b0\u5b66\u4e60\u4e00\u4e9b\u5e38\u7528\u9009\u9879\u7684\u7528\u6cd5\u3002 In [51]: # \u6784\u9020\u6570\u636e ...: edu = [0.26,0.35,0.32,0.09,0.08] ...: labels = [u'\u4e2d\u4e13',u'\u5927\u4e13',u'\u672c\u79d1',u'\u7855\u58eb',u'\u5176\u4ed6'] ...: ...: explode = [0,0,0,0.1,0] # \u7a81\u51fa\u7855\u58eb\u7fa4\u4f53 ...: colors=['#9999ff','#ff9999','#7777aa','#2442aa','#dd5555'] # \u81ea\u5b9a\u4e49 ...: \u989c\u8272 ...: ...: # \u7ed8\u5236\u997c\u56fe ...: _ = plt.pie(x = edu, ...: explode=explode, ...: labels=labels, # \u6dfb\u52a0\u6559\u80b2\u6c34\u5e73\u6807\u7b7e ...: colors=colors, # \u8bbe\u7f6e\u997c\u56fe\u7684\u81ea\u5b9a\u4e49\u586b\u5145\u8272 ...: autopct='%.1f%%', # \u8bbe\u7f6e\u767e\u5206\u6bd4\u7684\u683c\u5f0f\uff0c\u8fd9\u91cc\u4fdd\u7559\u4e00\u4f4d\u5c0f\u6570 ...: ...: pctdistance=0.8, # \u8bbe\u7f6e\u767e\u5206\u6bd4\u6807\u7b7e\u4e0e\u5706\u5fc3\u7684\u8ddd\u79bb ...: labeldistance = 1.2, # \u8bbe\u7f6e\u6559\u80b2\u6c34\u5e73\u6807\u7b7e\u4e0e\u5706\u5fc3\u7684\u8ddd\u79bb ...: startangle = 180, # \u8bbe\u7f6e\u997c\u56fe\u7684\u521d\u59cb\u89d2\u5ea6 ...: radius = 1.5, # \u8bbe\u7f6e\u997c\u56fe\u7684\u534a\u5f84 ...: counterclock = False, # \u662f\u5426\u9006\u65f6\u9488\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3a\u987a\u65f6\u9488\u65b9\u5411 ...: wedgeprops = {'linewidth': 1.5, 'edgecolor':'green'}, # \u8bbe ...: \u7f6e\u997c\u56fe\u5185\u5916\u8fb9\u754c\u7684\u5c5e\u6027\u503c ...: textprops = {'fontsize':12, 'color':'k'}, # \u8bbe\u7f6e\u6587\u672c\u6807\u7b7e\u7684 ...: \u5c5e\u6027\u503c ...: center = (2,2), # \u8bbe\u7f6e\u997c\u56fe\u7684\u539f\u70b9 ...: frame = 0 ) # \u662f\u5426\u663e\u793a\u997c\u56fe\u7684\u56fe\u6846\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u663e\u793a 7.2.6 \u7bb1\u7ebf\u56fe \u00b6 \u7bb1\u7ebf\u56fe\u662f\u672c\u8282\u4ecb\u7ecd\u7684\u6700\u540e\u4e00\u79cd\u56fe\u5f62\u3002\u7bb1\u7ebf\u56fe\u4e00\u822c\u7528\u6765\u5c55\u73b0\u6570\u636e\u7684\u5206\u5e03\uff0c\u5982\u4e0a\u4e0b\u56db\u5206\u4f4d\u503c\u3001\u4e2d\u4f4d\u6570\u7b49\u3002\u540c\u65f6\uff0c\u7bb1\u7ebf\u56fe\u53ef\u4ee5\u76f4\u89c2\u5730\u5c55\u793a\u5f02\u5e38\u70b9\u3002 Matplotlib \u63d0\u4f9b\u4e86 boxplot() \u51fd\u6570\u7ed8\u5236\u7bb1\u7ebf\u56fe\uff0c\u4e0b\u9762\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002 In [53]: import matplotlib.pyplot as plt ...: ...: _ = plt.boxplot(range(10)) # 10\u4e2a\u6570\uff0c0-9 \u7bb1\u7ebf\u56fe\u867d\u7136\u770b\u8d77\u6765\u7b80\u5355\uff0c\u4f46\u5305\u542b\u7684\u6570\u636e\u4fe1\u606f\u975e\u5e38\u4e30\u5bcc\u3002\u6a59\u8272\u7684\u7ebf\u6761\u8868\u793a\u4e2d\u4f4d\u6570\uff0c\u4e2d\u95f4\u6761\u5f62\u7684\u4e0a\u4e0b\u8fb9\u754c\u5206\u522b\u5bf9\u5e94\u4e0a\u56db\u5206\u4f4d\u6570\uff0875% \u7684\u6570\u636e\u90fd\u5c0f\u4e8e\u8be5\u503c\uff09\u4e0e\u4e0b\u56db\u4f4d\u5206\u6570\uff0825% \u7684\u6570\u636e\u5c0f\u4e8e\u8be5\u503c\uff09\uff0c\u4ece\u6761\u5f62\u5ef6\u4f38\u51fa\u4e24\u6761\u7ebf\u6bb5\uff0c\u4e24\u6761\u7ebf\u6bb5\u7684\u7ec8\u70b9\u8868\u793a\u6570\u636e\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002 In [54]: print(np.median(np.arange(10))) # \u4e2d\u4f4d\u6570 ...: ...: print(np.quantile(np.arange(10), 0.25)) # \u4e0b4\u5206\u4f4d\u6570\uff0c\u4e5f\u53eb\u7b2c1\u5206\u4f4d\u6570 ...: ...: print(np.quantile(np.arange(10), 0.75)) # \u4e0a4\u5206\u4f4d\u6570\uff0c\u4e5f\u53eb\u7b2c3\u5206\u4f4d\u6570 ...: 4.5 2.25 6.75 boxplot() \u51fd\u6570\u540c\u6837\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u81ea\u5b9a\u4e49\u9009\u9879\u3002 plt.boxplot(x, notch=None, sym=None, vert=None, whis=None, positions=None, widths=None, patch_artist=None, meanline=None, showmeans=None, showcaps=None, showbox=None, showfliers=None, boxprops=None, labels=None, flierprops=None, medianprops=None, meanprops=None, capprops=None, whiskerprops=None) x - \u7ed8\u56fe\u6570\u636e notch - \u662f\u5426\u662f\u51f9\u53e3\u7684\u5f62\u5f0f\u5c55\u73b0\u7bb1\u7ebf\u56fe\uff0c\u9ed8\u8ba4\u975e\u51f9\u53e3 sym - \u6307\u5b9a\u5f02\u5e38\u70b9\u7684\u5f62\u72b6\uff0c\u9ed8\u8ba4\u4e3a + \u53f7\u663e\u793a vert - \u662f\u5426\u9700\u8981\u5c06\u7bb1\u7ebf\u56fe\u5782\u76f4\u6446\u653e\uff0c\u9ed8\u8ba4\u5782\u76f4\u6446\u653e whis - \u6307\u5b9a\u4e0a\u4e0b\u987b\u4e0e\u4e0a\u4e0b\u56db\u5206\u4f4d\u7684\u8ddd\u79bb\uff0c\u9ed8\u8ba4\u4e3a 1.5 \u500d\u7684\u56db\u5206\u4f4d\u5dee positions - \u6307\u5b9a\u7bb1\u7ebf\u56fe\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a [0,1,2\u2026] widths - \u6307\u5b9a\u7bb1\u7ebf\u56fe\u5bbd\u5ea6\uff0c\u9ed8\u8ba4\u4e3a 0.5 patch_artist - \u662f\u5426\u586b\u5145\u7bb1\u4f53\u7684\u989c\u8272 meanline - \u662f\u5426\u7528\u7ebf\u7684\u5f62\u5f0f\u8868\u793a\u5747\u503c\uff0c\u9ed8\u8ba4\u7528\u70b9\u6765\u8868\u793a showmeans - \u662f\u5426\u663e\u793a\u5747\u503c\uff0c\u9ed8\u8ba4\u4e0d\u663e\u793a showcaps - \u662f\u5426\u663e\u793a\u7bb1\u7ebf\u56fe\u9876\u7aef\u548c\u672b\u7aef\u7684\u4e24\u6761\u7ebf\uff0c\u9ed8\u8ba4\u663e\u793a showbox - \u662f\u5426\u663e\u793a\u7bb1\u7ebf\u56fe\u7684\u7bb1\u4f53\uff0c\u9ed8\u8ba4\u663e\u793a showfliers - \u662f\u5426\u663e\u793a\u5f02\u5e38\u503c\uff0c\u9ed8\u8ba4\u663e\u793a boxprops - \u8bbe\u7f6e\u7bb1\u4f53\u7684\u5c5e\u6027\uff0c\u5982\u8fb9\u6846\u8272\uff0c\u586b\u5145\u8272\u7b49 labels - \u4e3a\u7bb1\u7ebf\u56fe\u6dfb\u52a0\u6807\u7b7e\uff0c\u7c7b\u4f3c\u4e8e\u56fe\u4f8b\u7684\u4f5c\u7528 filerprops - \u8bbe\u7f6e\u5f02\u5e38\u503c\u7684\u5c5e\u6027\uff0c\u5982\u5f02\u5e38\u70b9\u7684\u5f62\u72b6\u3001\u5927\u5c0f\u3001\u586b\u5145\u8272\u7b49 medianprops - \u8bbe\u7f6e\u4e2d\u4f4d\u6570\u7684\u5c5e\u6027\uff0c\u5982\u7ebf\u7684\u7c7b\u578b\u3001\u7c97\u7ec6\u7b49 meanprops - \u8bbe\u7f6e\u5747\u503c\u7684\u5c5e\u6027\uff0c\u5982\u70b9\u7684\u5927\u5c0f\u3001\u989c\u8272\u7b49 capprops - \u8bbe\u7f6e\u7bb1\u7ebf\u56fe\u9876\u7aef\u548c\u672b\u7aef\u7ebf\u6761\u7684\u5c5e\u6027\uff0c\u5982\u989c\u8272\u3001\u7c97\u7ec6\u7b49 whiskerprops - \u8bbe\u7f6e\u987b\u7684\u5c5e\u6027\uff0c\u5982\u989c\u8272\u3001\u7c97\u7ec6\u3001\u7ebf\u7684\u7c7b\u578b\u7b49 \u7bb1\u7ebf\u56fe\u901a\u5e38\u5728\u8fdb\u884c\u591a\u7ec4\u6570\u636e\u6bd4\u8f83\u65f6\u4f7f\u7528\u3002\u4e0b\u9762\u4ee3\u7801\u5c55\u793a\u4e86 3 \u7ec4\u7b80\u5355\u6570\u636e\u7684\u7bb1\u7ebf\u56fe\uff0c\u6dfb\u52a0\u51f9\u53e3\u3001\u5747\u503c\u70b9\u3001\u989c\u8272\u4ee5\u53ca\u6bcf\u7ec4\u7684\u6807\u7b7e\u3002\u8bbe\u5b9a\u8fd9\u51e0\u4e2a\u9009\u9879\u5df2\u7ecf\u9002\u7528\u4e8e\u7edd\u5927\u591a\u6570\u60c5\u51b5\u3002 In [55]: _ = plt.boxplot([range(10), range(20), range(30)], ...: patch_artist=True, ...: boxprops={'color':'red'}, ...: notch=True, showmeans=True, ...: labels=[\"label1\", \"label2\", \"label3\"]) 7.3 \u591a\u56fe\u4e0e\u81ea\u5b9a\u4e49 \u00b6 \u4e0a\u4e00\u8282\u805a\u7126\u4e8e\u5404\u79cd\u5e38\u89c1\u56fe\u5f62\u7ed8\u5236\u65b9\u6cd5\u7684\u4ecb\u7ecd\uff0c\u672c\u8282\u5728\u5176\u57fa\u7840\u4e0a\u4ecb\u7ecd\u5982\u4f55\u7ec4\u7ec7\u591a\u4e2a\u56fe\u5f62\u3001\u4ecb\u7ecd\u81ea\u5b9a\u4e49\u56fe\u5f62\u66f4\u591a\u7684\u64cd\u4f5c\u65b9\u6cd5\u3002 7.3.1 \u591a\u56fe \u00b6 \u6570\u636e\u53ef\u89c6\u5316\u7684\u7ed3\u679c\u5f80\u5f80\u4e0d\u662f\u4e00\u4e2a\u56fe\u5f62\u53ef\u4ee5\u5b8c\u5168\u5448\u73b0\u51fa\u6765\u7684\uff0c\u8868\u660e\u67d0\u4e2a\u4e3b\u9898\u6216\u89c2\u70b9\u7684\u56fe\u5f62\u5e38\u88ab\u653e\u7f6e\u5728\u4e00\u8d77\u7ec4\u6210\u591a\u56fe\u3002Matplotlib \u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5728\u4e00\u4e2a\u56fe\u5f62\u4e2d\u7ed8\u5236\u591a\u4e2a\u5b50\u56fe\u3002 \u7f51\u683c\u5b50\u56fe \u00b6 Matplotlib \u7684 subplot() \u51fd\u6570\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\u5728\u7f51\u683c\u4e2d\u7ed8\u5236\u5b50\u56fe\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e86 4 \u4e2a\u5b50\u56fe\uff0c\u5206\u5272\u4e3a 2 \u884c 2 \u5217\u3002\u5b50\u56fe\u7684\u7d22\u5f15\u4ece 1 \u5f00\u59cb\uff0c\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\u4f9d\u6b21\u589e\u52a0\uff0c\u8be5\u4fe1\u606f\u4e5f\u6807\u6ce8\u5728\u4e86\u6bcf\u4e2a\u5b50\u56fe\u7684\u4e2d\u5fc3\u3002 In [56]: import matplotlib.pyplot as plt ...: ...: for i in range(1, 5): ...: plt.subplot(2, 2, i) # 2\u884c2\u5217\uff0c\u5b50\u56fe\u7d22\u5f15i ...: plt.text(0.5, 0.5, str((2, 2, i)), ...: fontsize=18, ha='center') \u4e0a\u9762\u5b50\u56fe\u95f4\u7684\u7a7a\u9699\u6bd4\u8f83\u5c0f\uff0c\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7 subplots_adjust() \u5bf9\u95f4\u9694\u8fdb\u884c\u8c03\u6574\u3002 In [57]: plt.subplots_adjust(hspace=0.4, wspace=0.4) # \u8c03\u6574\u5b50\u56fe\u4e4b\u95f4\u7684\u9ad8\u4e0e\u5bbd ...: \u95f4\u9694 ...: ...: for i in range(1, 5): ...: plt.subplot(2, 2, i) # 2\u884c2\u5217\uff0c\u5b50\u56fe\u7d22\u5f15i ...: plt.text(0.5, 0.5, str((2, 2, i)), ...: fontsize=18, ha='center') \u8fd9\u6837\u56fe\u5f62\u770b\u8d77\u6765\u5c31\u8212\u670d\u5f88\u591a\u4e86\u3002 \u624b\u52a8\u7ed8\u5236\u5b50\u56fe \u00b6 \u7b80\u5355\u7684\u591a\u56fe\u6392\u5217\u4f7f\u7528 subplot() \u51fd\u6570\u5c31\u53ef\u4ee5\u5f88\u597d\u5730\u89e3\u51b3\uff0c\u4f46\u6709\u65f6\u5019\u6211\u4eec\u60f3\u8981\u5c06\u5b50\u56fe\u7ed8\u5236\u5728\u7279\u5b9a\u7684\u4f4d\u7f6e\uff0c\u8fd9\u65f6 subplot() \u51fd\u6570\u5c31\u4e0d\u80fd\u6ee1\u8db3\u4e86\u3002 Matplotlib \u63d0\u4f9b\u4e86 axes() \u51fd\u6570\u751f\u6210\u4e00\u4e2a\u6807\u51c6\u7684\u5750\u6807\u8f74\u5bf9\u8c61\uff0c\u8be5\u51fd\u6570\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a 4 \u5143\u7d20\u7684\u5217\u8868 [left, bottom, width, height] \u6307\u5b9a\u56fe\u5f62\u5728\u5750\u6807\u7cfb\u7edf\u4e2d\u7684\u4f4d\u7f6e\u3002\u5750\u6807\u7cfb\u7edf\u5de6\u4e0b\u89d2\u5230\u53f3\u4e0a\u89d2\u4ece 0 \u5230 1 \u53d8\u5316\u3002 \u4e0b\u9762\u4ee3\u7801\u5728\u56fe\u5f62\u7684\u5de6\u4e0a\u65b9\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5b50\u56fe\u3002 In [58]: ax1 = plt.axes() # \u6807\u51c6\u5750\u6807\u8f74 ...: # \u5b50\u56fe\u8ddd\u79bb\u5de6\u4fa70.2\uff0c\u4e0b\u65b90.65\uff0c\u5bbd\u5ea60.2\uff0c\u9ad8\u5ea60.2 ...: ax2 = plt.axes([0.2, 0.65, 0.2, 0.2]) \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5217\u8868\u4e2d\u503c\u4e0e\u5176\u770b\u4f5c\u5c0f\u6570\uff0c\u6211\u4eec\u628a\u5b83\u4eec\u770b\u4f5c\u767e\u5206\u6570\u66f4\u4e3a\u5408\u9002\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6807\u51c6\u5750\u6807\u8f74\u770b\u4f5c\u957f\u5bbd\u90fd\u662f 100%\uff0c\u5b50\u56fe\u8ddd\u79bb\u5de6\u4fa7 20% \u7684\u957f\u5ea6\uff0c\u8ddd\u79bb\u4e0b\u65b9 65% \u7684\u957f\u5ea6\uff0c\u5bbd\u5ea6\u5360\u6807\u51c6\u5750\u6807\u8f74\u5bbd\u5ea6 20%\uff0c\u9ad8\u5ea6\u5360\u6807\u51c6\u5750\u6807\u8f74\u9ad8\u5ea6 20%\u3002 \u7406\u89e3\u4e86\u624b\u52a8\u7ed8\u5236\u7684\u539f\u7406\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed8\u5236\u540c\u4eab x \u8f74\u7684\u591a\u56fe\u3002 In [59]: x = np.linspace(0, 10) # \u521b\u5efax\u8f74\u6570\u636e ...: ...: fig = plt.figure() # \u521b\u5efa\u56fe\u5f62\u5bf9\u8c61 ...: ...: ax1 = plt.axes([0.1, 0.5, 0.8, 0.4], ...: xticklabels=[], ylim=(-1.2, 1.2)) ...: plt.plot(np.sin(x)) # \u7ed8\u5236\u5b50\u56fe1 ...: ...: ax2 = plt.axes([0.1, 0.1, 0.8, 0.4], ...: ylim=(-1.2, 1.2)) ...: plt.plot(np.cos(x)) # \u7ed8\u5236\u5b50\u56fe2 Out[59]: [<matplotlib.lines.Line2D at 0x7f903a48fda0>] \u4e0a\u9762\u4ee3\u7801\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u7a7a\u767d\u7684\u56fe\u5f62\u5bf9\u8c61\uff0c\u7136\u540e\u5728\u4e0a\u9762\u7ed8\u5236\u4e86 2 \u4e2a\u5b50\u56fe\uff1a\u7b2c 1 \u4e2a\u5b50\u56fe\u7ed8\u5236\u5728\u56fe\u5f62\u7684\u4e0a\u65b9\uff0c\u53bb\u6389\u4e86\u6a2a\u8f74\u7684\u523b\u5ea6\u6807\u7b7e\uff1b\u7b2c 2 \u4e2a\u5b50\u56fe\u7ed8\u5236\u5728\u56fe\u5f62\u7684\u4e0b\u65b9\u3002\u6211\u4eec\u9700\u8981\u6ce8\u610f\u8fd9\u91cc\u624b\u52a8\u7ed8\u5236\u591a\u56fe\u7684\u8981\u70b9\u5728\u4e8e\u6839\u636e\u9700\u6c42\u8ba1\u7b97\u653e\u7f6e\u5750\u6807\u8f74\u7684\u4f4d\u7f6e\uff0c\u4e0a\u9762 2 \u4e2a\u5750\u6807\u8f74\u9664\u4e86\u8ddd\u79bb\u56fe\u5f62\u5e95\u90e8\u7684\u4f4d\u7f6e\u4e0d\u4e00\u6837\uff0c\u5176\u4ed6\u5750\u6807\u8bbe\u5b9a\u5b8c\u5168\u4e00\u81f4\u3002\u5e76\u4e14\uff0c\u6bcf\u4e2a\u5b50\u56fe\u5750\u6807\u8f74\u7684\u9ad8\u5ea6\u662f 0.4\uff0c\u6240\u4ee5\u7b2c 1 \u4e2a\u5b50\u56fe\u8ddd\u79bb\u5e95\u90e8\u7684\u4f4d\u7f6e\u8981\u8bbe\u5b9a\u4e3a 0.5\uff0c\u8fd9\u6837\u4e0a\u9762\u5b50\u56fe\u7684\u5750\u6807\u8f74\u5e95\u90e8\u8fb9\u754c\u7ebf\u4e0e\u4e0b\u9762\u5b50\u56fe\u7684\u5750\u6807\u8f74\u9876\u90e8\u8fb9\u754c\u7ebf\u624d\u5b8c\u5168\u5339\u914d\uff08\u56fe\u4e2d\u95f4\u7684\u7ebf\u6761\uff09\u3002 7.3.2 \u8bbe\u7f6e\u98ce\u683c \u00b6 \u56fe\u5f62\u6574\u4f53\u7684\u6837\u5f0f\uff08\u4e5f\u79f0\u98ce\u683c\u6216\u4e3b\u9898\uff09\u4e5f\u53ef\u4ee5\u591a\u79cd\u591a\u6837\uff0c\u8fd9\u65e0\u6cd5\u901a\u8fc7\u6211\u4eec\u524d\u9762\u5b66\u4e60\u8fc7\u7684\u64cd\u4f5c\u5b9e\u73b0\uff0cMatplotlib \u5e93\u63d0\u4f9b\u7684 style.use() \u51fd\u6570\u53ef\u4ee5\u4e3a\u521b\u5efa\u7684\u56fe\u5f62\u8bbe\u7f6e\u5408\u9002\u7684\u7f8e\u5b66\u98ce\u683c\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u4ee3\u7801\u53ef\u4ee5\u786e\u4fdd\u751f\u6210\u7684\u56fe\u5f62\u4f7f\u7528\u7ecf\u5178\u7684 Matplotlib \u98ce\u683c\uff1a In [60]: plt.style.use('classic') \u6211\u4eec\u7ed8\u5236\u7b80\u5355\u7684\u56fe\u5f62\u770b\u4e00\u770b\u663e\u793a\u6548\u679c\u3002 In [61]: rng = np.random.RandomState(12) ...: x = rng.randn(200) ...: y = rng.randn(200) ...: ...: _ = plt.scatter(x, y) \u4e0b\u9762\u4ee3\u7801\u53ef\u4ee5\u66f4\u6362\u4e3a seaborn \u5e93 white \u98ce\u683c\u3002 In [62]: plt.style.use('seaborn-white') ...: ...: _ = plt.scatter(x, y) \u4e0b\u9762\u4ee3\u7801\u53ef\u4ee5\u66f4\u6362\u4e3a\u6d41\u884c R \u5305 ggplot2 \u98ce\u683c\u3002 In [63]: plt.style.use('ggplot') ...: ...: _ = plt.scatter(x, y) \u4e0b\u9762\u4ee3\u7801\u5217\u51fa\u6240\u6709\u652f\u6301\u7684\u98ce\u683c\u3002 In [64]: print(plt.style.available) ['seaborn-dark', 'seaborn-ticks', 'classic', 'seaborn-white', 'fast', 'seaborn-whitegrid', 'tableau-colorblind10', 'seaborn', 'seaborn-deep', 'Solarize_Light2', 'seaborn-colorblind', 'seaborn-darkgrid', 'dark_background', 'seaborn-bright', 'ggplot', 'seaborn-talk', 'seaborn-notebook', 'grayscale', 'fivethirtyeight', 'bmh', 'seaborn-dark-palette', 'seaborn-pastel', '_classic_test', 'seaborn-poster', 'seaborn-muted', 'seaborn-paper'] \u6240\u6709\u652f\u6301\u7684\u98ce\u683c\u793a\u4f8b\u53ef\u4ee5\u901a\u8fc7 https://matplotlib.org/gallery/style_sheets/style_sheets_reference.html \u67e5\u770b\u3002 7.3.3 \u4e24\u79cd\u63a5\u53e3\u6620\u5c04 \u00b6 \u5728\u672c\u7ae0\u7684\u5927\u90e8\u5206\u5185\u5bb9\u7684\u4ecb\u7ecd\u4e2d\uff0c\u6211\u4eec\u53ea\u4f7f\u7528\u4e86 Matplotlib \u7684\u4e00\u79cd\u63a5\u53e3\uff0c\u5373 Matlab \u6837\u5f0f\u63a5\u53e3\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9ad8\u8bfb\u8005\u5b66\u4e60\u7684\u8fde\u8d2f\u6027\uff0c\u65b9\u4fbf\u7406\u89e3\u3002\u5bf9\u4e8e\u6bcf\u4e00\u79cd Matlab \u6837\u5f0f\u63a5\u53e3\u64cd\u4f5c\uff0c\u57fa\u672c\u90fd\u6709\u76f8\u5e94\u7684\u9762\u5411\u5bf9\u8c61\u64cd\u4f5c\u4e0e\u4e4b\u5bf9\u5e94\u3002\u5728\u5b66\u4e60\u548c\u719f\u7ec3\u4e00\u79cd\u63a5\u53e3\u7684\u57fa\u7840\u4e0a\u7406\u89e3\u53e6\u4e00\u79cd\u5c31\u66f4\u52a0\u987a\u624b\u4e86\u3002 \u4e0b\u9762\u5217\u51fa\u4e24\u79cd\u63a5\u53e3\u5e38\u89c1\u7684\u64cd\u4f5c\u51fd\u6570\u6620\u5c04\uff1a plt.plot() -> ax.plot() plt.legend() -> ax.legend() plt.xlabel() -> ax.set_xlabel() plt.ylabel() -> ax.set_ylabel() plt.xlim() -> ax.set_xlim() plt.ylim() -> ax.set_ylim() plt.title() -> ax.set_title() \u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 set() \u65b9\u6cd5\u4e00\u6b21\u6027\u5bf9\u6240\u6709\u6837\u5f0f\u8fdb\u884c\u8bbe\u5b9a\u3002\u4e0b\u9762\u753b\u4e00\u4e2a\u7b80\u5355\u7684\u6b63\u5f26\u56fe\u8bf4\u660e\uff1a In [65]: plt.style.use('grayscale') ...: x = np.linspace(0, 10) ...: ...: ax = plt.axes() ...: ax.plot(x, np.sin(x)) ...: _ = ax.set(xlim=(0,10), ylim=(-2,2), ...: xlabel='x', ylabel='sin(x)', ...: title='A Simple Plot') 7.4 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 \u672c\u7ae0\u9996\u5148\u7b80\u5355\u4ecb\u7ecd\u4e86 Matplotlib \u5e93\u7684\u5386\u53f2\uff0c\u7136\u540e\u4ecb\u7ecd\u4e86\u811a\u672c\u3001IPython Shell \u548c Jupyter Notebook 3 \u79cd\u4e0d\u540c\u5e94\u7528\u573a\u666f\u4e0b Matplotlib \u7684\u64cd\u4f5c\u65b9\u5f0f\uff0c\u7d27\u63a5\u7740\u4ecb\u7ecd\u4e86\u5982\u4f55 2 \u79cd\u4e0d\u540c\u7684\u63a5\u53e3\uff1a\u4e00\u79cd\u662f Matlab \u6837\u5f0f\u7684\uff0c\u547d\u4ee4\u5f0f\u7684\u64cd\u4f5c\uff0c\u7ed8\u5236\u7b80\u5355\u548c\u57fa\u7840\u7684\u56fe\u5f62\u975e\u5e38\u65b9\u4fbf\uff1b\u53e6\u4e00\u79cd\u57fa\u4e8e\u9762\u5411\u5bf9\u8c61\uff0c\u9664\u4e86\u53ef\u4ee5\u5b9e\u73b0\u57fa\u672c\u7684\u7ed8\u56fe\uff0c\u591a\u7528\u4e8e\u590d\u6742\u7684\u56fe\u5f62\u6784\u9020\u3002\u5728\u8bfb\u8005\u5bf9\u4e8e Matplotlib \u6709\u4e86\u6574\u4f53\u8f6e\u5ed3\u7684\u57fa\u7840\u4e0a\uff0c\u672c\u7ae0\u968f\u540e\u5411\u8bfb\u8005\u4ecb\u7ecd\u5e38\u89c1\u57fa\u7840\u56fe\u5f62\u7684\u7ed8\u5236\u65b9\u6cd5\uff0c\u5305\u62ec\uff1a\u70b9\u56fe\u3001\u7ebf\u56fe\u3001\u6761\u5f62\u56fe\u3001\u76f4\u65b9\u56fe\u3001\u997c\u56fe\u4ee5\u53ca\u7bb1\u7ebf\u56fe\u3002\u6700\u540e\u7684\u5185\u5bb9\u5219\u805a\u7126\u4e8e\u591a\u56fe\u7684\u5b9e\u73b0\u548c\u56fe\u5f62\u98ce\u683c\u7684\u8bbe\u5b9a\u3002 \u5199\u5f97\u4e00\u624b\u597d\u4ee3\u7801\u5e76\u4e0d\u80fd\u4ee3\u8868\u80fd\u753b\u5f97\u4e00\u624b\u597d\u56fe\u3002\u672c\u7ae0\u7684\u5185\u5bb9\u65e8\u5728\u5e2e\u52a9\u8bfb\u8005\u6253\u5f00\u4f7f\u7528 Matplotlib \u8fdb\u884c\u7ed8\u56fe\u7684\u5927\u95e8\u3001\u7406\u6e05\u5404\u7c7b\u7ed8\u56fe\u51fd\u6570\u548c\u65b9\u6cd5\u57fa\u672c\u7684\u5185\u5728\u8054\u7cfb\u3002\u5728\u5b9e\u9645\u7684\u6570\u636e\u53ef\u89c6\u5316\u5de5\u4f5c\u4e2d\uff0c\u8bfb\u8005\u5f80\u5f80\u9700\u8981\u8017\u8d39\u5927\u91cf\u7684\u7cbe\u529b\u5bf9\u7ed8\u56fe\u4ee3\u7801\u8fdb\u884c\u53cd\u590d\u4fee\u6539\uff0c\u67e5\u9605\u548c\u7406\u89e3\u76f8\u5173\u51fd\u6570\u6587\u6863\u3002\u8fd9\u4e9b\u52aa\u529b\u90fd\u662f\u503c\u5f97\u7684\uff0c\u5b83\u4f1a\u540c\u65f6\u9524\u70bc\u8bfb\u8005\u7684\u4ee3\u7801\u7f16\u5199\u80fd\u529b\u548c\u7ed8\u56fe\u3001\u5ba1\u7f8e\u7b49\u80fd\u529b\u3002","title":"\u7b2c 7 \u7ae0 Matplotlib"},{"location":"07-matplotlib/#7-matplotlib","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a Matplotlib \u547d\u540d\u7ea6\u5b9a Matplotlib \u4e09\u79cd\u7ed8\u56fe\u573a\u666f Matplotlib \u4e24\u79cd\u5e94\u7528\u63a5\u53e3 \u57fa\u672c\u56fe\u5f62\u7ed8\u5236 \u7b80\u5355\u7684\u56fe\u5f62\u53ef\u4ee5\u7ed9\u6570\u636e\u5206\u6790\u5e08\u5e26\u6765\u6bd4\u5176\u4ed6\u4efb\u4f55\u8bbe\u5907\u66f4\u591a\u7684\u4fe1\u606f\u3002\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u672c\u4e66\u4ecb\u7ecd\u4e86 Python \u6570\u636e\u5206\u6790\u6700\u6838\u5fc3\u7684\u5e95\u5c42\u5e93 NumPy\u3001\u57fa\u4e8e ndarray \u5bf9\u8c61\u7684\u6570\u7ec4\u64cd\u4f5c\u65b9\u6cd5\u4e0e\u57fa\u672c\u7edf\u8ba1\u3002\u672c\u7ae0\u5c06\u5f00\u59cb\u6307\u5f15\u8bfb\u8005\u4ece\u66f4\u76f4\u89c2\u7684\u89d2\u5ea6\u2014\u2014\u56fe\u5f62\u2014\u2014\u4e86\u89e3\u6570\u636e\u7684\u5206\u5e03\u4e0e\u89c4\u5f8b\uff0c\u5148\u5b66\u4e60 Matplotlib \u5e93\u7684\u57fa\u672c\u7406\u5ff5\u548c\u63a5\u53e3\uff0c\u7136\u540e\u5b66\u4e60\u5982\u4f55\u7ed8\u5236\u5e38\u89c1\u7684\u56fe\u5f62\u4ee5\u53ca\u66f4\u591a\u7684\u81ea\u5b9a\u4e49\u3002","title":"\u7b2c 7 \u7ae0 Matplotlib"},{"location":"07-matplotlib/#71-matplotlib","text":"","title":"7.1 Matplotlib\u5165\u95e8"},{"location":"07-matplotlib/#711-matplotlib","text":"\u6570\u636e\u53ef\u89c6\u5316\u662f\u6570\u636e\u5206\u6790\u6700\u6838\u5fc3\u7684\u5de5\u4f5c\u4e4b\u4e00\uff0c\u5b83\u65e2\u80fd\u5e2e\u52a9\u6211\u4eec\u63a2\u7d22\u6570\u636e\uff0c\u5982\u5bfb\u627e\u5f02\u5e38\u503c\uff0c\u4e5f\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u6c47\u603b\u5206\u6790\u7ed3\u679c\uff0c\u5373\u6240\u8c13\u7684\u4e00\u56fe\u80dc\u5343\u8a00\u3002Python \u6709\u7740\u4f17\u591a\u7684\u5e93\u53ef\u4ee5\u8fdb\u884c\u9759\u6001\u6216\u52a8\u6001\u7684\u6570\u636e\u53ef\u89c6\u5316\uff0c\u5176\u4e2d\u6700\u6d41\u884c\u7684\u662f Matplotlib\uff08 https://matplotlib.org/ \uff09\u3002\u56e0\u6b64\uff0c\u672c\u4e66\u4e3b\u8981\u5229\u7528 Matplotlib \u5411\u8bfb\u8005\u4ecb\u7ecd\u5982\u4f55\u5408\u7406\u5730\u9009\u62e9\u548c\u521b\u5efa\u56fe\u5f62\u3002 Matplotlib \u5e93\u7684\u5386\u53f2\u5e76\u4e0d\u662f\u5f88\u4e45\u8fdc\uff0c\u5b83\u662f John Hunter \u5728 2002 \u5e74\u542f\u52a8\u7684\u4e00\u4e2a\u9879\u76ee\uff0c\u76ee\u7684\u662f\u4e3a Python \u6784\u5efa\u5546\u4e1a\u79d1\u5b66\u8ba1\u7b97\u8f6f\u4ef6 MATLAB \u7684\u7ed8\u56fe\u63a5\u53e3\uff0c\u5728 2003 \u5e74\u53d1\u5e03\u4e86 0.1 \u7248\u672c\uff08\u5b9e\u9a8c\u7248\u672c\uff09\u3002Matplotlib \u7684\u6700\u91cd\u8981\u7279\u70b9\u662f\u5b83\u53ef\u4ee5\u5f88\u597d\u5730\u4e0e\u8bb8\u591a\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\u56fe\u5f62\u540e\u7aef\u5de5\u4f5c\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4e0d\u7ba1\u4f7f\u7528\u4ec0\u4e48\u64cd\u4f5c\u7cfb\u7edf\u6216\u662f\u60f3\u8981\u4ec0\u4e48\u8f93\u51fa\u683c\u5f0f\u7684\u56fe\u5f62\uff08PDF\u3001JPG\u3001PNG\u3001GIF \u7b49\uff09\u90fd\u53ef\u4ee5\u4f9d\u9760\u5b83\u3002\u8fd9\u79cd\u8de8\u5e73\u53f0\uff0c\u4e00\u5207\u7686\u53ef\u7528\u7684\u7279\u6027\u6210\u4e3a\u4e86 Matplotlib \u6700\u5927\u7684\u957f\u5904\uff0c\u5e76\u4e3a Matplotlib \u5e26\u6765\u4e86\u5927\u91cf\u7684\u57fa\u7840\u7528\u6237\u548c\u6d3b\u8dc3\u7684\u5f00\u53d1\u8005\u3002 \u76ee\u524d\uff0cMatplotlib \u5df2\u7ecf\u548c IPython \u5408\u4f5c\uff0c\u7b80\u5316\u4e86\u5728 IPython Shell \u548c Jupyter Notebook \u4e2d\u8fdb\u884c\u4ea4\u4e92\u5f0f\u7ed8\u56fe\u7684\u65b9\u5f0f\u3002\u9664\u6b64\u4e4b\u5916\uff0cPython \u793e\u533a\u51fa\u73b0\u4e86\u8bb8\u591a\u4ee5 Matplotlib \u4e3a\u5e95\u5c42\u7684\u53ef\u89c6\u5316\u8ba1\u7b97\u5e93\uff0c\u5176\u4e2d\u6700\u6709\u540d\u7684\u662f Seaborn\uff08 https://seaborn.pydata.org/ \uff09\uff0c\u5728\u672c\u4e66\u540e\u7eed\u7684\u7ae0\u8282\u6211\u4eec\u4f1a\u5b66\u4e60\u5b83\u3002","title":"7.1.1 Matplotlib\u5e93\u7b80\u4ecb"},{"location":"07-matplotlib/#712","text":"\u5728\u6df1\u5165\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 Matplotlib \u521b\u5efa\u56fe\u5f62\u4e4b\u524d\uff0c\u672c\u4e66\u5148\u5411\u8bfb\u8005\u4ecb\u7ecd\u4e00\u4e9b Python \u79d1\u5b66\u8ba1\u7b97\u793e\u533a\u901a\u7528\u7684\u547d\u540d\u7ea6\u5b9a\u3002 \u5728\u5bfc\u5165 NumPy \u5305\u65f6\uff0c\u6211\u4eec\u4f7f\u7528 Python \u793e\u533a\u7ea6\u5b9a\u7684 np \u66ff\u4ee3 numpy\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u4e5f\u4f7f\u7528 Matplotlib \u7684\u4e00\u4e9b\u6807\u51c6\u7b80\u5199\u7528\u4e8e\u5bfc\u5165\u3002 import matplotlib as mpl import matplotlib.pyplot as plt Python \u7528\u6237\u57fa\u672c\u4e0a\u7ed8\u56fe\u53ea\u4f1a\u7528\u5230 pyplot \u5b50\u6a21\u5757\u4e2d\u7684\u529f\u80fd\u7279\u6027\uff0c\u56e0\u6b64 plt \u662f\u4f7f\u7528 Matplotlib \u7ed8\u56fe\u6700\u5e38\u7528\u7684\u7b80\u5199\u3002","title":"7.1.2 \u547d\u540d\u7ea6\u5b9a"},{"location":"07-matplotlib/#713","text":"Matplotlib \u6700\u4f73\u7684\u4f7f\u7528\u65b9\u6cd5\u4f9d\u8d56\u4e8e\u7528\u6237\u5982\u4f55\u4f7f\u7528\u5b83\uff0c\u901a\u5e38\u6709 3 \u79cd\u5e94\u7528\u7ed8\u56fe\u7684\u573a\u666f\uff1a\u811a\u672c\u3001IPython Shell \u548c Jupyter Notebook\u3002","title":"7.1.3 \u5982\u4f55\u5c55\u793a\u56fe\u5f62"},{"location":"07-matplotlib/#714","text":"\u524d\u9762\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\uff0cMatplotlib \u652f\u6301\u5404\u79cd\u7cfb\u7edf\u548c\u56fe\u5f62\u683c\u5f0f\u3002Matplotlib \u7684\u597d\u7528\u70b9\u8fd8\u5728\u4e8e\uff0c\u4fdd\u5b58\u6240\u6709\u56fe\u5f62\u683c\u5f0f\u7684\u4ee3\u7801\u90fd\u662f\u4e00\u6837\u7684\uff0c\u53ea\u9700\u8981\u8c03\u7528\u56fe\u5f62\u5bf9\u8c61\u7684 savefig() \u65b9\u6cd5\uff0c\u975e\u5e38\u7b80\u5355\u6613\u7528\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u521b\u5efa\u4e0a\u9762\u6b63\u5f26\u4f59\u5f26\u66f2\u7ebf\u56fe\uff0c\u7136\u540e\u7528 png \u683c\u5f0f\u4fdd\u5b58\uff0c\u5e76\u8fdb\u884c\u68c0\u67e5\u3002 In [1]: %matplotlib ...: import matplotlib.pyplot as plt Using matplotlib backend: Qt5Agg In [2]: import numpy as np ...: x = np.linspace(0, 10, 100) ...: ...: fig = plt.figure() # \u751f\u6210\u4e00\u4e2a\u7a7a\u767d\u56fe\u5f62\u5e76\u5c06\u5176\u8d4b\u7ed9 fig \u5bf9\u8c61 ...: plt.plot(x, np.sin(x), '-') # \u7ed8\u5236\u5b9e\u7ebf ...: plt.plot(x, np.cos(x), '--') # \u7ed8\u5236\u865a\u7ebf Out[2]: [<matplotlib.lines.Line2D at 0x7f90d0955f98>] In [3]: # \u4fdd\u5b58\u56fe\u5f62 ...: fig.savefig(\"first.png\") ...: ...: # \u8c03\u7528\u7cfb\u7edf\u547d\u4ee4 ls \u68c0\u67e5 ...: !ls -l first.png -rw-r--r-- 1 wsx wsx 37468 8\u6708 17 10:26 first.png pdf \u662f\u5e38\u89c1\u7684\u77e2\u91cf\u56fe\u5f62\u683c\u5f0f\uff0c\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u4e00\u6837\u7684\u51fd\u6570\uff0c\u4ec5\u6539\u52a8\u4e00\u4e0b\u4fdd\u5b58\u7684\u6587\u4ef6\u62d3\u5c55\u540d\u3002 In [4]: # \u4fdd\u5b58 pdf \u77e2\u91cf\u56fe ...: fig.savefig(\"first.pdf\") ...: ...: # \u8c03\u7528\u7cfb\u7edf\u547d\u4ee4 ls \u68c0\u67e5 ...: !ls -l first.pdf -rw-r--r-- 1 wsx wsx 8555 8\u6708 17 10:26 first.pdf \u8bfb\u8005\u4e0d\u59a8\u4f7f\u7528 pdf \u9605\u8bfb\u5668\u6253\u5f00\u8be5\u6587\u4ef6\u770b\u770b\u3002 \u4e0b\u9762\u4ee3\u7801\u7ed3\u679c\u5217\u51fa Matplotlib \u652f\u6301\u7684\u6240\u6709\u56fe\u5f62\u683c\u5f0f\uff1a In [5]: fig.canvas.get_supported_filetypes() Out[5]: {'ps': 'Postscript', 'eps': 'Encapsulated Postscript', 'pdf': 'Portable Document Format', 'pgf': 'PGF code for LaTeX', 'png': 'Portable Network Graphics', 'raw': 'Raw RGBA bitmap', 'rgba': 'Raw RGBA bitmap', 'svg': 'Scalable Vector Graphics', 'svgz': 'Scalable Vector Graphics', 'jpg': 'Joint Photographic Experts Group', 'jpeg': 'Joint Photographic Experts Group', 'tif': 'Tagged Image File Format', 'tiff': 'Tagged Image File Format'} \u6ce8\u610f\uff0c\u7531\u4e8e\u4e0d\u540c\u8bfb\u8005\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u53ca\u5b89\u88c5\u7684\u56fe\u5f62\u540e\u7aef\u90fd\u53ef\u80fd\u4e0d\u540c\uff0c\u56e0\u6b64\u652f\u6301\u7684\u56fe\u5f62\u683c\u5f0f\u53ef\u80fd\u4e5f\u4f1a\u6709\u6240\u53d8\u5316\uff0c\u56e0\u800c\u5982\u679c\u4e0e\u4e0a\u8ff0\u8f93\u51fa\u4e0d\u4e00\u81f4\u4e5f\u662f\u6b63\u5e38\u7684\u3002","title":"7.1.4 \u4fdd\u5b58\u56fe\u5f62"},{"location":"07-matplotlib/#715","text":"\u5728\u524d\u9762\u7684\u51e0\u5c0f\u8282\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7c7b\u4f3c MATLAB \u7684\u547d\u4ee4\u64cd\u4f5c\u65b9\u5f0f\u8fdb\u884c\u56fe\u5f62\u7684\u521b\u5efa\u5de5\u4f5c\u3002\u9664\u4e86\u8fd9\u79cd\u64cd\u4f5c\u65b9\u5f0f\uff0cMatplotlib \u8fd8\u63d0\u4f9b\u4e86\u6bd4\u8f83\u539f\u751f\u7684 Python \u65b9\u5f0f\u64cd\u4f5c\u56fe\u5f62\uff1a\u8fd9\u79cd\u65b9\u5f0f\u628a\u6bcf\u4e00\u4e2a\u56fe\u5f62\u90fd\u770b\u4f5c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u65b9\u6cd5\u7684\u8c03\u7528\u8fbe\u5230\u56fe\u5f62\u5143\u7d20\u589e\u6539\u7684\u76ee\u7684\u3002 MATLAB \u64cd\u4f5c\u65b9\u5f0f\u975e\u5e38\u5730\u7b80\u4fbf\uff0c\u800c\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u5219\u529f\u80fd\u5f3a\u5927\u3002\u5927\u591a\u6570\u6570\u636e\u5206\u6790\u5e08\u6216\u6570\u636e\u79d1\u5b66\u5bb6\u5728\u4ee3\u7801\u4e2d\u5f80\u5f80\u540c\u65f6\u4f7f\u7528\u4e24\u8005\uff0c\u56e0\u6b64\u4ee3\u7801\u9605\u8bfb\u65f6\u5bb9\u6613\u4ea7\u751f\u56f0\u60d1\u3002\u672c\u5c0f\u8282\u5bf9\u4e24\u79cd\u7ed8\u56fe\u63a5\u53e3\u8fdb\u884c\u7b80\u8981\u4ecb\u7ecd\uff0c\u5e2e\u52a9\u8bfb\u8005\u7406\u6e05\u5b83\u4eec\u7684\u533a\u522b\u3002","title":"7.1.5 \u4e24\u79cd\u7ed8\u56fe\u63a5\u53e3"},{"location":"07-matplotlib/#72","text":"\u4e0a\u4e00\u8282\u672c\u4e66\u5411\u8bfb\u8005\u4ecb\u7ecd\u4e86 Matplotlib \u7684\u7ed8\u56fe\u573a\u666f\u4ee5\u53ca\u7ed8\u56fe\u63a5\u53e3\uff0c\u8fd9\u4e00\u8282\u6211\u4eec\u63a5\u7740\u5b66\u4e60\u5e38\u89c1\u56fe\u5f62\u7684\u7ed8\u5236\uff0c\u5305\u62ec\u7ebf\u56fe\u3001\u6563\u70b9\u56fe\u3001\u76f4\u65b9\u56fe\u3001\u997c\u56fe\u7b49\u3002\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u5f62\u6709\u5f88\u591a\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5728\u7ebf\u56fe\u4e00\u5c0f\u8282\u4e2d\u672c\u4e66\u4f1a\u8be6\u7ec6\u5730\u8fdb\u884c\u4ecb\u7ecd\uff0c\u4ee5\u4fbf\u4e8e\u8bfb\u8005\u5728\u5176\u4ed6\u7c7b\u578b\u56fe\u5f62\u7ed8\u5236\u7684\u5b66\u4e60\u4e2d\u80fd\u591f\u5feb\u901f\u7406\u89e3\u3001\u638c\u63e1\u548c\u5e94\u7528\u3002","title":"7.2 \u57fa\u672c\u56fe\u5f62\u7ed8\u5236"},{"location":"07-matplotlib/#721","text":"\u7ebf\u56fe\u5e38\u5e38\u7528\u6765\u8868\u793a\u67d0\u4e2a\u53d8\u91cf\u968f\u53e6\u4e00\u4e2a\u53d8\u91cf\u53d8\u5316\u7684\u8d8b\u52bf\uff0c\u5982\u91d1\u878d\u9886\u57df\u4e2d\u7684\u7ecf\u6d4e\u8d70\u52bf\u56fe\u3001\u533b\u9662\u4e2d\u7684\u5fc3\u7535\u56fe\u3002 pyplot \u6a21\u5757\u63d0\u4f9b\u7684 plot() \u51fd\u6570\u53ef\u4ee5\u8f7b\u677e\u5730\u7ed8\u5236\u7ebf\u56fe\uff0c\u8be5\u51fd\u6570\u9700\u8981\u8bfb\u8005\u63d0\u4f9b y \u8f74\u7684\u6570\u636e\u6216\u8005\u540c\u65f6\u63d0\u4f9b x \u8f74\u548c y \u8f74\u7684\u6570\u636e\u3002\u5982\u679c\u53ea\u63d0\u4f9b y \u8f74\u7684\u6570\u636e\uff0c\u90a3\u4e48\u51fd\u6570\u4f1a\u81ea\u52a8\u5c06 x \u8f74\u6570\u636e\u8bbe\u4e3a\u540c\u7b49\u957f\u5ea6\u7684\u6574\u6570\u5e8f\u5217\uff0c\u4ece 0 \u5f00\u59cb\u3002 \u4e0b\u9762\u4ee3\u7801\u7ed3\u679c\u663e\u793a\u65e0\u8bba\u662f\u4f7f\u7528 Python \u5185\u7f6e\u7684\u51fd\u6570 range() \u6216\u8005\u4f7f\u7528 numpy \u6a21\u5757\u63d0\u4f9b\u7684 arange() \u51fd\u6570\u751f\u6210\u5e8f\u5217 1 \u5230 10\uff0c\u7ed8\u5236\u7684\u56fe\u5f62\u5b8c\u5168\u4e00\u81f4\uff0c\u5982\u56fe7-4\u3001\u56fe7-5\u3002\u53ef\u89c1\u6211\u4eec\u4f7f\u7528 Matplotlib \u7ed8\u56fe\u7684\u91cd\u70b9\u662f\u51c6\u5907\u6570\u636e\uff0c\u5b83\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u5904\u7406\u597d\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002 In [8]: import numpy as np ...: import matplotlib.pyplot as plt ...: ...: plt.plot(range(1, 11)) Out[8]: [<matplotlib.lines.Line2D at 0x7f90d2d20c50>] In [9]: plt.plot(np.arange(1,11)) Out[9]: [<matplotlib.lines.Line2D at 0x7f90d2b2d160>] \u6211\u4eec\u518d\u6765\u770b\u770b\u9762\u5411\u5bf9\u8c61\u63a5\u53e3\u7684\u4f7f\u7528\u3002 In [10]: fig = plt.figure() ...: ax = plt.axes() In [11]: type(fig) Out[11]: matplotlib.figure.Figure In [12]: type(ax) Out[12]: matplotlib.axes._subplots.AxesSubplot \u4e0a\u9762\u4ee3\u7801\u5148\u4f7f\u7528 figure() \u51fd\u6570\u521b\u5efa\u4e86\u4e00\u4e2a Figure \u5bf9\u8c61\uff0cFigure \u5bf9\u8c61\u53ef\u4ee5\u770b\u505a\u5305\u542b\u4e00\u5207\u56fe\u5f62\u5143\u7d20\u7684\u5bb9\u5668\uff0c\u5982\u5750\u6807\u8f74\u3001\u6587\u5b57\u3001\u6807\u7b7e\u3002axes() \u7136\u540e\u521b\u5efa\u4e86\u4e00\u4e2a Axes\uff08\u5750\u6807\u8f74\uff09\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4e0a\u9762\u770b\u5230\u7684\u4e00\u4e2a\u5305\u542b\u523b\u5ea6\u548c\u6807\u7b7e\u7684\u7bb1\u5b50\uff0c\u5982\u56fe7-6\u3002 \u901a\u5e38\u5728\u4f7f\u7528 Matplotlib \u7ed8\u56fe\u65f6\uff0c\u6211\u4eec\u90fd\u4f7f\u7528 fig \u6307\u5411\u4e00\u4e2a Figure \u5bf9\u8c61\uff0cax \u6307\u5411\u4e00\u4e2a\u5750\u6807\u8f74\u5bf9\u8c61\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u5750\u6807\u8f74\uff0c\u6240\u9700\u8981\u505a\u7684\u662f\u5f80\u4e0a\u6dfb\u52a0\u6570\u636e\u3002 \u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 linspace() \u51fd\u6570\u4f46\u6ca1\u6709\u8fdb\u884c\u89e3\u91ca\uff0c\u8be5\u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u7b49\u957f\u7684\u6570\u636e\u5e8f\u5217\u3002\u4f8b\u5982\uff0clinspace(0, 5, 20) \u5c31\u4f1a\u5c06 0 \u5230 5 \u5206\u5272\u4e3a 20 \u4efd\u3002 In [13]: fig = plt.figure() ...: ax = plt.axes() ...: ...: x = np.linspace(0, 5, 20) ...: ax.plot(x, np.cos(x)) Out[13]: [<matplotlib.lines.Line2D at 0x7f90d2fa3fd0>] \u5f53\u6211\u4eec\u9700\u8981\u5728\u4e00\u4e2a\u56fe\u4e2d\u7ed8\u5236\u591a\u6761\u66f2\u7ebf\u65f6\uff0c\u6700\u7b80\u5355\u7684\u529e\u6cd5\u5c31\u662f\u591a\u6b21\u8c03\u7528 plot() \u51fd\u6570\u3002 In [14]: plt.plot(x, np.sin(x)) ...: plt.plot(x, np.cos(x)) Out[14]: [<matplotlib.lines.Line2D at 0x7f90d2a58eb8>] \u4e0a\u9762 Matplotlib \u4e3a\u66f2\u7ebf\u81ea\u52a8\u8bbe\u7f6e\u4e86\u989c\u8272\u548c\u7c7b\u578b\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u65f6\u6211\u4eec\u5e38\u9700\u8981\u81ea\u5b9a\u4e49\uff0c\u5b83\u4eec\u5206\u522b\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570 color \u548c linestype \u8fdb\u884c\u8bbe\u5b9a\u3002 color \u53c2\u6570\u63a5\u6536\u4e00\u4e2a\u4ee3\u8868\u4efb\u4f55\u989c\u8272\u7684\u5b57\u7b26\u4e32\uff0c\u652f\u6301\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u989c\u8272\u7f16\u7801\uff0c\u5982\u540d\u5b57\u3001\u989c\u8272\u4ee3\u7801\u3001\u5341\u516d\u8fdb\u5236\u3001RGB \u7b49\u3002 In [16]: plt.plot(x, 2*x, color = \"red\") # \u6309\u540d\u5b57\u6307\u5b9a\u989c\u8272 ...: plt.plot(x, 2*x+1, color = \"g\") # \u77ed\u989c\u8272\u7f16\u7801\uff08rgbcmyk\uff09 ...: ...: plt.plot(x, 2*x+2, color = \"0.6\") # \u7070\u5ea6\uff0c\u8303\u56f4\u57280-1\u4e4b\u95f4 ...: plt.plot(x, 2*x+3, color = \"#FFEE22\") # \u5341\u516d\u8fdb\u5236\u7f16\u7801 ...: plt.plot(x, 2*x+4, color = (0.8, 0.7, 0.1)) # RGB\u5143\u7ec4\uff0c\u503c\u4ece0\u52301 ...: plt.plot(x, 2*x+5, color = \"chartreuse\") # \u652f\u6301\u6240\u6709\u7684HTML\u989c\u8272\u540d ...: \u5b57 Out[16]: [<matplotlib.lines.Line2D at 0x7f90b3832630>] \u901a\u8fc7\u8bbe\u5b9a linestype \u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5c55\u793a\u975e\u5e38\u4e30\u5bcc\u7684\u7ebf\u6761\u7c7b\u578b\uff0c\u5305\u62ec\u865a\u7ebf\u3001\u5b9e\u73b0\u3001\u70b9\u5212\u7ebf\u3002 In [17]: plt.plot(x, 2*x, linestyle = 'solid') # \u5b9e\u7ebf ...: plt.plot(x, 2*x+1, linestyle = 'dashed') # \u865a\u7ebf ...: plt.plot(x, 2*x+2, linestyle = 'dashdot') # \u70b9\u5212\u7ebf ...: plt.plot(x, 2*x+3, linestyle = 'dotted') # \u5c0f\u5706\u70b9 Out[17]: [<matplotlib.lines.Line2D at 0x7f903f3b1cf8>] \u4e3a\u4e86\u7b80\u4fbf\uff0c\u8bfb\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u76f8\u5e94\u7684\u5b57\u7b26\u4ee3\u7801\u3002 In [18]: plt.plot(x, 2*x, linestyle = '-') # \u5b9e\u7ebf ...: plt.plot(x, 2*x+1, linestyle = '--') # \u865a\u7ebf ...: plt.plot(x, 2*x+2, linestyle = '-.') # \u70b9\u5212\u7ebf ...: plt.plot(x, 2*x+3, linestyle = ':') # \u5c0f\u5706\u70b9 Out[18]: [<matplotlib.lines.Line2D at 0x7f903f396fd0>] \u7ebf\u6761\u7c7b\u578b\u548c\u989c\u8272\u5f80\u5f80\u7ec4\u5408\u4f7f\u7528\uff0c\u4e3a\u4e86\u7b80\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u540c\u65f6\u5305\u542b\u7ebf\u6761\u7c7b\u578b\u4ee3\u7801\u548c\u989c\u8272\u4ee3\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4f5c\u4e3a\u975e\u5173\u952e\u5b57\u53c2\u6570\u4f20\u5165 plot() \u51fd\u6570\u3002 In [19]: plt.plot(x, 2*x, '--c') # \u9752\u8272\u7684\u865a\u7ebf ...: plt.plot(x, 2*x+2, '-.k') # \u9ed1\u8272\u7684\u70b9\u5212\u7ebf Out[19]: [<matplotlib.lines.Line2D at 0x7f903f3779b0>] \u4e86\u89e3\u4e86\u5982\u4f55\u4e3a\u7ebf\u56fe\u8bbe\u5b9a\u989c\u8272\u548c\u7ebf\u6761\u7c7b\u578b\u540e\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u7cfb\u7edf\u5730\u770b\u4e00\u4e0b plot() \u51fd\u6570\u5e38\u89c1\u7684\u53c2\u6570\u5217\u8868\u3002 plot(x, y, linestyle, linewidth, color, marker, markersize, markeredgecolor, label, alpha) \u4e0b\u9762\u662f\u5177\u4f53\u7684\u8bf4\u660e\uff1a x - \u7ebf\u56fex\u8f74\u6570\u636e y - \u7ebf\u56fey\u8f74\u6570\u636e linestyle - \u7ebf\u6761\u7c7b\u578b linewidth - \u7ebf\u6761\u5bbd\u5ea6 color - \u989c\u8272 marker - \u53ef\u4ee5\u4e3a\u7ebf\u56fe\u6dfb\u52a0\u6563\u70b9\uff0c\u8be5\u53c2\u6570\u6307\u5b9a\u70b9\u7684\u5f62\u72b6 markersize - \u6307\u5b9a\u70b9\u7684\u5927\u5c0f markeredgecolor - \u6307\u5b9a\u70b9\u7684\u8fb9\u6846\u8272 label - \u56fe\u4f8b\u6807\u7b7e \u867d\u7136 plot() \u51fd\u6570\u63d0\u4f9b\u4e86\u56fe\u4f8b\u6807\u7b7e\u4fe1\u606f\uff0c\u4f46\u9700\u8981\u914d\u5408 legend() \u51fd\u6570\u624d\u80fd\u663e\u793a\u3002 In [20]: x = np.linspace(0, 20, 100) ...: plt.plot(x, 2*x, '--c', label = 'dashed cyan') ...: plt.plot(x, 2*x+6, '-.k', label = 'dashdot black') ...: ...: plt.legend() Out[20]: <matplotlib.legend.Legend at 0x7f903de46c18> plot() \u51fd\u6570\u5176\u4ed6\u51e0\u4e2a\u9009\u9879\u4e3b\u8981\u7528\u4e8e\u81ea\u5b9a\u4e49\u7ebf\u6761\u548c\u63cf\u8ff0\u6570\u636e\u70b9\u3002\u7ebf\u56fe\u4e2d\u7ebf\u6761\u63cf\u8ff0\u4e86\u8fde\u7eed\u7684\u53d8\u5316\uff0c\u4f46\u5b9e\u9645\u89c2\u6d4b\u7684\u6570\u636e\u503c\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\u5728\u4e00\u4e9b\u5206\u6790\u4e2d\uff0c\u540c\u65f6\u89c2\u6d4b\u7ebf\u6761\u548c\u70b9\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u793a\u4f8b\u5c06 plot() \u51fd\u6570\u6d89\u53ca\u7684\u5e38\u89c1\u9009\u9879\u90fd\u8fdb\u884c\u81ea\u5b9a\u4e49\u8bbe\u5b9a\u3002 In [21]: x = range(0, 20) ...: y = np.cos(x) ...: ...: plt.plot(x, y, linestyle = '-.', ...: linewidth = 2, color = 'blue', marker = 'o', ...: markersize = 12, markeredgecolor = 'red', ...: label = 'Example Plot', alpha = 0.8) ...: plt.legend() Out[21]: <matplotlib.legend.Legend at 0x7f903de12d68> \u4e86\u89e3\u4e86\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u7f8e\u89c2\u7684\u5e26\u70b9\u7ebf\u56fe\u540e\uff0c\u8bfb\u8005\u53ea\u8981\u5bf9\u76f8\u5e94\u7684\u9009\u9879\u7565\u52a0\u66f4\u6539\u5c31\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u559c\u6b22\u7684\u7ebf\u56fe\u3002\u7ebf\u6761\u4e0e\u70b9\u7684\u7c7b\u578b\u3001\u989c\u8272\u4e0e\u5927\u5c0f\u7684\u9009\u62e9\u5728\u5b9e\u9645\u5e94\u7528\u65f6\u90fd\u9700\u8981\u82b1\u8d39\u65f6\u95f4\u8fdb\u884c\u63a2\u7d22\u3002 \u56fe\u5f62\u7684\u4f5c\u7528\u9664\u4e86\u663e\u793a\u6570\u636e\u7684\u53d8\u5316\u8d8b\u52bf\u6216\u6a21\u5f0f\uff0c\u8fd8\u5e38\u7528\u4e8e\u6bd4\u8f83\u3002\u4e0b\u9762\u4ee3\u7801\u65b0\u589e\u4e86\u4e00\u6761\u7ea2\u8272\u7684\u66f2\u7ebf\uff0c\u4e24\u8005\u7684\u5dee\u5f02\u4e00\u76ee\u4e86\u7136\u3002 In [22]: x = range(0, 20) ...: y = np.cos(x) ...: y2 = np.sin(x) - 0.5 ...: ...: plt.plot(x, y, linestyle = '-.', ...: linewidth = 2, color = 'blue', marker = 'o', ...: markersize = 12, markeredgecolor = 'red', ...: label = 'Blue line', alpha = 0.8) ...: plt.plot(x, y2, linestyle = '--', ...: linewidth = 2, color = 'red', marker = 'x', ...: markersize = 6, markeredgecolor = 'red', ...: label = 'Red line') ...: plt.legend() Out[22]: <matplotlib.legend.Legend at 0x7f903e7b7c18> \u56fe\u867d\u7136\u73b0\u5728\u5df2\u7ecf\u7ed8\u5236\u597d\u4e86\uff0c\u4f46\u7f3a\u4e4f\u4e00\u4e9b\u5fc5\u8981\u7684\u8bf4\u660e\uff1a\u5750\u6807\u8f74\u6807\u7b7e\u4ee5\u53ca\u56fe\u6807\u9898\u3002 \u5b9e\u73b0\u8fd9\u4e9b\u9700\u6c42\u975e\u5e38\u7b80\u5355\uff0cx \u4e0e y \u8f74\u6807\u7b7e\u53ef\u4ee5\u5206\u522b\u901a\u8fc7 xlabel() \u548c ylabel() \u51fd\u6570\u6dfb\u52a0\uff0c\u800c\u56fe\u6807\u9898\u53ef\u4ee5\u4f7f\u7528 title() \u6dfb\u52a0\u3002 \u4e3a\u65b9\u4fbf\u6f14\u793a\uff0c\u4e0b\u9762\u4ee3\u7801\u7ed8\u5236\u4e00\u6761\u7b80\u5355\u7684\u4f59\u5f26\u66f2\u7ebf\uff0c\u5e76\u6dfb\u52a0\u8f74\u6807\u7b7e\u548c\u6807\u9898\u3002 In [23]: x = np.linspace(0, 200, 100) ...: plt.plot(x, np.cos(x)) ...: plt.xlabel('Time (s)') ...: plt.ylabel('Cos(x)') ...: plt.title('A simple cosine curve') Out[23]: Text(0.5,1,'A simple cosine curve') \u4e0a\u9762\u6240\u6709\u7ed8\u5236\u7684\u56fe\u5f62\u90fd\u663e\u793a\u4e86\u6240\u6709\u7684\u6570\u636e\u533a\u57df\uff0c\u6709\u65f6\u5019\u6211\u4eec\u60f3\u8981\u628a\u7126\u70b9\u653e\u5230\u67d0\u4e00\u4e2a\u533a\u57df\uff0c\u8fd9\u65f6\u9700\u8981\u5bf9\u8f74\u7684\u8303\u56f4\u8fdb\u884c\u9650\u5236\uff0c\u9488\u5bf9 x \u8f74\u548c y \u8f74\u7684\u8303\u56f4\u7684\u9650\u5236 Matplotlib \u63d0\u4f9b\u4e86 xlim() \u548c ylim() \u5b9e\u73b0\u3002 \u73b0\u5728\u6211\u4eec\u5c06 x \u8f74\u8303\u56f4\u9650\u5b9a\u5728 50 \u5230 150\uff0cy\u8f74\u8303\u56f4\u9650\u5b9a\u5728 -0.5 \u5230 0.5\u3002 In [24]: plt.plot(x, np.cos(x)) ...: plt.xlim(50, 150) ...: plt.ylim(-0.5, 0.5) Out[24]: (-0.5, 0.5) \u5982\u679c\u6211\u4eec\u5c06\u4e0a\u9762\u8bbe\u5b9a\u7684\u53c2\u6570\u503c\u53cd\u8fc7\u6765\uff0c\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u5750\u6807\u8f74\u7684\u53cd\u8f6c\u3002 In [25]: plt.plot(x, np.cos(x)) ...: plt.xlim(150, 50) ...: plt.ylim(0.5, -0.5) Out[25]: (0.5, -0.5) \u9664\u4e86\u4f7f\u7528 xlim() \u548c ylim() \u51fd\u6570\u5206\u522b\u8bbe\u7f6e x \u8f74\u548c y \u8f74\u7684\u8303\u56f4\uff0cMatplotlib \u8fd8\u63d0\u4f9b\u4e86\u51fd\u6570 axis() \u5bf9\u5b83\u4eec\u540c\u65f6\u8fdb\u884c\u8bbe\u5b9a\uff0c\u8be5\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u5f62\u5982 [xmin, xmax, ymin, ymax] \u7684\u5217\u8868\u4f5c\u4e3a\u53c2\u6570\u3002 In [26]: plt.plot(x, np.cos(x)) ...: plt.axis([25, 150, -1, 0]) ...: plt.xlabel('Time (s)') ...: plt.ylabel('Cos(x)') ...: plt.title('A cosine curve with limited x and y') Out[26]: Text(0.5,1,'A cosine curve with limited x and y') \u6709\u610f\u601d\u7684\u662f\uff0caxis() \u51fd\u6570\u9664\u4e86\u652f\u6301\u6570\u503c\u5217\u8868\u4f5c\u4e3a\u8f93\u5165\uff0c\u8fd8\u652f\u6301\u5b57\u7b26\u9009\u9879\uff0cMatplotlib \u4f1a\u6839\u636e\u8f93\u5165\u7684\u5b57\u7b26\u9009\u9879\u81ea\u52a8\u5730\u5bf9\u8f74\u8fdb\u884c\u8c03\u6574\uff0c\u8fd9\u5bf9\u7528\u6237\u5b9e\u5728\u592a\u53cb\u597d\u4e0d\u8fc7\u4e86\u3002 axis() \u51fd\u6570\u5e38\u89c1\u652f\u6301\u7684\u9009\u9879\u6709\uff1a axis(\u2018off\u2019) - \u5173\u95ed\u8f74\u7ebf\u548c\u6807\u7b7e axis(\u2018equal\u2019) - \u4f7fx\u8f74\u4e0ey\u8f74\u4fdd\u6301\u4e0e\u5c4f\u5e55\u4e00\u81f4\u7684\u9ad8\u5bbd\u6bd4\uff08\u6a2a\u7eb5\u6bd4\uff09 axis(\u2018tight\u2019) - \u4f7fx\u4e0ey\u8f74\u9650\u5236\u5728\u6709\u6570\u636e\u7684\u533a\u57df axis(\u2018square\u2019) - \u4f7fx\u4e0ey\u8f74\u5750\u6807\u4e00\u81f4 \u4e0b\u9762\u901a\u8fc7\u4e00\u4e9b\u56fe\u6765\u8ba4\u8bc6\u8fd9\u4e9b\u9009\u9879\u7684\u5b9e\u9645\u6548\u679c\uff0c\u5176\u4ed6 axis() \u652f\u6301\u7684\u9009\u9879\u8bf7\u901a\u8fc7 plt.axis? \u8bbf\u95ee\u51fd\u6570\u6587\u6863\u3002 In [27]: plt.plot(x, np.cos(x)) ...: plt.axis('off') Out[27]: (-10.0, 210.0, -1.0999621189366728, 1.0999981961398415) In [28]: plt.plot(x, np.cos(x)) ...: plt.axis('square') Out[28]: (-10.0, 210.0, -1.0999621189366728, 218.90003788106333) In [29]: plt.plot(x, np.cos(x)) ...: plt.axis('equal') Out[29]: (-10.0, 210.0, -1.0999621189366728, 1.0999981961398415) In [30]: plt.plot(x, np.cos(x)) ...: plt.axis('tight') Out[30]: (-10.0, 210.0, -1.0999621189366728, 1.0999981961398415) \u8fd9\u4e00\u5c0f\u8282\u672c\u4e66\u4ee5\u7ebf\u56fe\u4e3a\u5bf9\u8c61\u5411\u8bfb\u8005\u8be6\u7ec6\u5730\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 Matplotlib \u7ed8\u5236\u7ebf\u56fe\u8fd9\u4e00\u5e38\u89c1\u7684\u56fe\u5f62\u4ee5\u53ca\u5982\u4f55\u6dfb\u52a0\u6807\u7b7e\u3001\u6807\u9898\u3001\u8f74\u8303\u56f4\u9650\u5b9a\u7b49\u7b49\u81ea\u5b9a\u81ea\u5b9a\u4e49\u64cd\u4f5c\u3002\u6709\u4e86\u7ebf\u56fe\u4f5c\u4e3a\u5b66\u4e60\u7684\u57fa\u7840\uff0c\u672c\u4e66\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u5c0f\u8282\u5c06\u4e0d\u518d\u5bf9\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\u8fdb\u884c\u8d58\u8ff0\uff0c\u53ea\u5bf9\u57fa\u7840\u56fe\u5f62\u7684\u7ed8\u56fe\u51fd\u6570\u8fdb\u884c\u5fc5\u8981\u7684\u4ecb\u7ecd\u3002","title":"7.2.1 \u7ebf\u56fe"},{"location":"07-matplotlib/#722","text":"\u6563\u70b9\u56fe\u5728\u89c2\u5bdf\u6570\u636e\u91cf\u4ee5\u53ca\u6570\u636e\u7684\u5206\u5e03\u65f6\u975e\u5e38\u6709\u7528\u3002Matplotlib \u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u7ed8\u5236\u70b9\u56fe\uff1a\u4e00\u79cd\u662f\u6211\u4eec\u4e0a\u4e00\u5c0f\u8282\u5b66\u4e60\u7684 plot() \u51fd\u6570\uff0c\u53e6\u4e00\u79cd\u662f\u8fd9\u4e00\u5c0f\u8282\u5c06\u8981\u4ecb\u7ecd\u7684 scatter() \u51fd\u6570\u3002 \u5bf9\u4e8e\u7b80\u5355\u7684\u56fe\u5f62\uff0c\u8bfb\u8005\u9009\u62e9\u4f7f\u7528\u4e24\u79cd\u65b9\u5f0f\u7684\u54ea\u4e00\u79cd\u53d6\u51b3\u4e8e\u81ea\u5df1\u7684\u4e60\u60ef\u3002plot() \u51fd\u6570\u6bd4\u8f83\u7b80\u5355\uff0c\u800c scatter() \u5219\u63d0\u4f9b\u4e86\u66f4\u591a\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u7279\u6027\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u540e\u8005\u5728\u5b9e\u73b0\u4e0a\u4f1a\u9700\u8981\u66f4\u591a\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u56e0\u6b64\u5bf9\u4e8e\u5927\u578b\u7684\u6570\u636e\u96c6\uff0cplot() \u53ef\u80fd\u66f4\u4e3a\u5b9e\u7528\u3002 \u6211\u4eec\u5148\u901a\u8fc7\u4e24\u4e2a\u7b80\u5355\u7684\u70b9\u56fe\u6765\u4e86\u89e3\u4e24\u79cd\u65b9\u5f0f\u4f7f\u7528\u4e0a\u7684\u4e0d\u540c\u3002plot() \u51fd\u6570\u9ed8\u8ba4\u7ed8\u5236\u7684\u662f\u7ebf\u56fe\uff0c\u4e3a\u4e86\u663e\u793a\u70b9\u56fe\uff0c\u6211\u4eec\u9700\u8981\u4f20\u5165\u975e\u5173\u952e\u5b57\u53c2\u6570 \u201co\u201d \u8868\u793a\u70b9\uff0c\u800c scatter() \u51fd\u6570\u4e0d\u9700\u8981\u8fd9\u6837\u7684\u8bbe\u5b9a\u3002 In [31]: import numpy as np ...: import matplotlib.pyplot as plt ...: ...: x = range(1, 11) ...: plt.plot(x, x, \"o\", color = \"red\") # \u8bbe\u5b9a\u4e3a\u7ea2\u8272\u7684\u70b9 Out[31]: [<matplotlib.lines.Line2D at 0x7f903a168048>] scatter() \u51fd\u6570\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570 marker \u53ef\u4ee5\u8bbe\u5b9a\u70b9\u7684\u7c7b\u578b\uff0c\u9ed8\u8ba4\u662f\u7528 \u201co\u201d \u8868\u793a\u7684\u5c0f\u5706\u70b9\u3002 In [32]: x = range(1, 11) ...: plt.scatter(x, x) Out[32]: <matplotlib.collections.PathCollection at 0x7f903f04c668> In [33]: plt.scatter(x, x, marker = 'o') # \u4e0e\u4e0a\u9762\u4ee3\u7801\u8f93\u51fa\u56fe\u5f62\u4e00\u81f4 Python \u652f\u6301\u5f88\u591a\u79cd\u70b9\u7c7b\u578b\uff0c\u5982\u5706\u70b9\u3001\u65b9\u5757\u3001\u4e09\u89d2\u5f62\u3002\u4e3a\u4e86\u65b9\u4fbf\u5c55\u793a\u70b9\u7684\u7b26\u53f7\u4e0e\u5bf9\u5e94\u7684\u7c7b\u578b\uff0c\u4e0b\u9762\u751f\u6210\u4e00\u5806\u968f\u673a\u7684\u6570\u636e\u70b9\u5e76\u8c03\u7528 for \u5faa\u73af\u6839\u636e\u4e0d\u540c\u7684\u70b9\u7c7b\u578b\u7ed8\u5236\u56fe\u5f62\uff0c\u5e76\u7528\u56fe\u4f8b\u76f4\u89c2\u5c55\u793a\u7b26\u53f7\u4e0e\u70b9\u7c7b\u578b\u7684\u5bf9\u5e94\u5173\u7cfb\u3002 In [34]: # \u521b\u5efa\u4e00\u4e2a\u9694\u79bb\u7684\u968f\u673a\u6570\u751f\u6210\u5668 ...: rng = np.random.RandomState(123456) ...: ...: # \u5faa\u73af\u7ed8\u5236\u70b9\u56fe ...: for marker in ['o', '.', ',', 'x', '+', 'v', '^', '<', '>', 's', 'd ...: ']: ...: plt.scatter(list(rng.rand(5)), list(rng.rand(5)), marker = mark ...: er, ...: label=\"marker='{0}'\".format(marker)) ...: ...: # \u663e\u793a\u56fe\u4f8b ...: plt.legend(numpoints=1) ...: plt.xlim(0, 2) # \u907f\u514d\u56fe\u4f8b\u4e0e\u70b9\u91cd\u53e0 Out[34]: (0, 2) \u5982\u679c\u6570\u636e\u70b9\u592a\u591a\uff0c\u70b9\u548c\u70b9\u4f1a\u91cd\u53e0\u5230\u4e00\u8d77\uff0c\u8fd9\u6837\u56fe\u5f62\u53ef\u80fd\u4f1a\u4e0d\u7f8e\u89c2\u5e76\u4e14\u4f1a\u963b\u788d\u8bfb\u8005\u5bf9\u4e8e\u6570\u636e\u91cf\u7684\u5224\u65ad\uff08\u5982\u56fe7-26\uff09\u3002\u6bd4\u8f83\u597d\u7684\u89e3\u51b3\u529e\u6cd5\u662f\u4e3a\u70b9\u8bbe\u7f6e\u4e00\u5b9a\u7684\u900f\u660e\u5ea6\uff08\u5982\u56fe7-27\uff09\u3002 In [35]: rng = np.random.RandomState(12) ...: x = rng.randn(200) ...: y = rng.randn(200) ...: ...: _ = plt.scatter(x, y) In [36]: plt.scatter(x, y, alpha=0.5) # \u4e3a\u6570\u636e\u70b9\u8bbe\u7f6e\u900f\u660e\u5ea6 Out[36]: <matplotlib.collections.PathCollection at 0x7f903ec65b00> \u53e6\u5916\uff0c\u70b9\u7684\u5927\u5c0f\u548c\u989c\u8272\u5e38\u5e38\u7528\u6765\u8868\u793a\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u5b83\u4eec\u5206\u522b\u53ef\u4ee5\u901a\u8fc7\u5173\u952e\u5b57\u53c2\u6570 s \u548c c \u8fdb\u884c\u8bbe\u7f6e\u3002 In [37]: colors = rng.rand(200) ...: sizes = 1000 * rng.rand(200) ...: ...: plt.scatter(x, y, c=colors, s=sizes, alpha=0.3) Out[37]: <matplotlib.collections.PathCollection at 0x7f903e90cb70> \u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u989c\u8272\u6761\u52a0\u4e0a\uff0c\u4ee5\u663e\u793a\u989c\u8272\u4ee3\u8868\u7684\u6570\u503c\u4fe1\u606f\u3002 In [38]: plt.scatter(x, y, c=colors, s=sizes, alpha=0.3) ...: plt.colorbar() Out[38]: <matplotlib.colorbar.Colorbar at 0x7f903e89a438>","title":"7.2.2 \u6563\u70b9\u56fe"},{"location":"07-matplotlib/#723","text":"\u6761\u5f62\u56fe\u4e5f\u662f\u4e00\u79cd\u5e38\u7528\u7684\u56fe\u5f62\uff0c\u5e38\u89c1\u4e8e\u5404\u79cd PPT \u7684\u5c55\u793a\u4e2d\uff0c\u4e3a\u5404\u79cd\u804c\u4e1a\u4eba\u58eb\u6240\u559c\u7231\u3002\u5bf9\u4e8e\u5404\u79cd\u573a\u666f\u4e0b\u6570\u503c\u7684\u6bd4\u8f83\uff0c\u5b83\u975e\u5e38\u7b80\u5355\u76f4\u89c2\u3002Matplotlib \u63d0\u4f9b\u4e86 bar() \u51fd\u6570\u7ed8\u5236\u6761\u5f62\u56fe\uff0c\u672c\u5c0f\u8282\u901a\u8fc7\u51e0\u4e2a\u4f8b\u5b50\u5411\u8bfb\u8005\u4ecb\u7ecd\u5982\u4f55\u7ed8\u5236\u5782\u76f4\u6761\u5f62\u56fe\u3001\u6c34\u5e73\u6761\u5f62\u56fe\u3001\u5206\u7ec4\u6761\u5f62\u56fe\u4ee5\u53ca\u5806\u53e0\u6761\u5f62\u56fe\u3002","title":"7.2.3 \u6761\u5f62\u56fe"},{"location":"07-matplotlib/#724","text":"\u4e00\u4e2a\u7b80\u5355\u7684\u76f4\u65b9\u56fe\u662f\u8bfb\u8005\u4e86\u89e3\u6570\u636e\u5f88\u597d\u7684\u5f00\u59cb\uff1a\u5b83\u53ef\u4ee5\u76f4\u89c2\u5730\u5c55\u793a\u4e86\u6570\u636e\u7684\u5206\u5e03\uff0c\u5305\u62ec\u6570\u503c\u5206\u5e03\u7684\u533a\u95f4\uff0c\u5bc6\u5ea6\u4e0e\u5f62\u72b6\u3002\u5728\u5b9e\u9645\u7684\u5de5\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u8bfb\u8005\u53ef\u80fd\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6570\u5b66\u5efa\u6a21\u548c\u7edf\u8ba1\u5206\u6790\uff0c\u8fd9\u4e9b\u6570\u636e\u5904\u7406\u6280\u672f\u5f80\u5f80\u57fa\u4e8e\u6570\u636e\u7b26\u5408\u67d0\u4e9b\u5047\u8bbe\uff0c\u800c\u76f4\u65b9\u56fe\u662f\u68c0\u67e5\u6570\u636e\u6700\u597d\u7684\u9009\u62e9\u4e4b\u4e00\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7 NumPy \u6a21\u5757\u63d0\u4f9b\u7684\u968f\u673a\u6570\u636e\u751f\u6210\u51fd\u6570\u4ea7\u751f\u7b26\u5408\u6b63\u6001\u5206\u5e03\u7684\u968f\u673a\u6570\u636e\uff0c\u5e76\u4ee5\u5b83\u4e3a\u6837\u4f8b\u7ed8\u5236\u76f4\u65b9\u56fe\u3002 In [44]: import numpy as np ...: import matplotlib.pyplot as plt ...: ...: randn_data = np.random.randn(1000) ...: ...: plt.hist(randn_data) Out[44]: (array([ 5., 20., 57., 130., 206., 215., 207., 106., 44., 10.]), array([-3.18406638, -2.57808999, -1.97211359, -1.3661372 , -0.76016081, -0.15418442, 0.45179198, 1.05776837, 1.66374476, 2.26972115, 2.87569755]), <a list of 10 Patch objects>) hist() \u51fd\u6570\u4e5f\u6709\u975e\u5e38\u591a\u7684\u9009\u9879\u7528\u4e8e\u8c03\u6574\u56fe\u5f62\u3002 plt.hist(x, bins=10, range=None, normed=False, weights=None, cumulative=False, bottom=None, histtype='bar', align='mid', orientation='vertical', rwidth=None, log=False, color=None, label=None, stacked=False) x - \u6307\u5b9a\u8981\u7ed8\u5236\u76f4\u65b9\u56fe\u7684\u6570\u636e bins - \u6307\u5b9a\u76f4\u65b9\u56fe\u6761\u5f62\u7684\u4e2a\u6570 range - \u6307\u5b9a\u76f4\u65b9\u56fe\u6570\u636e\u7684\u4e0a\u4e0b\u8fb9\u754c\uff0c\u9ed8\u8ba4\u5305\u542b\u7ed8\u56fe\u6570\u636e\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c density - \u662f\u5426\u5c06\u76f4\u65b9\u56fe\u7684\u9891\u6570\u8f6c\u6362\u6210\u9891\u7387 weights - \u4e3a\u6bcf\u4e00\u4e2a\u6570\u636e\u70b9\u8bbe\u7f6e\u6743\u91cd cumulative - \u662f\u5426\u9700\u8981\u8ba1\u7b97\u7d2f\u8ba1\u9891\u6570\u6216\u9891\u7387 bottom - \u53ef\u4ee5\u4e3a\u76f4\u65b9\u56fe\u7684\u6bcf\u4e2a\u6761\u5f62\u6dfb\u52a0\u57fa\u51c6\u7ebf\uff0c\u9ed8\u8ba4\u4e3a0 histtype - \u6307\u5b9a\u76f4\u65b9\u56fe\u7684\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3abar\uff0c\u9664\u6b64\u8fd8\u6709\u2019barstacked\u2019\u3001\u2018step\u2019\u3001\u2018stepfilled\u2019 align - \u8bbe\u7f6e\u6761\u5f62\u8fb9\u754c\u503c\u7684\u5bf9\u5176\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u4e3amid\uff0c\u9664\u6b64\u8fd8\u6709\u2019left\u2019\u548c\u2019right\u2019 orientation - \u8bbe\u7f6e\u76f4\u65b9\u56fe\u7684\u6446\u653e\u65b9\u5411\uff0c\u9ed8\u8ba4\u4e3a\u5782\u76f4\u65b9\u5411 rwidth - \u8bbe\u7f6e\u76f4\u65b9\u56fe\u6761\u5f62\u5bbd\u5ea6\u7684\u767e\u5206\u6bd4 log - \u662f\u5426\u9700\u8981\u5bf9\u7ed8\u56fe\u6570\u636e\u8fdb\u884clog\u53d8\u6362 color - \u8bbe\u7f6e\u76f4\u65b9\u56fe\u7684\u586b\u5145\u8272 label - \u8bbe\u7f6e\u76f4\u65b9\u56fe\u7684\u6807\u7b7e\uff0c\u53ef\u901a\u8fc7legend\u5c55\u793a\u5176\u56fe\u4f8b stacked - \u5f53\u6709\u591a\u4e2a\u6570\u636e\u65f6\uff0c\u662f\u5426\u9700\u8981\u5c06\u76f4\u65b9\u56fe\u5448\u5806\u53e0\u6446\u653e\uff0c\u9ed8\u8ba4\u6c34\u5e73\u6446\u653e \u73b0\u5728\u6211\u4eec\u66f4\u6539\u51e0\u4e2a\u6700\u5e38\u7528\u7684\u9009\u9879\u770b\u770b\u3002 In [45]: _ = plt.hist(randn_data, bins=30, density=True, ...: histtype='step', color='steelblue') \u5982\u679c\u8981\u6bd4\u8f83\u591a\u4e2a\u6570\u636e\u7684\u5206\u5e03\uff0c\u4f7f\u7528\u9009\u9879 histtype=\u2019stepfilled\u2019 \u548c\u8bbe\u7f6e\u4e00\u5b9a\u7684\u900f\u660e\u5ea6\u4f1a\u5f88\u597d\u7528\u3002 In [45]: _ = plt.hist(randn_data, bins=30, density=True, ...: histtype='step', color='steelblue') In [46]: x1 = np.random.normal(0, 0.4, 1000) ...: x2 = np.random.normal(-3, 1, 1000) ...: x3 = np.random.normal(2, 2, 1000) ...: ...: kwargs = dict(histtype='stepfilled', alpha=0.5, density=True, bins= ...: 50) ...: ...: _ = plt.hist(x1, **kwargs) ...: _ = plt.hist(x2, **kwargs) ...: _ = plt.hist(x3, **kwargs) \u6709\u65f6\u5019\uff0c\u6211\u4eec\u4e0d\u4ec5\u4ec5\u60f3\u901a\u8fc7\u76f4\u65b9\u56fe\u76f4\u89c2\u5730\u770b\u5230\uff0c\u800c\u4e14\u60f3\u83b7\u53d6\u4e0d\u540c\u6761\u5f62\u4e2a\u6570\u4e0b\u533a\u95f4\u5185\u7684\u9891\u6570/\u9891\u7387\u3002NumPy \u63d0\u4f9b\u7684 histogram() \u51fd\u6570\u53ef\u4ee5\u6ee1\u8db3\u8fd9\u4e2a\u9700\u6c42\u3002 \u4e0b\u9762\u6211\u4eec\u4ece randn_data \u4e2d\u63d0\u53d6\u8bbe\u7f6e 10 \u4e2a\u6761\u5f62\u65f6\u7684\u5404\u81ea\u7684\u9891\u6570\u3002 In [47]: counts, bin_edges = np.histogram(randn_data, bins=10) ...: print(counts) [ 5 20 57 130 206 215 207 106 44 10] \u8bbe\u7f6e density=True \u53ef\u4ee5\u83b7\u53d6\u76f8\u5e94\u7684\u9891\u7387\u3002 In [48]: density, bin_edges = np.histogram(randn_data, bins=10, density=True ...: ) ...: print(density) [0.00825115 0.03300459 0.09406307 0.21452981 0.33994724 0.3547993 0.34159747 0.17492431 0.07261009 0.01650229] \u5982\u679c\u4f7f\u7528\u7684\u662f\u4e8c\u7ef4\u6570\u636e\uff0cMatplotlib \u540c\u6837\u63d0\u4f9b\u4e86\u51fd\u6570 hist2d() \u6765\u67e5\u770b\u6570\u636e\u7684\u5206\u5e03\u3002\u76f8\u6bd4\u4e8e\u4e00\u7ef4\u6570\u636e\u4e2d\u76f4\u65b9\u56fe\u5c06\u6570\u636e\u5207\u5206\u5230\u4e0d\u540c\u7684\u533a\u95f4\u4e2d\u53bb\uff0c\u4e8c\u7ef4\u76f4\u65b9\u56fe\u5728\u4e24\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u5207\u5206\uff0c\u56e0\u6b64\u4f1a\u5f97\u5230\u4e00\u4e2a\u4e00\u4e2a\u7684\u5c0f\u77e9\u5f62\u3002 \u540c\u6837\u5730\uff0c\u6211\u4eec\u4f7f\u7528\u968f\u673a\u6570\u636e\u751f\u6210\u51fd\u6570\u751f\u6210\u4e8c\u7ef4\u7684\u968f\u673a\u6570\u636e\u7528\u4e8e\u7ed8\u56fe\u6f14\u793a\u3002 In [49]: # \u521b\u5efa\u4e8c\u7ef4\u968f\u673a\u6570\u636e ...: mean = [0, 0] # \u5747\u503c ...: cov = [[1, 1], [1, 2]] # \u534f\u65b9\u5dee\u77e9\u9635 ...: x, y = np.random.multivariate_normal(mean, cov, 10000).T ...: ...: # \u7ed8\u5236\u56fe\u5f62 ...: plt.hist2d(x, y, bins=30, cmap='Reds') ...: cb = plt.colorbar() ...: cb.set_label(u'\u8ba1\u6570')","title":"7.2.4 \u76f4\u65b9\u56fe"},{"location":"07-matplotlib/#725","text":"\u997c\u56fe\u4e5f\u662f\u5e38\u89c1\u4e14\u4e3a\u4eba\u559c\u7231\u7684\u4e00\u79cd\u56fe\u5f62\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u79bb\u6563\u53d8\u91cf\u5404\u6c34\u5e73\u7684\u5360\u6bd4\u60c5\u51b5\u3002Matplotlib \u63d0\u4f9b\u4e86 pie() \u51fd\u6570\u7528\u4e8e\u997c\u56fe\u7684\u7ed8\u5236\uff0c\u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a In [50]: import matplotlib.pyplot as plt ...: _ = plt.pie(range(5)) \u63a5\u7740\u6211\u4eec\u770b\u4e00\u4e0b pie() \u63d0\u4f9b\u7684\u4e00\u4e9b\u8be6\u7ec6\u9009\u9879\uff1a plt.pie(x, explode=None, labels=None, colors=None, autopct=None, pctdistance=0.6, shadow=False, labeldistance=1.1, startangle=None, radius=None, counterclock=True, wedgeprops=None, textprops=None, center=(0, 0), frame=False) x - \u7ed8\u56fe\u7684\u6570\u636e explode - \u6307\u5b9a\u997c\u56fe\u67d0\u4e9b\u90e8\u5206\u7684\u7a81\u51fa\u663e\u793a labels - \u6dfb\u52a0\u6807\u7b7e colors - \u6307\u5b9a\u586b\u5145\u8272 autopct - \u81ea\u52a8\u6dfb\u52a0\u767e\u5206\u6bd4\u663e\u793a\uff0c\u53ef\u4ee5\u91c7\u7528\u683c\u5f0f\u5316\u7684\u65b9\u6cd5\u663e\u793a pctdistance - \u8bbe\u7f6e\u767e\u5206\u6bd4\u6807\u7b7e\u4e0e\u5706\u5fc3\u7684\u8ddd\u79bb shadow - \u662f\u5426\u6dfb\u52a0\u9634\u5f71\u6548\u679c labeldistance - \u8bbe\u7f6e\u5404\u6247\u5f62\u6807\u7b7e\u4e0e\u5706\u5fc3\u7684\u8ddd\u79bb startangle - \u8bbe\u7f6e\u997c\u56fe\u7684\u521d\u59cb\u6446\u653e\u89d2\u5ea6 radius - \u8bbe\u7f6e\u997c\u56fe\u7684\u534a\u5f84\u5927\u5c0f counterclock - \u662f\u5426\u8ba9\u997c\u56fe\u6309\u9006\u65f6\u9488\u987a\u5e8f\u5448\u73b0 wedgeprops - \u8bbe\u7f6e\u997c\u56fe\u5185\u5916\u8fb9\u754c\u7684\u5c5e\u6027\uff0c\u5982\u8fb9\u754c\u7ebf\u7684\u7c97\u7ec6\u3001\u989c\u8272\u7b49 textprops - \u8bbe\u7f6e\u997c\u56fe\u4e2d\u6587\u672c\u7684\u5c5e\u6027\uff0c\u5982\u5b57\u4f53\u5927\u5c0f\u3001\u989c\u8272\u7b49 center - \u6307\u5b9a\u997c\u56fe\u7684\u4e2d\u5fc3\u70b9\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a\u539f\u70b9 frame - \u662f\u5426\u8981\u663e\u793a\u997c\u56fe\u80cc\u540e\u7684\u56fe\u6846\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3aTrue\u7684\u8bdd\uff0c\u9700\u8981\u540c\u65f6\u63a7\u5236\u56fe\u6846x\u8f74\u3001y\u8f74\u7684\u8303\u56f4\u548c\u997c\u56fe\u7684\u4e2d\u5fc3\u4f4d\u7f6e \u4f7f\u7528\u8fd9\u4e9b\u9009\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u4e30\u5bcc\u7684\u997c\u56fe\u5448\u73b0\u6548\u679c\u3002 \u5047\u8bbe\u67d0\u52b3\u52a1\u516c\u53f8\u73b0\u5728\u7edf\u8ba1\u4e86\u804c\u5de5\u7684\u5b66\u5386\u5360\u6bd4\u60c5\u51b5\uff0c\u73b0\u5728\u60f3\u8981\u4f7f\u7528\u997c\u56fe\u5c55\u73b0\u51fa\u6765\uff0c\u5e76\u7a81\u51fa\u7855\u58eb\u5b66\u4f4d\u7684\u7fa4\u4f53\u3002\u6211\u4eec\u901a\u8fc7\u8fd9\u4e2a\u9700\u6c42\u7684\u5b9e\u73b0\u5b66\u4e60\u4e00\u4e9b\u5e38\u7528\u9009\u9879\u7684\u7528\u6cd5\u3002 In [51]: # \u6784\u9020\u6570\u636e ...: edu = [0.26,0.35,0.32,0.09,0.08] ...: labels = [u'\u4e2d\u4e13',u'\u5927\u4e13',u'\u672c\u79d1',u'\u7855\u58eb',u'\u5176\u4ed6'] ...: ...: explode = [0,0,0,0.1,0] # \u7a81\u51fa\u7855\u58eb\u7fa4\u4f53 ...: colors=['#9999ff','#ff9999','#7777aa','#2442aa','#dd5555'] # \u81ea\u5b9a\u4e49 ...: \u989c\u8272 ...: ...: # \u7ed8\u5236\u997c\u56fe ...: _ = plt.pie(x = edu, ...: explode=explode, ...: labels=labels, # \u6dfb\u52a0\u6559\u80b2\u6c34\u5e73\u6807\u7b7e ...: colors=colors, # \u8bbe\u7f6e\u997c\u56fe\u7684\u81ea\u5b9a\u4e49\u586b\u5145\u8272 ...: autopct='%.1f%%', # \u8bbe\u7f6e\u767e\u5206\u6bd4\u7684\u683c\u5f0f\uff0c\u8fd9\u91cc\u4fdd\u7559\u4e00\u4f4d\u5c0f\u6570 ...: ...: pctdistance=0.8, # \u8bbe\u7f6e\u767e\u5206\u6bd4\u6807\u7b7e\u4e0e\u5706\u5fc3\u7684\u8ddd\u79bb ...: labeldistance = 1.2, # \u8bbe\u7f6e\u6559\u80b2\u6c34\u5e73\u6807\u7b7e\u4e0e\u5706\u5fc3\u7684\u8ddd\u79bb ...: startangle = 180, # \u8bbe\u7f6e\u997c\u56fe\u7684\u521d\u59cb\u89d2\u5ea6 ...: radius = 1.5, # \u8bbe\u7f6e\u997c\u56fe\u7684\u534a\u5f84 ...: counterclock = False, # \u662f\u5426\u9006\u65f6\u9488\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3a\u987a\u65f6\u9488\u65b9\u5411 ...: wedgeprops = {'linewidth': 1.5, 'edgecolor':'green'}, # \u8bbe ...: \u7f6e\u997c\u56fe\u5185\u5916\u8fb9\u754c\u7684\u5c5e\u6027\u503c ...: textprops = {'fontsize':12, 'color':'k'}, # \u8bbe\u7f6e\u6587\u672c\u6807\u7b7e\u7684 ...: \u5c5e\u6027\u503c ...: center = (2,2), # \u8bbe\u7f6e\u997c\u56fe\u7684\u539f\u70b9 ...: frame = 0 ) # \u662f\u5426\u663e\u793a\u997c\u56fe\u7684\u56fe\u6846\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u663e\u793a","title":"7.2.5 \u997c\u56fe"},{"location":"07-matplotlib/#726","text":"\u7bb1\u7ebf\u56fe\u662f\u672c\u8282\u4ecb\u7ecd\u7684\u6700\u540e\u4e00\u79cd\u56fe\u5f62\u3002\u7bb1\u7ebf\u56fe\u4e00\u822c\u7528\u6765\u5c55\u73b0\u6570\u636e\u7684\u5206\u5e03\uff0c\u5982\u4e0a\u4e0b\u56db\u5206\u4f4d\u503c\u3001\u4e2d\u4f4d\u6570\u7b49\u3002\u540c\u65f6\uff0c\u7bb1\u7ebf\u56fe\u53ef\u4ee5\u76f4\u89c2\u5730\u5c55\u793a\u5f02\u5e38\u70b9\u3002 Matplotlib \u63d0\u4f9b\u4e86 boxplot() \u51fd\u6570\u7ed8\u5236\u7bb1\u7ebf\u56fe\uff0c\u4e0b\u9762\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002 In [53]: import matplotlib.pyplot as plt ...: ...: _ = plt.boxplot(range(10)) # 10\u4e2a\u6570\uff0c0-9 \u7bb1\u7ebf\u56fe\u867d\u7136\u770b\u8d77\u6765\u7b80\u5355\uff0c\u4f46\u5305\u542b\u7684\u6570\u636e\u4fe1\u606f\u975e\u5e38\u4e30\u5bcc\u3002\u6a59\u8272\u7684\u7ebf\u6761\u8868\u793a\u4e2d\u4f4d\u6570\uff0c\u4e2d\u95f4\u6761\u5f62\u7684\u4e0a\u4e0b\u8fb9\u754c\u5206\u522b\u5bf9\u5e94\u4e0a\u56db\u5206\u4f4d\u6570\uff0875% \u7684\u6570\u636e\u90fd\u5c0f\u4e8e\u8be5\u503c\uff09\u4e0e\u4e0b\u56db\u4f4d\u5206\u6570\uff0825% \u7684\u6570\u636e\u5c0f\u4e8e\u8be5\u503c\uff09\uff0c\u4ece\u6761\u5f62\u5ef6\u4f38\u51fa\u4e24\u6761\u7ebf\u6bb5\uff0c\u4e24\u6761\u7ebf\u6bb5\u7684\u7ec8\u70b9\u8868\u793a\u6570\u636e\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002 In [54]: print(np.median(np.arange(10))) # \u4e2d\u4f4d\u6570 ...: ...: print(np.quantile(np.arange(10), 0.25)) # \u4e0b4\u5206\u4f4d\u6570\uff0c\u4e5f\u53eb\u7b2c1\u5206\u4f4d\u6570 ...: ...: print(np.quantile(np.arange(10), 0.75)) # \u4e0a4\u5206\u4f4d\u6570\uff0c\u4e5f\u53eb\u7b2c3\u5206\u4f4d\u6570 ...: 4.5 2.25 6.75 boxplot() \u51fd\u6570\u540c\u6837\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u81ea\u5b9a\u4e49\u9009\u9879\u3002 plt.boxplot(x, notch=None, sym=None, vert=None, whis=None, positions=None, widths=None, patch_artist=None, meanline=None, showmeans=None, showcaps=None, showbox=None, showfliers=None, boxprops=None, labels=None, flierprops=None, medianprops=None, meanprops=None, capprops=None, whiskerprops=None) x - \u7ed8\u56fe\u6570\u636e notch - \u662f\u5426\u662f\u51f9\u53e3\u7684\u5f62\u5f0f\u5c55\u73b0\u7bb1\u7ebf\u56fe\uff0c\u9ed8\u8ba4\u975e\u51f9\u53e3 sym - \u6307\u5b9a\u5f02\u5e38\u70b9\u7684\u5f62\u72b6\uff0c\u9ed8\u8ba4\u4e3a + \u53f7\u663e\u793a vert - \u662f\u5426\u9700\u8981\u5c06\u7bb1\u7ebf\u56fe\u5782\u76f4\u6446\u653e\uff0c\u9ed8\u8ba4\u5782\u76f4\u6446\u653e whis - \u6307\u5b9a\u4e0a\u4e0b\u987b\u4e0e\u4e0a\u4e0b\u56db\u5206\u4f4d\u7684\u8ddd\u79bb\uff0c\u9ed8\u8ba4\u4e3a 1.5 \u500d\u7684\u56db\u5206\u4f4d\u5dee positions - \u6307\u5b9a\u7bb1\u7ebf\u56fe\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a [0,1,2\u2026] widths - \u6307\u5b9a\u7bb1\u7ebf\u56fe\u5bbd\u5ea6\uff0c\u9ed8\u8ba4\u4e3a 0.5 patch_artist - \u662f\u5426\u586b\u5145\u7bb1\u4f53\u7684\u989c\u8272 meanline - \u662f\u5426\u7528\u7ebf\u7684\u5f62\u5f0f\u8868\u793a\u5747\u503c\uff0c\u9ed8\u8ba4\u7528\u70b9\u6765\u8868\u793a showmeans - \u662f\u5426\u663e\u793a\u5747\u503c\uff0c\u9ed8\u8ba4\u4e0d\u663e\u793a showcaps - \u662f\u5426\u663e\u793a\u7bb1\u7ebf\u56fe\u9876\u7aef\u548c\u672b\u7aef\u7684\u4e24\u6761\u7ebf\uff0c\u9ed8\u8ba4\u663e\u793a showbox - \u662f\u5426\u663e\u793a\u7bb1\u7ebf\u56fe\u7684\u7bb1\u4f53\uff0c\u9ed8\u8ba4\u663e\u793a showfliers - \u662f\u5426\u663e\u793a\u5f02\u5e38\u503c\uff0c\u9ed8\u8ba4\u663e\u793a boxprops - \u8bbe\u7f6e\u7bb1\u4f53\u7684\u5c5e\u6027\uff0c\u5982\u8fb9\u6846\u8272\uff0c\u586b\u5145\u8272\u7b49 labels - \u4e3a\u7bb1\u7ebf\u56fe\u6dfb\u52a0\u6807\u7b7e\uff0c\u7c7b\u4f3c\u4e8e\u56fe\u4f8b\u7684\u4f5c\u7528 filerprops - \u8bbe\u7f6e\u5f02\u5e38\u503c\u7684\u5c5e\u6027\uff0c\u5982\u5f02\u5e38\u70b9\u7684\u5f62\u72b6\u3001\u5927\u5c0f\u3001\u586b\u5145\u8272\u7b49 medianprops - \u8bbe\u7f6e\u4e2d\u4f4d\u6570\u7684\u5c5e\u6027\uff0c\u5982\u7ebf\u7684\u7c7b\u578b\u3001\u7c97\u7ec6\u7b49 meanprops - \u8bbe\u7f6e\u5747\u503c\u7684\u5c5e\u6027\uff0c\u5982\u70b9\u7684\u5927\u5c0f\u3001\u989c\u8272\u7b49 capprops - \u8bbe\u7f6e\u7bb1\u7ebf\u56fe\u9876\u7aef\u548c\u672b\u7aef\u7ebf\u6761\u7684\u5c5e\u6027\uff0c\u5982\u989c\u8272\u3001\u7c97\u7ec6\u7b49 whiskerprops - \u8bbe\u7f6e\u987b\u7684\u5c5e\u6027\uff0c\u5982\u989c\u8272\u3001\u7c97\u7ec6\u3001\u7ebf\u7684\u7c7b\u578b\u7b49 \u7bb1\u7ebf\u56fe\u901a\u5e38\u5728\u8fdb\u884c\u591a\u7ec4\u6570\u636e\u6bd4\u8f83\u65f6\u4f7f\u7528\u3002\u4e0b\u9762\u4ee3\u7801\u5c55\u793a\u4e86 3 \u7ec4\u7b80\u5355\u6570\u636e\u7684\u7bb1\u7ebf\u56fe\uff0c\u6dfb\u52a0\u51f9\u53e3\u3001\u5747\u503c\u70b9\u3001\u989c\u8272\u4ee5\u53ca\u6bcf\u7ec4\u7684\u6807\u7b7e\u3002\u8bbe\u5b9a\u8fd9\u51e0\u4e2a\u9009\u9879\u5df2\u7ecf\u9002\u7528\u4e8e\u7edd\u5927\u591a\u6570\u60c5\u51b5\u3002 In [55]: _ = plt.boxplot([range(10), range(20), range(30)], ...: patch_artist=True, ...: boxprops={'color':'red'}, ...: notch=True, showmeans=True, ...: labels=[\"label1\", \"label2\", \"label3\"])","title":"7.2.6 \u7bb1\u7ebf\u56fe"},{"location":"07-matplotlib/#73","text":"\u4e0a\u4e00\u8282\u805a\u7126\u4e8e\u5404\u79cd\u5e38\u89c1\u56fe\u5f62\u7ed8\u5236\u65b9\u6cd5\u7684\u4ecb\u7ecd\uff0c\u672c\u8282\u5728\u5176\u57fa\u7840\u4e0a\u4ecb\u7ecd\u5982\u4f55\u7ec4\u7ec7\u591a\u4e2a\u56fe\u5f62\u3001\u4ecb\u7ecd\u81ea\u5b9a\u4e49\u56fe\u5f62\u66f4\u591a\u7684\u64cd\u4f5c\u65b9\u6cd5\u3002","title":"7.3 \u591a\u56fe\u4e0e\u81ea\u5b9a\u4e49"},{"location":"07-matplotlib/#731","text":"\u6570\u636e\u53ef\u89c6\u5316\u7684\u7ed3\u679c\u5f80\u5f80\u4e0d\u662f\u4e00\u4e2a\u56fe\u5f62\u53ef\u4ee5\u5b8c\u5168\u5448\u73b0\u51fa\u6765\u7684\uff0c\u8868\u660e\u67d0\u4e2a\u4e3b\u9898\u6216\u89c2\u70b9\u7684\u56fe\u5f62\u5e38\u88ab\u653e\u7f6e\u5728\u4e00\u8d77\u7ec4\u6210\u591a\u56fe\u3002Matplotlib \u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5728\u4e00\u4e2a\u56fe\u5f62\u4e2d\u7ed8\u5236\u591a\u4e2a\u5b50\u56fe\u3002","title":"7.3.1 \u591a\u56fe"},{"location":"07-matplotlib/#732","text":"\u56fe\u5f62\u6574\u4f53\u7684\u6837\u5f0f\uff08\u4e5f\u79f0\u98ce\u683c\u6216\u4e3b\u9898\uff09\u4e5f\u53ef\u4ee5\u591a\u79cd\u591a\u6837\uff0c\u8fd9\u65e0\u6cd5\u901a\u8fc7\u6211\u4eec\u524d\u9762\u5b66\u4e60\u8fc7\u7684\u64cd\u4f5c\u5b9e\u73b0\uff0cMatplotlib \u5e93\u63d0\u4f9b\u7684 style.use() \u51fd\u6570\u53ef\u4ee5\u4e3a\u521b\u5efa\u7684\u56fe\u5f62\u8bbe\u7f6e\u5408\u9002\u7684\u7f8e\u5b66\u98ce\u683c\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u4ee3\u7801\u53ef\u4ee5\u786e\u4fdd\u751f\u6210\u7684\u56fe\u5f62\u4f7f\u7528\u7ecf\u5178\u7684 Matplotlib \u98ce\u683c\uff1a In [60]: plt.style.use('classic') \u6211\u4eec\u7ed8\u5236\u7b80\u5355\u7684\u56fe\u5f62\u770b\u4e00\u770b\u663e\u793a\u6548\u679c\u3002 In [61]: rng = np.random.RandomState(12) ...: x = rng.randn(200) ...: y = rng.randn(200) ...: ...: _ = plt.scatter(x, y) \u4e0b\u9762\u4ee3\u7801\u53ef\u4ee5\u66f4\u6362\u4e3a seaborn \u5e93 white \u98ce\u683c\u3002 In [62]: plt.style.use('seaborn-white') ...: ...: _ = plt.scatter(x, y) \u4e0b\u9762\u4ee3\u7801\u53ef\u4ee5\u66f4\u6362\u4e3a\u6d41\u884c R \u5305 ggplot2 \u98ce\u683c\u3002 In [63]: plt.style.use('ggplot') ...: ...: _ = plt.scatter(x, y) \u4e0b\u9762\u4ee3\u7801\u5217\u51fa\u6240\u6709\u652f\u6301\u7684\u98ce\u683c\u3002 In [64]: print(plt.style.available) ['seaborn-dark', 'seaborn-ticks', 'classic', 'seaborn-white', 'fast', 'seaborn-whitegrid', 'tableau-colorblind10', 'seaborn', 'seaborn-deep', 'Solarize_Light2', 'seaborn-colorblind', 'seaborn-darkgrid', 'dark_background', 'seaborn-bright', 'ggplot', 'seaborn-talk', 'seaborn-notebook', 'grayscale', 'fivethirtyeight', 'bmh', 'seaborn-dark-palette', 'seaborn-pastel', '_classic_test', 'seaborn-poster', 'seaborn-muted', 'seaborn-paper'] \u6240\u6709\u652f\u6301\u7684\u98ce\u683c\u793a\u4f8b\u53ef\u4ee5\u901a\u8fc7 https://matplotlib.org/gallery/style_sheets/style_sheets_reference.html \u67e5\u770b\u3002","title":"7.3.2 \u8bbe\u7f6e\u98ce\u683c"},{"location":"07-matplotlib/#733","text":"\u5728\u672c\u7ae0\u7684\u5927\u90e8\u5206\u5185\u5bb9\u7684\u4ecb\u7ecd\u4e2d\uff0c\u6211\u4eec\u53ea\u4f7f\u7528\u4e86 Matplotlib \u7684\u4e00\u79cd\u63a5\u53e3\uff0c\u5373 Matlab \u6837\u5f0f\u63a5\u53e3\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9ad8\u8bfb\u8005\u5b66\u4e60\u7684\u8fde\u8d2f\u6027\uff0c\u65b9\u4fbf\u7406\u89e3\u3002\u5bf9\u4e8e\u6bcf\u4e00\u79cd Matlab \u6837\u5f0f\u63a5\u53e3\u64cd\u4f5c\uff0c\u57fa\u672c\u90fd\u6709\u76f8\u5e94\u7684\u9762\u5411\u5bf9\u8c61\u64cd\u4f5c\u4e0e\u4e4b\u5bf9\u5e94\u3002\u5728\u5b66\u4e60\u548c\u719f\u7ec3\u4e00\u79cd\u63a5\u53e3\u7684\u57fa\u7840\u4e0a\u7406\u89e3\u53e6\u4e00\u79cd\u5c31\u66f4\u52a0\u987a\u624b\u4e86\u3002 \u4e0b\u9762\u5217\u51fa\u4e24\u79cd\u63a5\u53e3\u5e38\u89c1\u7684\u64cd\u4f5c\u51fd\u6570\u6620\u5c04\uff1a plt.plot() -> ax.plot() plt.legend() -> ax.legend() plt.xlabel() -> ax.set_xlabel() plt.ylabel() -> ax.set_ylabel() plt.xlim() -> ax.set_xlim() plt.ylim() -> ax.set_ylim() plt.title() -> ax.set_title() \u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 set() \u65b9\u6cd5\u4e00\u6b21\u6027\u5bf9\u6240\u6709\u6837\u5f0f\u8fdb\u884c\u8bbe\u5b9a\u3002\u4e0b\u9762\u753b\u4e00\u4e2a\u7b80\u5355\u7684\u6b63\u5f26\u56fe\u8bf4\u660e\uff1a In [65]: plt.style.use('grayscale') ...: x = np.linspace(0, 10) ...: ...: ax = plt.axes() ...: ax.plot(x, np.sin(x)) ...: _ = ax.set(xlim=(0,10), ylim=(-2,2), ...: xlabel='x', ylabel='sin(x)', ...: title='A Simple Plot')","title":"7.3.3 \u4e24\u79cd\u63a5\u53e3\u6620\u5c04"},{"location":"07-matplotlib/#74","text":"\u672c\u7ae0\u9996\u5148\u7b80\u5355\u4ecb\u7ecd\u4e86 Matplotlib \u5e93\u7684\u5386\u53f2\uff0c\u7136\u540e\u4ecb\u7ecd\u4e86\u811a\u672c\u3001IPython Shell \u548c Jupyter Notebook 3 \u79cd\u4e0d\u540c\u5e94\u7528\u573a\u666f\u4e0b Matplotlib \u7684\u64cd\u4f5c\u65b9\u5f0f\uff0c\u7d27\u63a5\u7740\u4ecb\u7ecd\u4e86\u5982\u4f55 2 \u79cd\u4e0d\u540c\u7684\u63a5\u53e3\uff1a\u4e00\u79cd\u662f Matlab \u6837\u5f0f\u7684\uff0c\u547d\u4ee4\u5f0f\u7684\u64cd\u4f5c\uff0c\u7ed8\u5236\u7b80\u5355\u548c\u57fa\u7840\u7684\u56fe\u5f62\u975e\u5e38\u65b9\u4fbf\uff1b\u53e6\u4e00\u79cd\u57fa\u4e8e\u9762\u5411\u5bf9\u8c61\uff0c\u9664\u4e86\u53ef\u4ee5\u5b9e\u73b0\u57fa\u672c\u7684\u7ed8\u56fe\uff0c\u591a\u7528\u4e8e\u590d\u6742\u7684\u56fe\u5f62\u6784\u9020\u3002\u5728\u8bfb\u8005\u5bf9\u4e8e Matplotlib \u6709\u4e86\u6574\u4f53\u8f6e\u5ed3\u7684\u57fa\u7840\u4e0a\uff0c\u672c\u7ae0\u968f\u540e\u5411\u8bfb\u8005\u4ecb\u7ecd\u5e38\u89c1\u57fa\u7840\u56fe\u5f62\u7684\u7ed8\u5236\u65b9\u6cd5\uff0c\u5305\u62ec\uff1a\u70b9\u56fe\u3001\u7ebf\u56fe\u3001\u6761\u5f62\u56fe\u3001\u76f4\u65b9\u56fe\u3001\u997c\u56fe\u4ee5\u53ca\u7bb1\u7ebf\u56fe\u3002\u6700\u540e\u7684\u5185\u5bb9\u5219\u805a\u7126\u4e8e\u591a\u56fe\u7684\u5b9e\u73b0\u548c\u56fe\u5f62\u98ce\u683c\u7684\u8bbe\u5b9a\u3002 \u5199\u5f97\u4e00\u624b\u597d\u4ee3\u7801\u5e76\u4e0d\u80fd\u4ee3\u8868\u80fd\u753b\u5f97\u4e00\u624b\u597d\u56fe\u3002\u672c\u7ae0\u7684\u5185\u5bb9\u65e8\u5728\u5e2e\u52a9\u8bfb\u8005\u6253\u5f00\u4f7f\u7528 Matplotlib \u8fdb\u884c\u7ed8\u56fe\u7684\u5927\u95e8\u3001\u7406\u6e05\u5404\u7c7b\u7ed8\u56fe\u51fd\u6570\u548c\u65b9\u6cd5\u57fa\u672c\u7684\u5185\u5728\u8054\u7cfb\u3002\u5728\u5b9e\u9645\u7684\u6570\u636e\u53ef\u89c6\u5316\u5de5\u4f5c\u4e2d\uff0c\u8bfb\u8005\u5f80\u5f80\u9700\u8981\u8017\u8d39\u5927\u91cf\u7684\u7cbe\u529b\u5bf9\u7ed8\u56fe\u4ee3\u7801\u8fdb\u884c\u53cd\u590d\u4fee\u6539\uff0c\u67e5\u9605\u548c\u7406\u89e3\u76f8\u5173\u51fd\u6570\u6587\u6863\u3002\u8fd9\u4e9b\u52aa\u529b\u90fd\u662f\u503c\u5f97\u7684\uff0c\u5b83\u4f1a\u540c\u65f6\u9524\u70bc\u8bfb\u8005\u7684\u4ee3\u7801\u7f16\u5199\u80fd\u529b\u548c\u7ed8\u56fe\u3001\u5ba1\u7f8e\u7b49\u80fd\u529b\u3002","title":"7.4 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"08-pandas-intro/","text":"\u7b2c 8 \u7ae0 Pandas \u5165\u95e8 \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a Pandas \u6570\u636e\u7ed3\u6784\u4ecb\u7ecd Series \u4e0e DataFrame \u7684\u521b\u5efa Pandas \u5bf9\u8c61\u7d22\u5f15\u4e0e\u64cd\u4f5c \u57fa\u672c\u7edf\u8ba1\u5206\u6790 \u867d\u7136 NumPy \u5e93\u6784\u6210\u4e86 Python \u6570\u636e\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u77f3\uff0c\u4f46\u6211\u4eec\u5728\u5b9e\u9645\u8fdb\u884c\u6570\u636e\u5904\u7406\u65f6\u6781\u5c11\u4f1a\u4f7f\u7528\u5230\u5b83\u3002Python \u6570\u636e\u79d1\u5b66\u5bb6/\u5206\u6790\u5e08\u4eec\u9996\u9009\u7684\u5de5\u5177\u662f Pandas \u5e93\uff0c\u5b83\u5f3a\u5927\u7684\u6570\u636e\u7ed3\u6784\u548c\u7075\u6d3b\u5b9e\u7528\u7684\u64cd\u4f5c\u3001\u51fd\u6570/\u65b9\u6cd5\u5f81\u670d\u4e86\u6574\u4e2a Python \u79d1\u5b66\u793e\u533a\u3002\u672c\u7ae0\u5c06\u5bf9 Pandas \u7684\u6570\u636e\u7ed3\u6784\u548c\u57fa\u672c\u64cd\u4f5c\u65b9\u6cd5\u8fdb\u884c\u4ecb\u7ecd\u3002 8.1 Pandas \u7b80\u4ecb \u00b6 Pandas \u7684\u540d\u5b57\u6765\u81ea\u9762\u677f\u6570\u636e\uff08Panel data\uff09\u548c\u6570\u636e\u5206\u6790\uff08Data analysis\uff09\u7684\u7ec4\u5408\uff0c\u6700\u521d\u7531 AQR Capital Management \u4e8e 2008 \u5e74\u5f00\u53d1\uff0c2009 \u5e74\u5e95\u5f00\u6e90\u5e76\u9010\u6b65\u6210\u957f\u4e3a Python \u7684\u6838\u5fc3\u8ba1\u7b97\u5206\u6790\u5de5\u5177\u3002Pandas \u5e93\u6700\u521d\u7684\u76ee\u7684\u662f\u670d\u52a1\u4e8e\u91d1\u878d\u5206\u6790\uff0c\u56e0\u6b64\u5bf9\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u6709\u975e\u5e38\u597d\u7684\u652f\u6301\u3002 Pandas \u5e93\u57fa\u4e8e NumPy \u5e93\u6784\u5efa\uff0c\u7eb3\u5165\u4e86\u5927\u91cf\u8ba1\u7b97\u5206\u6790\u5e93\u548c\u6807\u51c6\u7684\u6570\u636e\u6a21\u578b\uff0c\u6bd4\u5982\u7531 R \u8bed\u8a00\u6570\u636e\u6846\u5bf9\u8c61 data.frame \u542f\u53d1\u521b\u5efa\u4e86\u8457\u540d\u7684 DataFrame \u6570\u636e\u7ed3\u6784\u3002\u6765\u81ea NumPy \u5e93\u7684\u5e95\u5c42\u652f\u6301\u548c\u9ad8\u6548\u6570\u636e\u7ed3\u6784\u8868\u5f81\u548c\u64cd\u4f5c\u65b9\u6cd5\u7684\u5b9e\u73b0\u8ba9\u4f7f\u7528 Pandas \u5e93\u6e05\u6d17\u548c\u5206\u6790\u6570\u636e\u53d8\u5f97\u5feb\u901f\u53c8\u7b80\u5355\u3002 Pandas \u91c7\u7528\u4e86 NumPy \u5e93\u7684\u7f16\u7801\u98ce\u683c\uff0c\u4e0d\u8fc7\u524d\u8005\u805a\u7126\u4e8e\u8868\u683c\u548c\u6df7\u6742\u6570\u636e\u7684\u5904\u7406\uff0c\u800c\u540e\u8005\u5219\u9002\u5408\u6570\u503c\u6570\u7ec4\u6570\u636e\u7684\u5904\u7406\u548c\u8ba1\u7b97\u5206\u6790\u3002\u65e5\u5e38\u7684\u5546\u4e1a\u548c\u79d1\u7814\u6570\u636e\u5904\u7406\u5206\u6790\u5de5\u4f5c\u8005\u9762\u5bf9\u7684\u6b63\u662f\u5927\u91cf\u7684\u8868\u683c\u548c\u6df7\u6742\u6570\u636e\uff0c\u56e0\u6b64 Pandas \u975e\u5e38\u5b9e\u7528\u4e14\u5e94\u7528\u5e7f\u6cdb\u3002 \u5728\u6b63\u5f0f\u5b66\u4e60 Pandas \u4e4b\u524d\uff0c\u8bfb\u8005\u9700\u8981\u4e86\u89e3 Pandas \u5e93\u5bfc\u5165\u7ea6\u5b9a\uff1a import pandas as pd Pandas \u63d0\u4f9b\u7684\u6570\u636e\u7ed3\u6784 Series \u548c DataFrame \u4f7f\u7528\u975e\u5e38\u9891\u7e41\uff0c\u6240\u4ee5\u76f4\u63a5\u5c06\u5b83\u4eec\u5bfc\u5165\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4f1a\u975e\u5e38\u65b9\u4fbf\uff1a from pandas import Series, DataFrame 8.2 Pandas \u7684\u6570\u636e\u7ed3\u6784 \u00b6 Pandas \u4e3b\u8981\u6709\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\uff1aSeries \u548c DataFrame\uff0c\u5b83\u4eec\u7684\u5b58\u5728\u53ef\u4ee5\u5e2e\u52a9\u6570\u636e\u5206\u6790\u4eba\u5458\u66f4\u5bb9\u6613\u5730\u5b58\u50a8\u6570\u636e\u3001\u9ad8\u6548\u5730\u5904\u7406\u6570\u636e\u3002\u65e5\u5e38\u7684\u5206\u6790\u4efb\u52a1\u51e0\u4e4e\u90fd\u53ef\u4ee5\u901a\u8fc7 Pandas \u5b8c\u6210\u3002 8.2.1 Series \u00b6 Series \u5f62\u4f3c\u5b57\u5178\uff0c\u5305\u542b\u7d22\u5f15\uff08\u4e5f\u79f0\u6570\u636e\u6807\u7b7e\uff09\u548c\u6570\u636e\u4e24\u90e8\u5206\u3002\u4e0d\u8fc7\uff0cPandas \u5e93\u662f\u57fa\u4e8e NumPy \u5e93\u6784\u5efa\u7684\uff0c\u6240\u4ee5 Series \u5b9e\u9645\u4e0a\u662f\u901a\u8fc7\u4e00\u7ef4\u7684 NumPy \u6570\u7ec4\u5b9e\u73b0\u7684\u3002 \u4e0b\u9762\u4ee3\u7801\u5206\u522b\u4f7f\u7528\u4e86\u5b57\u5178\u3001NumPy \u6570\u7ec4\u548c Series \u5b58\u50a8 0\u30011\u30012\u3002 In [1]: import pandas as pd In [2]: import numpy as np In [4]: {'0':0, '1':1, '2': 2} Out[4]: {'0': 0, '1': 1, '2': 2} In [5]: np.arange(3) Out[5]: array([0, 1, 2]) In [6]: pd.Series(range(3)) Out[6]: 0 0 1 1 2 2 dtype: int64 3 \u79cd\u65b9\u5f0f\u5b58\u50a8\u7684\u6570\u636e\u662f\u4e00\u6837\u7684\uff0c\u4f46\u53ef\u4ee5\u770b\u5230 Series \u5bf9\u8c61\u7684\u8f93\u51fa\u5f62\u5f0f\u4e0e\u524d\u4e24\u8005\u6709\u6240\u4e0d\u540c\uff0c\u5b83\u66f4\u65b9\u4fbf\u7406\u89e3\u548c\u89c2\u5bdf\uff1a\u5de6\u4fa7\u663e\u793a\u4e86\u6570\u636e\u6807\u7b7e\uff0c\u53f3\u4fa7\u663e\u793a\u4e86\u6570\u636e\u503c\uff0c\u4e0b\u65b9\u663e\u793a\u6570\u636e\u7684\u7c7b\u578b\u662f 64 \u4f4d\u6574\u578b\u3002 \u4e0a\u9762\u6211\u4eec\u7ed9 Series() \u51fd\u6570\u53ea\u4f20\u5165\u4e86\u4e00\u4e2a\u6570\u636e\u5e8f\u5217\uff0c\u5e76\u6ca1\u6709\u8bbe\u7f6e\u7d22\u5f15\uff0c\u56e0\u800c\u51fd\u6570\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u4ece 0 \u5f00\u59cb\u3001\u4e0e\u6570\u636e\u957f\u5ea6\u76f8\u540c\u7684\u6574\u6570\u578b\u7d22\u5f15\u3002\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 index \u548c values \u5c5e\u6027\u83b7\u53d6 Series \u5bf9\u8c61\u7684\u6807\u7b7e\u548c\u7d22\u5f15\uff0c\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff1a In [7]: scores = pd.Series([80, 90, 97]) In [8]: scores.index Out[8]: RangeIndex(start=0, stop=3, step=1) In [9]: scores.values Out[9]: array([80, 90, 97]) scores.values \u7684\u7ed3\u679c\u8bc1\u5b9e\u4e86 Series \u5bf9\u8c61\u7684\u6570\u636e\u503c\u7684\u786e\u662f\u4e00\u4e2a\u4e00\u7ef4\u7684 ndarray\u3002scores.index \u7684\u7ed3\u679c\u663e\u793a Series \u5bf9\u8c61\u7684\u7d22\u5f15\u662f\u4e00\u4e2a RangeIndex \u5bf9\u8c61\uff0c\u5b83\u4e0e range(3) \u7c7b\u4f3c\uff0c\u8fd9\u6837\u5b58\u50a8\u7684\u597d\u5904\u662f\u5f53\u6570\u636e\u5f88\u5927\u65f6\uff0c\u53ea\u9700\u8981 3 \u4e2a\u4fe1\u606f\uff1a\u8d77\u70b9\u3001\u7ec8\u70b9\u548c\u6b65\u957f\u5c31\u53ef\u4ee5\u8868\u793a\u6240\u6709\u7684\u7d22\u5f15\u503c\u3002 \u5728\u4e00\u822c\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u6570\u636e\u7d22\u5f15\u80fd\u8868\u793a\u6709\u66f4\u4e3a\u660e\u786e\u542b\u4e49\u7684\u4fe1\u606f\u3002 \u4f8b\u5982\uff0c\u4e0a\u9762 scores \u5b9e\u9645\u5b58\u50a8\u4e86\u67d0\u4f4d\u540c\u5b66\u7684\u8bed\u6570\u5916\u6210\u7ee9\uff0c\u4e0b\u9762\u7684\u8bbe\u7f6e\u80fd\u591f\u8ba9\u8fd9\u4fe1\u606f\u663e\u793a\u5f97\u66f4\u5b8c\u6574\uff1a In [10]: scores = pd.Series([80, 90, 97], index=[u'\u8bed\u6587',u'\u6570\u5b66',u'\u5916\u8bed']) In [11]: scores Out[11]: \u8bed\u6587 80 \u6570\u5b66 90 \u5916\u8bed 97 dtype: int64 In [12]: scores.index Out[12]: Index(['\u8bed\u6587', '\u6570\u5b66', '\u5916\u8bed'], dtype='object') In [13]: scores.values Out[13]: array([80, 90, 97]) \u8bfb\u8005\u901a\u8fc7\u5bf9\u5df2\u7ecf\u521b\u5efa\u597d\u7684 Series \u5bf9\u8c61\u5c5e\u6027\u91cd\u65b0\u8fdb\u884c\u8d4b\u503c\uff0c\u53ef\u4ee5\u4fee\u6539\u8be5\u5bf9\u8c61\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u5c06\u6807\u7b7e\u4fee\u6539\u4e3a\u82f1\u6587\u6216\u8005\u662f\u66f4\u6539\u8bed\u6587\u6210\u7ee9\u4e3a 95\u3002 In [14]: scores2 = scores # \u521b\u5efa\u4e00\u4e2a\u65b0\u62f7\u8d1d In [15]: scores2.index = ['Chinese', 'Math', 'English'] In [16]: scores2.values[0] = 95 In [17]: scores2 Out[17]: Chinese 95 Math 90 English 97 dtype: int64 \u6ce8\u610f\uff0c\u4e0a\u8ff0\u5c06 scores \u8d4b\u503c\u4e3a scores2 \u540e\uff0c\u4fee\u6539 scores2 \u4e5f\u4f1a\u9020\u6210 scores \u7684\u4fee\u6539\u3002\u5982\u679c\u4e0d\u60f3\u8981\u5b83\u4eec\u76f8\u4e92\u5f71\u54cd\uff0c\u5e94\u5f53\u4f7f\u7528 copy() \u65b9\u6cd5\u751f\u6210 scores2\u3002 In [19]: scores Out[19]: Chinese 95 Math 90 English 97 dtype: int64 \u4e0e\u5b57\u5178\u64cd\u4f5c\u76f8\u4f3c\uff0cSeries \u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u83b7\u53d6\u5bf9\u8c61\u7684\u503c\uff0c\u7d22\u5f15\u53ef\u4ee5\u662f\u5355\u4e2a\u7684\u503c\u6216\u662f\u5217\u8868\u3002 In [21]: scores[['Math', 'Chinese']] Out[21]: Math 90 Chinese 95 dtype: int64 In [22]: scores['Math'] Out[22]: 90 \u5f53\u7136\uff0c\u76f4\u63a5\u4f7f\u7528\u6574\u6570\u4e0b\u6807\u4e5f\u662f\u53ef\u884c\u7684\u3002 Series \u7ed3\u6784\u4e0a\u4e0e\u5b57\u5178\u975e\u5e38\u76f8\u4f3c\uff0c\u9664\u4e86\u4e0a\u8ff0\u4ece\u5217\u8868\u521b\u5efa Series\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5b57\u5178\u521b\u5efa\u3002 In [23]: score_dict = {u'\u8bed\u6587':95, u'\u6570\u5b66':90, u'\u5916\u8bed':97} In [24]: scores3 = pd.Series(score_dict) In [25]: scores3 Out[25]: \u8bed\u6587 95 \u6570\u5b66 90 \u5916\u8bed 97 dtype: int64 \u4e00\u4e9b\u9488\u5bf9\u5b57\u5178\u7684\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u7528\u4e8e Series \u4e2d\uff0c\u5982\u5224\u65ad \u5916\u8bed \u662f\u5426\u5b58\u5728\u3002 In [26]: u'\u5916\u8bed' in scores3 Out[26]: True In [27]: u'\u7269\u7406' in scores3 Out[27]: False \u9664\u4e86 index \u4e0e values \u5c5e\u6027\uff0cSeries \u5bf9\u8c61\u672c\u8eab\u53ca\u5176\u7d22\u5f15\u90fd\u6709\u4e00\u4e2a name \u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u53ef\u4ee5\u7528\u6765\u8bbe\u5b9a\u66f4\u660e\u786e\u7684\u6570\u636e\u542b\u4e49\u3002 In [29]: scores3.name = 'xx\u4e2d\u5b66\u671f\u4e2d\u6210\u7ee9' In [30]: scores3.index.name = '\u5b66\u79d1' In [31]: scores3 Out[31]: \u5b66\u79d1 \u8bed\u6587 95 \u6570\u5b66 90 \u5916\u8bed 97 Name: xx\u4e2d\u5b66\u671f\u4e2d\u6210\u7ee9, dtype: int64 8.2.2 DataFrame \u00b6 Series \u5bf9\u8c61\u53ea\u80fd\u6709\u6548\u5730\u8868\u793a\u4e00\u7ef4\u7684\u6570\u636e\uff0c\u800c\u6570\u636e\u5206\u6790\u5de5\u4f5c\u5e38\u5e38\u9762\u5bf9\u7684\u662f\u8868\u683c\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5373\u4e00\u7ec4\u6709\u5e8f\u7684\u6570\u636e\u5217\uff0c\u6bcf\u4e00\u5217\u90fd\u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002Pandas \u5e93\u5f15\u5165\u4e86 DataFrame\uff08\u4e2d\u6587\u5ff5\u4f5c \u6570\u636e\u6846 \uff09\u7528\u4ee5\u8868\u5f81\u8868\u683c\u6570\u636e\uff0cDataFrame \u5305\u542b\u884c\u3001\u5217\u7d22\u5f15\uff0c\u53ef\u4ee5\u770b\u4f5c\u7528\u7b49\u957f Series \u7ec4\u6210\u7684\u5b57\u5178\u3002 \u6700\u5e38\u7528\u4e8e\u521b\u5efa DataFrame \u7684\u65b9\u5f0f\u662f\u4f20\u5165\u4e00\u4e2a\u7b49\u957f\u5217\u8868\u6216 ndarray \u7ec4\u6210\u7684\u5b57\u5178\u3002 In [32]: df = {'\u59d3\u540d': ['\u5c0f\u660e','\u5c0f\u738b','\u5c0f\u5f20'], '\u8bed\u6587':[80,85,90], '\u6570\u5b66':[99,88,86] } In [33]: df Out[33]: {'\u59d3\u540d': ['\u5c0f\u660e', '\u5c0f\u738b', '\u5c0f\u5f20'], '\u8bed\u6587': [80, 85, 90], '\u6570\u5b66': [99, 88, 86]} In [34]: df = pd.DataFrame(df) In [35]: df Out[35]: \u59d3\u540d \u8bed\u6587 \u6570\u5b66 0 \u5c0f\u660e 80 99 1 \u5c0f\u738b 85 88 2 \u5c0f\u5f20 90 86 \u4e0e Series \u7c7b\u4f3c\uff0c\u5982\u679c\u521b\u5efa DataFrame \u6ca1\u6709\u6307\u5b9a\u7d22\u5f15\uff0c\u4f1a\u88ab\u81ea\u52a8\u52a0\u4e0a\u3002\u901a\u8fc7 columns \u9009\u9879\u53ef\u4ee5\u6307\u5b9a\u5217\u6807\u7b7e\uff08\u540d\uff09\u4ee5\u53ca\u987a\u5e8f\u3002 In [36]: df2 = pd.DataFrame(df, columns=['\u6570\u5b66', '\u8bed\u6587', '\u59d3\u540d']) In [37]: df2 Out[37]: \u6570\u5b66 \u8bed\u6587 \u59d3\u540d 0 99 80 \u5c0f\u660e 1 88 85 \u5c0f\u738b 2 86 90 \u5c0f\u5f20 \u5982\u679c\u4f20\u5165\u7684 columns \u5728\u6570\u636e\u4e2d\u627e\u4e0d\u5230\uff0c\u5c31\u4f1a\u4ea7\u751f\u7f3a\u5931\u503c\u3002 In [38]: df3 = pd.DataFrame(df, columns=['\u6570\u5b66', '\u8bed\u6587','\u5916\u8bed', '\u59d3\u540d']) In [39]: df3 Out[39]: \u6570\u5b66 \u8bed\u6587 \u5916\u8bed \u59d3\u540d 0 99 80 NaN \u5c0f\u660e 1 88 85 NaN \u5c0f\u738b 2 86 90 NaN \u5c0f\u5f20 \u884c\u6807\u7b7e\u53ef\u4ee5\u901a\u8fc7 index \u9009\u9879\u6307\u5b9a\uff0c\u4e0a\u9762\u59d3\u540d\u53ef\u4ee5\u8bbe\u4e3a\u884c\u6807\u7b7e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u53bb\u9664\u59d3\u540d\u8fd9\u4e00\u5217\u4e86\u3002 In [43]: df = {'\u59d3\u540d': ['\u5c0f\u660e','\u5c0f\u738b','\u5c0f\u5f20'], '\u8bed\u6587':[80,85,90], '\u6570\u5b66':[99,88,86]} ...: In [44]: df3 = pd.DataFrame(df, columns=['\u6570\u5b66', '\u8bed\u6587'], index=['\u5c0f\u660e','\u5c0f\u738b','\u5c0f\u5f20 ...: ']) In [45]: df3 Out[45]: \u6570\u5b66 \u8bed\u6587 \u5c0f\u660e 99 80 \u5c0f\u738b 88 85 \u5c0f\u5f20 86 90 \u901a\u8fc7\u6807\u7b7e\u83b7\u53d6 DataFrame \u6570\u636e\u9700\u8981\u901a\u8fc7\u540d\u79f0\u6216 loc \u5c5e\u6027\u8fdb\u884c\uff0c\u524d\u8005\u8bbf\u95ee\u884c\uff0c\u540e\u8005\u8bbf\u95ee\u5217\u3002 In [51]: df3['\u6570\u5b66'] Out[51]: \u5c0f\u660e 99 \u5c0f\u738b 88 \u5c0f\u5f20 86 Name: \u6570\u5b66, dtype: int64 In [54]: df3.loc['\u5c0f\u738b'] Out[54]: \u6570\u5b66 88 \u8bed\u6587 85 Name: \u5c0f\u738b, dtype: int64 \u53ef\u4ee5\u53d1\u73b0\u8fd4\u56de\u7684\u90fd\u662f Series \u5bf9\u8c61\u3002 \u521b\u5efa DataFrame \u8fd8\u53ef\u4ee5\u4f7f\u7528\u5d4c\u5957\u5b57\u5178\uff0c\u5b57\u5178\u5916\u5c42\u7684\u952e\u4f1a\u4f5c\u4e3a\u5217\u6807\u7b7e\uff0c\u800c\u5185\u5c42\u7684\u952e\u4f1a\u4f5c\u4e3a\u884c\u6807\u7b7e\u3002 In [55]: df = {'\u8bed\u6587':{'\u5c0f\u660e':80,'\u5c0f\u738b':85,'\u5c0f\u5f20':90}, '\u6570\u5b66':{'\u5c0f\u660e':99,'\u5c0f\u738b':88,'\u5c0f\u5f20':86}} In [56]: pd.DataFrame(df) Out[56]: \u8bed\u6587 \u6570\u5b66 \u5c0f\u5f20 90 86 \u5c0f\u660e 80 99 \u5c0f\u738b 85 88 DataFrame \u7684 index \u548c columns \u5c5e\u6027\u53ef\u4ee5\u8bbe\u7f6e name \u5c5e\u6027\u3002 In [58]: df3.index.name = '\u59d3\u540d' In [59]: df3.columns.name = '\u5b66\u79d1' In [60]: df3 Out[60]: \u5b66\u79d1 \u6570\u5b66 \u8bed\u6587 \u59d3\u540d \u5c0f\u660e 99 80 \u5c0f\u738b 88 85 \u5c0f\u5f20 86 90 DataFrame \u7684 values\u5c5e\u6027\u4f1a\u8fd4\u56de DataFrame \u5b58\u50a8\u7684\u6570\u636e\uff0c\u6570\u636e\u7c7b\u578b\u662f\u4e8c\u7ef4\u7684 ndarrary\u3002 In [61]: df3.values Out[61]: array([[99, 80], [88, 85], [86, 90]]) 8.3 Pandas \u5bf9\u8c61\u57fa\u672c\u64cd\u4f5c \u00b6 \u4f7f\u7528\u5408\u9002\u7684 Pandas \u6570\u636e\u7ed3\u6784\uff08Series\u6216DataFrame\uff09\u5b58\u50a8\u9700\u8981\u5206\u6790\u7684\u6570\u636e\u540e\uff0c\u8bfb\u8005\u4e00\u822c\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u7b5b\u9009\u548c\u64cd\u4f5c\uff0c\u4ee5\u83b7\u5f97\u6700\u540e\u6240\u9700\u7684\u6570\u636e\uff0c\u7136\u540e\u53ef\u80fd\u662f\u63d0\u4f9b\u6570\u636e\u6c47\u603b\u62a5\u8868\u3001\u53ef\u89c6\u5316\u4e43\u81f3\u7edf\u8ba1\u5206\u6790\u4e0e\u5efa\u6a21\u3002\u672c\u8282\u5c06\u4ecb\u7ecd Pandas \u57fa\u672c\u7684\u6570\u636e\u64cd\u4f5c\u529f\u80fd\uff0c\u8bfb\u8005\u5c06\u5b66\u4e60\u64cd\u4f5c Series \u548c DataFrame \u5bf9\u8c61\u7684\u57fa\u672c\u624b\u6bb5\u3002 8.3.1 \u67e5\u770b\u6570\u636e \u00b6 \u5728\u524d\u9762\u7684\u5185\u5bb9\u4e2d\u672c\u4e66\u5f15\u5165\u7684\u6570\u636e\u90fd\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u76f4\u63a5\u6253\u5370\u8f93\u51fa\u5c31\u53ef\u4ee5\u89c2\u5bdf\u53d8\u91cf\u5b58\u50a8\u7684\u6570\u636e\u3002\u7136\u800c\u6570\u636e\u8fc7\u957f\u65f6\uff0c\u53ef\u80fd\u5c31\u4e0d\u9002\u7528\u8ba1\u7b97\u673a\u663e\u793a\u5668\u7684\u663e\u793a\u5c4f\uff0c\u5f71\u54cd\u9605\u8bfb\u548c\u7406\u89e3\u3002\u5728\u5b9e\u9645\u7684\u64cd\u4f5c\u4e2d\uff0c\u6211\u4eec\u4ec5\u9700\u8981\u89c2\u5bdf\u5c11\u91cf\u7684\u6570\u636e\u800c\u4e0d\u7528\u6253\u5370\u6240\u6709\u7684\u6570\u636e\u5c31\u53ef\u4ee5\u4e86\u89e3\u6570\u636e\u7684\u7ed3\u6784\uff0cPandas \u5f15\u5165\u4e86 head() \u548c tail() \u65b9\u6cd5\u663e\u793a Series \u6216 DataFrame \u5bf9\u8c61\u7684\u5934\u90e8\u548c\u5c3e\u90e8\u6570\u636e\uff0c\u9ed8\u8ba4\u662f 5 \u4e2a\uff08\u884c\uff09\u3002 In [62]: s1 = pd.Series(np.random.rand(1000)) In [63]: s1.head() Out[63]: 0 0.797903 1 0.458301 2 0.800034 3 0.078226 4 0.999968 dtype: float64 In [64]: d1 = pd.DataFrame({'a':np.random.rand(1000), 'b':np.random.rand(1000)}) In [65]: d1.head() Out[65]: a b 0 0.298372 0.612369 1 0.952201 0.606749 2 0.608556 0.381032 3 0.297048 0.939676 4 0.364875 0.360786 In [66]: s1.tail() Out[66]: 995 0.047546 996 0.752907 997 0.479628 998 0.007178 999 0.960005 dtype: float64 In [67]: d1.tail() Out[67]: a b 995 0.571106 0.175381 996 0.789444 0.520254 997 0.298536 0.305487 998 0.739158 0.594261 999 0.850966 0.328761 \u5728\u65b9\u6cd5\u4e2d\u4f20\u5165\u6b63\u6574\u6570\u4f5c\u4e3a\u53c2\u6570\u5373\u53ef\u4fee\u6539\u663e\u793a\u7684\u6570\u76ee\u3002 In [68]: d1.head(10) Out[68]: a b 0 0.298372 0.612369 1 0.952201 0.606749 2 0.608556 0.381032 3 0.297048 0.939676 4 0.364875 0.360786 5 0.013640 0.267650 6 0.854873 0.251575 7 0.349147 0.065307 8 0.816777 0.932590 9 0.612475 0.385550 8.3.2 \u8f6c\u7f6e \u00b6 DataFrame \u7684 T \u5c5e\u6027\u53ef\u4ee5\u83b7\u53d6\u8f6c\u7f6e\u7ed3\u679c\u3002 In [69]: d1.T Out[69]: 0 1 2 ... 997 998 999 a 0.298372 0.952201 0.608556 ... 0.298536 0.739158 0.850966 b 0.612369 0.606749 0.381032 ... 0.305487 0.594261 0.328761 [2 rows x 1000 columns] 8.3.3 \u91cd\u7d22\u5f15 \u00b6 \u91cd\u7d22\u5f15\u662f Pandas \u5e93\u4e00\u4e2a\u91cd\u8981\u7684\u64cd\u4f5c\uff0c\u5b83\u7528\u4e8e\u521b\u5efa\u7b26\u5408\u6307\u5b9a\u7d22\u5f15\u987a\u5e8f\u7684\u65b0\u5bf9\u8c61\u3002 In [73]: s2 = pd.Series(np.random.rand(5), index=['b', 'a', 'd', 'c', 'e']) In [74]: s2 Out[74]: b 0.630239 a 0.173525 d 0.787798 c 0.176230 e 0.712007 dtype: float64 In [75]: s3 = s2.reindex(['a', 'b', 'c', 'd', 'e', 'f']) In [76]: s3 Out[76]: a 0.173525 b 0.630239 c 0.176230 d 0.787798 e 0.712007 f NaN dtype: float64 \u5982\u679c\u8bbe\u7f6e\u7684\u7d22\u5f15\u503c\u4e0d\u5b58\u5728\uff0c\u5c31\u5f15\u5165\u4e86\u7f3a\u5931\u503c NaN\u3002\u7f3a\u5931\u503c\u548c\u975e\u7f3a\u5931\u503c\u53ef\u4ee5\u901a\u8fc7 is.null() \u65b9\u6cd5\u548c notnull() \u65b9\u6cd5\u8fdb\u884c\u5224\u65ad\u3002 In [77]: s3.isnull() Out[77]: a False b False c False d False e False f True dtype: bool In [78]: s3.notnull() Out[78]: a True b True c True d True e True f False dtype: bool \u6709\u65f6\u91cd\u7d22\u5f15\u9700\u8981\u505a\u4e00\u4e9b\u63d2\u503c\u5904\u7406\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 method \u9009\u9879\u8bbe\u5b9a\uff0c\u5982 ffill \u53ef\u5b9e\u73b0\u524d\u5411\u586b\u5145\u3002 In [89]: s4 = pd.Series(np.random.randint(2, 10, 3), index = [0,2,4]) In [90]: s4 Out[90]: 0 6 2 2 4 2 dtype: int64 In [91]: s4.reindex(np.arange(8), method='ffill') Out[91]: 0 6 1 6 2 2 3 2 4 2 5 2 6 2 7 2 dtype: int64 \u9488\u5bf9 DataFrame\uff0creindex() \u65b9\u6cd5\u53ef\u4ee5\u4fee\u6539\u884c\u7d22\u5f15\u548c\u5217\u7d22\u5f15\u3002\u5982\u679c\u53ea\u4f20\u5165\u4e00\u4e2a\u5e8f\u5217\uff0c\u53ea\u4fee\u6539\u884c\u7d22\u5f15\u3002\u4f7f\u7528 columns \u5173\u952e\u5b57\u53c2\u6570\u5219\u53ef\u4ee5\u4fee\u6539\u5217\u7d22\u5f15\u3002 In [92]: d2 = pd.DataFrame(np.random.randint(2,20,9).reshape((3,3)), index=['c', 'b', 'e'], columns=['Test1', 'Test2', 'Test3']) In [93]: d2 Out[93]: Test1 Test2 Test3 c 4 19 12 b 11 2 4 e 3 19 12 In [94]: d3 = d2.reindex(['a', 'b', 'c', 'd']) In [95]: d3 Out[95]: Test1 Test2 Test3 a NaN NaN NaN b 11.0 2.0 4.0 c 4.0 19.0 12.0 d NaN NaN NaN In [96]: d2.reindex(['a', 'b', 'c', 'd', 'e'], columns=[]) Out[96]: Empty DataFrame Columns: [] Index: [a, b, c, d, e] In [97]: d2.reindex(['a', 'b', 'c', 'd', 'e'], columns=['Test2', 'Test4', 'Test1', ' ...: Test3']) Out[97]: Test2 Test4 Test1 Test3 a NaN NaN NaN NaN b 2.0 NaN 11.0 4.0 c 19.0 NaN 4.0 12.0 d NaN NaN NaN NaN e 19.0 NaN 3.0 12.0 \u4e5f\u53ef\u4ee5\u53ea\u4f7f\u7528 columns \u5173\u952e\u5b57\u53c2\u6570\u91cd\u7d22\u5f15\u5217\u3002 In [98]: d2.reindex(columns=['Test3', 'Test1', 'Test4', 'Test2']) Out[98]: Test3 Test1 Test4 Test2 c 12 4 NaN 19 b 4 11 NaN 2 e 12 3 NaN 19 8.3.4 \u5220\u9664\u6570\u636e \u00b6 \u5982\u679c\u60f3\u8981\u5220\u9664\u6570\u636e\u7684\u5217\uff0c\u53ef\u4ee5\u4f7f\u7528 del \u5173\u952e\u5b57\u3002 In [99]: d2 Out[99]: Test1 Test2 Test3 c 4 19 12 b 11 2 4 e 3 19 12 In [100]: del d2['Test3'] In [101]: d2 Out[101]: Test1 Test2 c 4 19 b 11 2 e 3 19 \u8be5\u64cd\u4f5c\u5bf9\u4e8e\u884c\u5e76\u4e0d\u9002\u7528\u3002Pandas\u63d0\u4f9b\u4e86 drop() \u65b9\u6cd5\u7528\u4e8e\u6570\u636e\u9879\u5220\u9664\u573a\u666f\uff0c\u8bfb\u8005\u53ea\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u7d22\u5f15\u6570\u7ec4\u6216\u5217\u8868\u3002 In [102]: d2.drop('b') Out[102]: Test1 Test2 c 4 19 e 3 19 In [103]: d2.drop(['b','c']) Out[103]: Test1 Test2 e 3 19 \u9ed8\u8ba4\u6267\u884c\u7684\u5220\u9664\u64cd\u4f5c\u5bf9\u8c61\u662f\u884c\uff0c\u5982\u679c\u9700\u8981\u5220\u9664\u5217\uff0c\u8bbe\u5b9a axis=\u2019columns\u2019\u3002 In [104]: d2.drop('Test2', axis='columns') Out[104]: Test1 c 4 b 11 e 3 \u6ce8\u610f\uff0c\u4e0a\u9762 drop \u65b9\u6cd5\u7684\u8c03\u7528\u662f\u4ea7\u751f\u4e00\u4e2a\u4fee\u6539\u540e\u7684\u6570\u636e\u5bf9\u8c61\uff0c\u6709\u65f6\u5019\u6570\u636e\u5f88\u5927\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5c31\u5730\u4fee\u6539\uff0c\u6b64\u65f6\u53ef\u4ee5\u8bbe\u5b9a inplace=True\u3002 8.3.5 \u91cd\u8d4b\u503c \u00b6 \u5c06\u5217\u8868\u6216\u6570\u7ec4\u8d4b\u503c\u7ed9\u67d0\u4e2a\u5217\u65f6\uff0c\u5176\u957f\u5ea6\u5fc5\u987b\u8ddf DataFrame \u7684\u957f\u5ea6\u76f8\u5339\u914d\u3002\u5982\u679c\u8d4b\u503c\u7684\u662f\u4e00\u4e2a Series\uff0c\u5c31\u4f1a\u7cbe\u786e\u5339\u914d DataFrame \u7684\u7d22\u5f15\uff0c\u6240\u6709\u7684\u7a7a\u4f4d\u90fd\u5c06\u88ab\u586b\u4e0a\u7f3a\u5931\u503c\uff1a In [108]: d2['New_column'] = pd.Series([1]) In [109]: d2 Out[109]: Test1 Test2 New_column c 4 19 NaN b 11 2 NaN e 3 19 NaN In [111]: d2['New_column'] = pd.Series([1, 2, 3]) In [112]: d2 Out[112]: Test1 Test2 New_column c 4 19 NaN b 11 2 NaN e 3 19 NaN In [113]: d2['New_column'] = pd.Series([1, 2, 3], index=['c','b','e']) In [114]: d2 Out[114]: Test1 Test2 New_column c 4 19 1 b 11 2 2 e 3 19 3 \u4e0a\u9762\u53d8\u91cf d2 \u56e0\u4e3a\u8bbe\u5b9a\u4e86\u81ea\u5b9a\u4e49\u7684\u7d22\u5f15\uff0c\u5f53\u6211\u4eec\u7ed9\u65b0\u7684\u5217\u6dfb\u52a0\u6570\u503c\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u76f8\u5e94\u5730\u6307\u5b9a\u7d22\u5f15\uff0c\u56e0\u4e3a\u7d22\u5f15\u4e0d\u5339\u914d\uff0c\u6240\u4ee5\u6700\u540e\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u662f NaN\u3002 8.3.6 \u7d22\u5f15\u4e0e\u8fc7\u6ee4 \u00b6 Pandas \u5e93\u652f\u6301\u4e30\u5bcc\u7684\u7d22\u5f15\u6807\u7b7e\uff0c\u66f4\u9002\u7528\u4e8e\u5b9e\u9645\u590d\u6742\u6570\u636e\u7684\u9009\u62e9\u8fc7\u6ee4\uff0c\u56e0\u6b64\u9700\u8981\u7406\u89e3\u591a\u79cd\u64cd\u4f5c\u65b9\u5f0f\u3002 \u7b80\u5355\u7d22\u5f15 \u00b6 \u5bf9\u4e8e Series \u5bf9\u8c61\uff0c\u63d0\u53d6\u5355\u4e2a\u6570\u636e\u4f7f\u7528\u4e0b\u6807\uff08\u4ece 0 \u5f00\u59cb\uff09\u6216\u6807\u7b7e\u503c\uff0c\u63d0\u53d6\u591a\u4e2a\u6570\u636e\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u6216\u8005\u5207\u7247\u3002 In [119]: s2 Out[119]: b 0.630239 a 0.173525 d 0.787798 c 0.176230 e 0.712007 dtype: float64 In [120]: s2[1] Out[120]: 0.17352490256429942 In [121]: s2['a'] Out[121]: 0.17352490256429942 In [122]: s2[['a','b','c']] Out[122]: a 0.173525 b 0.630239 c 0.176230 dtype: float64 In [123]: s2['b':'d'] Out[123]: b 0.630239 a 0.173525 d 0.787798 dtype: float64 \u5728\u7d22\u5f15\u7684\u65f6\u5019\u8fdb\u884c\u8d4b\u503c\uff0c\u5c31\u4f1a\u4fee\u6539\u76f8\u5e94\u7684\u6570\u636e\u3002 In [124]: s2['b':'d'] = [1, 2, 3] In [125]: s2 Out[125]: b 1.000000 a 2.000000 d 3.000000 c 0.176230 e 0.712007 dtype: float64 \u9488\u5bf9 DataFrame \u5bf9\u8c61\u6807\u7b7e\u7d22\u5f15\u662f\u83b7\u53d6\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\uff0c\u800c\u6570\u503c\u5207\u7247\u662f\u63d0\u53d6\u884c\uff0c\u5982\u679c\u53ea\u8f93\u5165\u6570\u503c\u5219\u4f1a\u62a5\u9519\uff0c\u8bfb\u8005\u9700\u8981\u989d\u5916\u6ce8\u610f\u3002 In [126]: d2['Test1'] Out[126]: c 4 b 11 e 3 Name: Test1, dtype: int64 In [127]: d2[0] --------------------------------------------------------------------------- KeyError Traceback (most recent call last) ~/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance) 3077 try: -> 3078 return self._engine.get_loc(key) 3079 except KeyError: ... KeyError: 0 During handling of the above exception, another exception occurred: KeyError Traceback (most recent call last) <ipython-input-127-f827a0df080c> in <module> ----> 1 d2[0] ~/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py in __getitem__(self, key) 2686 return self._getitem_multilevel(key) ... KeyError: 0 In [128]: d2[:0] Out[128]: Empty DataFrame Columns: [Test1, Test2, New_column] Index: [] In [129]: d2[:1] Out[129]: Test1 Test2 New_column c 4 19 1 In [130]: d2[:2] Out[130]: Test1 Test2 New_column c 4 19 1 b 11 2 2 \u5229\u7528\u903b\u8f91\u64cd\u4f5c\u7d22\u5f15 \u00b6 Pandas \u5bf9\u8c61\u4e00\u5927\u7279\u70b9\u662f\u53ef\u4ee5\u901a\u8fc7\u903b\u8f91\u6bd4\u8f83\u64cd\u4f5c\u5feb\u901f\u7b5b\u9009\u6240\u9700\u6570\u636e\uff0c\u4e0e ndarray \u7c7b\u4f3c\u3002\u4e0b\u9762\u4ee3\u7801\u6f14\u793a\u4e86\u901a\u8fc7\u903b\u8f91\u64cd\u4f5c\u9009\u62e9 Series \u5bf9\u8c61\u5c0f\u4e8e 1 \u5b50\u96c6\u7684\u4f8b\u5b50\uff1a In [131]: s2 Out[131]: b 1.000000 a 2.000000 d 3.000000 c 0.176230 e 0.712007 dtype: float64 In [132]: s2 < 1 Out[132]: b False a False d False c True e True dtype: bool In [133]: s2[s2 < 1] Out[133]: c 0.176230 e 0.712007 dtype: float64 \u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u8be5\u64cd\u4f5c\u5e94\u7528\u4e8e DataFrame \u5bf9\u8c61\uff0c\u5b83\u8fdb\u884c\u7684\u662f\u884c\u7b5b\u9009\u3002 In [134]: d2 Out[134]: Test1 Test2 New_column c 4 19 1 b 11 2 2 e 3 19 3 In [135]: d2[d2['Test2'] > 10] Out[135]: Test1 Test2 New_column c 4 19 1 e 3 19 3 \u8fd9\u4e2a\u53ef\u4ee5\u65b9\u4fbf\u8fdb\u884c\u91cd\u8d4b\u503c\u64cd\u4f5c\u3002 \u5047\u8bbe\u6211\u4eec d2 \u5bf9\u8c61\u4e2d\u5b58\u50a8\u7684\u6570\u5927\u4e8e 10 \u90fd\u662f\u5f02\u5e38\u503c\uff0c\u6211\u4eec\u5c06\u5b83\u4eec\u91cd\u8d4b\u503c\u4e3a 10\u3002 In [136]: d2[d2['Test2'] > 10] = 10 In [137]: d2 Out[137]: Test1 Test2 New_column c 10 10 10 b 11 2 2 e 10 10 10 \u4f7f\u7528 loc \u548c iloc \u7d22\u5f15 \u00b6 \u7b80\u5355\u7d22\u5f15\u90e8\u5206\u4ecb\u7ecd\u7684\u9488\u5bf9 DataFrame \u7684\u7d22\u5f15\u542b\u4e49\u4e0d\u6e05\u6670\uff0c\u4f7f\u7528\u65f6\u5f88\u5bb9\u6613\u6df7\u6dc6\uff0c\u5bfc\u81f4\u4ee3\u7801\u62a5\u9519\u3002\u4e3a\u4e86\u65b9\u4fbf\u4e14\u51c6\u786e\u5730\u83b7\u53d6\uff0cPandas \u5e93\u5f15\u5165\u4e86\u7279\u6b8a\u8fd0\u7b97\u7b26 loc \u548c iloc \u5206\u522b\u63a5\u53d7\u5b57\u7b26\u6807\u7b7e\u548c\u6574\u6570\u6807\u7b7e\u3002 \u5148\u770b\u4e00\u4e2a\u793a\u4f8b\uff0c\u4f7f\u7528\u5b57\u7b26\u6807\u7b7e\u9009\u53d6 d2 \u5bf9\u8c61\u7b2c 2 \u884c\u7684\u7b2c 2 \u548c\u7b2c 3 \u5217\u3002 In [138]: d2.loc['b', ['Test2', 'New_column']] Out[138]: Test2 2 New_column 2 Name: b, dtype: int64 \u8fd9\u4e0e\u4e0b\u9762\u4ee3\u7801\u7684\u662f\u7b49\u4ef7\u7684\uff1a In [139]: d2.iloc[1, [1,2]] Out[139]: Test2 2 New_column 2 Name: b, dtype: int64 \u6211\u4eec\u53ef\u4ee5\u5728\u65b9\u62ec\u53f7\u5185\u81ea\u7531\u5730\u4f7f\u7528\u5207\u7247\u3002 In [140]: d2.iloc[:1, 1:] Out[140]: Test2 New_column c 10 10 \u4e0d\u4ec5\u5982\u6b64\uff0c\u6807\u7b7e\u7d22\u5f15\u662f\u53ef\u4ee5\u7ea7\u8054\u7684\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u589e\u52a0\u4e00\u7ea7\u7b5b\u9009\uff0c\u5148\u9009 d2 \u5bf9\u8c61\u7684\u7b2c 2 \u884c\uff0c\u7136\u540e\u5927\u4e8e 10 \u7684\u5217\u3002 \u4e0b\u9762\u7684\u8f93\u51fa\u663e\u793a\u4e86\u6bcf\u4e00\u6b65\u7684\u7ed3\u679c\uff1a In [143]: d2 Out[143]: Test1 Test2 New_column c 10 10 10 b 11 2 2 e 10 10 10 In [144]: d2.iloc[1, ] Out[144]: Test1 11 Test2 2 New_column 2 Name: b, dtype: int64 In [145]: d2.iloc[1, ][d2.iloc[1,] > 10] Out[145]: Test1 11 Name: b, dtype: int64 \u5982\u679c\u8981\u7d22\u5f15\u5355\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u7684\u8fd0\u7b97\u7b26 at \u548c iat\u3002 \u5b57\u7b26\u7d22\u5f15\u3001\u6574\u6570\u7d22\u5f15\u3001\u5207\u7247\u3001iloc \u548c loc \u64cd\u4f5c\u7b26\u4ee5\u53ca\u903b\u8f91\u7d22\u5f15\u7b49\u90fd\u53ef\u4ee5\u5b9e\u73b0\u6570\u636e\u7684\u7b5b\u9009\u3002\u53ef\u89c1\uff0c\u5bf9\u4e8e\u60f3\u8981\u7684\u7ed3\u679c Pandas \u5e93\u63d0\u4f9b\u4e86\u7075\u6d3b\u591a\u6837\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002 \u6700\u540e\uff0c\u4e0b\u8868\u5bf9 DataFrame \u5404\u79cd\u7d22\u5f15\u65b9\u5f0f\u8fdb\u884c\u7b80\u5355\u6c47\u603b\u3002 \u88688-1 DataFrame \u7d22\u5f15\u65b9\u5f0f \u64cd\u4f5c \u8bf4\u660e df[val] \u9009\u53d6\u4e00\u6216\u591a\u5217\uff08\u5217\u5b50\u96c6\uff09 df.loc[val] \u4f7f\u7528\u6807\u7b7e\u9009\u53d6\u4e00\u6216\u591a\u884c\uff08\u884c\u5b50\u96c6\uff09 df.loc[:,val] \u4f7f\u7528\u6807\u7b7e\u9009\u53d6\u5217\u5b50\u96c6 df.loc[val1, val2] \u4f7f\u7528\u6807\u7b7e\u540c\u65f6\u9009\u62e9\u884c\u4e0e\u5217 df.iloc[val] \u4f7f\u7528\u6574\u6570\u9009\u53d6\u884c\u5b50\u96c6 df.iloc[:, val] \u4f7f\u7528\u6574\u6570\u9009\u53d6\u5217\u5b50\u96c6 df.iloc[val1, val2] \u4f7f\u7528\u6574\u6570\u540c\u65f6\u9009\u62e9\u884c\u4e0e\u5217 df.at[i_label, j_label] \u4f7f\u7528\u6807\u7b7e\u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u6807\u91cf\u503c df.iat[i, j] \u4f7f\u7528\u6574\u6570\u7d22\u5f15\u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u6807\u91cf\u503c reindex \u901a\u8fc7\u6807\u7b7e\u9009\u53d6\u884c\u6216\u5217 Pandas \u5e93\u63d0\u4f9b\u7684\u65b9\u62ec\u53f7 [] \u53ef\u4ee5\u4ee3\u8868\u591a\u79cd\u542b\u4e49\uff0c\u5305\u62ec\u5355\u5143\u7d20\u7d22\u5f15\u3001\u591a\u5143\u7d20\u5207\u7247\u3001\u903b\u8f91\u7d22\u5f15\u7b49\u7b49\uff0c\u56e0\u6b64\u8ba9 Python \u731c\u6d4b\u6211\u4eec\u4f7f\u7528\u65b9\u62ec\u53f7\u610f\u56fe\u4f1a\u975e\u5e38\u4f4e\u6548\u3002\u4e3a\u4e86\u9ad8\u6548\u548c\u4e66\u5199\u7684\u4e00\u81f4\u6027\uff0c\u672c\u4e66\u63a8\u8350\u4f7f\u7528\u57fa\u4e8e\u4f4d\u7f6e\u7684 at \u548c loc\uff0c\u4ee5\u53ca\u57fa\u4e8e\u6807\u7b7e\u7684 iat \u548c iloc\u3002 8.3.7 \u7b97\u672f\u8fd0\u7b97 \u00b6 Pandas \u5bf9\u8c61\u53ef\u4ee5\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\uff0c\u5982\u679c\u5b58\u5728\u4e0d\u540c\u7684\u6807\u7b7e\uff0c\u76f8\u540c\u7684\u6807\u7b7e\u624d\u4f1a\u5bf9\u9f50\u8fd0\u7b97\uff0c\u8fd9\u4e0e NumPy \u6570\u7ec4\u662f\u4e0d\u540c\u7684\u3002\u4e0b\u9762\u5206\u522b\u4ee5 Series \u548c DataFrame \u4e3e\u4f8b\u8bf4\u660e\u3002 In [11]: s1 = pd.Series(range(5), index = ['c', 'a', 'b', 'e', 'f']) In [12]: s2 = pd.Series([2.1, 1.1, 3.2, -4], index = ['a', 'd', 'b', 'c']) In [13]: s1 Out[13]: c 0 a 1 b 2 e 3 f 4 dtype: int64 In [14]: s2 Out[14]: a 2.1 d 1.1 b 3.2 c -4.0 dtype: float64 In [15]: s1 + s2 Out[15]: a 3.1 b 5.2 c -4.0 d NaN e NaN f NaN dtype: float64 \u7531\u4e8e\u4e00\u4e9b\u6807\u7b7e\u4e0d\u91cd\u53e0\uff0cPandas \u5f15\u5165\u4e86 NaN \u503c\u3002\u6ce8\u610f\uff0c\u53ea\u8981\u5b58\u5728 NaN \u503c\uff0c\u6240\u6709\u7684\u7b97\u672f\u64cd\u4f5c\u7ed3\u679c\u90fd\u53ea\u4f1a\u662f NaN \u503c\uff0cNaN \u503c\u88ab\u5e7f\u64ad\u4e86\u3002 DataFrame \u662f\u4e00\u5f20\u4e8c\u7ef4\u8868\uff0c\u6240\u4ee5\u7b97\u672f\u8fd0\u7b97\u9020\u6210\u7684\u5bf9\u9f50\u73b0\u8c61\u4f1a\u540c\u65f6\u5728\u884c\u548c\u5217\u4e0a\u53d1\u751f\u3002 In [16]: df1 = pd.DataFrame(np.arange(12.).reshape((3,4)), columns=['a', 'b', 'c', 'd'], index=['a', 'b', 'c']) In [17]: df2 = pd.DataFrame(np.arange(16.).reshape((4,4)), columns=['a', 'e', 'c', 'd'], index=['b', 'a', 'd', 'c']) In [18]: df1 Out[18]: a b c d a 0.0 1.0 2.0 3.0 b 4.0 5.0 6.0 7.0 c 8.0 9.0 10.0 11.0 In [19]: df2 Out[19]: a e c d b 0.0 1.0 2.0 3.0 a 4.0 5.0 6.0 7.0 d 8.0 9.0 10.0 11.0 c 12.0 13.0 14.0 15.0 In [20]: df1 + df2 Out[20]: a b c d e a 4.0 NaN 8.0 10.0 NaN b 4.0 NaN 8.0 10.0 NaN c 20.0 NaN 24.0 26.0 NaN d NaN NaN NaN NaN NaN \u5982\u679c\u60f3\u8981\u4f7f\u7528\u503c\u8fdb\u884c\u586b\u5145\uff0c\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5 add() \u5b9e\u73b0\uff0c\u7ed9\u9009\u9879 fill_value \u4f20\u5165\u53c2\u6570\u503c\u3002 In [21]: df1.add(df2, fill_value=2) Out[21]: a b c d e a 4.0 3.0 8.0 10.0 7.0 b 4.0 7.0 8.0 10.0 3.0 c 20.0 11.0 24.0 26.0 15.0 d 10.0 NaN 12.0 13.0 11.0 \u5176\u4ed6\u7b97\u672f\u64cd\u4f5c\u7c7b\u4f3c\uff0c\u56e0\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002 8.3.8 \u51fd\u6570\u5e94\u7528 \u00b6 Pandas \u672c\u8eab\u5c31\u662f\u57fa\u4e8e NumPy \u5e93\u6784\u5efa\u7684\uff0c\u524d\u9762\u6211\u4eec\u4e5f\u4e86\u89e3\u5230 DataFrame \u548c Series \u5b58\u50a8\u6570\u636e\u4f7f\u7528\u7684\u5c31\u662f ndarray\uff0c\u56e0\u6b64 Pandas \u5bf9\u8c61\u9664\u4e86\u652f\u6301 Pandas \u5e93\u63d0\u4f9b\u7684\u51fd\u6570\u548c\u65b9\u6cd5\uff0c\u4e5f\u5929\u7136\u652f\u6301 NumPy \u5404\u7c7b\u51fd\u6570\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u6c42\u53d6\u7edd\u5bf9\u503c\u3002 In [22]: np.abs(df1) Out[22]: a b c d a 0.0 1.0 2.0 3.0 b 4.0 5.0 6.0 7.0 c 8.0 9.0 10.0 11.0 In [23]: -np.abs(df1) Out[23]: a b c d a -0.0 -1.0 -2.0 -3.0 b -4.0 -5.0 -6.0 -7.0 c -8.0 -9.0 -10.0 -11.0 In [24]: np.abs(-np.abs(df1)) Out[24]: a b c d a 0.0 1.0 2.0 3.0 b 4.0 5.0 6.0 7.0 c 8.0 9.0 10.0 11.0 \u4e0d\u8fc7\u51fd\u6570\u5e94\u7528\u6700\u7cbe\u5f69\u7684\u64cd\u4f5c\u6765\u81ea\u4e8e apply() \u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u5bf9 Pandas \u5bf9\u8c61\u7684\u884c\u6216\u5217\u8fdb\u884c\u8fd0\u7b97\uff0c\u5982\u6c42\u53d6 df1 \u5bf9\u8c61\u7684\u5217\u548c\u3002 In [25]: df1.apply(sum) Out[25]: a 12.0 b 15.0 c 18.0 d 21.0 dtype: float64 \u5f53\u7136\u6709\u65f6\u5019\u4e3a\u4e86\u907f\u514d\u51fd\u6570\u547d\u540d\u7684\u9ebb\u70e6\uff0c\u4e5f\u53ef\u4ee5\u5f15\u5165\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u3002\u4e0b\u9762\u7684\u64cd\u4f5c\u5b9e\u73b0\u6c42\u53d6\u6bcf\u5217\u7684\u6b8b\u5dee\u503c\u3002 In [26]: df1.apply(lambda x: x - x.mean()) Out[26]: a b c d a -4.0 -4.0 -4.0 -4.0 b 0.0 0.0 0.0 0.0 c 4.0 4.0 4.0 4.0 \u9ed8\u8ba4\u662f\u4ee5\u884c\u4e3a\u8ba1\u7b97\u8f74\uff0c\u5373\u5bf9\u6bcf\u5217\u5e94\u7528\u51fd\u6570\uff0c\u5982\u679c\u60f3\u8981\u4ee5\u5217\u4e3a\u8ba1\u7b97\u8f74\u8fdb\u884c\u64cd\u4f5c\uff0c\u8bbe\u5b9a\u9009\u9879 axis=\u2019columns\u2019 \u5373\u53ef\u3002 In [27]: df1.apply(lambda x: x - x.mean(), axis='columns') Out[27]: a b c d a -1.5 -0.5 0.5 1.5 b -1.5 -0.5 0.5 1.5 c -1.5 -0.5 0.5 1.5 \u638c\u63e1 apply() \u65b9\u6cd5\u7684\u6838\u5fc3\u5728\u4e8e\u5c06\u884c\u6216\u5217\u4e00\u7ec4\u503c\u5f53\u505a\u6807\u91cf\u5bf9\u5f85\uff0c\u90a3\u4e48\u8fd9\u91cc\u5e94\u7528\u51fd\u6570\u5176\u5b9e\u8ddf\u5bf9\u6807\u91cf\u7528\u51fd\u6570\u8ba1\u7b97\u672c\u8d28\u662f\u4e00\u6837\u7684\u3002 8.3.9 \u6392\u5e8f \u00b6 \u6570\u636e\u7684\u6392\u5e8f\u662f\u4e00\u79cd\u91cd\u8981\u7684\u64cd\u4f5c\uff0c\u5bf9\u4e8e Series \u5bf9\u8c61\u548c DataFrame \u5bf9\u8c61\uff0cPanda \u5e93\u63d0\u4f9b\u4e86 sort_index() \u65b9\u6cd5\u548c sort_values() \u65b9\u6cd5\u5206\u522b\u6309\u6807\u7b7e\u548c\u503c\u8fdb\u884c\u6392\u5e8f\u3002 In [29]: s1 = pd.Series([2, 1, 3, 5, 4], index=['b', 'a', 'd', 'c', 'f']) In [30]: s1.sort_index() Out[30]: a 1 b 2 c 5 d 3 f 4 dtype: int64 In [31]: s1.sort_values() Out[31]: a 1 b 2 d 3 f 4 c 5 dtype: int64 \u9ed8\u8ba4\u662f\u5347\u5e8f\u6392\u5217\uff0c\u8bbe\u5b9a ascending=False \u53ef\u4ee5\u6539\u4e3a\u964d\u5e8f\u3002 In [32]: s1.sort_values(ascending=False) Out[32]: c 5 f 4 d 3 b 2 a 1 dtype: int64 DataFrame \u5bf9\u8c61\u6709 2 \u4e2a\u7ef4\u5ea6\uff0c\u9ed8\u8ba4\u662f\u6309\u7167\u884c\u8fdb\u884c\u6392\u5e8f\uff0c\u5982\u679c\u60f3\u8981\u8be5\u4e3a\u6309\u5217\u6392\u5e8f\uff0c\u9700\u8981\u5c06 axis \u9009\u9879\u8bbe\u4e3a 1\u3002 \u5728\u64cd\u4f5c DataFrame \u65f6\uff0c\u6709\u4e00\u4e2a\u6392\u5e8f\u53c2\u6570\u975e\u5e38\u5b9e\u7528\uff0c\u5c31\u662f by\u3002\u5b83\u53ef\u4ee5\u6839\u636e\u67d0\u4e00\u5217\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u4f8b\u5982\u5728\u5b9e\u9645\u5904\u7406\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6839\u636e\u6708\u4efd\u548c\u65e5\u671f\u6392\u5e8f\uff0c\u800c\u6570\u636e\u672c\u8eab\u662f\u6742\u4e71\u7684\uff0c\u8fd9\u4e2a\u9009\u9879\u5c31\u53ef\u4ee5\u6d3e\u4e0a\u5927\u7528\u573a\u3002 In [34]: df = pd.DataFrame({u'\u6708\u4efd':[2, 1, 4, 3], u'\u65e5\u671f':[29, 16, 14, 22], u'\u9500\u91cf': [150, 44, 300, 68]}) In [35]: df Out[35]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 0 2 29 150 1 1 16 44 2 4 14 300 3 3 22 68 In [36]: df.sort_values(by='\u6708\u4efd') Out[36]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 1 1 16 44 0 2 29 150 3 3 22 68 2 4 14 300 In [37]: df.sort_values(by='\u65e5\u671f') Out[37]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 2 4 14 300 1 1 16 44 3 3 22 68 0 2 29 150 In [38]: df.sort_values(by=['\u6708\u4efd', '\u65e5\u671f']) Out[38]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 1 1 16 44 0 2 29 150 3 3 22 68 2 4 14 300 In [39]: df.sort_values(by='\u9500\u91cf') Out[39]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 1 1 16 44 3 3 22 68 0 2 29 150 2 4 14 300 8.4 \u57fa\u672c\u7edf\u8ba1\u5206\u6790 \u00b6 Pandas \u5bf9\u8c61\u672c\u8eab\u5b58\u5728\u4e00\u7ec4\u5e38\u7528\u7684\u7edf\u8ba1\u503c\u8ba1\u7b97\u65b9\u6cd5\uff0c\u4e3b\u8981\u7528\u4e8e\u6c47\u603b\uff0c\u5982\u8ba1\u7b97\u603b\u548c\uff0c\u5206\u4f4d\u6570\u7b49\u3002 In [40]: df.sum() Out[40]: \u6708\u4efd 10 \u65e5\u671f 81 \u9500\u91cf 562 dtype: int64 In [41]: df.quantile() Out[41]: \u6708\u4efd 2.5 \u65e5\u671f 19.0 \u9500\u91cf 109.0 Name: 0.5, dtype: float64 In [42]: df.quantile([0.1, 0.9]) Out[42]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 0.1 1.3 14.6 51.2 0.9 3.7 26.9 255.0 \u4e5f\u6709\u65b9\u6cd5\u8ba1\u7b97\u7d2f\u8ba1\u503c\uff0c\u5982\u7d2f\u8ba1\u548c\uff1a In [43]: df.cumsum() Out[43]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 0 2 29 150 1 3 45 194 2 7 59 494 3 10 81 562 \u4e0d\u8fc7\uff0c\u6211\u4eec\u5e38\u7528 describe() \u65b9\u6cd5\u89c2\u6d4b\u591a\u4e2a\u7edf\u8ba1\u503c\uff0c\u4ece\u6570\u503c\u7684\u89d2\u5ea6\u7406\u89e3\u6570\u636e\u7684\u5927\u81f4\u5206\u5e03\u60c5\u51b5\u3002 In [44]: df.describe() Out[44]: \u6708\u4efd \u65e5\u671f \u9500\u91cf count 4.000000 4.000000 4.00000 mean 2.500000 20.250000 140.50000 std 1.290994 6.751543 115.61286 min 1.000000 14.000000 44.00000 25% 1.750000 15.500000 62.00000 50% 2.500000 19.000000 109.00000 75% 3.250000 23.750000 187.50000 max 4.000000 29.000000 300.00000 \u4e0b\u8868\u5217\u51fa\u5e38\u7528\u7684\u63cf\u8ff0\u7edf\u8ba1\u76f8\u5173\u65b9\u6cd5\u3002 \u88688-2 \u5e38\u7528\u7edf\u8ba1\u63cf\u8ff0\u65b9\u6cd5 \u65b9\u6cd5 \u8bf4\u660e count \u975e NaN \u503c\u6570\u91cf describe \u6c47\u603b\u7edf\u8ba1 min\u3001max \u6700\u5c0f\u6700\u5927\u503c argmin\u3001argmax \u6700\u5c0f\u503c\u6700\u5927\u503c\u6574\u6570\u7d22\u5f15\u4f4d\u7f6e idxmin\u3001idxmax \u6700\u5c0f\u503c\u6700\u5927\u503c\u6807\u7b7e\u4f4d\u7f6e quantile \u5206\u4f4d\u6570 mean\u3001median\u3001sum \u5747\u503c\u3001\u4e2d\u4f4d\u6570\u3001\u603b\u548c mad \u5e73\u5747\u7edd\u5bf9\u79bb\u5dee var\u3001std \u65b9\u5dee\u3001\u6807\u51c6\u5dee rank \u6392\u540d\uff08\u79e9\u5e8f\uff09 cumsum\u3001cumprod \u7d2f\u8ba1\u548c\u3001\u7d2f\u8ba1\u79ef cor \u76f8\u5173\u6027 cov \u534f\u65b9\u5dee 8.5 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 \u867d\u7136\u672c\u7ae0\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u5927\u91cf\u5173\u4e8e Pandas \u7684\u5185\u5bb9\uff0c\u5305\u62ec 2 \u4e2a\u6838\u5fc3\u6570\u636e\u5bf9\u8c61 Series \u548c DataFrame\uff0c\u4ee5\u53ca\u5982\u4f55\u521b\u5efa\u3001\u4f7f\u7528\u5b83\u4eec\u3002\u4f46\u8fd9\u4e9b\u8fd8\u8fdc\u8fdc\u4e0d\u591f\uff0c\u5b83\u4eec\u4ec5\u4ec5\u662f\u8bfb\u8005\u719f\u7ec3\u638c\u63e1 Pandas \u7684\u57fa\u7840\u3002\u518d\u63a5\u4e0b\u6765\u7684\u66f4\u591a\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u66f4\u6df1\u5165\u5730\u5bf9 Pandas \u8fdb\u884c\u5b66\u4e60\u5e76\u66f4\u5e7f\u6cdb\u5730\u5c06\u5b83\u5e94\u7528\u5230\u793a\u4f8b\u4e2d\u53bb\u3002Pandas\uff0c\u5b83\u662f Python \u6570\u636e\u5206\u6790\u7684\u7075\u9b42\u5de5\u5177\u3002","title":"\u7b2c 8 \u7ae0 Pandas \u5165\u95e8"},{"location":"08-pandas-intro/#8-pandas","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a Pandas \u6570\u636e\u7ed3\u6784\u4ecb\u7ecd Series \u4e0e DataFrame \u7684\u521b\u5efa Pandas \u5bf9\u8c61\u7d22\u5f15\u4e0e\u64cd\u4f5c \u57fa\u672c\u7edf\u8ba1\u5206\u6790 \u867d\u7136 NumPy \u5e93\u6784\u6210\u4e86 Python \u6570\u636e\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u77f3\uff0c\u4f46\u6211\u4eec\u5728\u5b9e\u9645\u8fdb\u884c\u6570\u636e\u5904\u7406\u65f6\u6781\u5c11\u4f1a\u4f7f\u7528\u5230\u5b83\u3002Python \u6570\u636e\u79d1\u5b66\u5bb6/\u5206\u6790\u5e08\u4eec\u9996\u9009\u7684\u5de5\u5177\u662f Pandas \u5e93\uff0c\u5b83\u5f3a\u5927\u7684\u6570\u636e\u7ed3\u6784\u548c\u7075\u6d3b\u5b9e\u7528\u7684\u64cd\u4f5c\u3001\u51fd\u6570/\u65b9\u6cd5\u5f81\u670d\u4e86\u6574\u4e2a Python \u79d1\u5b66\u793e\u533a\u3002\u672c\u7ae0\u5c06\u5bf9 Pandas \u7684\u6570\u636e\u7ed3\u6784\u548c\u57fa\u672c\u64cd\u4f5c\u65b9\u6cd5\u8fdb\u884c\u4ecb\u7ecd\u3002","title":"\u7b2c 8 \u7ae0 Pandas \u5165\u95e8"},{"location":"08-pandas-intro/#81-pandas","text":"Pandas \u7684\u540d\u5b57\u6765\u81ea\u9762\u677f\u6570\u636e\uff08Panel data\uff09\u548c\u6570\u636e\u5206\u6790\uff08Data analysis\uff09\u7684\u7ec4\u5408\uff0c\u6700\u521d\u7531 AQR Capital Management \u4e8e 2008 \u5e74\u5f00\u53d1\uff0c2009 \u5e74\u5e95\u5f00\u6e90\u5e76\u9010\u6b65\u6210\u957f\u4e3a Python \u7684\u6838\u5fc3\u8ba1\u7b97\u5206\u6790\u5de5\u5177\u3002Pandas \u5e93\u6700\u521d\u7684\u76ee\u7684\u662f\u670d\u52a1\u4e8e\u91d1\u878d\u5206\u6790\uff0c\u56e0\u6b64\u5bf9\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u6709\u975e\u5e38\u597d\u7684\u652f\u6301\u3002 Pandas \u5e93\u57fa\u4e8e NumPy \u5e93\u6784\u5efa\uff0c\u7eb3\u5165\u4e86\u5927\u91cf\u8ba1\u7b97\u5206\u6790\u5e93\u548c\u6807\u51c6\u7684\u6570\u636e\u6a21\u578b\uff0c\u6bd4\u5982\u7531 R \u8bed\u8a00\u6570\u636e\u6846\u5bf9\u8c61 data.frame \u542f\u53d1\u521b\u5efa\u4e86\u8457\u540d\u7684 DataFrame \u6570\u636e\u7ed3\u6784\u3002\u6765\u81ea NumPy \u5e93\u7684\u5e95\u5c42\u652f\u6301\u548c\u9ad8\u6548\u6570\u636e\u7ed3\u6784\u8868\u5f81\u548c\u64cd\u4f5c\u65b9\u6cd5\u7684\u5b9e\u73b0\u8ba9\u4f7f\u7528 Pandas \u5e93\u6e05\u6d17\u548c\u5206\u6790\u6570\u636e\u53d8\u5f97\u5feb\u901f\u53c8\u7b80\u5355\u3002 Pandas \u91c7\u7528\u4e86 NumPy \u5e93\u7684\u7f16\u7801\u98ce\u683c\uff0c\u4e0d\u8fc7\u524d\u8005\u805a\u7126\u4e8e\u8868\u683c\u548c\u6df7\u6742\u6570\u636e\u7684\u5904\u7406\uff0c\u800c\u540e\u8005\u5219\u9002\u5408\u6570\u503c\u6570\u7ec4\u6570\u636e\u7684\u5904\u7406\u548c\u8ba1\u7b97\u5206\u6790\u3002\u65e5\u5e38\u7684\u5546\u4e1a\u548c\u79d1\u7814\u6570\u636e\u5904\u7406\u5206\u6790\u5de5\u4f5c\u8005\u9762\u5bf9\u7684\u6b63\u662f\u5927\u91cf\u7684\u8868\u683c\u548c\u6df7\u6742\u6570\u636e\uff0c\u56e0\u6b64 Pandas \u975e\u5e38\u5b9e\u7528\u4e14\u5e94\u7528\u5e7f\u6cdb\u3002 \u5728\u6b63\u5f0f\u5b66\u4e60 Pandas \u4e4b\u524d\uff0c\u8bfb\u8005\u9700\u8981\u4e86\u89e3 Pandas \u5e93\u5bfc\u5165\u7ea6\u5b9a\uff1a import pandas as pd Pandas \u63d0\u4f9b\u7684\u6570\u636e\u7ed3\u6784 Series \u548c DataFrame \u4f7f\u7528\u975e\u5e38\u9891\u7e41\uff0c\u6240\u4ee5\u76f4\u63a5\u5c06\u5b83\u4eec\u5bfc\u5165\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4f1a\u975e\u5e38\u65b9\u4fbf\uff1a from pandas import Series, DataFrame","title":"8.1 Pandas \u7b80\u4ecb"},{"location":"08-pandas-intro/#82-pandas","text":"Pandas \u4e3b\u8981\u6709\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\uff1aSeries \u548c DataFrame\uff0c\u5b83\u4eec\u7684\u5b58\u5728\u53ef\u4ee5\u5e2e\u52a9\u6570\u636e\u5206\u6790\u4eba\u5458\u66f4\u5bb9\u6613\u5730\u5b58\u50a8\u6570\u636e\u3001\u9ad8\u6548\u5730\u5904\u7406\u6570\u636e\u3002\u65e5\u5e38\u7684\u5206\u6790\u4efb\u52a1\u51e0\u4e4e\u90fd\u53ef\u4ee5\u901a\u8fc7 Pandas \u5b8c\u6210\u3002","title":"8.2 Pandas \u7684\u6570\u636e\u7ed3\u6784"},{"location":"08-pandas-intro/#821-series","text":"Series \u5f62\u4f3c\u5b57\u5178\uff0c\u5305\u542b\u7d22\u5f15\uff08\u4e5f\u79f0\u6570\u636e\u6807\u7b7e\uff09\u548c\u6570\u636e\u4e24\u90e8\u5206\u3002\u4e0d\u8fc7\uff0cPandas \u5e93\u662f\u57fa\u4e8e NumPy \u5e93\u6784\u5efa\u7684\uff0c\u6240\u4ee5 Series \u5b9e\u9645\u4e0a\u662f\u901a\u8fc7\u4e00\u7ef4\u7684 NumPy \u6570\u7ec4\u5b9e\u73b0\u7684\u3002 \u4e0b\u9762\u4ee3\u7801\u5206\u522b\u4f7f\u7528\u4e86\u5b57\u5178\u3001NumPy \u6570\u7ec4\u548c Series \u5b58\u50a8 0\u30011\u30012\u3002 In [1]: import pandas as pd In [2]: import numpy as np In [4]: {'0':0, '1':1, '2': 2} Out[4]: {'0': 0, '1': 1, '2': 2} In [5]: np.arange(3) Out[5]: array([0, 1, 2]) In [6]: pd.Series(range(3)) Out[6]: 0 0 1 1 2 2 dtype: int64 3 \u79cd\u65b9\u5f0f\u5b58\u50a8\u7684\u6570\u636e\u662f\u4e00\u6837\u7684\uff0c\u4f46\u53ef\u4ee5\u770b\u5230 Series \u5bf9\u8c61\u7684\u8f93\u51fa\u5f62\u5f0f\u4e0e\u524d\u4e24\u8005\u6709\u6240\u4e0d\u540c\uff0c\u5b83\u66f4\u65b9\u4fbf\u7406\u89e3\u548c\u89c2\u5bdf\uff1a\u5de6\u4fa7\u663e\u793a\u4e86\u6570\u636e\u6807\u7b7e\uff0c\u53f3\u4fa7\u663e\u793a\u4e86\u6570\u636e\u503c\uff0c\u4e0b\u65b9\u663e\u793a\u6570\u636e\u7684\u7c7b\u578b\u662f 64 \u4f4d\u6574\u578b\u3002 \u4e0a\u9762\u6211\u4eec\u7ed9 Series() \u51fd\u6570\u53ea\u4f20\u5165\u4e86\u4e00\u4e2a\u6570\u636e\u5e8f\u5217\uff0c\u5e76\u6ca1\u6709\u8bbe\u7f6e\u7d22\u5f15\uff0c\u56e0\u800c\u51fd\u6570\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u4ece 0 \u5f00\u59cb\u3001\u4e0e\u6570\u636e\u957f\u5ea6\u76f8\u540c\u7684\u6574\u6570\u578b\u7d22\u5f15\u3002\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528 index \u548c values \u5c5e\u6027\u83b7\u53d6 Series \u5bf9\u8c61\u7684\u6807\u7b7e\u548c\u7d22\u5f15\uff0c\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff1a In [7]: scores = pd.Series([80, 90, 97]) In [8]: scores.index Out[8]: RangeIndex(start=0, stop=3, step=1) In [9]: scores.values Out[9]: array([80, 90, 97]) scores.values \u7684\u7ed3\u679c\u8bc1\u5b9e\u4e86 Series \u5bf9\u8c61\u7684\u6570\u636e\u503c\u7684\u786e\u662f\u4e00\u4e2a\u4e00\u7ef4\u7684 ndarray\u3002scores.index \u7684\u7ed3\u679c\u663e\u793a Series \u5bf9\u8c61\u7684\u7d22\u5f15\u662f\u4e00\u4e2a RangeIndex \u5bf9\u8c61\uff0c\u5b83\u4e0e range(3) \u7c7b\u4f3c\uff0c\u8fd9\u6837\u5b58\u50a8\u7684\u597d\u5904\u662f\u5f53\u6570\u636e\u5f88\u5927\u65f6\uff0c\u53ea\u9700\u8981 3 \u4e2a\u4fe1\u606f\uff1a\u8d77\u70b9\u3001\u7ec8\u70b9\u548c\u6b65\u957f\u5c31\u53ef\u4ee5\u8868\u793a\u6240\u6709\u7684\u7d22\u5f15\u503c\u3002 \u5728\u4e00\u822c\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u6570\u636e\u7d22\u5f15\u80fd\u8868\u793a\u6709\u66f4\u4e3a\u660e\u786e\u542b\u4e49\u7684\u4fe1\u606f\u3002 \u4f8b\u5982\uff0c\u4e0a\u9762 scores \u5b9e\u9645\u5b58\u50a8\u4e86\u67d0\u4f4d\u540c\u5b66\u7684\u8bed\u6570\u5916\u6210\u7ee9\uff0c\u4e0b\u9762\u7684\u8bbe\u7f6e\u80fd\u591f\u8ba9\u8fd9\u4fe1\u606f\u663e\u793a\u5f97\u66f4\u5b8c\u6574\uff1a In [10]: scores = pd.Series([80, 90, 97], index=[u'\u8bed\u6587',u'\u6570\u5b66',u'\u5916\u8bed']) In [11]: scores Out[11]: \u8bed\u6587 80 \u6570\u5b66 90 \u5916\u8bed 97 dtype: int64 In [12]: scores.index Out[12]: Index(['\u8bed\u6587', '\u6570\u5b66', '\u5916\u8bed'], dtype='object') In [13]: scores.values Out[13]: array([80, 90, 97]) \u8bfb\u8005\u901a\u8fc7\u5bf9\u5df2\u7ecf\u521b\u5efa\u597d\u7684 Series \u5bf9\u8c61\u5c5e\u6027\u91cd\u65b0\u8fdb\u884c\u8d4b\u503c\uff0c\u53ef\u4ee5\u4fee\u6539\u8be5\u5bf9\u8c61\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u5c06\u6807\u7b7e\u4fee\u6539\u4e3a\u82f1\u6587\u6216\u8005\u662f\u66f4\u6539\u8bed\u6587\u6210\u7ee9\u4e3a 95\u3002 In [14]: scores2 = scores # \u521b\u5efa\u4e00\u4e2a\u65b0\u62f7\u8d1d In [15]: scores2.index = ['Chinese', 'Math', 'English'] In [16]: scores2.values[0] = 95 In [17]: scores2 Out[17]: Chinese 95 Math 90 English 97 dtype: int64 \u6ce8\u610f\uff0c\u4e0a\u8ff0\u5c06 scores \u8d4b\u503c\u4e3a scores2 \u540e\uff0c\u4fee\u6539 scores2 \u4e5f\u4f1a\u9020\u6210 scores \u7684\u4fee\u6539\u3002\u5982\u679c\u4e0d\u60f3\u8981\u5b83\u4eec\u76f8\u4e92\u5f71\u54cd\uff0c\u5e94\u5f53\u4f7f\u7528 copy() \u65b9\u6cd5\u751f\u6210 scores2\u3002 In [19]: scores Out[19]: Chinese 95 Math 90 English 97 dtype: int64 \u4e0e\u5b57\u5178\u64cd\u4f5c\u76f8\u4f3c\uff0cSeries \u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u83b7\u53d6\u5bf9\u8c61\u7684\u503c\uff0c\u7d22\u5f15\u53ef\u4ee5\u662f\u5355\u4e2a\u7684\u503c\u6216\u662f\u5217\u8868\u3002 In [21]: scores[['Math', 'Chinese']] Out[21]: Math 90 Chinese 95 dtype: int64 In [22]: scores['Math'] Out[22]: 90 \u5f53\u7136\uff0c\u76f4\u63a5\u4f7f\u7528\u6574\u6570\u4e0b\u6807\u4e5f\u662f\u53ef\u884c\u7684\u3002 Series \u7ed3\u6784\u4e0a\u4e0e\u5b57\u5178\u975e\u5e38\u76f8\u4f3c\uff0c\u9664\u4e86\u4e0a\u8ff0\u4ece\u5217\u8868\u521b\u5efa Series\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5b57\u5178\u521b\u5efa\u3002 In [23]: score_dict = {u'\u8bed\u6587':95, u'\u6570\u5b66':90, u'\u5916\u8bed':97} In [24]: scores3 = pd.Series(score_dict) In [25]: scores3 Out[25]: \u8bed\u6587 95 \u6570\u5b66 90 \u5916\u8bed 97 dtype: int64 \u4e00\u4e9b\u9488\u5bf9\u5b57\u5178\u7684\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u7528\u4e8e Series \u4e2d\uff0c\u5982\u5224\u65ad \u5916\u8bed \u662f\u5426\u5b58\u5728\u3002 In [26]: u'\u5916\u8bed' in scores3 Out[26]: True In [27]: u'\u7269\u7406' in scores3 Out[27]: False \u9664\u4e86 index \u4e0e values \u5c5e\u6027\uff0cSeries \u5bf9\u8c61\u672c\u8eab\u53ca\u5176\u7d22\u5f15\u90fd\u6709\u4e00\u4e2a name \u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u53ef\u4ee5\u7528\u6765\u8bbe\u5b9a\u66f4\u660e\u786e\u7684\u6570\u636e\u542b\u4e49\u3002 In [29]: scores3.name = 'xx\u4e2d\u5b66\u671f\u4e2d\u6210\u7ee9' In [30]: scores3.index.name = '\u5b66\u79d1' In [31]: scores3 Out[31]: \u5b66\u79d1 \u8bed\u6587 95 \u6570\u5b66 90 \u5916\u8bed 97 Name: xx\u4e2d\u5b66\u671f\u4e2d\u6210\u7ee9, dtype: int64","title":"8.2.1 Series"},{"location":"08-pandas-intro/#822-dataframe","text":"Series \u5bf9\u8c61\u53ea\u80fd\u6709\u6548\u5730\u8868\u793a\u4e00\u7ef4\u7684\u6570\u636e\uff0c\u800c\u6570\u636e\u5206\u6790\u5de5\u4f5c\u5e38\u5e38\u9762\u5bf9\u7684\u662f\u8868\u683c\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5373\u4e00\u7ec4\u6709\u5e8f\u7684\u6570\u636e\u5217\uff0c\u6bcf\u4e00\u5217\u90fd\u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002Pandas \u5e93\u5f15\u5165\u4e86 DataFrame\uff08\u4e2d\u6587\u5ff5\u4f5c \u6570\u636e\u6846 \uff09\u7528\u4ee5\u8868\u5f81\u8868\u683c\u6570\u636e\uff0cDataFrame \u5305\u542b\u884c\u3001\u5217\u7d22\u5f15\uff0c\u53ef\u4ee5\u770b\u4f5c\u7528\u7b49\u957f Series \u7ec4\u6210\u7684\u5b57\u5178\u3002 \u6700\u5e38\u7528\u4e8e\u521b\u5efa DataFrame \u7684\u65b9\u5f0f\u662f\u4f20\u5165\u4e00\u4e2a\u7b49\u957f\u5217\u8868\u6216 ndarray \u7ec4\u6210\u7684\u5b57\u5178\u3002 In [32]: df = {'\u59d3\u540d': ['\u5c0f\u660e','\u5c0f\u738b','\u5c0f\u5f20'], '\u8bed\u6587':[80,85,90], '\u6570\u5b66':[99,88,86] } In [33]: df Out[33]: {'\u59d3\u540d': ['\u5c0f\u660e', '\u5c0f\u738b', '\u5c0f\u5f20'], '\u8bed\u6587': [80, 85, 90], '\u6570\u5b66': [99, 88, 86]} In [34]: df = pd.DataFrame(df) In [35]: df Out[35]: \u59d3\u540d \u8bed\u6587 \u6570\u5b66 0 \u5c0f\u660e 80 99 1 \u5c0f\u738b 85 88 2 \u5c0f\u5f20 90 86 \u4e0e Series \u7c7b\u4f3c\uff0c\u5982\u679c\u521b\u5efa DataFrame \u6ca1\u6709\u6307\u5b9a\u7d22\u5f15\uff0c\u4f1a\u88ab\u81ea\u52a8\u52a0\u4e0a\u3002\u901a\u8fc7 columns \u9009\u9879\u53ef\u4ee5\u6307\u5b9a\u5217\u6807\u7b7e\uff08\u540d\uff09\u4ee5\u53ca\u987a\u5e8f\u3002 In [36]: df2 = pd.DataFrame(df, columns=['\u6570\u5b66', '\u8bed\u6587', '\u59d3\u540d']) In [37]: df2 Out[37]: \u6570\u5b66 \u8bed\u6587 \u59d3\u540d 0 99 80 \u5c0f\u660e 1 88 85 \u5c0f\u738b 2 86 90 \u5c0f\u5f20 \u5982\u679c\u4f20\u5165\u7684 columns \u5728\u6570\u636e\u4e2d\u627e\u4e0d\u5230\uff0c\u5c31\u4f1a\u4ea7\u751f\u7f3a\u5931\u503c\u3002 In [38]: df3 = pd.DataFrame(df, columns=['\u6570\u5b66', '\u8bed\u6587','\u5916\u8bed', '\u59d3\u540d']) In [39]: df3 Out[39]: \u6570\u5b66 \u8bed\u6587 \u5916\u8bed \u59d3\u540d 0 99 80 NaN \u5c0f\u660e 1 88 85 NaN \u5c0f\u738b 2 86 90 NaN \u5c0f\u5f20 \u884c\u6807\u7b7e\u53ef\u4ee5\u901a\u8fc7 index \u9009\u9879\u6307\u5b9a\uff0c\u4e0a\u9762\u59d3\u540d\u53ef\u4ee5\u8bbe\u4e3a\u884c\u6807\u7b7e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u53bb\u9664\u59d3\u540d\u8fd9\u4e00\u5217\u4e86\u3002 In [43]: df = {'\u59d3\u540d': ['\u5c0f\u660e','\u5c0f\u738b','\u5c0f\u5f20'], '\u8bed\u6587':[80,85,90], '\u6570\u5b66':[99,88,86]} ...: In [44]: df3 = pd.DataFrame(df, columns=['\u6570\u5b66', '\u8bed\u6587'], index=['\u5c0f\u660e','\u5c0f\u738b','\u5c0f\u5f20 ...: ']) In [45]: df3 Out[45]: \u6570\u5b66 \u8bed\u6587 \u5c0f\u660e 99 80 \u5c0f\u738b 88 85 \u5c0f\u5f20 86 90 \u901a\u8fc7\u6807\u7b7e\u83b7\u53d6 DataFrame \u6570\u636e\u9700\u8981\u901a\u8fc7\u540d\u79f0\u6216 loc \u5c5e\u6027\u8fdb\u884c\uff0c\u524d\u8005\u8bbf\u95ee\u884c\uff0c\u540e\u8005\u8bbf\u95ee\u5217\u3002 In [51]: df3['\u6570\u5b66'] Out[51]: \u5c0f\u660e 99 \u5c0f\u738b 88 \u5c0f\u5f20 86 Name: \u6570\u5b66, dtype: int64 In [54]: df3.loc['\u5c0f\u738b'] Out[54]: \u6570\u5b66 88 \u8bed\u6587 85 Name: \u5c0f\u738b, dtype: int64 \u53ef\u4ee5\u53d1\u73b0\u8fd4\u56de\u7684\u90fd\u662f Series \u5bf9\u8c61\u3002 \u521b\u5efa DataFrame \u8fd8\u53ef\u4ee5\u4f7f\u7528\u5d4c\u5957\u5b57\u5178\uff0c\u5b57\u5178\u5916\u5c42\u7684\u952e\u4f1a\u4f5c\u4e3a\u5217\u6807\u7b7e\uff0c\u800c\u5185\u5c42\u7684\u952e\u4f1a\u4f5c\u4e3a\u884c\u6807\u7b7e\u3002 In [55]: df = {'\u8bed\u6587':{'\u5c0f\u660e':80,'\u5c0f\u738b':85,'\u5c0f\u5f20':90}, '\u6570\u5b66':{'\u5c0f\u660e':99,'\u5c0f\u738b':88,'\u5c0f\u5f20':86}} In [56]: pd.DataFrame(df) Out[56]: \u8bed\u6587 \u6570\u5b66 \u5c0f\u5f20 90 86 \u5c0f\u660e 80 99 \u5c0f\u738b 85 88 DataFrame \u7684 index \u548c columns \u5c5e\u6027\u53ef\u4ee5\u8bbe\u7f6e name \u5c5e\u6027\u3002 In [58]: df3.index.name = '\u59d3\u540d' In [59]: df3.columns.name = '\u5b66\u79d1' In [60]: df3 Out[60]: \u5b66\u79d1 \u6570\u5b66 \u8bed\u6587 \u59d3\u540d \u5c0f\u660e 99 80 \u5c0f\u738b 88 85 \u5c0f\u5f20 86 90 DataFrame \u7684 values\u5c5e\u6027\u4f1a\u8fd4\u56de DataFrame \u5b58\u50a8\u7684\u6570\u636e\uff0c\u6570\u636e\u7c7b\u578b\u662f\u4e8c\u7ef4\u7684 ndarrary\u3002 In [61]: df3.values Out[61]: array([[99, 80], [88, 85], [86, 90]])","title":"8.2.2 DataFrame"},{"location":"08-pandas-intro/#83-pandas","text":"\u4f7f\u7528\u5408\u9002\u7684 Pandas \u6570\u636e\u7ed3\u6784\uff08Series\u6216DataFrame\uff09\u5b58\u50a8\u9700\u8981\u5206\u6790\u7684\u6570\u636e\u540e\uff0c\u8bfb\u8005\u4e00\u822c\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u7b5b\u9009\u548c\u64cd\u4f5c\uff0c\u4ee5\u83b7\u5f97\u6700\u540e\u6240\u9700\u7684\u6570\u636e\uff0c\u7136\u540e\u53ef\u80fd\u662f\u63d0\u4f9b\u6570\u636e\u6c47\u603b\u62a5\u8868\u3001\u53ef\u89c6\u5316\u4e43\u81f3\u7edf\u8ba1\u5206\u6790\u4e0e\u5efa\u6a21\u3002\u672c\u8282\u5c06\u4ecb\u7ecd Pandas \u57fa\u672c\u7684\u6570\u636e\u64cd\u4f5c\u529f\u80fd\uff0c\u8bfb\u8005\u5c06\u5b66\u4e60\u64cd\u4f5c Series \u548c DataFrame \u5bf9\u8c61\u7684\u57fa\u672c\u624b\u6bb5\u3002","title":"8.3 Pandas \u5bf9\u8c61\u57fa\u672c\u64cd\u4f5c"},{"location":"08-pandas-intro/#831","text":"\u5728\u524d\u9762\u7684\u5185\u5bb9\u4e2d\u672c\u4e66\u5f15\u5165\u7684\u6570\u636e\u90fd\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u76f4\u63a5\u6253\u5370\u8f93\u51fa\u5c31\u53ef\u4ee5\u89c2\u5bdf\u53d8\u91cf\u5b58\u50a8\u7684\u6570\u636e\u3002\u7136\u800c\u6570\u636e\u8fc7\u957f\u65f6\uff0c\u53ef\u80fd\u5c31\u4e0d\u9002\u7528\u8ba1\u7b97\u673a\u663e\u793a\u5668\u7684\u663e\u793a\u5c4f\uff0c\u5f71\u54cd\u9605\u8bfb\u548c\u7406\u89e3\u3002\u5728\u5b9e\u9645\u7684\u64cd\u4f5c\u4e2d\uff0c\u6211\u4eec\u4ec5\u9700\u8981\u89c2\u5bdf\u5c11\u91cf\u7684\u6570\u636e\u800c\u4e0d\u7528\u6253\u5370\u6240\u6709\u7684\u6570\u636e\u5c31\u53ef\u4ee5\u4e86\u89e3\u6570\u636e\u7684\u7ed3\u6784\uff0cPandas \u5f15\u5165\u4e86 head() \u548c tail() \u65b9\u6cd5\u663e\u793a Series \u6216 DataFrame \u5bf9\u8c61\u7684\u5934\u90e8\u548c\u5c3e\u90e8\u6570\u636e\uff0c\u9ed8\u8ba4\u662f 5 \u4e2a\uff08\u884c\uff09\u3002 In [62]: s1 = pd.Series(np.random.rand(1000)) In [63]: s1.head() Out[63]: 0 0.797903 1 0.458301 2 0.800034 3 0.078226 4 0.999968 dtype: float64 In [64]: d1 = pd.DataFrame({'a':np.random.rand(1000), 'b':np.random.rand(1000)}) In [65]: d1.head() Out[65]: a b 0 0.298372 0.612369 1 0.952201 0.606749 2 0.608556 0.381032 3 0.297048 0.939676 4 0.364875 0.360786 In [66]: s1.tail() Out[66]: 995 0.047546 996 0.752907 997 0.479628 998 0.007178 999 0.960005 dtype: float64 In [67]: d1.tail() Out[67]: a b 995 0.571106 0.175381 996 0.789444 0.520254 997 0.298536 0.305487 998 0.739158 0.594261 999 0.850966 0.328761 \u5728\u65b9\u6cd5\u4e2d\u4f20\u5165\u6b63\u6574\u6570\u4f5c\u4e3a\u53c2\u6570\u5373\u53ef\u4fee\u6539\u663e\u793a\u7684\u6570\u76ee\u3002 In [68]: d1.head(10) Out[68]: a b 0 0.298372 0.612369 1 0.952201 0.606749 2 0.608556 0.381032 3 0.297048 0.939676 4 0.364875 0.360786 5 0.013640 0.267650 6 0.854873 0.251575 7 0.349147 0.065307 8 0.816777 0.932590 9 0.612475 0.385550","title":"8.3.1 \u67e5\u770b\u6570\u636e"},{"location":"08-pandas-intro/#832","text":"DataFrame \u7684 T \u5c5e\u6027\u53ef\u4ee5\u83b7\u53d6\u8f6c\u7f6e\u7ed3\u679c\u3002 In [69]: d1.T Out[69]: 0 1 2 ... 997 998 999 a 0.298372 0.952201 0.608556 ... 0.298536 0.739158 0.850966 b 0.612369 0.606749 0.381032 ... 0.305487 0.594261 0.328761 [2 rows x 1000 columns]","title":"8.3.2 \u8f6c\u7f6e"},{"location":"08-pandas-intro/#833","text":"\u91cd\u7d22\u5f15\u662f Pandas \u5e93\u4e00\u4e2a\u91cd\u8981\u7684\u64cd\u4f5c\uff0c\u5b83\u7528\u4e8e\u521b\u5efa\u7b26\u5408\u6307\u5b9a\u7d22\u5f15\u987a\u5e8f\u7684\u65b0\u5bf9\u8c61\u3002 In [73]: s2 = pd.Series(np.random.rand(5), index=['b', 'a', 'd', 'c', 'e']) In [74]: s2 Out[74]: b 0.630239 a 0.173525 d 0.787798 c 0.176230 e 0.712007 dtype: float64 In [75]: s3 = s2.reindex(['a', 'b', 'c', 'd', 'e', 'f']) In [76]: s3 Out[76]: a 0.173525 b 0.630239 c 0.176230 d 0.787798 e 0.712007 f NaN dtype: float64 \u5982\u679c\u8bbe\u7f6e\u7684\u7d22\u5f15\u503c\u4e0d\u5b58\u5728\uff0c\u5c31\u5f15\u5165\u4e86\u7f3a\u5931\u503c NaN\u3002\u7f3a\u5931\u503c\u548c\u975e\u7f3a\u5931\u503c\u53ef\u4ee5\u901a\u8fc7 is.null() \u65b9\u6cd5\u548c notnull() \u65b9\u6cd5\u8fdb\u884c\u5224\u65ad\u3002 In [77]: s3.isnull() Out[77]: a False b False c False d False e False f True dtype: bool In [78]: s3.notnull() Out[78]: a True b True c True d True e True f False dtype: bool \u6709\u65f6\u91cd\u7d22\u5f15\u9700\u8981\u505a\u4e00\u4e9b\u63d2\u503c\u5904\u7406\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 method \u9009\u9879\u8bbe\u5b9a\uff0c\u5982 ffill \u53ef\u5b9e\u73b0\u524d\u5411\u586b\u5145\u3002 In [89]: s4 = pd.Series(np.random.randint(2, 10, 3), index = [0,2,4]) In [90]: s4 Out[90]: 0 6 2 2 4 2 dtype: int64 In [91]: s4.reindex(np.arange(8), method='ffill') Out[91]: 0 6 1 6 2 2 3 2 4 2 5 2 6 2 7 2 dtype: int64 \u9488\u5bf9 DataFrame\uff0creindex() \u65b9\u6cd5\u53ef\u4ee5\u4fee\u6539\u884c\u7d22\u5f15\u548c\u5217\u7d22\u5f15\u3002\u5982\u679c\u53ea\u4f20\u5165\u4e00\u4e2a\u5e8f\u5217\uff0c\u53ea\u4fee\u6539\u884c\u7d22\u5f15\u3002\u4f7f\u7528 columns \u5173\u952e\u5b57\u53c2\u6570\u5219\u53ef\u4ee5\u4fee\u6539\u5217\u7d22\u5f15\u3002 In [92]: d2 = pd.DataFrame(np.random.randint(2,20,9).reshape((3,3)), index=['c', 'b', 'e'], columns=['Test1', 'Test2', 'Test3']) In [93]: d2 Out[93]: Test1 Test2 Test3 c 4 19 12 b 11 2 4 e 3 19 12 In [94]: d3 = d2.reindex(['a', 'b', 'c', 'd']) In [95]: d3 Out[95]: Test1 Test2 Test3 a NaN NaN NaN b 11.0 2.0 4.0 c 4.0 19.0 12.0 d NaN NaN NaN In [96]: d2.reindex(['a', 'b', 'c', 'd', 'e'], columns=[]) Out[96]: Empty DataFrame Columns: [] Index: [a, b, c, d, e] In [97]: d2.reindex(['a', 'b', 'c', 'd', 'e'], columns=['Test2', 'Test4', 'Test1', ' ...: Test3']) Out[97]: Test2 Test4 Test1 Test3 a NaN NaN NaN NaN b 2.0 NaN 11.0 4.0 c 19.0 NaN 4.0 12.0 d NaN NaN NaN NaN e 19.0 NaN 3.0 12.0 \u4e5f\u53ef\u4ee5\u53ea\u4f7f\u7528 columns \u5173\u952e\u5b57\u53c2\u6570\u91cd\u7d22\u5f15\u5217\u3002 In [98]: d2.reindex(columns=['Test3', 'Test1', 'Test4', 'Test2']) Out[98]: Test3 Test1 Test4 Test2 c 12 4 NaN 19 b 4 11 NaN 2 e 12 3 NaN 19","title":"8.3.3 \u91cd\u7d22\u5f15"},{"location":"08-pandas-intro/#834","text":"\u5982\u679c\u60f3\u8981\u5220\u9664\u6570\u636e\u7684\u5217\uff0c\u53ef\u4ee5\u4f7f\u7528 del \u5173\u952e\u5b57\u3002 In [99]: d2 Out[99]: Test1 Test2 Test3 c 4 19 12 b 11 2 4 e 3 19 12 In [100]: del d2['Test3'] In [101]: d2 Out[101]: Test1 Test2 c 4 19 b 11 2 e 3 19 \u8be5\u64cd\u4f5c\u5bf9\u4e8e\u884c\u5e76\u4e0d\u9002\u7528\u3002Pandas\u63d0\u4f9b\u4e86 drop() \u65b9\u6cd5\u7528\u4e8e\u6570\u636e\u9879\u5220\u9664\u573a\u666f\uff0c\u8bfb\u8005\u53ea\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u7d22\u5f15\u6570\u7ec4\u6216\u5217\u8868\u3002 In [102]: d2.drop('b') Out[102]: Test1 Test2 c 4 19 e 3 19 In [103]: d2.drop(['b','c']) Out[103]: Test1 Test2 e 3 19 \u9ed8\u8ba4\u6267\u884c\u7684\u5220\u9664\u64cd\u4f5c\u5bf9\u8c61\u662f\u884c\uff0c\u5982\u679c\u9700\u8981\u5220\u9664\u5217\uff0c\u8bbe\u5b9a axis=\u2019columns\u2019\u3002 In [104]: d2.drop('Test2', axis='columns') Out[104]: Test1 c 4 b 11 e 3 \u6ce8\u610f\uff0c\u4e0a\u9762 drop \u65b9\u6cd5\u7684\u8c03\u7528\u662f\u4ea7\u751f\u4e00\u4e2a\u4fee\u6539\u540e\u7684\u6570\u636e\u5bf9\u8c61\uff0c\u6709\u65f6\u5019\u6570\u636e\u5f88\u5927\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5c31\u5730\u4fee\u6539\uff0c\u6b64\u65f6\u53ef\u4ee5\u8bbe\u5b9a inplace=True\u3002","title":"8.3.4 \u5220\u9664\u6570\u636e"},{"location":"08-pandas-intro/#835","text":"\u5c06\u5217\u8868\u6216\u6570\u7ec4\u8d4b\u503c\u7ed9\u67d0\u4e2a\u5217\u65f6\uff0c\u5176\u957f\u5ea6\u5fc5\u987b\u8ddf DataFrame \u7684\u957f\u5ea6\u76f8\u5339\u914d\u3002\u5982\u679c\u8d4b\u503c\u7684\u662f\u4e00\u4e2a Series\uff0c\u5c31\u4f1a\u7cbe\u786e\u5339\u914d DataFrame \u7684\u7d22\u5f15\uff0c\u6240\u6709\u7684\u7a7a\u4f4d\u90fd\u5c06\u88ab\u586b\u4e0a\u7f3a\u5931\u503c\uff1a In [108]: d2['New_column'] = pd.Series([1]) In [109]: d2 Out[109]: Test1 Test2 New_column c 4 19 NaN b 11 2 NaN e 3 19 NaN In [111]: d2['New_column'] = pd.Series([1, 2, 3]) In [112]: d2 Out[112]: Test1 Test2 New_column c 4 19 NaN b 11 2 NaN e 3 19 NaN In [113]: d2['New_column'] = pd.Series([1, 2, 3], index=['c','b','e']) In [114]: d2 Out[114]: Test1 Test2 New_column c 4 19 1 b 11 2 2 e 3 19 3 \u4e0a\u9762\u53d8\u91cf d2 \u56e0\u4e3a\u8bbe\u5b9a\u4e86\u81ea\u5b9a\u4e49\u7684\u7d22\u5f15\uff0c\u5f53\u6211\u4eec\u7ed9\u65b0\u7684\u5217\u6dfb\u52a0\u6570\u503c\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u76f8\u5e94\u5730\u6307\u5b9a\u7d22\u5f15\uff0c\u56e0\u4e3a\u7d22\u5f15\u4e0d\u5339\u914d\uff0c\u6240\u4ee5\u6700\u540e\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u662f NaN\u3002","title":"8.3.5 \u91cd\u8d4b\u503c"},{"location":"08-pandas-intro/#836","text":"Pandas \u5e93\u652f\u6301\u4e30\u5bcc\u7684\u7d22\u5f15\u6807\u7b7e\uff0c\u66f4\u9002\u7528\u4e8e\u5b9e\u9645\u590d\u6742\u6570\u636e\u7684\u9009\u62e9\u8fc7\u6ee4\uff0c\u56e0\u6b64\u9700\u8981\u7406\u89e3\u591a\u79cd\u64cd\u4f5c\u65b9\u5f0f\u3002","title":"8.3.6 \u7d22\u5f15\u4e0e\u8fc7\u6ee4"},{"location":"08-pandas-intro/#837","text":"Pandas \u5bf9\u8c61\u53ef\u4ee5\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\uff0c\u5982\u679c\u5b58\u5728\u4e0d\u540c\u7684\u6807\u7b7e\uff0c\u76f8\u540c\u7684\u6807\u7b7e\u624d\u4f1a\u5bf9\u9f50\u8fd0\u7b97\uff0c\u8fd9\u4e0e NumPy \u6570\u7ec4\u662f\u4e0d\u540c\u7684\u3002\u4e0b\u9762\u5206\u522b\u4ee5 Series \u548c DataFrame \u4e3e\u4f8b\u8bf4\u660e\u3002 In [11]: s1 = pd.Series(range(5), index = ['c', 'a', 'b', 'e', 'f']) In [12]: s2 = pd.Series([2.1, 1.1, 3.2, -4], index = ['a', 'd', 'b', 'c']) In [13]: s1 Out[13]: c 0 a 1 b 2 e 3 f 4 dtype: int64 In [14]: s2 Out[14]: a 2.1 d 1.1 b 3.2 c -4.0 dtype: float64 In [15]: s1 + s2 Out[15]: a 3.1 b 5.2 c -4.0 d NaN e NaN f NaN dtype: float64 \u7531\u4e8e\u4e00\u4e9b\u6807\u7b7e\u4e0d\u91cd\u53e0\uff0cPandas \u5f15\u5165\u4e86 NaN \u503c\u3002\u6ce8\u610f\uff0c\u53ea\u8981\u5b58\u5728 NaN \u503c\uff0c\u6240\u6709\u7684\u7b97\u672f\u64cd\u4f5c\u7ed3\u679c\u90fd\u53ea\u4f1a\u662f NaN \u503c\uff0cNaN \u503c\u88ab\u5e7f\u64ad\u4e86\u3002 DataFrame \u662f\u4e00\u5f20\u4e8c\u7ef4\u8868\uff0c\u6240\u4ee5\u7b97\u672f\u8fd0\u7b97\u9020\u6210\u7684\u5bf9\u9f50\u73b0\u8c61\u4f1a\u540c\u65f6\u5728\u884c\u548c\u5217\u4e0a\u53d1\u751f\u3002 In [16]: df1 = pd.DataFrame(np.arange(12.).reshape((3,4)), columns=['a', 'b', 'c', 'd'], index=['a', 'b', 'c']) In [17]: df2 = pd.DataFrame(np.arange(16.).reshape((4,4)), columns=['a', 'e', 'c', 'd'], index=['b', 'a', 'd', 'c']) In [18]: df1 Out[18]: a b c d a 0.0 1.0 2.0 3.0 b 4.0 5.0 6.0 7.0 c 8.0 9.0 10.0 11.0 In [19]: df2 Out[19]: a e c d b 0.0 1.0 2.0 3.0 a 4.0 5.0 6.0 7.0 d 8.0 9.0 10.0 11.0 c 12.0 13.0 14.0 15.0 In [20]: df1 + df2 Out[20]: a b c d e a 4.0 NaN 8.0 10.0 NaN b 4.0 NaN 8.0 10.0 NaN c 20.0 NaN 24.0 26.0 NaN d NaN NaN NaN NaN NaN \u5982\u679c\u60f3\u8981\u4f7f\u7528\u503c\u8fdb\u884c\u586b\u5145\uff0c\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5 add() \u5b9e\u73b0\uff0c\u7ed9\u9009\u9879 fill_value \u4f20\u5165\u53c2\u6570\u503c\u3002 In [21]: df1.add(df2, fill_value=2) Out[21]: a b c d e a 4.0 3.0 8.0 10.0 7.0 b 4.0 7.0 8.0 10.0 3.0 c 20.0 11.0 24.0 26.0 15.0 d 10.0 NaN 12.0 13.0 11.0 \u5176\u4ed6\u7b97\u672f\u64cd\u4f5c\u7c7b\u4f3c\uff0c\u56e0\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002","title":"8.3.7 \u7b97\u672f\u8fd0\u7b97"},{"location":"08-pandas-intro/#838","text":"Pandas \u672c\u8eab\u5c31\u662f\u57fa\u4e8e NumPy \u5e93\u6784\u5efa\u7684\uff0c\u524d\u9762\u6211\u4eec\u4e5f\u4e86\u89e3\u5230 DataFrame \u548c Series \u5b58\u50a8\u6570\u636e\u4f7f\u7528\u7684\u5c31\u662f ndarray\uff0c\u56e0\u6b64 Pandas \u5bf9\u8c61\u9664\u4e86\u652f\u6301 Pandas \u5e93\u63d0\u4f9b\u7684\u51fd\u6570\u548c\u65b9\u6cd5\uff0c\u4e5f\u5929\u7136\u652f\u6301 NumPy \u5404\u7c7b\u51fd\u6570\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u6c42\u53d6\u7edd\u5bf9\u503c\u3002 In [22]: np.abs(df1) Out[22]: a b c d a 0.0 1.0 2.0 3.0 b 4.0 5.0 6.0 7.0 c 8.0 9.0 10.0 11.0 In [23]: -np.abs(df1) Out[23]: a b c d a -0.0 -1.0 -2.0 -3.0 b -4.0 -5.0 -6.0 -7.0 c -8.0 -9.0 -10.0 -11.0 In [24]: np.abs(-np.abs(df1)) Out[24]: a b c d a 0.0 1.0 2.0 3.0 b 4.0 5.0 6.0 7.0 c 8.0 9.0 10.0 11.0 \u4e0d\u8fc7\u51fd\u6570\u5e94\u7528\u6700\u7cbe\u5f69\u7684\u64cd\u4f5c\u6765\u81ea\u4e8e apply() \u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u5bf9 Pandas \u5bf9\u8c61\u7684\u884c\u6216\u5217\u8fdb\u884c\u8fd0\u7b97\uff0c\u5982\u6c42\u53d6 df1 \u5bf9\u8c61\u7684\u5217\u548c\u3002 In [25]: df1.apply(sum) Out[25]: a 12.0 b 15.0 c 18.0 d 21.0 dtype: float64 \u5f53\u7136\u6709\u65f6\u5019\u4e3a\u4e86\u907f\u514d\u51fd\u6570\u547d\u540d\u7684\u9ebb\u70e6\uff0c\u4e5f\u53ef\u4ee5\u5f15\u5165\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u3002\u4e0b\u9762\u7684\u64cd\u4f5c\u5b9e\u73b0\u6c42\u53d6\u6bcf\u5217\u7684\u6b8b\u5dee\u503c\u3002 In [26]: df1.apply(lambda x: x - x.mean()) Out[26]: a b c d a -4.0 -4.0 -4.0 -4.0 b 0.0 0.0 0.0 0.0 c 4.0 4.0 4.0 4.0 \u9ed8\u8ba4\u662f\u4ee5\u884c\u4e3a\u8ba1\u7b97\u8f74\uff0c\u5373\u5bf9\u6bcf\u5217\u5e94\u7528\u51fd\u6570\uff0c\u5982\u679c\u60f3\u8981\u4ee5\u5217\u4e3a\u8ba1\u7b97\u8f74\u8fdb\u884c\u64cd\u4f5c\uff0c\u8bbe\u5b9a\u9009\u9879 axis=\u2019columns\u2019 \u5373\u53ef\u3002 In [27]: df1.apply(lambda x: x - x.mean(), axis='columns') Out[27]: a b c d a -1.5 -0.5 0.5 1.5 b -1.5 -0.5 0.5 1.5 c -1.5 -0.5 0.5 1.5 \u638c\u63e1 apply() \u65b9\u6cd5\u7684\u6838\u5fc3\u5728\u4e8e\u5c06\u884c\u6216\u5217\u4e00\u7ec4\u503c\u5f53\u505a\u6807\u91cf\u5bf9\u5f85\uff0c\u90a3\u4e48\u8fd9\u91cc\u5e94\u7528\u51fd\u6570\u5176\u5b9e\u8ddf\u5bf9\u6807\u91cf\u7528\u51fd\u6570\u8ba1\u7b97\u672c\u8d28\u662f\u4e00\u6837\u7684\u3002","title":"8.3.8 \u51fd\u6570\u5e94\u7528"},{"location":"08-pandas-intro/#839","text":"\u6570\u636e\u7684\u6392\u5e8f\u662f\u4e00\u79cd\u91cd\u8981\u7684\u64cd\u4f5c\uff0c\u5bf9\u4e8e Series \u5bf9\u8c61\u548c DataFrame \u5bf9\u8c61\uff0cPanda \u5e93\u63d0\u4f9b\u4e86 sort_index() \u65b9\u6cd5\u548c sort_values() \u65b9\u6cd5\u5206\u522b\u6309\u6807\u7b7e\u548c\u503c\u8fdb\u884c\u6392\u5e8f\u3002 In [29]: s1 = pd.Series([2, 1, 3, 5, 4], index=['b', 'a', 'd', 'c', 'f']) In [30]: s1.sort_index() Out[30]: a 1 b 2 c 5 d 3 f 4 dtype: int64 In [31]: s1.sort_values() Out[31]: a 1 b 2 d 3 f 4 c 5 dtype: int64 \u9ed8\u8ba4\u662f\u5347\u5e8f\u6392\u5217\uff0c\u8bbe\u5b9a ascending=False \u53ef\u4ee5\u6539\u4e3a\u964d\u5e8f\u3002 In [32]: s1.sort_values(ascending=False) Out[32]: c 5 f 4 d 3 b 2 a 1 dtype: int64 DataFrame \u5bf9\u8c61\u6709 2 \u4e2a\u7ef4\u5ea6\uff0c\u9ed8\u8ba4\u662f\u6309\u7167\u884c\u8fdb\u884c\u6392\u5e8f\uff0c\u5982\u679c\u60f3\u8981\u8be5\u4e3a\u6309\u5217\u6392\u5e8f\uff0c\u9700\u8981\u5c06 axis \u9009\u9879\u8bbe\u4e3a 1\u3002 \u5728\u64cd\u4f5c DataFrame \u65f6\uff0c\u6709\u4e00\u4e2a\u6392\u5e8f\u53c2\u6570\u975e\u5e38\u5b9e\u7528\uff0c\u5c31\u662f by\u3002\u5b83\u53ef\u4ee5\u6839\u636e\u67d0\u4e00\u5217\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u4f8b\u5982\u5728\u5b9e\u9645\u5904\u7406\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6839\u636e\u6708\u4efd\u548c\u65e5\u671f\u6392\u5e8f\uff0c\u800c\u6570\u636e\u672c\u8eab\u662f\u6742\u4e71\u7684\uff0c\u8fd9\u4e2a\u9009\u9879\u5c31\u53ef\u4ee5\u6d3e\u4e0a\u5927\u7528\u573a\u3002 In [34]: df = pd.DataFrame({u'\u6708\u4efd':[2, 1, 4, 3], u'\u65e5\u671f':[29, 16, 14, 22], u'\u9500\u91cf': [150, 44, 300, 68]}) In [35]: df Out[35]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 0 2 29 150 1 1 16 44 2 4 14 300 3 3 22 68 In [36]: df.sort_values(by='\u6708\u4efd') Out[36]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 1 1 16 44 0 2 29 150 3 3 22 68 2 4 14 300 In [37]: df.sort_values(by='\u65e5\u671f') Out[37]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 2 4 14 300 1 1 16 44 3 3 22 68 0 2 29 150 In [38]: df.sort_values(by=['\u6708\u4efd', '\u65e5\u671f']) Out[38]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 1 1 16 44 0 2 29 150 3 3 22 68 2 4 14 300 In [39]: df.sort_values(by='\u9500\u91cf') Out[39]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 1 1 16 44 3 3 22 68 0 2 29 150 2 4 14 300","title":"8.3.9 \u6392\u5e8f"},{"location":"08-pandas-intro/#84","text":"Pandas \u5bf9\u8c61\u672c\u8eab\u5b58\u5728\u4e00\u7ec4\u5e38\u7528\u7684\u7edf\u8ba1\u503c\u8ba1\u7b97\u65b9\u6cd5\uff0c\u4e3b\u8981\u7528\u4e8e\u6c47\u603b\uff0c\u5982\u8ba1\u7b97\u603b\u548c\uff0c\u5206\u4f4d\u6570\u7b49\u3002 In [40]: df.sum() Out[40]: \u6708\u4efd 10 \u65e5\u671f 81 \u9500\u91cf 562 dtype: int64 In [41]: df.quantile() Out[41]: \u6708\u4efd 2.5 \u65e5\u671f 19.0 \u9500\u91cf 109.0 Name: 0.5, dtype: float64 In [42]: df.quantile([0.1, 0.9]) Out[42]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 0.1 1.3 14.6 51.2 0.9 3.7 26.9 255.0 \u4e5f\u6709\u65b9\u6cd5\u8ba1\u7b97\u7d2f\u8ba1\u503c\uff0c\u5982\u7d2f\u8ba1\u548c\uff1a In [43]: df.cumsum() Out[43]: \u6708\u4efd \u65e5\u671f \u9500\u91cf 0 2 29 150 1 3 45 194 2 7 59 494 3 10 81 562 \u4e0d\u8fc7\uff0c\u6211\u4eec\u5e38\u7528 describe() \u65b9\u6cd5\u89c2\u6d4b\u591a\u4e2a\u7edf\u8ba1\u503c\uff0c\u4ece\u6570\u503c\u7684\u89d2\u5ea6\u7406\u89e3\u6570\u636e\u7684\u5927\u81f4\u5206\u5e03\u60c5\u51b5\u3002 In [44]: df.describe() Out[44]: \u6708\u4efd \u65e5\u671f \u9500\u91cf count 4.000000 4.000000 4.00000 mean 2.500000 20.250000 140.50000 std 1.290994 6.751543 115.61286 min 1.000000 14.000000 44.00000 25% 1.750000 15.500000 62.00000 50% 2.500000 19.000000 109.00000 75% 3.250000 23.750000 187.50000 max 4.000000 29.000000 300.00000 \u4e0b\u8868\u5217\u51fa\u5e38\u7528\u7684\u63cf\u8ff0\u7edf\u8ba1\u76f8\u5173\u65b9\u6cd5\u3002 \u88688-2 \u5e38\u7528\u7edf\u8ba1\u63cf\u8ff0\u65b9\u6cd5 \u65b9\u6cd5 \u8bf4\u660e count \u975e NaN \u503c\u6570\u91cf describe \u6c47\u603b\u7edf\u8ba1 min\u3001max \u6700\u5c0f\u6700\u5927\u503c argmin\u3001argmax \u6700\u5c0f\u503c\u6700\u5927\u503c\u6574\u6570\u7d22\u5f15\u4f4d\u7f6e idxmin\u3001idxmax \u6700\u5c0f\u503c\u6700\u5927\u503c\u6807\u7b7e\u4f4d\u7f6e quantile \u5206\u4f4d\u6570 mean\u3001median\u3001sum \u5747\u503c\u3001\u4e2d\u4f4d\u6570\u3001\u603b\u548c mad \u5e73\u5747\u7edd\u5bf9\u79bb\u5dee var\u3001std \u65b9\u5dee\u3001\u6807\u51c6\u5dee rank \u6392\u540d\uff08\u79e9\u5e8f\uff09 cumsum\u3001cumprod \u7d2f\u8ba1\u548c\u3001\u7d2f\u8ba1\u79ef cor \u76f8\u5173\u6027 cov \u534f\u65b9\u5dee","title":"8.4 \u57fa\u672c\u7edf\u8ba1\u5206\u6790"},{"location":"08-pandas-intro/#85","text":"\u867d\u7136\u672c\u7ae0\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u5927\u91cf\u5173\u4e8e Pandas \u7684\u5185\u5bb9\uff0c\u5305\u62ec 2 \u4e2a\u6838\u5fc3\u6570\u636e\u5bf9\u8c61 Series \u548c DataFrame\uff0c\u4ee5\u53ca\u5982\u4f55\u521b\u5efa\u3001\u4f7f\u7528\u5b83\u4eec\u3002\u4f46\u8fd9\u4e9b\u8fd8\u8fdc\u8fdc\u4e0d\u591f\uff0c\u5b83\u4eec\u4ec5\u4ec5\u662f\u8bfb\u8005\u719f\u7ec3\u638c\u63e1 Pandas \u7684\u57fa\u7840\u3002\u518d\u63a5\u4e0b\u6765\u7684\u66f4\u591a\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u66f4\u6df1\u5165\u5730\u5bf9 Pandas \u8fdb\u884c\u5b66\u4e60\u5e76\u66f4\u5e7f\u6cdb\u5730\u5c06\u5b83\u5e94\u7528\u5230\u793a\u4f8b\u4e2d\u53bb\u3002Pandas\uff0c\u5b83\u662f Python \u6570\u636e\u5206\u6790\u7684\u7075\u9b42\u5de5\u5177\u3002","title":"8.5 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"09-markdown/","text":"\u7b2c 9 \u7ae0 Markdown \u57fa\u7840 \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a \u4e3a\u4ec0\u4e48\u5b66\u4e60 Markdown Markdown \u652f\u6301\u8f6f\u4ef6 Markdown \u57fa\u7840\u8bed\u6cd5 Markdown \u6587\u6863\u8303\u4f8b \u7f51\u7edc\u4fc3\u8fdb\u4e86\u77e5\u8bc6\u7684\u4f20\u64ad\u4e0e\u5206\u4eab\u3002\u5404\u5927\u6280\u672f\u535a\u5ba2\u3001\u81ea\u5efa\u535a\u5ba2\u4e2d\uff0c\u4f34\u968f\u7740\u5f53\u524d\u7f16\u7a0b\u6280\u672f\u77e5\u8bc6\u6d41\u884c\u4e8e\u7f51\u7edc\u7684\uff0c\u8fd8\u6709\u4e66\u5199\u77e5\u8bc6\u7684\u5de5\u5177\uff0c\u5b83\u5c31\u662f Markdown\u3002\u4e5f\u8bb8\u4f1a\u6709\u8bfb\u8005\u5bf9\u4e00\u672c Python \u4e66\u7c4d\u4f7f\u7528\u4e00\u7ae0\u7684\u7bc7\u5e45\u8bb2\u89e3 Markdown \u7684\u77e5\u8bc6\u611f\u5230\u5947\u602a\uff0c\u4f46\u6bcb\u5eb8\u7f6e\u7591\u7684\u662f\uff0c\u6f6e\u6d41\u5df2\u7ecf\u5c06\u5b83\u4e0e Python \u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u8ba9\u6211\u4eec\u52c7\u6562\u5730\u62e5\u62b1\u5b83\u5427\u3002 9.1 Markdown \u7b80\u4ecb \u00b6 Markdown \u7531 John Gruber \u4e8e 2004 \u5e74\u521b\u5efa\uff0c\u5b83\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\u3002\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\u662f\u6307\u4e00\u7c7b\u7528\u7b80\u5355\u8bed\u6cd5\u8868\u8ff0\u6587\u5b57\u683c\u5f0f\u7684\u6587\u672c\u8bed\u8a00\uff0c\u5373\u76f4\u63a5\u80fd\u4ece\u5b57\u9762\u4e0a\u8fdb\u884c\u9605\u8bfb\u548c\u7406\u89e3\u3002Markdown \u7684\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u79cd\u5bb9\u6613\u9605\u8bfb\u3001\u5bb9\u6613\u4e66\u5199\u7684\u7eaf\u6587\u5b57\u683c\u5f0f\uff0c\u5b83\u5438\u6536\u4e86\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bb8\u591a\u5df2\u6709\u7684\u6807 \u8bb0\u7279\u6027\uff0c\u5e76\u53ef\u4ee5\u6709\u6548\u5730\u8f6c\u6362\u4e3a\u5bcc\u6587\u672c\u8bed\u8a00\uff0c\u5982 HTML\u3002 \u7531\u4e8e Markdown \u8f7b\u91cf\u3001\u6613\u8bfb\u3001\u6613\u5199\u7684\u7279\u6027\uff0c\u5e76\u4e14\u652f\u6301\u56fe\u7247\u3001\u8868\u683c\u3001\u6570\u5b66\u516c\u5f0f\uff0c\u76ee\u524d\u8bb8\u591a\u7f51\u7ad9\u90fd\u91c7\u7528 Markdown \u6765\u7f16\u5199\u5e2e\u52a9\u6587\u6863\u6216\u53d1\u5e03\u6d88\u606f\uff0c\u6bd4\u8f83\u6709\u540d\u7684\u6709 GitHub\u3001reddit \u548c Stack Overflow\u3002\u53e6\u5916\uff0cMarkdown \u4e5f\u5e38\u7528\u4e0e\u535a\u6587\u3001\u4e66\u7c4d\u7684\u64b0\u5199\u3002\u751a\u81f3\u5f53\u524d\u7f51\u7edc\u5e94\u7528\u3001App \u4e13\u95e8\u63d0\u4f9b Markdown \u670d\u52a1\uff0c\u5982\u7b80\u4e66\u3001Slack\u3002 \u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u51fa\u73b0\u4e86\u8bb8\u591a Markdown \u7684\u5b9e\u73b0\u3002\u8fd9\u4e9b\u5b9e\u73b0\u7684\u76ee\u7684\u662f\u5728 Markdown \u57fa\u7840\u8bed\u6cd5\u4e4b\u4e0a\u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u529f\u80fd\uff0c\u5982\u5217\u8868\u3001\u811a\u6ce8\u7b49\u3002\u53e6\u5916\uff0c\u5728\u6570\u636e\u5206\u6790\u9886\u57df\uff0c\u4e00\u79cd\u65b0\u578b\u7684\u6587\u6863\u51fa\u73b0\u4e86\uff0c\u5b83\u53ef\u4ee5\u5c06\u6587\u672c\u5d4c\u5165\u8fd0\u884c\u7684\u4ee3\u7801\u4e2d\uff0c\u79f0\u4e3a\u52a8\u6001\u6587\u6863\uff0c\u800c\u6587\u672c\u4e66\u5199\u7684\u8bed\u6cd5\u6b63\u662f Markdown\u3002\u76ee\u524d\u6d41\u884c\u7684\u52a8\u6001\u6587\u6863\u4e3b\u8981\u6709 2 \u79cd\uff0c\u4e00\u79cd\u662f Jupyter Notebook\uff0c\u5b83\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec R\u3001Python\uff1b\u53e6\u4e00\u79cd\u662f Rmarkdown\uff0c\u5b83\u5728 Markdown \u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86 R \u8bed\u8a00\u4ee3\u7801\u5757\u7684\u6267\u884c\u529f\u80fd\uff08\u4e5f\u6709\u5bf9 Python\u3001Shell \u7684\u652f\u6301\uff0c\u4f46\u529f\u80fd\u8f83\u5f31\uff09\u3002 \u52a8\u6001\u6587\u6863\u7684\u51fa\u73b0\u4f7f\u5f97\u6570\u636e\u5206\u6790\u4e0d\u518d\u50cf\u662f\u5728\u5199\u5355\u7eaf\u7684\u529f\u80fd\u811a\u672c\uff0c\u800c\u662f\u56fe\u6587\u5e76\u8302\u7684\u6587\u7ae0\uff0c\u800c\u4e14\u589e\u5f3a\u4e86\u4ea4\u4e92\u6027\u548c\u53ef\u91cd\u590d\u6027\uff0c\u5df2\u7ecf\u662f\u5f53\u4e0b\u6570\u636e\u5206\u6790\u4eba\u5458\u5fc5\u5907\u7684\u4e00\u4e2a\u6280\u80fd\u4e4b\u4e00\u3002 \u5728\u672c\u7ae0\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u4e2d\uff0c\u672c\u4e66\u5c06\u5bf9 Markdown \u7684\u57fa\u7840\u8bed\u6cd5\u8fdb\u884c\u7b80\u8981\u4ecb\u7ecd\u5e76\u7ed3\u5408 Python \u5206\u6790\u5b9e\u9645\u4f7f\u7528\u8fdb\u884c\u4e3e\u4f8b\u3002 9.2 Markdown \u8bed\u6cd5 \u00b6 \u4e3a\u4e86\u66f4\u597d\u5730\u5411\u8bfb\u8005\u5c55\u793a Markdown \u8bed\u6cd5\u7684\u663e\u793a\u6548\u679c\uff0c\u8fd9\u4e00\u8282\u672c\u4e66\u4f7f\u7528\u4e86\u4e00\u4e2a\u5f00\u6e90\u4e14\u975e\u5e38\u6d41\u884c\u7684\u5de5\u5177 Typora\u3002\u8bfb\u8005\u53ef\u4ee5\u4e0b\u8f7d\u8be5\u8f6f\u4ef6\u5e76\u81ea\u5df1\u6839\u636e\u5b66\u4e60\u548c\u7406\u89e3\u6d4b\u8bd5\u6548\u679c\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528 Jupyter Notebook \u6216 nteract\uff0c\u4e0d\u8fc7\u76f8\u5bf9\u800c\u8a00 Typora \u66f4\u4e3a\u7f8e\u89c2\u3002 9.2.1 \u5757\u5143\u7d20 \u00b6 \u6bb5\u843d \u00b6 Markdown \u4e2d\uff0c\u6bb5\u843d\u662f\u901a\u8fc7\u4e00\u4e2a\u53ca\u4ee5\u4e0a\u7a7a\u884c\u6765\u5206\u5272\u7684\u3002\u5982\u4e0b\u6240\u793a\uff1a \u8fd9\u662f\u7b2c\u4e00\u6bb5\u8bdd \u8fd9\u662f\u7b2c\u4e8c\u6bb5\u8bdd \u5982\u679c\u53ea\u662f\u4f7f\u7528\u56de\u8f66\u952e\uff0c\u5185\u5bb9\u8fd8\u662f\u5c5e\u4e8e\u4e00\u6bb5\uff0c\u6587\u5b57\u662f\u8fde\u63a5\u8d77\u6765\u7684\u3002 \u4f8b\u5982\uff0c \u8fd9\u662f\u7b2c\u4e00\u53e5\u8bdd\u3002\u8fd9\u662f\u7b2c\u4e8c\u53e5\u8bdd\u3002 \u53ef\u4ee5\u5199\u4e3a\u5982\u4e0b\u5f62\u5f0f\uff1a \u8fd9\u662f\u7b2c\u4e00\u53e5\u8bdd\u3002 \u8fd9\u662f\u7b2c\u4e8c\u53e5\u8bdd\u3002 \u6807\u9898 \u00b6 Markdown \u652f\u6301 6 \u7ea7\u6807\u9898\uff0c\u4e00\u822c\u524d\u56db\u7ea7\u6bd4\u8f83\u5e38\u7528\u3002\u6307\u5b9a\u6807\u9898\u7684\u65b9\u5f0f\u662f\u5728\u6587\u5b57\u524d\u9762\u6dfb\u52a0\u4e95\u53f7\u952e\uff0c\u6709\u51e0\u4e2a\u5c31\u662f\u51e0\u7ea7\u6807\u9898\u3002 # \u8fd9\u662f\u4e00\u7ea7\u6807\u9898 ## \u8fd9\u662f\u4e8c\u7ea7\u6807\u9898 ### \u8fd9\u662f\u4e09\u7ea7\u6807\u9898 #### \u8fd9\u662f\u56db\u7ea7\u6807\u9898 ##### \u8fd9\u662f\u4e94\u7ea7\u6807\u9898 ###### \u8fd9\u662f\u516d\u7ea7\u6807\u9898 \u6ce8\u610f\u4e95\u53f7\u540e\u9762\u52a0\u4e00\u4e2a\u7a7a\u683c\u3002 \u5f15\u7528 \u00b6 Markdown\u4f7f\u7528\u7b26\u53f7 > \u8d77\u59cb\u4e00\u6bb5\u5757\u5f15\u7528\u3002\u5f15\u7528\u4e5f\u53ef\u4ee5\u6709\u591a\u6bb5\u6587\u5b57\uff0c\u6362\u884c\u4ee5\u5355\u72ec\u7684 > \u4e3a\u4e00\u884c\u3002 > \u8fd9\u91cc\u67093\u6bb5\u5f15\u7528\uff0c\u524d\u97622\u6bb5\u5f15\u7528\u662f\u5728\u4e00\u8d77\u7684\uff0c\u6700\u540e\u4e00\u6bb5\u5f15\u7528\u662f\u72ec\u7acb\u7684\u3002 > > \u8fd9\u662f\u7b2c2\u6bb5\u5f15\u7528\u3002 > \u8fd9\u662f\u7b2c3\u6bb5\u5f15\u7528\u3002 \u4e0b\u9762\u5219\u662f Markdown \u663e\u793a\u7684\u6548\u679c\u3002 \u8fd9\u91cc\u67093\u6bb5\u5f15\u7528\uff0c\u524d\u97622\u6bb5\u5f15\u7528\u662f\u5728\u4e00\u8d77\u7684\uff0c\u6700\u540e\u4e00\u6bb5\u5f15\u7528\u662f\u72ec\u7acb\u7684\u3002 \u8fd9\u662f\u7b2c2\u6bb5\u5f15\u7528\u3002 \u8fd9\u662f\u7b2c3\u6bb5\u5f15\u7528\u3002 \u5217\u8868 \u00b6 \u8f93\u5165 * \u5143\u7d201 \u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65e0\u5e8f\u5217\u8868\uff0c\u9664\u4e86\u4f7f\u7528\u661f\u53f7 *\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 +\u3001-\u3002\u4e00\u822c\u5e38\u7528 * \u6216\u8005 -\u3002\u800c\u8f93\u5165 1. \u5143\u7d201 \u53ef\u4ee5\u521b\u5efa\u6709\u5e8f\u5217\u8868\u3002 Markdown \u6e90\u4ee3\u7801\u5982\u4e0b\uff1a ## \u65e0\u5e8f\u5217\u8868 * \u77f3\u5934 * \u526a\u5200 * \u5e03 ## \u6709\u5e8f\u5217\u8868 1. \u77f3\u5934 2. \u526a\u5200 3. \u5e03 \u4efb\u52a1\u5217\u8868 \u00b6 \u5728\u5217\u8868\u7b26\u53f7\u540e\u9762\u4f7f\u7528 [ ] \u6216 [x] \u53ef\u4ee5\u5206\u522b\u6807\u8bb0\u672a\u5b8c\u6210\u6216\u5b8c\u6210\u72b6\u6001\u3002\u4f8b\u5982\uff1a ## \u4f5c\u4e1a\u5b8c\u6210\u60c5\u51b5 - [ ] \u8bed\u6587 - [x] \u6570\u5b66 - [ ] \u7269\u7406 - [ ] \u82f1\u8bed - [x] \u5316\u5b66 \u6ce8\u610f\uff0c\u6807\u8bb0\u672a\u5b8c\u6210\u65f6\u62ec\u53f7\u5185\u4e00\u5b9a\u8981\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 \u4ee3\u7801\u5757 \u00b6 \u4ee3\u7801\u5757\u4ee5 3 \u4e2a\u7b26\u53f7 ` \u8d77\u59cb\uff08\u952e\u76d8\u4e0a \\ \u952e\u4e0b\u65b9\u7684\u6487\u53f7\uff09\uff0c\u540c\u6837\u4ee5 3 \u4e2a ` \u7ed3\u675f\u3002\u9664\u4e86\u5bf9\u4ee3\u7801\u683c\u5f0f\u6bd4\u8f83\u53cb\u597d\uff0c\u5f88\u591a\u652f\u6301 Markdown \u7684\u5de5\u5177\u3001\u7f51\u7ad9\u5bf9\u4ee3\u7801\u5757\u90fd\u81ea\u52a8\u9ad8\u4eae\u7684\u529f\u80fd\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a ``` def test(): print(\"Hello World!\") ``` \u8bed\u6cd5\u9ad8\u4eae\uff1a ```python def test(): print(\"\u8bed\u6cd5\u9ad8\u4eae\") ``` \u6570\u5b66\u5757 \u00b6 \u6709\u4e0d\u5c11 Markdown \u7f16\u8f91\u5668\u901a\u8fc7 MathJax \u652f\u6301 LaTex \u6570\u5b66\u8868\u8fbe\u5f0f\u3002 \u6570\u5b66\u516c\u5f0f\u4f7f\u7528\u4e24\u4e2a\u7f8e\u5143\u7b26 \\$\\$ \u5f00\u59cb\u548c\u7ed3\u675f\u3002 $$ \\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} \\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\ \\frac{\\partial X}{\\partial u} & \\frac{\\partial Y}{\\partial u} & 0 \\\\ \\frac{\\partial X}{\\partial v} & \\frac{\\partial Y}{\\partial v} & 0 \\\\ \\end{vmatrix} $$ \u6548\u679c\u5982\u4e0b\uff1a \u8fd9\u91cc\u53ea\u662f\u5c55\u793a Markdown \u652f\u6301\u8fd9\u79cd\u6570\u5b66\u516c\u5f0f\uff0cLaTex \u8bed\u6cd5\u672c\u8eab\u8bfb\u8005\u9700\u8981\u53c2\u8003\u5176\u4ed6\u8d44\u6599\u5b66\u4e60\u4f7f\u7528\u3002 \u8868\u683c \u00b6 \u4f7f\u7528 |\u52171|\u52172| \u5c31\u53ef\u4ee5\u6dfb\u52a0 2 \u5217\u8868\u683c\uff0c\u6807\u9898\u884c\u548c\u5185\u5bb9\u884c\u4f7f\u7528 |\u2014| \u8fdb\u884c\u5206\u9694\u3002 | \u6807\u98981 | \u6807\u98982 | | -------| ----- | | Cell1 | Cell3 | | Cell2 | Cell4 | \u5bf9\u9f50\u53ef\u4ee5\u901a\u8fc7\u5bf9\u5206\u9694\u884c\u589e\u52a0\u82f1\u6587\u5192\u53f7 : \u6807\u8bb0\u5b9e\u73b0\u3002 | \u5de6\u5bf9\u9f50 | \u4e2d\u5fc3\u5bf9\u9f50 | \u53f3\u5bf9\u9f50 | | :----- |:-------:| -----:| | c1 | \u8fd9\u4e00\u5217 | $16 | | c2 | \u662f\u4e2d\u5fc3 | $120 | | c3 | \u5bf9\u9f50 | $11 | \u811a\u6ce8 \u00b6 \u4f60\u53ef\u4ee5\u50cf\u8fd9\u6837\u6dfb\u52a0\u811a\u6ce8[^footnote]\u3002 [^footnote]: \u8fd9\u662f\u4e00\u6bb5\u811a\u6ce8\u6587\u5b57 \u6548\u679c\u5982\u4e0b\uff1a \u6c34\u5e73\u7ebf \u00b6 \u5728\u7a7a\u884c\u4e2d\u4f7f\u7528 *** \u6216\u8005 \u2014 \u5c31\u53ef\u4ee5\u751f\u6210\u4e00\u6761\u6c34\u5e73\u5206\u9694\u7ebf\u3002 9.2.2 \u5185\u8054\u5143\u7d20 \u00b6 \u94fe\u63a5 \u00b6 Markdown \u652f\u6301\u884c\u5185\u548c\u53c2\u8003\u4e24\u79cd\u94fe\u63a5\u65b9\u5f0f\uff0c\u94fe\u63a5\u7684\u6587\u5b57\u90fd\u662f\u5199\u5728\u65b9\u62ec\u53f7\u5185\u3002 \u884c\u5185\u94fe\u63a5\u7684\u5199\u6cd5\u5982\u4e0b\uff1a [\u8fd9\u4e2a\u94fe\u63a5](https://baidu.com)\u4f1a\u8df3\u8f6c\u5230\u767e\u5ea6 \u53c2\u8003\u94fe\u63a5\u7684\u5199\u6cd5\u5982\u4e0b\uff1a [\u8fd9\u4e2a\u94fe\u63a5][id]\u4f1a\u8df3\u8f6c\u5230\u767e\u5ea6 [id]: https://baidu.com URL \u00b6 URL \u4f7f\u7528 2 \u4e2a\u5c16\u62ec\u53f7\u5c06\u6587\u672c\u5305\u56f4\uff0c\u4e0e\u94fe\u63a5\u4e0d\u540c\u7684\u662f URL \u7684\u663e\u793a\u7684\u5c31\u662f\u5c16\u62ec\u53f7\u5185\u7684\u6587\u5b57\uff0c\u4e0d\u80fd\u81ea\u5b9a\u4e49\u663e\u793a\u5185\u5bb9\u3002 <https://baidu.com> <xxx@163.com> \u56fe\u7247 \u00b6 \u56fe\u7247\u8ddf\u94fe\u63a5\u76f8\u4f3c\uff0c\u4f46\u662f\u9700\u8981\u5728\u94fe\u63a5\u7684\u524d\u9762\u6dfb\u52a0\u4e00\u4e2a\u82f1\u6587\u611f\u53f9\u53f7 ! \u7b26\u53f7\u3002 ![\u8bf4\u660e\u6587\u5b57](\u56fe\u7247\u8def\u5f84.jpg) ![\u8bf4\u660e\u6587\u5b57](\u56fe\u7247\u8def\u5f84.png) \u4f8b\u5982\uff1a ![](https://www.baidu.com/img/dong_96c3c31cae66e61ed02644d732fcd5f8.gif) \u8def\u5f84\u53ef\u4ee5\u662f URL\uff0c\u53ef\u4ee5\u662f\u8ba1\u7b97\u673a\u672c\u5730\u7684\u7edd\u5bf9\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84\u3002 \u5f3a\u8c03\u4e0e\u52a0\u7c97 \u00b6 Markdown \u4f7f\u7528\u661f\u53f7\u6216\u4e0b\u5212\u7ebf\u5f3a\u8c03\u6587\u5b57\u3002 *\u4f7f\u7528\u661f\u53f7* _\u4f7f\u7528\u4e0b\u5212\u7ebf_ \u4f7f\u7528\u661f\u53f7 \u4f7f\u7528\u4e0b\u5212\u7ebf \u4f7f\u7528\u4e24\u4e2a\u7b26\u53f7\u5219\u662f\u8fdb\u884c\u52a0\u7c97\u3002 **\u4f7f\u75282\u4e2a\u661f\u53f7** __\u4f7f\u75282\u4e2a\u4e0b\u5212\u7ebf__ \u4f7f\u75282\u4e2a\u661f\u53f7 \u4f7f\u75282\u4e2a\u4e0b\u5212\u7ebf \u5220\u9664\u7ebf \u00b6 Markdown \u4f7f\u75282\u4e2a\u6ce2\u6d6a\u7ebf ~ \u5bf9\u6587\u5b57\u8fdb\u884c\u5220\u9664\u6807\u8bb0\u3002 ~~\u8fd9\u662f\u4e00\u6bb5\u88ab\u5220\u9664\u7ebf\u6807\u8bb0\u7684\u6587\u5b57~~ ~~\u8fd9\u662f\u4e00\u6bb5\u88ab\u5220\u9664\u7ebf\u6807\u8bb0\u7684\u6587\u5b57~~ \u4e0b\u5212\u7ebf \u00b6 \u4e0b\u5212\u7ebf\u9700\u8981\u539f\u751f HTML \u6807\u7b7e\u652f\u6301\u3002 <u>\u8fd9\u6bb5\u6587\u5b57\u4f1a\u88ab\u4e0b\u5212\u7ebf\u6807\u8bb0</u> \u8fd9\u6bb5\u6587\u5b57\u4f1a\u88ab\u4e0b\u5212\u7ebf\u6807\u8bb0 \u4e0a\u6807\u4e0e\u4e0b\u6807 \u00b6 Markdown \u4e0b\u6807\u4f7f\u7528\u5355\u4e2a\u6ce2\u6d6a\u53f7 ~\uff0c\u4e0a\u6807\u4f7f\u7528 ^\u3002\u4e0b\u9762\u5199\u6cd5\u53ef\u4ee5\u521b\u5efa\u6c34\u5206\u5b50\u548c X \u7684\u5e73\u65b9\u3002 H~2~O X^2^ H~2~O X^2^ \u884c\u5185\u4ee3\u7801 \u00b6 \u524d\u9762\u63d0\u5230\u4e86\u4ee3\u7801\u5757\uff0c\u4f46\u6709\u65f6\u5019\u4ee3\u7801\u5f88\u77ed\uff0c\u9700\u8981\u4f7f\u7528\u884c\u5185\u4ee3\u7801\uff0c\u8fd9\u65f6\u5019\u7528\u5355\u4e2a\u7684\u7b26\u53f7 ` \u5373\u53ef\u3002 `x = y = 3` x = y = 3 \u884c\u5185\u516c\u5f0f \u00b6 \u884c\u5185\u516c\u5f0f\u4f7f\u7528\u5355\u4e2a\u7f8e\u5143\u7b26 \\$ \u5f00\u59cb\u548c\u7ed3\u675f\uff1a $y = a \\times x + b$ \u6548\u679c\u5982\u4e0b\uff1a $y = a \\times x + b$ 9.3 \u8054\u5408 Python \u4e0e Markdown \u00b6 9.3.1 \u4ee3\u7801\u5757\u4e0e\u6587\u672c\u5757 \u00b6 Notebook \u652f\u6301\u4e24\u79cd\u4e0d\u540c\u7684\u8f93\u5165\uff0c\u4e00\u662f\u4ee3\u7801\u5757\uff08\u8fd9\u91cc\u6211\u4eec\u6307 Python \u4ee3\u7801\uff09\uff0c\u4e8c\u662f\u6587\u672c\u5757\uff0c\u5373 Markdown \u5185\u5bb9\u3002 \u56fe9-13\u7528 nteract \u663e\u793a\u4e86\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u70b9\u51fb\u53f3\u4e0a\u65b9\u7684\u83dc\u5355\u680f\u540e\uff0c\u4f1a\u51fa\u73b0\u591a\u4e2a\u9009\u9879\u3002\u6700\u540e\u4e00\u4e2a\u9009\u9879\u80fd\u591f\u5c06\u4ee3\u7801\u5757\u8f6c\u53d8\u4e3a\u6587\u672c\u5757\uff0c\u70b9\u51fb\u540e\u7684\u7ed3\u679c\u5982\u56fe9-14\u6240\u793a\u3002 Jupyter Notebook \u652f\u6301\u7684\u5feb\u6377\u952e\u53ef\u80fd\u64cd\u4f5c\u8d77\u6765\u66f4\u8f7b\u677e\uff0cm \u952e\u5c06\u4ee3\u7801\u5757\u8f6c\u6362\u4e3a\u6587\u672c\u5757\uff0c\u800c y \u952e\u5c06\u6587\u672c\u5757\u8f6c\u6362\u4e3a\u4ee3\u7801\u5757\u3002 \u5728\u6211\u4eec\u4e86\u89e3\u4ee3\u7801\u5757\u548c\u6587\u672c\u5757\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u81ea\u7531\u5730\u4f7f\u7528\u5b83\u4eec\u7f16\u5199\u52a8\u6001\u7684\u7a0b\u5e8f\u6587\u6863\uff0c\u5373 Notebook\u3002\u4e00\u822c\u800c\u8a00\uff0c\u6211\u4eec\u4f7f\u7528 Markdown \u6807\u9898\u6784\u5efa\u6587\u6863\u7684\u6574\u4e2a\u903b\u8f91\u7ed3\u6784\uff0c\u4f7f\u7528\u6b63\u6587\u548c\u76f8\u5173\u6807\u8bb0\u5982\u94fe\u63a5\u7b49\u589e\u52a0\u5bf9\u6587\u6863\u3001\u4ee3\u7801\u5757\u7684\u8bf4\u660e\uff0c\u5229\u7528\u4ee3\u7801\u5757\u6267\u884c\u8ba1\u7b97\u5e76\u5c55\u793a\u6587\u5b57\u7ed3\u679c\u6216\u56fe\u5f62\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u56fe9-15\u6240\u793a\u3002 9.3.2 \u6587\u6863\u8303\u4f8b \u00b6 \u4e0a\u8282\u63d0\u5230\u7684 Markdown \u8bed\u6cd5\u5185\u5bb9\u9887\u591a\uff0c\u5b83\u4eec\u867d\u7136\u7b80\u5355\uff0c\u4f46\u4e5f\u9700\u8981\u65f6\u95f4\u5b66\u4e60\u548c\u638c\u63e1\u3002\u672c\u8282\u4ee5 \u7ed8\u5236\u5f15\u529b\u6ce2\u66f2\u7ebf \u4e3a\u9898\u5199\u4e00\u4e2a\u7b80\u5355\u7684 Markdown \u6587\u7ae0\uff0c\u4ee5\u5e2e\u52a9\u8bfb\u8005\u5bf9 Markdown \u7684\u6574\u4f53\u4f7f\u7528\u6709\u66f4\u6df1\u7684\u4e86\u89e3\u3002 \u4e0b\u9762\u662f\u6e90\u4ee3\u7801\uff1a # \u7ed8\u5236\u5f15\u529b\u6ce2\u66f2\u7ebf ## \u6570\u636e\u4e0b\u8f7d\u4e0e\u51c6\u5907 \u7b2c\u4e00\u4e2a\u5f15\u529b\u6ce2\u6587\u4ef6\uff1a[H1_Strain.wav](http://python123.io/dv/H1_Strain.wav) \uff08\u70b9\u51fb\u4e0b\u8f7d\uff09 \u7b2c\u4e8c\u4e2a\u5f15\u529b\u6ce2\u6587\u4ef6\uff1a[L1_Strain.wav](http://python123.io/dv/L1_Strain.wav) \uff08\u70b9\u51fb\u4e0b\u8f7d\uff09 \u5f15\u529b\u6ce2\u53c2\u8003\u6587\u4ef6\uff1a[wf_template.txt](http://python123.io/dv/wf_template.txt) \uff08\u70b9\u51fb\u540e\u4fdd\u5b58\u4e0b\u8f7d\uff09 \u5c06\u4e0a\u8ff0\u6587\u4ef6\u4e0b\u8f7d\u5230\u672c\u5730\u5e76\u4fdd\u5b58\u5230\u4e00\u4e2a\u76ee\u5f55\u4e2d\uff0c\u5728\u8be5\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a Notebook \u6587\u4ef6\uff0c\u5e76\u4f9d\u6b21\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u884c\u3002 ## \u5bfc\u5165\u5305 \u672c\u4f8b\u9700\u8981\u4f7f\u7528\u5230 3 \u4e2a\u4e09\u65b9\u5305\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u5b83\u4eec\u4f9d\u6b21\u5bfc\u5165\u3002 ```python import numpy as np import matplotlib.pyplot as plt from scipy.io import wavfile ``` ## \u5bfc\u5165\u6570\u636e \u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528 scipy \u5305\u63d0\u4f9b\u7684\u51fd\u6570\u5bfc\u5165\u5f15\u529b\u6ce2\u6587\u4ef6\uff0c\u4f7f\u7528 numpy \u5305\u63d0\u4f9b\u7684\u51fd\u6570\u5bfc\u5165\u53c2\u8003\u6587\u4ef6\u3002 ```python rate_h, hstrain= wavfile.read(r\"H1_Strain.wav\",\"rb\") rate_l, lstrain= wavfile.read(r\"L1_Strain.wav\",\"rb\") reftime, ref_H1 = np.genfromtxt('wf_template.txt').transpose() # \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u9891\u7387\u7684\u5012\u6570\u6765\u786e\u5b9a\u6ce2\u7684\u5468\u671f htime_interval = 1/rate_h ltime_interval = 1/rate_l ``` ### \u7b80\u5355\u67e5\u770b\u6570\u636e ```python # \u4f7f\u7528 print() \u51fd\u6570\u5bf9\u5404\u9879\u8f93\u5165\u7684\u6570\u636e\u8fdb\u884c\u7b80\u5355\u7684\u67e5\u770b print(rate_h, hstrain) print(rate_l, lstrain) print(reftime, ref_H1) ``` ## \u7ed8\u56fe ```python # \u8bbe\u5b9a\u5728 Notebook \u4e2d\u4f7f\u7528\u7ed8\u56fe %matplotlib inline ``` \u63a5\u4e0b\u6765\u6211\u4eec\u4f9d\u6b21\u6839\u636e 2 \u4e2a\u6ce2\u6587\u4ef6\u548c 1 \u4e2a\u53c2\u8003\u6587\u4ef6\u63d0\u4f9b\u7684\u6570\u636e\u7ed8\u5236\u6ce2\u5f62\u56fe\uff0c\u4ee5\u5b50\u56fe\u7684\u5f62\u5f0f\u5c06\u5b83\u4eec\u7ed8\u5236\u5728\u4e00\u8d77\u3002 ```python htime_len = hstrain.shape[0]/rate_h htime = np.arange(-htime_len/2, htime_len/2 , htime_interval) plt.subplot(2,2,1) plt.plot(htime, hstrain, 'y') plt.xlabel('Time (seconds)') plt.ylabel('H1 Strain') plt.title('H1 Strain') ltime_len = lstrain.shape[0]/rate_l ltime = np.arange(-ltime_len/2, ltime_len/2 , ltime_interval) plt.subplot(2,2,2) plt.plot(ltime, lstrain, 'g') plt.xlabel('Time (seconds)') plt.ylabel('L1 Strain') plt.title('L1 Strain') plt.subplot(2, 1, 2) plt.plot(reftime, ref_H1) plt.xlabel('Time (seconds)') plt.ylabel('Template Strain') plt.title('Template') plt.tight_layout() ``` \u8bf7\u8bfb\u8005\u4e0b\u8f7d\u6240\u9700\u6587\u4ef6\u540e\u5728\u540c\u4e00\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2aJupyter Notebook\uff0c\u7136\u540e\u5c06\u4ee3\u7801\u653e\u5165\u4ee3\u7801\u5757\u4e2d\uff0c\u5c06\u6587\u672c\u5185\u5bb9\u653e\u5165\u6587\u672c\u5757\u4e2d\u7136\u540e\u8fd0\u884c\u67e5\u770b\u6548\u679c\uff0c\u5982\u56fe9-16\u3001\u56fe9-17\u6240\u793a\u3002 \u5c31\u8fd9\u6837\uff0c\u4e00\u7bc7\u8054\u5408 Python \u548c Markdown \u7684\u52a8\u6001\u6587\u6863\u5c31\u751f\u6210\u4e86\u3002\u8bfb\u8005\u53ef\u4ee5\u968f\u65f6\u6839\u636e\u9700\u8981\u4fee\u6539\u76f8\u5e94\u7684\u6587\u5b57\u6216\u4ee3\u7801\uff0c\u7136\u540e\u5bf9\u6587\u6863\u8fdb\u884c\u66f4\u65b0\u3002\u7136\u540e\uff0c\u8bfb\u8005\u53ef\u4ee5\u5c06\u6587\u6863\u5bfc\u51fa\u4e3a\u591a\u79cd\u683c\u5f0f\u5982 HTML\u3001PDF \u8fdb\u884c\u5206\u4eab\u6216\u8005\u662f\u6c47\u62a5\u3002 9.4 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 \u6570\u636e\u5206\u6790\u662f\u672c\u4e66\u7684\u6838\u5fc3\u4e3b\u9898\uff0c\u5f53\u4e0b\u52a8\u6001\u6587\u6863\u63a8\u52a8\u7740\u66f4\u9ad8\u6548\u7684\u5206\u6790\u62a5\u544a\u548c\u53ef\u91cd\u590d\u6027\u79d1\u5b66\u7814\u7a76\uff0cMarkdown \u662f\u52a8\u6001\u6587\u6863\u7684\u6838\u5fc3\u5de5\u5177\u4e4b\u4e00\u3002\u672c\u7ae0\u7b80\u8981\u5730\u5bf9 Markdown \u57fa\u7840\u8bed\u6cd5\u8fdb\u884c\u4e86\u4ecb\u7ecd\uff0c\u5e76\u4e3a\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u5982\u4f55\u5c06 Markdown \u4e0e Python \u8fdb\u884c\u8054\u5408\u4f7f\u7528\u63d0\u4f9b\u4e86\u8303\u4f8b\u3002","title":"\u7b2c 9 \u7ae0 Markdown \u57fa\u7840"},{"location":"09-markdown/#9-markdown","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 \uff1a \u4e3a\u4ec0\u4e48\u5b66\u4e60 Markdown Markdown \u652f\u6301\u8f6f\u4ef6 Markdown \u57fa\u7840\u8bed\u6cd5 Markdown \u6587\u6863\u8303\u4f8b \u7f51\u7edc\u4fc3\u8fdb\u4e86\u77e5\u8bc6\u7684\u4f20\u64ad\u4e0e\u5206\u4eab\u3002\u5404\u5927\u6280\u672f\u535a\u5ba2\u3001\u81ea\u5efa\u535a\u5ba2\u4e2d\uff0c\u4f34\u968f\u7740\u5f53\u524d\u7f16\u7a0b\u6280\u672f\u77e5\u8bc6\u6d41\u884c\u4e8e\u7f51\u7edc\u7684\uff0c\u8fd8\u6709\u4e66\u5199\u77e5\u8bc6\u7684\u5de5\u5177\uff0c\u5b83\u5c31\u662f Markdown\u3002\u4e5f\u8bb8\u4f1a\u6709\u8bfb\u8005\u5bf9\u4e00\u672c Python \u4e66\u7c4d\u4f7f\u7528\u4e00\u7ae0\u7684\u7bc7\u5e45\u8bb2\u89e3 Markdown \u7684\u77e5\u8bc6\u611f\u5230\u5947\u602a\uff0c\u4f46\u6bcb\u5eb8\u7f6e\u7591\u7684\u662f\uff0c\u6f6e\u6d41\u5df2\u7ecf\u5c06\u5b83\u4e0e Python \u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u8ba9\u6211\u4eec\u52c7\u6562\u5730\u62e5\u62b1\u5b83\u5427\u3002","title":"\u7b2c 9 \u7ae0 Markdown \u57fa\u7840"},{"location":"09-markdown/#91-markdown","text":"Markdown \u7531 John Gruber \u4e8e 2004 \u5e74\u521b\u5efa\uff0c\u5b83\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\u3002\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\u662f\u6307\u4e00\u7c7b\u7528\u7b80\u5355\u8bed\u6cd5\u8868\u8ff0\u6587\u5b57\u683c\u5f0f\u7684\u6587\u672c\u8bed\u8a00\uff0c\u5373\u76f4\u63a5\u80fd\u4ece\u5b57\u9762\u4e0a\u8fdb\u884c\u9605\u8bfb\u548c\u7406\u89e3\u3002Markdown \u7684\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u79cd\u5bb9\u6613\u9605\u8bfb\u3001\u5bb9\u6613\u4e66\u5199\u7684\u7eaf\u6587\u5b57\u683c\u5f0f\uff0c\u5b83\u5438\u6536\u4e86\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bb8\u591a\u5df2\u6709\u7684\u6807 \u8bb0\u7279\u6027\uff0c\u5e76\u53ef\u4ee5\u6709\u6548\u5730\u8f6c\u6362\u4e3a\u5bcc\u6587\u672c\u8bed\u8a00\uff0c\u5982 HTML\u3002 \u7531\u4e8e Markdown \u8f7b\u91cf\u3001\u6613\u8bfb\u3001\u6613\u5199\u7684\u7279\u6027\uff0c\u5e76\u4e14\u652f\u6301\u56fe\u7247\u3001\u8868\u683c\u3001\u6570\u5b66\u516c\u5f0f\uff0c\u76ee\u524d\u8bb8\u591a\u7f51\u7ad9\u90fd\u91c7\u7528 Markdown \u6765\u7f16\u5199\u5e2e\u52a9\u6587\u6863\u6216\u53d1\u5e03\u6d88\u606f\uff0c\u6bd4\u8f83\u6709\u540d\u7684\u6709 GitHub\u3001reddit \u548c Stack Overflow\u3002\u53e6\u5916\uff0cMarkdown \u4e5f\u5e38\u7528\u4e0e\u535a\u6587\u3001\u4e66\u7c4d\u7684\u64b0\u5199\u3002\u751a\u81f3\u5f53\u524d\u7f51\u7edc\u5e94\u7528\u3001App \u4e13\u95e8\u63d0\u4f9b Markdown \u670d\u52a1\uff0c\u5982\u7b80\u4e66\u3001Slack\u3002 \u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u51fa\u73b0\u4e86\u8bb8\u591a Markdown \u7684\u5b9e\u73b0\u3002\u8fd9\u4e9b\u5b9e\u73b0\u7684\u76ee\u7684\u662f\u5728 Markdown \u57fa\u7840\u8bed\u6cd5\u4e4b\u4e0a\u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u529f\u80fd\uff0c\u5982\u5217\u8868\u3001\u811a\u6ce8\u7b49\u3002\u53e6\u5916\uff0c\u5728\u6570\u636e\u5206\u6790\u9886\u57df\uff0c\u4e00\u79cd\u65b0\u578b\u7684\u6587\u6863\u51fa\u73b0\u4e86\uff0c\u5b83\u53ef\u4ee5\u5c06\u6587\u672c\u5d4c\u5165\u8fd0\u884c\u7684\u4ee3\u7801\u4e2d\uff0c\u79f0\u4e3a\u52a8\u6001\u6587\u6863\uff0c\u800c\u6587\u672c\u4e66\u5199\u7684\u8bed\u6cd5\u6b63\u662f Markdown\u3002\u76ee\u524d\u6d41\u884c\u7684\u52a8\u6001\u6587\u6863\u4e3b\u8981\u6709 2 \u79cd\uff0c\u4e00\u79cd\u662f Jupyter Notebook\uff0c\u5b83\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec R\u3001Python\uff1b\u53e6\u4e00\u79cd\u662f Rmarkdown\uff0c\u5b83\u5728 Markdown \u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86 R \u8bed\u8a00\u4ee3\u7801\u5757\u7684\u6267\u884c\u529f\u80fd\uff08\u4e5f\u6709\u5bf9 Python\u3001Shell \u7684\u652f\u6301\uff0c\u4f46\u529f\u80fd\u8f83\u5f31\uff09\u3002 \u52a8\u6001\u6587\u6863\u7684\u51fa\u73b0\u4f7f\u5f97\u6570\u636e\u5206\u6790\u4e0d\u518d\u50cf\u662f\u5728\u5199\u5355\u7eaf\u7684\u529f\u80fd\u811a\u672c\uff0c\u800c\u662f\u56fe\u6587\u5e76\u8302\u7684\u6587\u7ae0\uff0c\u800c\u4e14\u589e\u5f3a\u4e86\u4ea4\u4e92\u6027\u548c\u53ef\u91cd\u590d\u6027\uff0c\u5df2\u7ecf\u662f\u5f53\u4e0b\u6570\u636e\u5206\u6790\u4eba\u5458\u5fc5\u5907\u7684\u4e00\u4e2a\u6280\u80fd\u4e4b\u4e00\u3002 \u5728\u672c\u7ae0\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u4e2d\uff0c\u672c\u4e66\u5c06\u5bf9 Markdown \u7684\u57fa\u7840\u8bed\u6cd5\u8fdb\u884c\u7b80\u8981\u4ecb\u7ecd\u5e76\u7ed3\u5408 Python \u5206\u6790\u5b9e\u9645\u4f7f\u7528\u8fdb\u884c\u4e3e\u4f8b\u3002","title":"9.1 Markdown \u7b80\u4ecb"},{"location":"09-markdown/#92-markdown","text":"\u4e3a\u4e86\u66f4\u597d\u5730\u5411\u8bfb\u8005\u5c55\u793a Markdown \u8bed\u6cd5\u7684\u663e\u793a\u6548\u679c\uff0c\u8fd9\u4e00\u8282\u672c\u4e66\u4f7f\u7528\u4e86\u4e00\u4e2a\u5f00\u6e90\u4e14\u975e\u5e38\u6d41\u884c\u7684\u5de5\u5177 Typora\u3002\u8bfb\u8005\u53ef\u4ee5\u4e0b\u8f7d\u8be5\u8f6f\u4ef6\u5e76\u81ea\u5df1\u6839\u636e\u5b66\u4e60\u548c\u7406\u89e3\u6d4b\u8bd5\u6548\u679c\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528 Jupyter Notebook \u6216 nteract\uff0c\u4e0d\u8fc7\u76f8\u5bf9\u800c\u8a00 Typora \u66f4\u4e3a\u7f8e\u89c2\u3002","title":"9.2 Markdown \u8bed\u6cd5"},{"location":"09-markdown/#921","text":"","title":"9.2.1 \u5757\u5143\u7d20"},{"location":"09-markdown/#922","text":"","title":"9.2.2 \u5185\u8054\u5143\u7d20"},{"location":"09-markdown/#93-python-markdown","text":"","title":"9.3 \u8054\u5408 Python \u4e0e Markdown"},{"location":"09-markdown/#931","text":"Notebook \u652f\u6301\u4e24\u79cd\u4e0d\u540c\u7684\u8f93\u5165\uff0c\u4e00\u662f\u4ee3\u7801\u5757\uff08\u8fd9\u91cc\u6211\u4eec\u6307 Python \u4ee3\u7801\uff09\uff0c\u4e8c\u662f\u6587\u672c\u5757\uff0c\u5373 Markdown \u5185\u5bb9\u3002 \u56fe9-13\u7528 nteract \u663e\u793a\u4e86\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u70b9\u51fb\u53f3\u4e0a\u65b9\u7684\u83dc\u5355\u680f\u540e\uff0c\u4f1a\u51fa\u73b0\u591a\u4e2a\u9009\u9879\u3002\u6700\u540e\u4e00\u4e2a\u9009\u9879\u80fd\u591f\u5c06\u4ee3\u7801\u5757\u8f6c\u53d8\u4e3a\u6587\u672c\u5757\uff0c\u70b9\u51fb\u540e\u7684\u7ed3\u679c\u5982\u56fe9-14\u6240\u793a\u3002 Jupyter Notebook \u652f\u6301\u7684\u5feb\u6377\u952e\u53ef\u80fd\u64cd\u4f5c\u8d77\u6765\u66f4\u8f7b\u677e\uff0cm \u952e\u5c06\u4ee3\u7801\u5757\u8f6c\u6362\u4e3a\u6587\u672c\u5757\uff0c\u800c y \u952e\u5c06\u6587\u672c\u5757\u8f6c\u6362\u4e3a\u4ee3\u7801\u5757\u3002 \u5728\u6211\u4eec\u4e86\u89e3\u4ee3\u7801\u5757\u548c\u6587\u672c\u5757\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u81ea\u7531\u5730\u4f7f\u7528\u5b83\u4eec\u7f16\u5199\u52a8\u6001\u7684\u7a0b\u5e8f\u6587\u6863\uff0c\u5373 Notebook\u3002\u4e00\u822c\u800c\u8a00\uff0c\u6211\u4eec\u4f7f\u7528 Markdown \u6807\u9898\u6784\u5efa\u6587\u6863\u7684\u6574\u4e2a\u903b\u8f91\u7ed3\u6784\uff0c\u4f7f\u7528\u6b63\u6587\u548c\u76f8\u5173\u6807\u8bb0\u5982\u94fe\u63a5\u7b49\u589e\u52a0\u5bf9\u6587\u6863\u3001\u4ee3\u7801\u5757\u7684\u8bf4\u660e\uff0c\u5229\u7528\u4ee3\u7801\u5757\u6267\u884c\u8ba1\u7b97\u5e76\u5c55\u793a\u6587\u5b57\u7ed3\u679c\u6216\u56fe\u5f62\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u56fe9-15\u6240\u793a\u3002","title":"9.3.1 \u4ee3\u7801\u5757\u4e0e\u6587\u672c\u5757"},{"location":"09-markdown/#932","text":"\u4e0a\u8282\u63d0\u5230\u7684 Markdown \u8bed\u6cd5\u5185\u5bb9\u9887\u591a\uff0c\u5b83\u4eec\u867d\u7136\u7b80\u5355\uff0c\u4f46\u4e5f\u9700\u8981\u65f6\u95f4\u5b66\u4e60\u548c\u638c\u63e1\u3002\u672c\u8282\u4ee5 \u7ed8\u5236\u5f15\u529b\u6ce2\u66f2\u7ebf \u4e3a\u9898\u5199\u4e00\u4e2a\u7b80\u5355\u7684 Markdown \u6587\u7ae0\uff0c\u4ee5\u5e2e\u52a9\u8bfb\u8005\u5bf9 Markdown \u7684\u6574\u4f53\u4f7f\u7528\u6709\u66f4\u6df1\u7684\u4e86\u89e3\u3002 \u4e0b\u9762\u662f\u6e90\u4ee3\u7801\uff1a # \u7ed8\u5236\u5f15\u529b\u6ce2\u66f2\u7ebf ## \u6570\u636e\u4e0b\u8f7d\u4e0e\u51c6\u5907 \u7b2c\u4e00\u4e2a\u5f15\u529b\u6ce2\u6587\u4ef6\uff1a[H1_Strain.wav](http://python123.io/dv/H1_Strain.wav) \uff08\u70b9\u51fb\u4e0b\u8f7d\uff09 \u7b2c\u4e8c\u4e2a\u5f15\u529b\u6ce2\u6587\u4ef6\uff1a[L1_Strain.wav](http://python123.io/dv/L1_Strain.wav) \uff08\u70b9\u51fb\u4e0b\u8f7d\uff09 \u5f15\u529b\u6ce2\u53c2\u8003\u6587\u4ef6\uff1a[wf_template.txt](http://python123.io/dv/wf_template.txt) \uff08\u70b9\u51fb\u540e\u4fdd\u5b58\u4e0b\u8f7d\uff09 \u5c06\u4e0a\u8ff0\u6587\u4ef6\u4e0b\u8f7d\u5230\u672c\u5730\u5e76\u4fdd\u5b58\u5230\u4e00\u4e2a\u76ee\u5f55\u4e2d\uff0c\u5728\u8be5\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a Notebook \u6587\u4ef6\uff0c\u5e76\u4f9d\u6b21\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u884c\u3002 ## \u5bfc\u5165\u5305 \u672c\u4f8b\u9700\u8981\u4f7f\u7528\u5230 3 \u4e2a\u4e09\u65b9\u5305\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u5b83\u4eec\u4f9d\u6b21\u5bfc\u5165\u3002 ```python import numpy as np import matplotlib.pyplot as plt from scipy.io import wavfile ``` ## \u5bfc\u5165\u6570\u636e \u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528 scipy \u5305\u63d0\u4f9b\u7684\u51fd\u6570\u5bfc\u5165\u5f15\u529b\u6ce2\u6587\u4ef6\uff0c\u4f7f\u7528 numpy \u5305\u63d0\u4f9b\u7684\u51fd\u6570\u5bfc\u5165\u53c2\u8003\u6587\u4ef6\u3002 ```python rate_h, hstrain= wavfile.read(r\"H1_Strain.wav\",\"rb\") rate_l, lstrain= wavfile.read(r\"L1_Strain.wav\",\"rb\") reftime, ref_H1 = np.genfromtxt('wf_template.txt').transpose() # \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u9891\u7387\u7684\u5012\u6570\u6765\u786e\u5b9a\u6ce2\u7684\u5468\u671f htime_interval = 1/rate_h ltime_interval = 1/rate_l ``` ### \u7b80\u5355\u67e5\u770b\u6570\u636e ```python # \u4f7f\u7528 print() \u51fd\u6570\u5bf9\u5404\u9879\u8f93\u5165\u7684\u6570\u636e\u8fdb\u884c\u7b80\u5355\u7684\u67e5\u770b print(rate_h, hstrain) print(rate_l, lstrain) print(reftime, ref_H1) ``` ## \u7ed8\u56fe ```python # \u8bbe\u5b9a\u5728 Notebook \u4e2d\u4f7f\u7528\u7ed8\u56fe %matplotlib inline ``` \u63a5\u4e0b\u6765\u6211\u4eec\u4f9d\u6b21\u6839\u636e 2 \u4e2a\u6ce2\u6587\u4ef6\u548c 1 \u4e2a\u53c2\u8003\u6587\u4ef6\u63d0\u4f9b\u7684\u6570\u636e\u7ed8\u5236\u6ce2\u5f62\u56fe\uff0c\u4ee5\u5b50\u56fe\u7684\u5f62\u5f0f\u5c06\u5b83\u4eec\u7ed8\u5236\u5728\u4e00\u8d77\u3002 ```python htime_len = hstrain.shape[0]/rate_h htime = np.arange(-htime_len/2, htime_len/2 , htime_interval) plt.subplot(2,2,1) plt.plot(htime, hstrain, 'y') plt.xlabel('Time (seconds)') plt.ylabel('H1 Strain') plt.title('H1 Strain') ltime_len = lstrain.shape[0]/rate_l ltime = np.arange(-ltime_len/2, ltime_len/2 , ltime_interval) plt.subplot(2,2,2) plt.plot(ltime, lstrain, 'g') plt.xlabel('Time (seconds)') plt.ylabel('L1 Strain') plt.title('L1 Strain') plt.subplot(2, 1, 2) plt.plot(reftime, ref_H1) plt.xlabel('Time (seconds)') plt.ylabel('Template Strain') plt.title('Template') plt.tight_layout() ``` \u8bf7\u8bfb\u8005\u4e0b\u8f7d\u6240\u9700\u6587\u4ef6\u540e\u5728\u540c\u4e00\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2aJupyter Notebook\uff0c\u7136\u540e\u5c06\u4ee3\u7801\u653e\u5165\u4ee3\u7801\u5757\u4e2d\uff0c\u5c06\u6587\u672c\u5185\u5bb9\u653e\u5165\u6587\u672c\u5757\u4e2d\u7136\u540e\u8fd0\u884c\u67e5\u770b\u6548\u679c\uff0c\u5982\u56fe9-16\u3001\u56fe9-17\u6240\u793a\u3002 \u5c31\u8fd9\u6837\uff0c\u4e00\u7bc7\u8054\u5408 Python \u548c Markdown \u7684\u52a8\u6001\u6587\u6863\u5c31\u751f\u6210\u4e86\u3002\u8bfb\u8005\u53ef\u4ee5\u968f\u65f6\u6839\u636e\u9700\u8981\u4fee\u6539\u76f8\u5e94\u7684\u6587\u5b57\u6216\u4ee3\u7801\uff0c\u7136\u540e\u5bf9\u6587\u6863\u8fdb\u884c\u66f4\u65b0\u3002\u7136\u540e\uff0c\u8bfb\u8005\u53ef\u4ee5\u5c06\u6587\u6863\u5bfc\u51fa\u4e3a\u591a\u79cd\u683c\u5f0f\u5982 HTML\u3001PDF \u8fdb\u884c\u5206\u4eab\u6216\u8005\u662f\u6c47\u62a5\u3002","title":"9.3.2 \u6587\u6863\u8303\u4f8b"},{"location":"09-markdown/#94","text":"\u6570\u636e\u5206\u6790\u662f\u672c\u4e66\u7684\u6838\u5fc3\u4e3b\u9898\uff0c\u5f53\u4e0b\u52a8\u6001\u6587\u6863\u63a8\u52a8\u7740\u66f4\u9ad8\u6548\u7684\u5206\u6790\u62a5\u544a\u548c\u53ef\u91cd\u590d\u6027\u79d1\u5b66\u7814\u7a76\uff0cMarkdown \u662f\u52a8\u6001\u6587\u6863\u7684\u6838\u5fc3\u5de5\u5177\u4e4b\u4e00\u3002\u672c\u7ae0\u7b80\u8981\u5730\u5bf9 Markdown \u57fa\u7840\u8bed\u6cd5\u8fdb\u884c\u4e86\u4ecb\u7ecd\uff0c\u5e76\u4e3a\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u5982\u4f55\u5c06 Markdown \u4e0e Python \u8fdb\u884c\u8054\u5408\u4f7f\u7528\u63d0\u4f9b\u4e86\u8303\u4f8b\u3002","title":"9.4 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"10-data-import/","text":"\u7b2c 10 \u7ae0 \u6570\u636e\u5bfc\u5165 \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : CSV Excel JSON YAML SQLite \u201c\u4e09\u519b\u672a\u52a8\uff0c\u7cae\u8349\u5148\u884c\u201d\u3002\u6570\u636e\u662f\u6570\u636e\u5206\u6790\u7684\u8d77\u70b9\uff0c\u4e5f\u662f\u6570\u636e\u5206\u6790\u7684\u6838\u5fc3\u4e4b\u4e00\u3002\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u662f\u591a\u79cd\u591a\u6837\u7684\uff0c\u6709\u6765\u81ea\u8ba1\u7b97\u673a\u672c\u5730\u5b58\u50a8\u7684 Excel \u6587\u4ef6\u3001CSV \u6587\u4ef6\u4e2d\u7684\uff0c\u4e5f\u6709\u6765\u81ea\u7f51\u9875\u6570\u636e\uff0c\u4e13\u7528\u6570\u636e\u5e93\u4e2d\u7684\uff0c\u8fd8\u6709\u9700\u8981\u8c03\u7528\u7a0b\u5e8f API \u83b7\u53d6\u7684\u3002\u672c\u7ae0\u5c06\u4ece\u5b9e\u9645\u6570\u636e\u5904\u7406\u5e38\u89c1\u7684\u7c7b\u578b\u51fa\u53d1\uff0c\u8bb2\u89e3\u5982\u4f55\u5229\u7528\u5de5\u5177\u5bfc\u5165\u5b83\u4eec\uff0c\u4e3a\u540e\u7eed\u7684\u6570\u636e\u5206\u6790\u548c\u53ef\u89c6\u5316\u63d0\u4f9b\u6e90\u6cc9\u3002 10.1 CSV \u6587\u4ef6 \u00b6 \u5728\u6570\u636e\u5206\u6790\u9886\u57df\uff0c\u6700\u5e38\u89c1\u548c\u6700\u4e3a\u63a8\u8350\u7684\u6587\u672c\u6587\u4ef6\u5f53\u5c5e\u4e8e CSV\uff08comma separated values, \u9017\u53f7\u5206\u9694\u503c\uff09\u6587\u4ef6\u3002CSV \u6587\u4ef6\u683c\u5f0f\u7b80\u5355\uff0c\u6613\u4e8e\u5bfc\u5165\u3001\u5b58\u50a8\u4e43\u81f3\u76f4\u63a5\u9605\u8bfb\u3002 \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a CSV \u6587\u4ef6\u5185\u5bb9\u7b80\u5355\u793a\u4f8b\uff0c\u56e0\u4e3a\u683c\u5f0f\u4e00\u81f4\uff0c\u6240\u4ee5\u540e\u7eed\u4ecb\u7ecd\u7684\u64cd\u4f5c\u53ef\u4ee5\u62d3\u5c55\u5230\u4efb\u610f\u884c\u7684\u6570\u636e\u4e0a\u53bb\u3002 \u59d3\u540d,\u5e74\u9f84,\u73ed\u7ea7 \u5468\u67d0\u67d0,9,3\u73ed \u738b\u67d0\u67d0,10,6\u73ed \u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u6e05\u695a\u5730\u7406\u89e3\u4e0a\u9762\u7684\u5185\u5bb9\uff0c\u5b83\u53ef\u80fd\u6765\u81ea\u67d0\u4e2a\u5b66\u6821\u5b66\u751f\u7684\u767b\u8bb0\u8868\u3002\u8fd9\u91cc\u6709\u4e00\u70b9\u503c\u5f97\u63d0\u9192\u8bfb\u8005\u6ce8\u610f\uff0cCSV \u6587\u4ef6\u91c7\u7528\u7684\u5206\u9694\u7b26\u662f\u82f1\u6587\u9017\u53f7\uff0c\u800c\u975e\u4e2d\u6587\u5e38\u7528\u7684\u9017\u53f7\u3002\u53e6\u5916\uff0c\u5728\u6b27\u6d32\u5730\u533a\u4e00\u4e9b\u56fd\u5bb6\u4e2d\uff0c\u5b83\u4eec\u662f\u4f7f\u7528\u82f1\u6587\u5206\u53f7 ; \u6765\u4f5c\u4e3a\u9017\u53f7\u5206\u9694\u7b26\u7684\uff0c\u8bfb\u8005\u5982\u679c\u89c1\u5230\u4e5f\u4e0d\u7528\u5947\u602a\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u5185\u5bb9\u4fdd\u5b58\uff0c\u4e00\u822c\u89c4\u5b9a\u4ee5 csv \u4f5c\u4e3a\u6587\u4ef6\u540e\u7f00\u540d\u3002\u5f53\u7136\uff0c\u6587\u4ef6\u5185\u5bb9\u548c\u6587\u4ef6\u540e\u7f00\u540d\u662f\u6ca1\u6709\u5173\u7cfb\u7684\uff0c\u91c7\u7528\u901a\u7528\u547d\u540d\u662f\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\u3002\u5f88\u591a txt \u540e\u7f00\u540d\u6587\u4ef6\u4e5f\u662f\u91c7\u7528\u7684 csv \u683c\u5f0f\u3002 \u73b0\u5728\u6211\u4eec\u5c06\u5176\u4fdd\u5b58\u4e3a\u6587\u4ef6 records.csv\u3002\u4fdd\u5b58\u7684\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u8bb0\u4e8b\u672c\u3001\u6587\u672c\u7f16\u8f91\u5668\u7b49\uff0cWindows \u7528\u6237\u63a8\u8350\u4e0b\u8f7d\u548c\u4f7f\u7528 Notepad++ \u8f6f\u4ef6\u8fdb\u884c\u6587\u672c\u6587\u4ef6\u7684\u7f16\u8f91\uff0c\u4e0d\u63a8\u8350\u8bfb\u8005\u4f7f\u7528 Excel\u3002 \u73b0\u5728\u5047\u8bbe\u6211\u4eec\u62ff\u5230\u4e86\u8fd9\u6837\u4e00\u4e2a\u53eb\u505a records.csv \u7684\u6587\u4ef6\uff0c\u6211\u4eec\u60f3\u8981\u5229\u7528 Python \u6253\u5f00\u5e76\u67e5\u770b\u5b83\uff0c\u8be5\u5982\u4f55\u5b9e\u73b0\u5462\uff1f \u8bfb\u8005\u4e0d\u59a8\u5148\u8fdb\u884c\u601d\u8003\u548c\u67e5\u9605\u7f51\u7edc\u8d44\u6599\u518d\u8fdb\u4e00\u6b65\u9605\u8bfb\u3002 10.1.1 \u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5 \u00b6 \u5728\u7b2c 4 \u7ae0\u5411\u8bfb\u8005\u4ecb\u7ecd\u8fc7 open() \u51fd\u6570\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u6587\u672c\u6bcf\u4e00\u884c\u5185\u5bb9\u90fd\u662f\u4ee5\u82f1\u6587\u9017\u53f7\u5206\u9694\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u81ea\u7136\u5730\u60f3\u5230\u4f7f\u7528 open() \u51fd\u6570\u6253\u5f00\u6587\u4ef6\u5e76\u4f7f\u7528 split() \u65b9\u6cd5\u8fdb\u884c\u5207\u5206\u3002 In [1]: records = [] In [2]: with open(\"records.csv\", \"r\", encoding='utf-8') as f: ...: for line in f.readlines(): ...: records.append(line.strip().split(',')) ...: In [3]: records Out[3]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed ']] \u4e0a\u8ff0\u4ee3\u7801\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u5217\u8868\uff0c\u4f5c\u4e3a\u5b58\u50a8\u6587\u672c\u5185\u5bb9\u7684\u5bb9\u5668\u3002\u4e4b\u524d\u6587\u4ef6\u4fdd\u5b58\u7684\u65f6\u5019\u4f7f\u7528\u7684\u662f utf-8 \u7f16\u7801\uff0c\u6240\u4ee5\u6253\u5f00\u4e5f\u4f7f\u7528\u76f8\u540c\u7684\u7f16\u7801\u3002\u63a5\u7740\u4f7f\u7528 readlines() \u65b9\u6cd5\u8bfb\u5165\u6240\u6709\u7684\u884c\u5e76\u8fdb\u884c for \u5faa\u73af\u8fed\u4ee3\u3002\u5bf9\u4e8e\u8bfb\u5165\u7684\u6bcf\u4e00\u884c\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528 strip() \u65b9\u6cd5\u53bb\u6389\u6bcf\u4e00\u884c\u672b\u5c3e\u7684\u6362\u884c\u7b26\uff0c\u7136\u540e\u4f7f\u7528 split() \u65b9\u6cd5\u5c06\u5185\u5bb9\u6309\u7167\u82f1\u6587\u9017\u53f7\u8fdb\u884c\u5206\u5272\uff0c\u5f97\u5230\u5b50\u5217\u8868\u5e76\u5c06\u5176\u6dfb\u52a0\u5230 records \u5217\u8868\u3002\u4e0a\u8ff0\u7684\u64cd\u4f5c\u90fd\u662f\u57fa\u4e8e\u6587\u672c\u662f\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u770b\u5230\u5e74\u9f84\u90a3\u4e00\u680f\u5b58\u50a8\u7684\u65b9\u5f0f\u5c31\u662f\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u8981\u505a\u540e\u7eed\u5206\u6790\uff0c\u8bfb\u8005\u9700\u8981\u5728\u4e4b\u524d\u5c06\u5176\u8f6c\u6362\u4e3a\u6574\u578b\u3002 \u8bfb\u8005\u9700\u8981\u6ce8\u610f\u8981\u6253\u5f00\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u8fd9\u91cc\u4f7f\u7528 records.csv \u9700\u8981\u4fdd\u8bc1\u8be5\u6587\u4ef6\u5fc5\u987b\u5728 Python \u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e0b\u624d\u53ef\u4ee5\u8fd0\u884c\u3002\u5728 IPython Shell \u6216 Jupyter Notebook \u4e2d\uff0c\u4f7f\u7528\u547d\u4ee4 !pwd \u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u800c !ls \u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u3002 In [2]: !ls records.csv records.tsv records.txt In [3]: !pwd /c/Shixiang/pybook/files/chapter10 10.1.2 \u4f7f\u7528 csv \u6807\u51c6\u6a21\u5757 \u00b6 \u56e0\u4e3a csv \u6587\u4ef6\u7684\u9891\u7e41\u4f7f\u7528\uff0cPython \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u51c6\u6a21\u5757 csv \u4ee5\u8fdb\u884c CSV \u6587\u4ef6\u7684\u8bfb\u5165\u3001\u5199\u5165\u4ee5\u53ca\u683c\u5f0f\u5316\u7b49\u64cd\u4f5c\u3002 \u4e0a\u4e00\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7c7b\u4f3c\u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u6ce8\u610f\u8fd9\u91cc\u5e76\u6ca1\u6709\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u5217\u8868\u4e2d\uff0c\u800c\u662f\u76f4\u63a5\u6253\u5370\u5230\u5c4f\u5e55\u4e0a\u3002 In [4]: import csv In [5]: with open(\"records.csv\", \"r\", encoding='utf-8') as f: ...: csv_reader = csv.reader(f) ...: for row in csv_reader: ...: print(','.join(row)) ...: \u59d3\u540d,\u5e74\u9f84,\u73ed\u7ea7 \u5468\u67d0\u67d0,9,3\u73ed \u738b\u67d0\u67d0,10,6\u73ed \u53ef\u4ee5\u89c2\u5bdf\u5230\uff0ccsv \u6a21\u5757\u7684\u7b80\u4fbf\u4e4b\u5904\u6211\u4eec\u4e0d\u9700\u8981\u518d\u5bf9\u6587\u4ef6\u5185\u5bb9\u8c03\u7528\u65b9\u6cd5\u8fdb\u884c\u53bb\u6389\u6362\u53f7\u7b26\uff0c\u6307\u5b9a\u5206\u5272\u7b26\u64cd\u4f5c\u4e86\uff0c\u4f7f\u7528 reader() \u51fd\u6570\u8bfb\u5165\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u76f4\u63a5\u53ef\u4ee5\u8fed\u4ee3\u7684\u5bf9\u8c61\u3002 10.1.3 \u4f7f\u7528 Pandas \u5e93 \u00b6 \u524d\u9762\u63d0\u5230\u7684\u4e24\u79cd\u65b9\u6cd5\u90fd\u9700\u8981\u663e\u5f0f\u5730\u8c03\u7528 open() \u51fd\u6570\u6253\u5f00\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528\u5de5\u5177\u8fdb\u884c\u8bfb\u5165\u5904\u7406\u3002\u76f8\u6bd4\u800c\u8a00\uff0c\u4f7f\u7528\u6d41\u884c\u5e93 Pandas \u5bf9 CSV \u6587\u4ef6\u64cd\u4f5c\u5c31\u66f4\u7b80\u5355\u4e86\u3002 In [6]: import pandas as pd In [7]: records = pd.read_csv('records.csv') In [8]: records Out[8]: \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 0 \u5468\u67d0\u67d0 9 3\u73ed 1 \u738b\u67d0\u67d0 10 6\u73ed In [9]: records.columns Out[9]: Index(['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], dtype='object') In [10]: records.index Out[10]: RangeIndex(start=0, stop=2, step=1) Pandas \u5e93\u8bfb\u5165\u6570\u636e\u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u4e0d\u4ec5\u4ec5\u7b80\u5316\u4e86\u8bfb\u5165\u4ee3\u7801\uff0c\u800c\u4e14\u5bf9\u8bfb\u5165\u7684\u6570\u636e\u8fdb\u884c\u4e86\u826f\u597d\u7684\u8f6c\u6362\uff0c\u81ea\u52a8\u5c06\u7b2c\u4e00\u884c\u8bc6\u522b\u4e3a\u4e86\u5217\u540d\uff0c\u5e76\u8bbe\u5b9a\u4e86\u884c\u7d22\u5f15\u3002Pandas \u8bfb\u5165\u7684\u7ed3\u679c\u662f\u4e00\u4e2a DataFrame \u5bf9\u8c61\uff0c\u9488\u5bf9\u5b83\u7684\u4e00\u4e9b\u57fa\u7840\u64cd\u4f5c\u65b9\u6cd5\u672c\u4e66\u5df2\u7ecf\u5728\u7b2c 8 \u7ae0\u8fdb\u884c\u4e86\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 10.2 CSV \u53d8\u4f53 \u00b6 \u901a\u8fc7\u4e0a\u4e00\u8282\u6211\u4eec\u77e5\u9053\u4e86 CSV \u6587\u4ef6\u662f\u901a\u8fc7\u82f1\u6587\u9017\u53f7\u8fdb\u884c\u6587\u5b57\u57df\u7684\u5206\u9694\uff0c\u6240\u4ee5\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u5904\u7406 CSV \u7684\u53d8\u4f53\u5e76\u4e0d\u5947\u602a\uff0c\u5176\u4e2d\u6700\u5e38\u89c1\u7684 CSV \u53d8\u4f53\u662f TSV\uff0c\u5373\u5236\u8868\u7b26\u5206\u9694\u6587\u4ef6\u3002\u5728\u6570\u636e\u5904\u7406\u65f6\uff0c\u8bfb\u8005\u78b0\u5230\u7684\u5927\u90e8\u5206 txt \u6587\u672c\u6587\u4ef6\u5176\u5b9e\u5c31\u662f TSV \u6587\u4ef6\u3002\u5236\u8868\u7b26\u53ef\u4ee5\u901a\u8fc7\u6211\u4eec\u952e\u76d8\u4e0a\u7684 Tab \u952e\u952e\u5165\uff0c\u4f46\u5728\u7a0b\u5e8f\u4e2d\u6211\u4eec\u4f7f\u7528 \\t \u6307\u5b9a\u5b83\u3002\u53e6\u5916\u6709\u7684\u6587\u672c\u4f1a\u91c7\u7528\u7a7a\u683c\u5206\u9694\u6570\u636e\uff0c\u5176\u4ed6\u7684\u60c5\u51b5\u76f8\u5bf9\u800c\u8a00\u5219\u66f4\u5c11\u89c1\u4e86\u3002 \u65e2\u7136\u6709\u8fd9\u4e48\u591a CSV \u7684\u53d8\u4f53\uff0c\u6211\u4eec\u5982\u4f55\u5bfc\u5165\u5b83\u4eec\u5462\uff0c\u603b\u4e0d\u53ef\u80fd\u4e3a\u6bcf\u4e00\u79cd\u53d8\u4f53\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5427\uff1f\u6b63\u786e\u7684\u505a\u6cd5\u662f\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u3002 \u4e0b\u9762\u662f\u5177\u4f53\u7684\u601d\u8def\u548c\u505a\u6cd5\uff1a \u5982\u679c\u662f\u81ea\u5df1\u7f16\u5199\u51fd\u6570\uff0c\u5e94\u5f53\u521b\u5efa\u5408\u7406\u7684\u9ed8\u8ba4\u53c2\u6570\uff0c\u4ee5\u5904\u7406\u5e38\u89c1\u7684\u4e00\u4e9b\u60c5\u51b5\u3002 \u5982\u679c\u662f\u4f7f\u7528\u4ed6\u4eba\u7f16\u5199\u7684\u6a21\u5757\uff0c\u9996\u5148\u5e94\u5f53\u67e5\u9605\u51fd\u6570\u6587\u6863\uff0c\u800c\u4e0d\u662f\u9a6c\u4e0a\u6c42\u52a9\u4ed6\u4eba\u6216\u8005\u5782\u5934\u4e27\u6c14\u3002\u4e00\u822c\u800c\u8a00\uff0c\u6a21\u5757\u7684\u5f00\u53d1\u8005\u90fd\u4f1a\u4e3a\u51fd\u6570\u7684\u4e00\u4e9b\u5e38\u89c1\u60c5\u51b5\u521b\u5efa\u76f8\u5e94\u7684\u53c2\u6570\uff0c\u9605\u8bfb\u51fd\u6570\u6587\u6863\u662f\u975e\u5e38\u597d\u7684\u4e60\u60ef\u3002\u5982\u679c\u51fd\u6570\u7684\u786e\u6ca1\u6709\u53c2\u6570\uff0c\u800c\u4e14\u81ea\u5df1\u53c8\u6ca1\u6709\u5f00\u53d1\u7684\u80fd\u529b\uff0c\u518d\u53bb\u7f51\u7edc\u4e0a\u641c\u7d22\u8d44\u6599\u6216\u8005\u4e13\u4e1a\u8bba\u575b\u63d0\u95ee\u3002 \u5047\u8bbe\u6211\u4eec\u9700\u8981\u5904\u7406 3 \u79cd CSV \u683c\u5f0f\u6587\u4ef6\uff1a\u82f1\u6587\u9017\u53f7\u5206\u9694\u3001\u5236\u8868\u7b26\u5206\u9694\u4ee5\u53ca\u7a7a\u683c\u5206\u9694\uff0c\u5b83\u4eec\u7684\u6587\u4ef6\u540d\u5206\u522b\u4e3a records.csv\u3001records.tsv \u4ee5\u53ca records.txt\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u770b\u770b\u5982\u4f55\u901a\u8fc7\u81ea\u5df1\u521b\u5efa\u51fd\u6570\u5bfc\u5165\u4ee5\u53ca\u4f7f\u7528 Pandas \u5e93\u8fdb\u884c\u5bfc\u5165\u3002 records.csv \u5185\u5bb9\uff1a \u59d3\u540d,\u5e74\u9f84,\u73ed\u7ea7 \u5468\u67d0\u67d0,9,3\u73ed \u738b\u67d0\u67d0,10,6\u73ed records.tsv \u5185\u5bb9\uff1a \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 \u5468\u67d0\u67d0 9 3\u73ed \u738b\u67d0\u67d0 10 6\u73ed records.txt \u5185\u5bb9\uff1a \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 \u5468\u67d0\u67d0 9 3\u73ed \u738b\u67d0\u67d0 10 6\u73ed 10.2.1 \u521b\u5efa CSV \u5bfc\u5165\u51fd\u6570 \u00b6 \u4e3a\u4e86\u5904\u7406\u4e0d\u540c\u7684\u5206\u9694\u7b26\uff0c\u6211\u4eec\u4e3a\u8981\u521b\u5efa\u7684\u51fd\u6570\u6307\u5b9a\u4e00\u4e2a sep \u53c2\u6570\uff08seperator \u7684\u7b80\u5199\uff09\u3002\u53e6\u5916\uff0c\u524d\u9762\u6211\u4eec\u53d1\u73b0\u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5\u5904\u7406\u548c csv \u6a21\u5757\u5904\u7406\u7684\u7ed3\u6784\u662f\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u4e0d\u59a8\u4e5f\u8bbe\u5b9a\u4e00\u4e2a\u53c2\u6570 method \u7528\u6765\u63a7\u5236\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\u89e3\u6790\u6587\u672c\u3002 def read_csv(file_path, sep=',', method='default'): \"\"\"\u5bfc\u5165 CSV \u53ca\u5176\u53d8\u4f53\u6587\u672c\"\"\" res = [] with open(file_path, \"r\", encoding='utf-8') as f: # \u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u6307\u5b9a\u4e86 encoding \u4e3a utf-8 # \u5b9e\u9645\u4e0a\u4e3a\u4e86\u5904\u7406\u66f4\u5e7f\u6cdb\u7684\u7f16\u7801\u7c7b\u578b\uff0c # \u8bfb\u8005\u53ef\u4ee5\u5c06\u5176\u6539\u5199\u4e3a\u51fd\u6570\u7684\u4e00\u4e2a\u53c2\u6570 # \u5176\u4ed6\u9009\u9879\u4e5f\u53ef\u4ee5\u8fd9\u6837\u505a if method == \"default\": for line in f.readlines(): res.append(line.strip().split(sep)) elif method == \"csv\": print(\"Using csv module...\") import csv csv_reader = csv.reader(f, delimiter=sep) for row in csv_reader: res.append(row) else: raise ValueError('\u4e0d\u652f\u6301\u7684\u5bfc\u5165\u65b9\u6cd5\uff01') return res \u4e0a\u9762\u7684 read_csv() \u51fd\u6570\u4e2d\u6211\u4eec\u901a\u8fc7\u4e0d\u540c\u7684 method \u8c03\u7528\u4e0d\u540c\u7684\u5bfc\u5165\u65b9\u6cd5\uff0c\u901a\u8fc7\u67e5\u9605 csv \u6a21\u5757\u7684\u6587\u6863\uff08\u8bf7\u8bfb\u8005\u81ea\u884c\u67e5\u9605\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230 reader() \u51fd\u6570\u7684 delimiter \u53c2\u6570\u53ef\u4ee5\u6307\u5b9a\u5206\u9694\u7b26\u3002\u4e0b\u9762\u8ba9\u6211\u4eec\u6765\u8bd5\u8bd5\u6211\u4eec\u51fd\u6570\u7684\u5a01\u529b\u5427\uff01 \u6211\u4eec\u5148\u770b\u770b\u9ed8\u8ba4\u65b9\u6cd5\u7684\u7ed3\u679c\uff0c\u8bfb\u8005\u9700\u8981\u5148\u8fd0\u884c\u4e0a\u9762\u521b\u5efa\u7684\u51fd\u6570\u518d\u8fd0\u884c\u4e0b\u9762\u7684\u6d4b\u8bd5\u4ee3\u7801\u3002 In [11]: read_csv('records.csv') Out[11]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] In [12]: read_csv('records.tsv', sep='\\t') Out[12]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] In [13]: read_csv('records.txt', sep=' ') Out[13]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] \u4e09\u79cd\u60c5\u51b5\u8bfb\u5165\u7684\u6570\u636e\u5b8c\u5168\u4e00\u81f4\uff01\u6211\u4eec\u518d\u770b\u770b\u4f7f\u7528 csv \u6a21\u5757\u5bfc\u5165\u7684\u7ed3\u679c\u5982\u4f55\u3002 In [14]: read_csv('records.csv', method='csv') Using csv module... Out[14]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] In [15]: read_csv('records.tsv', sep='\\t', method='csv') Using csv module... Out[15]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] In [16]: read_csv('records.txt', sep=' ', method='csv') Using csv module... Out[16]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] \u7ed3\u679c\u4e5f\u662f\u5b8c\u5168\u4e00\u81f4\u3002\u53ef\u89c1\uff0c\u4e0a\u9762\u7684\u51fd\u6570\u867d\u7136\u7b80\u5355\uff0c\u4f46\u5b83\u5b8c\u5168\u5b9e\u73b0\u4e86\u6211\u4eec\u6240\u9700\u8981\u7684\u529f\u80fd\u3002\u5b9e\u9645\u4e0a\uff0c\u66f4\u590d\u6742\u7684\u51fd\u6570\u4e5f\u662f\u8fd9\u6837\u4e00\u6b65\u4e00\u6b65\u6dfb\u52a0\u9009\u9879\u5b8c\u6210\u7684\u3002 10.2.2 \u4f7f\u7528 Pandas \u5bfc\u5165 \u00b6 \u4f7f\u7528 Pandas \u5c31\u4e0d\u9700\u8981\u81ea\u5df1\u521b\u5efa\u51fd\u6570\u4e86\uff0c\u56e0\u4e3a Pandas \u5e93\u63d0\u4f9b\u7684 read_csv() \u51fd\u6570\u672c\u8eab\u652f\u6301 sep \u53c2\u6570\uff0c\u6240\u4ee5\u901a\u8fc7\u6307\u5b9a\u8be5\u9009\u9879\u6211\u4eec\u5c31\u80fd\u591f\u8bfb\u5165\u4e0d\u540c\u7684 CSV \u53ca\u53d8\u4f53\u683c\u5f0f\u6570\u636e\u3002 In [17]: import pandas as pd In [18]: pd.read_csv('records.csv') Out[18]: \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 0 \u5468\u67d0\u67d0 9 3\u73ed 1 \u738b\u67d0\u67d0 10 6\u73ed In [19]: pd.read_csv('records.tsv', sep='\\t') Out[19]: \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 0 \u5468\u67d0\u67d0 9 3\u73ed 1 \u738b\u67d0\u67d0 10 6\u73ed In [20]: pd.read_csv('records.txt', sep=' ') Out[20]: \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 0 \u5468\u67d0\u67d0 9 3\u73ed 1 \u738b\u67d0\u67d0 10 6\u73ed \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u8c03\u7528\u6765\u770b\uff0c\u6211\u4eec\u521b\u5efa\u7684 read_csv() \u548c Pandas \u5e93\u63d0\u4f9b\u7684\u51fd\u6570\u662f\u6ca1\u6709\u5dee\u522b\u7684\u3002\u5229\u7528\u524d\u9762\u7ae0\u8282\u5b66\u4e60\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4fee\u6539\u51fd\u6570\uff0c\u8ba9\u7ed3\u679c\u90fd\u4fdd\u6301\u4e00\u81f4\u3002 def read_csv2(file_path, sep=',', method='default'): \"\"\"\u5bfc\u5165 CSV \u53ca\u5176\u53d8\u4f53\u6587\u672c\"\"\" res = [] with open(file_path, \"r\", encoding='utf-8') as f: if method == \"default\": for line in f.readlines(): res.append(line.strip().split(sep)) elif method == \"csv\": print(\"Using csv module...\") import csv csv_reader = csv.reader(f, delimiter=sep) for row in csv_reader: res.append(row) else: raise ValueError('\u4e0d\u652f\u6301\u7684\u5bfc\u5165\u65b9\u6cd5\uff01') import pandas as pd # \u5c06\u7ed3\u679c\u8f6c\u6362\u4e3a DataFrame res = pd.DataFrame(res[1:], columns=res[0]) return res \u8fd0\u884c\u4e0a\u8ff0\u51fd\u6570\u5e76\u8fdb\u884c\u6d4b\u8bd5\u3002 In [21]: read_csv2('records.tsv', sep='\\t', method='csv') Using csv module... Out[21]: \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 0 \u5468\u67d0\u67d0 9 3\u73ed 1 \u738b\u67d0\u67d0 10 6\u73ed \u8bfb\u8005\u4e0d\u59a8\u8bd5\u8bd5\u4fee\u6539\u8981\u8bfb\u5165\u7684\u6587\u4ef6\u548c\u51fd\u6570\u9009\u9879\u770b\u770b\u51fd\u6570\u662f\u5426\u90fd\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002 10.2.3 \u5bfc\u51fa CSV \u00b6 \u5c06\u5904\u7406\u540e\u5f97\u5230\u7684\u7ed3\u6784\u5316\u6570\u636e\u5bfc\u51fa\u4e3a CSV \u6587\u4ef6\u662f\u4fdd\u5b58\u6570\u636e\u7684\u6700\u4f73\u65b9\u5f0f\uff0c\u65b9\u4fbf\u5206\u4eab\u548c\u518d\u6b21\u5206\u6790\u3002\u5bfc\u51fa\u6216\u8005\u7c98\u8d34\u4e3a Excel \u8868\u683c\u662f\u975e\u5e38\u4e0d\u63a8\u8350\u7684\u65b9\u5f0f\uff0cExcel \u4f1a\u81ea\u52a8\u5bf9\u8f93\u5165\u6587\u672c\u8fdb\u884c\u5206\u6790\u548c\u8f6c\u6362\uff0c\u867d\u7136\u5927\u90e8\u5206\u65f6\u5019\u8fd9\u79cd\u65b9\u5f0f\u7b80\u5316\u4e86\u6211\u4eec\u7684\u64cd\u4f5c\uff0c\u4f46\u6709\u65f6\u5019\u5374\u4f1a\u5f97\u5230\u610f\u6599\u4e4b\u5916\u7684\u7ed3\u679c\uff0c\u7279\u522b\u662f\u5728\u8981\u6c42\u6570\u636e\u4e25\u8c28\u7684\u79d1\u5b66\u9886\u57df\u3002\u4f8b\u5982\uff0c\u5728 Excel \u8868\u683c\u4e2d\u952e\u5165 MARCH1\uff0c\u5b83\u662f\u4e00\u4e2a\u57fa\u56e0\u7684\u540d\u5b57\uff0c\u7d27\u63a5\u7740\u952e\u5165\u56de\u8f66\u540e\u5b83\u4f1a\u88ab Excel \u81ea\u52a8\u8f6c\u6362\u4e3a\u65e5\u671f 3 \u6708 1 \u53f7\uff01\u6709\u4e00\u7bc7\u79d1\u5b66\u7814\u7a76\u62a5\u9053\u79f0\uff0c\u751f\u7269\u533b\u5b66\u6587\u732e\u4e2d Excel \u4fdd\u5b58\u7684\u6570\u636e\u4e2d\uff0c\u6709 20% \u5de6\u53f3\u7684\u8868\u683c\u90fd\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u8fd9\u6781\u5927\u4e86\u5f71\u54cd\u4e86\u79d1\u5b66\u7814\u7a76\u7684\u53ef\u91cd\u590d\u6027\uff0c\u800c\u4e14\u8fd9\u79cd\u9519\u8bef\u5f88\u96be\u53d1\u73b0\uff0c\u56e0\u800c\u4f1a\u5f71\u54cd\u6240\u6709\u4f7f\u7528\u5305\u542b\u9519\u8bef\u6570\u636e\u7684\u7814\u7a76\u3002 \u5c06\u6570\u636e\u4fdd\u5b58\u4e3a CSV \u6587\u4ef6\u5176\u5b9e\u662f\u5bfc\u5165 CSV \u6587\u4ef6\u7684\u9006\u64cd\u4f5c\u3002\u56e0\u6b64\u6211\u4eec\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u63d0\u51fa\u76f8\u5e94\u7684\u4e24\u79cd\u529e\u6cd5\uff1a\u4e00\u662f\u7ed3\u5408\u4f7f\u7528 open() \u548c print() \u51fd\u6570\u5c06\u6570\u636e\u6309\u5206\u9694\u7b26\u8f93\u51fa\u5230\u6587\u4ef6\uff1b\u800c\u662f\u76f4\u63a5\u8c03\u7528 Pandas \u63d0\u4f9b\u7684 to_csv() \u65b9\u6cd5\u3002 \u5148\u8bfb\u5165\u6d4b\u8bd5\u6570\u636e\uff1a In [3]: rds1 = read_csv('records.csv') In [4]: rds2 = pd.read_csv('records.csv') In [5]: rds1 Out[5]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] In [6]: rds2 Out[6]: \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 0 \u5468\u67d0\u67d0 9 3\u73ed 1 \u738b\u67d0\u67d0 10 6\u73ed \u5982\u679c\u53ea\u662f\u7b80\u5355\u5730\u5c06\u6570\u636e\u4ee5 CSV \u683c\u5f0f\u6253\u5370\u5230\u5c4f\u5e55\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a In [13]: for row in rds1: ...: print(','.join(row)) ...: \u59d3\u540d,\u5e74\u9f84,\u73ed\u7ea7 \u5468\u67d0\u67d0,9,3\u73ed \u738b\u67d0\u67d0,10,6\u73ed \u63a5\u4e0b\u6765\u662f\u5982\u4f55\u5c06\u6570\u636e\u6253\u5370\u8f93\u51fa\u5230\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u5148\u770b\u4e00\u4e0b print() \u51fd\u6570\u8bf4\u660e\uff1a In [12]: print? Docstring: print(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False) Prints the values to a stream, or to sys.stdout by default. Optional keyword arguments: file: a file-like object (stream); defaults to the current sys.stdout. sep: string inserted between values, default a space. end: string appended after the last value, default a newline. flush: whether to forcibly flush the stream. Type: builtin_function_or_method \u53ef\u4ee5\u770b\u5230\uff0cprint() \u51fd\u6570\u652f\u6301\u53c2\u6570 file \u7528\u4e8e\u8bbe\u5b9a\u6587\u4ef6\u6d41\uff0c\u9ed8\u8ba4\u662f\u7cfb\u7edf\u6807\u51c6\u8f93\u51fa\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8054\u5408 open() \u51fd\u6570\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6 test1.csv \u5e76\u8fdb\u884c\u5199\u5165\uff1a In [16]: with open('test1.csv', 'w', encoding='utf-8') as f: ...: for row in rds1: ...: print(','.join(row), file=f) \u4f7f\u7528\u7cfb\u7edf\u547d\u4ee4\u67e5\u770b\u6587\u4ef6\u5185\u5bb9\u662f\u5426\u6b63\u786e\uff1a In [17]: !cat test1.csv \u59d3\u540d,\u5e74\u9f84,\u73ed\u7ea7 \u5468\u67d0\u67d0,9,3\u73ed \u738b\u67d0\u67d0,10,6\u73ed \u8fd9\u6837\u6211\u4eec\u5c31\u786e\u5b9a\u5c06\u6570\u636e\u6210\u529f\u5bfc\u51fa\u5230 CSV \u6587\u4ef6\u4e2d\u4e86\u3002 \u76f8\u6bd4\u800c\u8a00\uff0c\u76f4\u63a5\u4f7f\u7528 Pandas \u7684 to_csv() \u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e0a\u9762\u7684\u64cd\u4f5c\uff1a In [18]: rds2.to_csv('test2.csv') In [19]: !cat test2.csv ,\u59d3\u540d,\u5e74\u9f84,\u73ed\u7ea7 0,\u5468\u67d0\u67d0,9,3\u73ed 1,\u738b\u67d0\u67d0,10,6\u73ed \u7531\u6b64\u53ef\u89c1\uff0c\u65e0\u8bba\u6570\u636e\u8bfb\u5199\uff0cPandas \u63d0\u4f9b\u7684\u5de5\u5177\u66f4\u52a0\u7b80\u4fbf\u76f4\u89c2\u3002 10.3 Excel \u6587\u4ef6 \u00b6 \u5c3d\u7ba1\u672c\u4e66\u4e0d\u63a8\u8350\u8bfb\u8005\u4f7f\u7528 Excel \u5904\u7406\u548c\u4fdd\u5b58\u6570\u636e\uff0c\u4f46\u662f\u56e0\u4e3a\u5fae\u8f6f\u7cfb\u7edf\u548c Office \u529e\u516c\u5957\u4ef6\u7684\u6d41\u884c\u6211\u4eec\u603b\u4f1a\u9047\u89c1\u5e76\u4e14\u5fc5\u987b\u9762\u5bf9 Excel \u6587\u4ef6\u7684\u5904\u7406\u3002\u5728 Python \u4e2d\uff0c\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u76f4\u63a5\u4f7f\u7528 open() \u51fd\u6570\u6216\u6807\u51c6\u6a21\u5757\u6765\u5bfc\u5165 Excel \u6570\u636e\uff0c\u4f46\u6709\u5f88\u591a\u5de5\u5177\u5305\u63d0\u4f9b\u4e86\u8be5\u529f\u80fd\uff0c\u6bd4\u8f83\u77e5\u540d\u7684\u6709 Pandas\u3001openpyxl\u3001xlrd\u3001xlutils \u4ee5\u53ca pyexcel\u3002 10.3.1 \u68c0\u67e5\u6570\u636e \u00b6 Excel \u672c\u8eab\u662f\u5fae\u8f6f\u63d0\u4f9b\u7684\u4e00\u6b3e\u975e\u5e38\u5f3a\u5927\u7684\u6570\u636e\u5206\u6790\u8f6f\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9 Excel \u7684\u5355\u5143\u683c\u8fdb\u884c\u975e\u5e38\u591a\u7684\u64cd\u4f5c\uff0c\u5305\u62ec\u8bbe\u5b9a\u683c\u5f0f\u3001\u63d2\u5165\u51fd\u6570\u547d\u4ee4\u7b49\u3002\u4e00\u65e6\u6211\u4eec\u5728 Excel \u4e2d\u5bf9\u6570\u636e\u8fdb\u884c\u4e86\u989d\u5916\u64cd\u4f5c\uff0c\u6211\u4eec\u4f7f\u7528 Python \u8fdb\u884c\u5bfc\u5165\u65f6\u5c31\u9700\u8981\u989d\u5916\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u8ddf\u6570\u636e\u65e0\u5173\u7684\u989d\u5916\u4fe1\u606f\u7834\u574f\u4e86\u6570\u636e\u7684\u89c4\u5f8b\u6027\uff0c\u589e\u52a0\u4e86\u6587\u4ef6\u7684\u590d\u6742\u6027\uff0c\u6240\u4ee5 Python \u5728\u89e3\u6790\u65f6\u975e\u5e38\u5bb9\u6613\u51fa\u9519\u3002 \u65e2\u7136\u662f\u4f7f\u7528 Python \u5904\u7406\u6570\u636e\uff0c\u90a3\u4e48\u8bfb\u8005\u63d0\u4f9b\u7684 Excel \u6570\u636e\u5e94\u5f53\u5c3d\u91cf\u662f\u89c4\u6574\u7684\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u51e0\u6761\u8981\u6c42\u8fdb\u884c\u68c0\u67e5\uff1a \u8868\u683c\u7684\u7b2c\u4e00\u884c\u5e94\u5f53\u662f\u5217\u540d \u6240\u6709\u7684\u5355\u5143\u683c\u5c3d\u91cf\u907f\u514d\u51fa\u73b0\u7a7a\u683c\uff0c\u7279\u522b\u662f\u884c\u540d\u548c\u5217\u540d\u3002\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7b26\u53f7\uff0c\u5982\u4e0b\u5212\u7ebf\u3001\u5206\u53f7\u3001\u77ed\u6a2a\u6760\u7b49\u8fdb\u884c\u66ff\u4ee3 \u540d\u5b57\u5c3d\u91cf\u7b80\u77ed\u6613\u61c2 \u786e\u4fdd\u7f3a\u5931\u503c\u90fd\u4f7f\u7528 NA \u8fdb\u884c\u6807\u6ce8 \u6211\u4eec\u77e5\u9053\uff0cExcel \u6587\u4ef6\u4e00\u822c\u662f\u4ee5 xls \u6216 xlsx \u4f5c\u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\u3002\u9664\u4e86\u5b83\u4eec\uff0cExcel \u662f\u652f\u6301\u4fdd\u5b58\u4e3a\u5176\u4ed6\u683c\u5f0f\u7684\uff0c\u63a8\u8350\u5c06\u6570\u636e\u5bfc\u51fa\u4e3a CSV \u6587\u4ef6\u540e\u7528\u524d\u9762\u4ecb\u7ecd\u8fc7\u7684\u65b9\u6cd5\u5bfc\u5165\u3002 10.3.2 \u51c6\u5907\u5de5\u4f5c \u00b6 \u5728\u524d\u9762\u6267\u884c\u5bfc\u5165\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u9ed8\u8ba4 IPython Shell \u6216 Jupyter Notebook \u662f\u5728\u8981\u5bfc\u5165\u6587\u4ef6\u7684\u540c\u4e00\u76ee\u5f55\u4e0b\u542f\u52a8\u7684\uff0c\u6b64\u65f6 Python \u7684\u5de5\u4f5c\u8def\u5f84\u4e0e\u6587\u4ef6\u76ee\u5f55\u4e00\u81f4\uff0c\u6211\u4eec\u5728\u4e3a\u5bfc\u5165\u51fd\u6570\u4f20\u5165\u6587\u4ef6\u8def\u5f84\u53c2\u6570\u65f6\u53ea\u9700\u8981\u6307\u5b9a\u6587\u4ef6\u540d\u5373\u53ef\u3002\u4f46\u66f4\u4e3a\u5b9e\u9645\u7684\u60c5\u51b5\u53ef\u80fd\u662f\u6267\u884c\u7684\u811a\u672c\u3001Notebook \u6ca1\u6709\u548c\u8981\u64cd\u4f5c\u7684\u6570\u636e\u6587\u4ef6\u4f4d\u4e8e\u540c\u4e00\u8def\u5f84\uff0c\u4e00\u4e2a\u89e3\u51b3\u529e\u6cd5\u662f\u901a\u8fc7\u7edd\u5bf9\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84\u7684\u65b9\u5f0f\u6307\u5b9a\u6587\u4ef6\u8def\u5f84\uff0c\u53e6\u4e00\u4e2a\u529e\u6cd5\u662f\u5728 Python \u7a0b\u5e8f\u4e2d\u5207\u6362\u5de5\u4f5c\u76ee\u5f55\u3002 \u5047\u8bbe records.csv \u6587\u4ef6\u6709\u4ee5\u4e0b\u8def\u5f84\u5c42\u7ea7\uff1aC \u76d8\u4e2d\u6709 data \u6587\u4ef6\u5939\uff08\u76ee\u5f55\uff09\uff0cdata \u4e0b\u6709\u6587\u4ef6 records.csv\uff0c\u800c\u6211\u4eec\u5728 C \u76d8\u4e0b\u542f\u52a8\u4e86 Jupyter Notebook \u6216 IPython Shell\u3002\u90a3\u4e48 Python \u5982\u4f55\u8bbf\u95ee records.csv \u6587\u4ef6\u8def\u5f84\u5462\uff1f C: \u251c\u2500data \u2514\u2500records.csv \u7edd\u5bf9\u8def\u5f84\u662f\u4ee5\u6839\u76ee\u5f55\u4e3a\u8d77\u59cb\u7684\u8def\u5f84\uff0cWindows \u7cfb\u7edf\u4e00\u822c\u4ee5\u76d8\u7b26\u5f00\u59cb\uff0c\u5982 C:\uff1b\u800c macOS \u548c Linux \u7cfb\u7edf\u5219\u4ee5 / \u5f00\u59cb\u3002\u76f8\u5bf9\u8def\u5f84\u662f\u6307\u4ee5\u5f53\u524d\u8def\u5f84\u4e3a\u53c2\u8003\u7684\u8def\u5f84\u3002\u4ee5 C: \u4e3a\u5f53\u524d\u8def\u5f84\uff0c\u6587\u4ef6 records.csv \u7684\u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84\u7ed9\u51fa\u5982\u4e0b\uff1a # \u7edd\u5bf9\u8def\u5f84 C:/data/records.csv # \u76f8\u5bf9\u8def\u5f84 data/records.csv \u53e6\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 os \u6a21\u5757\u63d0\u4f9b\u7684 chdir() \u51fd\u6570\u5728 Python \u811a\u672c\u5185\u90e8\u5207\u6362\u5de5\u4f5c\u76ee\u5f55\u3002\u5e38\u89c1\u64cd\u4f5c\u5982\u4e0b\uff1a # \u5bfc\u5165 os import os # \u83b7\u53d6\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0ccwd \u4e3a current working directory \u9996\u5b57\u6bcd\u7f29\u5199 cwd = os.getcwd() cwd # \u6216\u8005\u4f7f\u7528\u9b54\u672f\u547d\u4ee4 pwd pwd # \u66f4\u6539\u5de5\u4f5c\u76ee\u5f55 os.chdir(\"/path/to/your/data-folder\") # \u6216\u8005\u4f7f\u7528\u9b54\u672f\u547d\u4ee4 cd cd /path/to/your/data-folder # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u7684\u6240\u6709\u6587\u4ef6\u548c\u5b50\u76ee\u5f55 os.listdir('.') 10.3.3 \u4f7f\u7528 Pandas \u8bfb\u5199 Excel \u00b6 \u524d\u9762\u6211\u4eec\u5411\u8bfb\u8005\u4ecb\u7ecd\u4e86 Pandas \u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u5730\u5bfc\u5165 CSV \u6587\u672c\u6570\u636e\uff0c\u8fd9\u91cc\u5c06\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 Pandas \u8bfb\u5199 Excel \u6587\u4ef6\u3002\u4e00\u4e2a Excel \u53ef\u4ee5\u5b58\u50a8\u591a\u5f20\u8868\u683c\uff0c\u56e0\u6b64\u8bfb\u5165 Excel \u7684\u64cd\u4f5c\u5927\u6709\u4e0d\u540c\u3002 \u8fd9\u91cc\u4f7f\u7528\u4e8b\u5148\u5df2\u7ecf\u521b\u5efa\u597d\u7684 Excel \u6587\u4ef6 data.xlsx \u4f5c\u4e3a\u793a\u4f8b\u6570\u636e\uff0c\u5b83\u5305\u542b\u4e86\u4e24\u4e2a\u6570\u636e\u96c6\uff0c\u5206\u522b\u5b58\u50a8\u5728\u4e24\u4e2a\u8868\u683c\u4e2d\u3002 \u6211\u4eec\u9996\u5148\u67e5\u770b\u4e0b\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u5e76\u5c06\u5176\u5207\u6362\u5230\u6570\u636e\u5bf9\u5e94\u7684\u76ee\u5f55\u4e2d\u3002 In [2]: import os In [3]: os.getcwd() # \u83b7\u53d6\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 Out[3]: 'C:\\\\Shixiang\\\\pybook' In [4]: os.listdir('files/chapter10') # \u5217\u51fa\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u53ca\u5b50\u76ee\u5f55 Out[4]: ['data.xlsx', 'lung.csv', 'mtcars.csv', 'records.csv', 'records.tsv', 'records.txt', 'test1.csv', 'test2.csv'] In [5]: cd files # \u5207\u6362\u5de5\u4f5c\u76ee\u5f55 C:\\Shixiang\\pybook\\files In [6]: os.getcwd() # \u83b7\u53d6\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 Out[6]: 'C:\\\\Shixiang\\\\pybook\\\\files' In [7]: pwd Out[7]: 'C:\\\\Shixiang\\\\pybook\\\\files' In [8]: os.chdir('chapter10') # \u5c06\u5de5\u4f5c\u76ee\u5f55\u5207\u6362\u4e3a\u6570\u636e\u6240\u5728\u76ee\u5f55 In [9]: pwd Out[9]: 'C:\\\\Shixiang\\\\pybook\\\\files\\\\chapter10' \u4e0a\u9762\u4ee3\u7801\u5206\u522b\u6f14\u793a\u4e86\u4f7f\u7528 os \u6a21\u5757\u7684\u51fd\u6570\u548c IPython \u9b54\u672f\u547d\u4ee4\u8fdb\u884c\u5de5\u4f5c\u76ee\u5f55\u7684\u83b7\u53d6\u548c\u5207\u6362\uff0c\u4e0b\u9762\u5f00\u59cb\u8fdb\u884c\u6570\u636e\u7684\u8bfb\u5165\u3002 In [10]: import pandas as pd In [11]: file = 'data.xlsx' In [12]: xl = pd.ExcelFile(file) In [13]: # \u6253\u5370\u8868\u683c\u540d\u5b57 In [14]: print(xl.sheet_names) ['mtcars', 'lung'] \u6211\u4eec\u7684\u786e\u53ef\u4ee5\u770b\u5230 data.xlsx \u6587\u4ef6\u4e2d\u5b58\u5728\u4e24\u5f20\u8868\u540d\u5206\u522b\u4e3a mtcars \u548c lung \u7684\u8868\u683c\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u8fd9 2 \u4e2a\u6570\u636e\u96c6\u89e3\u6790\u51fa\u6765\u3002 In [15]: mtcars = xl.parse('mtcars') In [16]: mtcars.head() # \u53ea\u67e5\u770b\u5934\u51e0\u884c Out[16]: mpg cyl disp hp drat wt qsec vs am gear carb 0 21.0 6 160.0 110 3.90 2.620 16.46 0 1 4 4 1 21.0 6 160.0 110 3.90 2.875 17.02 0 1 4 4 2 22.8 4 108.0 93 3.85 2.320 18.61 1 1 4 1 3 21.4 6 258.0 110 3.08 3.215 19.44 1 0 3 1 4 18.7 8 360.0 175 3.15 3.440 17.02 0 0 3 2 In [17]: lung = xl.parse('lung') In [18]: lung.head() Out[18]: inst time status age ... ph.karno pat.karno meal.cal wt.loss 0 3.0 306 2 74 ... 90.0 100.0 1175.0 NaN 1 3.0 455 2 68 ... 90.0 90.0 1225.0 15.0 2 3.0 1010 1 56 ... 90.0 90.0 NaN 15.0 3 5.0 210 2 57 ... 90.0 60.0 1150.0 11.0 4 1.0 883 2 60 ... 100.0 90.0 NaN 0.0 [5 rows x 10 columns] \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u524d\u9762\u5b66\u4e60\u8fc7\u7684 Pandas \u77e5\u8bc6\u64cd\u4f5c\u5b83\u4eec\u4e86\u3002 \u73b0\u5728\u6211\u4eec\u5047\u8bbe\u5df2\u7ecf\u5206\u6790\u597d\u4e86\u6570\u636e\uff0c\u63a5\u4e0b\u6765\u60f3\u8981\u628a\u7ed3\u679c\u5bfc\u51fa\u4e3a Excel \u6587\u4ef6\uff0c\u600e\u4e48\u505a\u5462\uff1f\u4f7f\u7528 Pandas \u7684 to_excel() \u51fd\u6570\u5c31\u53ef\u4ee5\u5b8c\u6210\u3002 In [21]: lung.to_excel('~/\u6d4b\u8bd5\u5bfc\u51fa.xlsx') \u5982\u679c\u8bfb\u8005\u4e5f\u8fd0\u884c\u4e86\u4e0a\u9762\u8fd9\u4e2a\u547d\u4ee4\uff0c\u5feb\u53bb\u6253\u5f00\u5bb6\u76ee\u5f55\u4e0b\u7684\u201c\u6d4b\u8bd5\u5bfc\u51fa.xlsx\u201d\u6587\u4ef6\u770b\u770b\u6210\u529f\u5bfc\u51fa\u6ca1\u5427\u3002 \u8be5\u51fd\u6570\u652f\u6301\u975e\u5e38\u591a\u7684\u9009\u9879\uff1a In [22]: lung.to_excel? Signature: lung.to_excel( excel_writer, sheet_name='Sheet1', na_rep='', float_format=None, columns=None, header=True, index=True, index_label=None, startrow=0, startcol=0, engine=None, merge_cells=True, encoding=None, inf_rep='inf', verbose=True, freeze_panes=None, ) Docstring: Write object to an Excel sheet. ... \u4f8b\u5982\uff0c\u9ed8\u8ba4\u7684\u8868\u540d\u662f Sheet1\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u8fdb\u884c\u4fee\u6539\u4e3a lung\uff1a In [23]: lung.to_excel('~/\u6d4b\u8bd5\u5bfc\u51fa.xlsx', sheet_name='lung') 10.4 pickle \u6587\u4ef6 \u00b6 \u4e0a\u9762\u4ecb\u7ecd\u7684 CSV \u6587\u4ef6\u548c Excel \u6587\u4ef6\u90fd\u53ef\u4ee5\u901a\u8fc7\u5916\u90e8\u7a0b\u5e8f\u8fdb\u884c\u4fee\u6539\uff0c\u8fd9\u53ef\u80fd\u4e0e\u67d0\u4e9b\u5b89\u5168\u7a0b\u5e8f\u7684\u76ee\u7684\u53ef\u80fd\u76f8\u6096\uff0c\u6709\u65f6\u4e5f\u4e0d\u5229\u4e8e\u5206\u6790\u7684\u53ef\u91cd\u590d\u6027\u3002\u7279\u522b\u662f CSV \u548c Excel \u7b49\u6587\u4ef6\u7c7b\u578b\u90fd\u65e0\u6cd5\u4fdd\u5b58 Python \u7279\u6709\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f8b\u5982\u7c7b\u3002\u4e3a\u6b64\uff0cPython \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u51c6\u6a21\u5757 pickle \u5b9e\u73b0\u5bf9\u4e00\u4e2a Python \u5bf9\u8c61\u7ed3\u6784\u7684\u4e8c\u8fdb\u5236\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff1a\u901a\u8fc7 pickle \u6a21\u5757\u7684\u5e8f\u5217\u5316\u64cd\u4f5c\u6211\u4eec\u80fd\u591f\u5c06 Python \u7a0b\u5e8f\u4e2d\u8fd0\u884c\u7684\u5bf9\u8c61\u4fe1\u606f\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u53bb\uff0c\u6c38\u4e45\u5b58\u50a8\uff1b\u901a\u8fc7pickle \u6a21\u5757\u7684\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c\uff0c\u6211\u4eec\u80fd\u591f\u4ece\u6587\u4ef6\u4e2d\u521b\u5efa\u4e0a\u4e00\u6b21\u7a0b\u5e8f\u4fdd\u5b58\u7684\u5bf9\u8c61\u3002 pickle \u6587\u4ef6\u4e0e CSV \u8fd9\u79cd\u6587\u672c\u6587\u4ef6\u76f8\u6bd4\u6709\u51e0\u70b9\u672c\u8d28\u7684\u4e0d\u540c\uff1a pickle \u6587\u4ef6\u662f\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684 pickle \u6587\u4ef6\u65e0\u6cd5\u901a\u8fc7\u6587\u672c\u7f16\u8f91\u5668\u76f4\u89c2\u9605\u8bfb CSV \u6587\u4ef6\u5728 Python \u7cfb\u7edf\u5916\u5e7f\u6cdb\u4f7f\u7528\uff0c\u800c pickle \u6587\u4ef6\u662f Python \u4e13\u6709\u7684 pickle \u6587\u4ef6\u53ef\u4ee5\u4fdd\u5b58 Python \u5927\u91cf\u7684\u6570\u636e\u7c7b\u578b pickle \u6587\u4ef6\u7684\u8bfb\u53d6\u548c\u4fdd\u5b58\u901a\u8fc7 pickle \u6a21\u5757\u7684 load() \u548c dump() \u51fd\u6570\u5b9e\u73b0\uff0c\u4e0b\u9762\u7b80\u5355\u4e3e\u4f8b\u8bf4\u660e\u3002 In [1]: import pickle In [2]: data = {'a':[1,2,3], 'b':['yes','no']} In [3]: with open('data.pkl', 'wb') as f: ...: pickle.dump(data, f) \u8fd9\u91cc\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u5b57\u5178 data\uff0c\u7136\u540e\u4f7f\u7528 open() \u51fd\u6570\u5e76\u4ee5\u4e8c\u8fdb\u5236\u5199\u5165\u7684\u65b9\u5f0f\u521b\u5efa\u4e86\u6587\u4ef6 data.pkl\uff0cpkl \u662f pickle \u6587\u4ef6\u7279\u6709\u7684\u62d3\u5c55\u540d\uff0c\u5728 with \u8bed\u53e5\u5185\u90e8\uff0c\u6211\u4eec\u4f7f\u7528 dump() \u51fd\u6570\u5c06\u6570\u636e\u5199\u5165\uff0c\u4fdd\u8bc1\u4e86 data.pkl \u6587\u4ef6\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u6b63\u5e38\u5173\u95ed\u3002 \u6b64\u5904\u4f7f\u7528 pickle \u6587\u4ef6\u7684\u597d\u5904\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u8fd9\u4e2a\u6570\u636e\u5e76\u4e0d\u662f\u5f88\u597d\u7528 CSV \u683c\u5f0f\u8868\u793a\u3002\u53e6\u5916\uff0c\u5982\u679c\u8003\u8651\u4f7f\u7528\u7eaf\u6587\u672c\u4fdd\u5b58\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 for \u5faa\u73af\uff0c\u800c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6570\u636e\u5982\u679c\u66f4\u590d\u6742\u70b9\u5c31\u4f1a\u96be\u4ee5\u8fd8\u539f\u4e86\u3002 \u5bfc\u5165 pickle \u6587\u4ef6\u64cd\u4f5c\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u6211\u4eec\u9700\u8981\u628a open() \u7684\u6a21\u5f0f\u8bbe\u5b9a\u4e3a\u4e8c\u8fdb\u5236\u5199\u5165 \u2018rb\u2019\uff0c\u53e6\u5916\u662f\u8c03\u7528 load() \u51fd\u6570\u800c\u975e dump()\u3002 In [4]: with open('data.pkl', 'rb') as file: ...: data_restore = pickle.load(file) ...: In [5]: print(data_restore) {'a': [1, 2, 3], 'b': ['yes', 'no']} 10.5 SAS \u4e0e Stata \u6587\u4ef6 \u00b6 \u4f5c\u4e3a\u6570\u636e\u5206\u6790\u4ece\u4e1a\u8005\uff0c\u6211\u4eec\u53ef\u80fd\u6ca1\u6709\u4f7f\u7528\u8fc7 SAS \u548c Stata\uff0c\u4f46\u80af\u5b9a\u5bf9\u5b83\u4eec\u7684\u5927\u540d\u6709\u6240\u8033\u95fb\u3002SAS \u662f Statistical Analysis System \u7684\u7f29\u5199\uff0c\u662f\u7531\u7f8e\u56fd\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u7acb\u5927\u5b66 1966 \u5e74\u5f00\u53d1\u7684\u7edf\u8ba1\u5206\u6790\u8f6f\u4ef6\u3002\u7ecf\u8fc7\u591a\u5e74\u6765\u7684\u5b8c\u5584\u548c\u53d1\u5c55\uff0cSAS \u5728\u56fd\u9645\u4e0a\u5df2\u88ab\u8a89\u4e3a\u7edf\u8ba1\u5206\u6790\u7684\u6807\u51c6\u8f6f\u4ef6\uff0c\u5728\u5404\u4e2a\u9886\u57df\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u5c24\u5176\u662f\u5546\u4e1a\u5206\u6790\u4ee5\u53ca\u751f\u7269\u7edf\u8ba1\u5b66\u3002Stata \u5219\u662f\u7531 Statistics \u548c data \u8fd9\u4e24\u4e2a\u8bcd\u5404\u53d6\u4e00\u90e8\u5206\u62fc\u63a5\u800c\u6210\uff08\u4e0e Pandas \u4e00\u8bcd\u7684\u6765\u6e90\u76f8\u4f3c\uff09\uff0c\u662f\u4e00\u5957\u63d0\u4f9b\u5176\u4f7f\u7528\u8005\u6570\u636e\u5206\u6790\u3001\u6570\u636e\u7ba1\u7406\u4ee5\u53ca\u7ed8\u5236\u4e13\u4e1a\u56fe\u8868\u7684\u5b8c\u6574\u53ca\u6574\u5408\u6027\u7edf\u8ba1\u8f6f\u4ef6\uff0c\u4e3b\u8981\u7528\u4e8e\u5b66\u672f\u7814\u7a76\uff0c\u5c24\u5176\u662f\u793e\u4f1a\u79d1\u5b66\u9886\u57df\u3002 SAS \u548c Stata \u4f5c\u4e3a\u4e13\u4e1a\u7684\u7edf\u8ba1\u5206\u6790\u8f6f\u4ef6\uff0c\u5b83\u4eec\u90fd\u6709\u81ea\u5df1\u72ec\u6709\u7684\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\u3002SAS \u76ee\u524d\u4e3b\u8981\u4f7f\u7528 sas7bdat \u4f5c\u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\uff0c\u800c Stata \u4f7f\u7528 dta \u4f5c\u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\u3002 sas7bdat \u6587\u4ef6\u7684\u5bfc\u5165\u9700\u8981\u63d0\u524d\u5b89\u88c5\u597d sas7bdat \u5305\u3002\u5b89\u88c5\u4e4b\u540e\uff0c\u6211\u4eec\u901a\u8fc7 SAS7BDAT() \u51fd\u6570\u6253\u5f00\u6570\u636e\u96c6\u6587\u4ef6\uff0c\u5e76\u8c03\u7528 to_data_frame() \u65b9\u6cd5\u53ef\u4ee5\u5c06\u6587\u4ef6\u5bfc\u5165\u4e3a\u4e00\u4e2a Pandas \u7684 DataFrame \u5bf9\u8c61\u3002 import pandas as pd from sas7bdat import SAS7BDAT # \u6b64\u5904 xxxx \u5e94\u4fee\u6539\u4e3a\u5b9e\u9645\u6587\u4ef6\u540d with SAS7BDAT('xxxx.sas7bdat') as file: df_sas = file.to_data_frame() \u800c dta \u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 Pandas \u5e93\u63d0\u4f9b\u7684 read_stata() \u51fd\u6570\u5bfc\u5165\u3002 import pandas as pd # \u6b64\u5904 xxxx \u5e94\u4fee\u6539\u4e3a\u5b9e\u9645\u6587\u4ef6\u540d data = pd.read_stata('xxxx.dta') 10.6 HDF5 \u6587\u4ef6 \u00b6 HDF\uff08Hierarchical Data Format\uff09\u6307\u4e00\u79cd\u4e3a\u5b58\u50a8\u548c\u5904\u7406\u5927\u5bb9\u91cf\u79d1\u5b66\u6570\u636e\u8bbe\u8ba1\u7684\u6587\u4ef6\u683c\u5f0f\u53ca\u76f8\u5e94\u5e93\u6587\u4ef6\u3002HDF \u6700\u65e9\u7531\u7f8e\u56fd\u56fd\u5bb6\u8d85\u7ea7\u8ba1\u7b97\u5e94\u7528\u4e2d\u5fc3 NCSA \u5f00\u53d1\uff0c\u76ee\u524d\u5728\u975e\u76c8\u5229\u7ec4\u7ec7 HDF \u5c0f\u7ec4\u7ef4\u62a4\u4e0b\u7ee7\u7eed\u53d1\u5c55\u3002\u5f53\u524d\u6d41\u884c\u7684\u7248\u672c\u662f HDF5\u3002HDF5 \u62e5\u6709\u4e00\u7cfb\u5217\u7684\u4f18\u5f02\u7279\u6027\uff0c\u4f7f\u5176\u7279\u522b\u9002\u5408\u8fdb\u884c\u5927\u91cf\u79d1\u5b66\u6570\u636e\u7684\u5b58\u50a8\u548c\u64cd\u4f5c\uff0c\u5982\u5b83\u652f\u6301\u975e\u5e38\u591a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7075\u6d3b\uff0c\u901a\u7528\uff0c\u8de8\u5e73\u53f0\uff0c\u53ef\u6269\u5c55\uff0c\u9ad8\u6548\u7684 I/O \u6027\u80fd\uff0c\u652f\u6301\u51e0\u4e4e\u65e0\u9650\u91cf\u7684\u5355\u6587\u4ef6\u5b58\u50a8\u7b49\u3002\u5b83\u7684\u5b98\u7f51\u5730\u5740\u4e3a\uff1ahttps://support.hdfgroup.org/HDF5/\u3002 \u5728\u6b63\u5f0f\u5b66\u4e60\u5982\u4f55\u5bfc\u5165\u548c\u64cd\u4f5c HDF5 \u6587\u4ef6\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e0b\u5b83\u7684\u4e3b\u8981\u7279\u70b9\u3002 \u4e00\u4e2a HDF5 \u6587\u4ef6\u662f\u5b58\u50a8\u4e24\u7c7b\u5bf9\u8c61\u7684\u5bb9\u5668\uff0c\u8fd9\u4e24\u7c7b\u5bf9\u8c61\u5206\u522b\u4e3a\uff1a dataset\uff1a\u7c7b\u4f3c\u6570\u7ec4\u7684\u6570\u636e\u96c6\u5408\uff1b group\uff1b\u7ed3\u6784\u7c7b\u4f3c\u76ee\u5f55\u7684\u5bb9\u5668\uff0c\u5176\u4e2d\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a dataset \u53ca\u5176\u5b83\u7684 group\u3002 \u4e00\u4e2a HDF5 \u6587\u4ef6\u4ece\u4e00\u4e2a\u547d\u540d\u4e3a \u201c/\u201d \u7684 group \u5f00\u59cb\uff0c\u6240\u6709\u7684 dataset \u548c\u5176\u5b83 group \u90fd\u5305\u542b\u5728\u6b64 group \u4e0b\u3002\u5f53\u64cd\u4f5c HDF5 \u6587\u4ef6\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u6307\u5b9a group \u7684 dataset \u90fd\u662f\u9ed8\u8ba4\u6307 \u201c/\u201d \u4e0b\u7684 dataset\u3002 HDF5 \u6587\u4ef6\u7684 dataset \u548c group \u90fd\u53ef\u4ee5\u62e5\u6709\u63cf\u8ff0\u6027\u7684\u5143\u6570\u636e\uff0c\u79f0\u4f5c attribute\uff08\u5c5e\u6027\uff09\u3002 Python \u4e2d\u6709\u4e00\u7cfb\u5217\u7684\u5de5\u5177\u53ef\u4ee5\u64cd\u4f5c\u548c\u4f7f\u7528 HDF5 \u6570\u636e\uff0c\u5176\u4e2d\u6700\u5e38\u7528\u7684\u662f h5py \u548c PyTables\u3002\u7528 h5py \u64cd\u4f5c HDF5 \u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u4f7f\u7528\u76ee\u5f55\u4e00\u6837\u4f7f\u7528 group\uff0c\u50cf\u4f7f\u7528 NumPy \u6570\u7ec4\u4e00\u6837\u4f7f\u7528 dataset\uff0c\u50cf\u4f7f\u7528\u5b57\u5178\u4e00\u6837\u4f7f\u7528\u5c5e\u6027\uff0c\u975e\u5e38\u65b9\u4fbf\u548c\u6613\u7528\u3002 \u63a5\u4e0b\u6765\u5177\u4f53\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 h5py \u8fdb\u884c\u5bfc\u5165\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u5e76\u8fdb\u884c\u7b80\u5355\u7684\u53ef\u89c6\u5316\u3002 In [6]: import h5py In [7]: import numpy as np In [8]: import matplotlib.pyplot as plt In [9]: filename = 'data.hdf5' In [10]: data = h5py.File(filename, 'r') # \u8bfb\u5165 data.hdf5 In [11]: print(type(data)) # \u67e5\u770b\u5bf9\u8c61\u7c7b\u578b <class 'h5py._hl.files.File'> In [12]: group = data['strain'] # \u83b7\u53d6 HDF5 \u7684 group In [13]: # \u68c0\u67e5 group \u7684\u952e In [13]: for key in group.keys(): ...: print(key) ...: Strain In [14]: # \u83b7\u53d6\u6570\u636e\u96c6\u7684\u503c In [14]: strain = data['strain']['Strain'].value In [15]: # \u8bbe\u5b9a\u91c7\u6837\u6570 ...: s ...: num_samples = 10000 ...: ...: # \u8bbe\u5b9a\u65f6\u95f4\u5411\u91cf ...: time = np.arange(0, 1, 1/num_samples) In [16]: # \u7ed8\u56fe ...: plt.plot(time, strain[:num_samples]) ...: plt.xlabel('GPS Time (s)') ...: plt.ylabel('strain') ...: plt.show() \u7ed3\u679c\u56fe\u5f62\u5982\u56fe11-1\u6240\u793a\u3002 \u4e0a\u8ff0\u4ee3\u7801\u5c06 HDF5 \u6587\u4ef6\u5bfc\u5165\u4e3a\u4e00\u4e2a h5py \u7c7b\u5b9e\u4f8b\uff0c\u8be5\u5bf9\u8c61\u6709\u81ea\u5df1\u4e00\u5957\u64cd\u4f5c\u65b9\u6cd5\uff0c\u8bfb\u8005\u4ec5\u4ec5\u4f9d\u9760\u4e0a\u9762\u8fd9\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u4e0d\u8db3\u4ee5\u638c\u63e1\u5b83\u4eec\uff0c\u5982\u679c\u8bfb\u8005\u6bd4\u8f83\u611f\u5174\u8da3\uff0c\u8bf7\u901a\u8fc7\u7f51\u7edc\u8d44\u6599\u6216\u5176\u4ed6\u53c2\u8003\u4e66\u7c4d\u81ea\u884c\u5b66\u4e60\u548c\u7ec3\u4e60\u3002 10.7 MATLAB \u6587\u4ef6 \u00b6 MATLAB \u662f matrix \u548c laboratory \u4e24\u4e2a\u8bcd\u7684\u7ec4\u5408\uff0c\u8bd1\u4f5c\u77e9\u9635\u5b9e\u9a8c\u5ba4\u3002\u5b83\u662f\u7531\u7f8e\u56fd mathworks \u516c\u53f8\u53d1\u5e03\u7684\u4e3b\u8981\u9762\u5bf9\u79d1\u5b66\u8ba1\u7b97\u3001\u53ef\u89c6\u5316\u4ee5\u53ca\u4ea4\u4e92\u5f0f\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u9ad8\u79d1\u6280\u8ba1\u7b97\u73af\u5883\u3002MATLAB \u4e3b\u8981\u5e94\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u3001\u5de5\u7a0b\u6280\u672f\u7b49\u9886\u57df\uff0c\u4e0e\u5de5\u4e1a\u754c\u7ed3\u5408\u975e\u5e38\u7d27\u5bc6\uff0c\u4e5f\u662f\u6df1\u5ea6\u5b66\u4e60\u5e94\u7528\u7684\u4e3b\u8981\u5e73\u53f0\u4e4b\u4e00\u3002 MATLAB \u6240\u4f7f\u7528\u7684\u6570\u636e\u683c\u5f0f\u4ee5 mat \u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\uff0c\u5728 Python \u4e2d\u53ef\u4ee5\u901a\u8fc7\u6765\u81ea scipy.io \u6a21\u5757\u4e2d\u7684 loadmat() \u548c savemat() \u51fd\u6570\u8fdb\u884c\u8bfb\u5199\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6570\u636e\u5bfc\u5165\u7684\u64cd\u4f5c\u8303\u4f8b\u3002 import scipy.io filename = 'xxx.mat' # \u8bfb\u5165 mat \u6587\u4ef6 mat = scipy.io.loadmat(filename) print(type(mat)) # mat['x'] \u4e2d\u7684 x \u662f # MATLAB \u6587\u4ef6\u4e2d\u7684\u53d8\u91cf x\uff0c # mat['x'] \u662f \u53d8\u91cf x \u7684\u503c print(type(mat['x'])) print(mat['x']) \u4e0d\u96be\u7406\u89e3\uff0cmat \u6587\u4ef6\u4e2d\u5b58\u50a8\u7684\u53d8\u91cf\u540d\u548c\u76f8\u5e94\u503c\uff08\u6765\u81ea MATLAB\uff09\u8f6c\u6362\u4e3a\u4e86 Python \u4e2d\u7684\u952e\u503c\u5bf9\u5f62\u5f0f\u3002 10.8 json \u6587\u4ef6 \u00b6 JSON \u6307\u7684\u662f JavaScript \u5bf9\u8c61\u8868\u793a\u6cd5\uff08JavaScript Object Notation\uff09\uff0c\u5b83\u662f\u8f7b\u91cf\u7ea7\u7684\u6587\u672c\u6570\u636e\u4ea4\u6362\u683c\u5f0f\uff0c\u6613\u4e8e\u4eba\u9605\u8bfb\u548c\u7f16\u5199\u3002\u540c\u65f6\u4e5f\u6613\u4e8e\u673a\u5668\u89e3\u6790\u548c\u751f\u6210\uff0c\u5e76\u6709\u6548\u5730\u63d0\u5347\u7f51\u7edc\u4f20\u8f93\u6548\u7387\u3002JSON \u867d\u7136\u4f7f\u7528 Javascript \u8bed\u6cd5\u6765\u63cf\u8ff0\u6570\u636e\u5bf9\u8c61\uff0c\u4f46\u662f\u5b83\u5b8c\u5168\u72ec\u7acb\u4e8e\u7f16\u7a0b\u8bed\u8a00\u548c\u5e73\u53f0\u3002\u76ee\u524d\u975e\u5e38\u591a\u7684\u52a8\u6001\uff08PHP\u3001Python\u3001R\uff09\u7f16\u7a0b\u8bed\u8a00\u90fd\u652f\u6301 JSON\u3002 JSON \u7684\u8bed\u6cd5\u89c4\u5219\u5982\u4e0b\uff1a \u6570\u636e\u5728\u540d\u79f0/\u503c\u5bf9\u4e2d \u6570\u636e\u7531\u9017\u53f7\u5206\u9694 \u5927\u62ec\u53f7\u4fdd\u5b58\u5bf9\u8c61 \u4e2d\u62ec\u53f7\u4fdd\u5b58\u6570\u7ec4 \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u5bf9\u8c61\u793a\u4f8b\uff1a { \"\u540d\u5b57\": \"Mike Wang\" , \"\u4e2a\u4eba\u4e3b\u9875\":\"www.xxx.com\" } \u5f53\u5b58\u5728\u591a\u4e2a\u6570\u636e\u65f6\uff0c\u5219\u53ef\u4ee5\u7528\u6570\u7ec4\u8868\u793a\u3002 { \"sites\": [ { \"\u540d\u5b57\": \"Mike Wang\" , \"\u4e2a\u4eba\u4e3b\u9875\":\"www.xxx.com\" }, { \"\u540d\u5b57\": \"Mike Zhang\" , \"\u4e2a\u4eba\u4e3b\u9875\":\"www.xx1.com\" }, { \"\u540d\u5b57\": \"Mike Li\" , \"\u4e2a\u4eba\u4e3b\u9875\":\"www.xx2.com\" } ] } \u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u79cd\u7ed3\u6784\u5728 Python \u4e2d\u5c31\u662f\u5217\u8868\u548c\u5b57\u5178\u7684\u5d4c\u5957\uff0c\u56e0\u6b64\u4f7f\u7528 Python \u975e\u5e38\u5bb9\u6613\u5b8c\u6210 JSON \u7684\u89e3\u6790\u3002Python \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u51c6\u6a21\u5757 json \u4e13\u95e8\u5904\u7406\u8fd9\u9879\u5de5\u4f5c\uff0c\u5176\u4e2d loads()\u3001load() \u51fd\u6570\u7528\u4e8e\u5c06 JSON \u7ed3\u6784\u89e3\u6790\u4e3a Python \u5bf9\u8c61\uff0cdumps()\u3001dump() \u51fd\u6570\u7528\u4e8e\u5c06 Python \u5bf9\u8c61\u89e3\u6790\u4e3a JSON \u7ed3\u6784\u3002\u8fd9\u91cc\uff0c\u5e26 s \u7ed3\u5c3e\u7684\u51fd\u6570\u7684\u7528\u5904\u662f\u5904\u7406\u975e\u6587\u672c\u5bf9\u8c61\uff0c\u800c\u4e0d\u5e26 s \u7ed3\u5c3e\u7684\u51fd\u6570\u7528\u5904\u662f\u5904\u7406\u6587\u4ef6\uff0c\u8bf7\u8bfb\u8005\u6ce8\u610f\u533a\u5206\u3002 \u6211\u4eec\u5148\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u4e86\u89e3 loads() \u548c dumps() \u4e24\u4e2a\u51fd\u6570\u7684\u7528\u6cd5\u3002 In [1]: import json In [2]: json_data = '{ \"\u540d\u5b57\": \"Mike Wang\" , \"\u4e2a\u4eba\u4e3b\u9875\":\"www.x ...: xx.com\" }' In [3]: json.loads(json_data) # \u89e3\u6790 json \u6570\u636e\u4e3a\u5b57\u5178 Out[3]: {'\u540d\u5b57': 'Mike Wang', '\u4e2a\u4eba\u4e3b\u9875': 'www.xxx.com'} In [4]: data = json.loads(json_data) In [5]: json.dumps(data) # \u5c06\u5b57\u5178\u89e3\u6790\u4e3a json \u6570\u636e Out[5]: '{\"\\\\u540d\\\\u5b57\": \"Mike Wang\", \"\\\\u4e2a\\\\u4eba\\\\u4e3b\\\\u9875\": \"www.xxx.com\"}' Python \u4e0e JSON \u7684\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\u8868\u6240\u793a\uff1a Python \u5bf9\u8c61 JSON \u7b49\u4ef7\u7269 \u5b57\u5178 \u5bf9\u8c61 \u5217\u8868\u3001\u5143\u7ec4 \u6570\u7ec4 \u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32 \u6570\u503c \u6570\u503c True true False false None null \u4e0b\u9762\u662f\u4e00\u4e9b\u7b80\u5355\u7684\u6d4b\u8bd5\uff1a In [7]: json.dumps([1, 2, 3]) Out[7]: '[1, 2, 3]' In [8]: json.dumps(True) Out[8]: 'true' In [9]: json.dumps(None) Out[9]: 'null' In [10]: json.dumps(('a', 'b', 'c')) Out[10]: '[\"a\", \"b\", \"c\"]' load() \u548c dump() \u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u8f93\u5165\u662f\u6587\u672c\u5bf9\u8c61\uff0c\u8bfb\u8005\u6839\u636e\u524d\u9762\u6240\u5b66\u7684\u77e5\u8bc6\u53ef\u4ee5\u63a8\u6d4b\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u5e94\u8be5\u53ef\u4ee5\u5bfc\u5165 JSON \u6587\u4ef6\u3002 with open('xxx.json') as f: data = json.load(f) \u73b0\u5728\u6211\u4eec\u8bd5\u4e00\u8bd5\uff1a In [12]: with open('files/chapter10/data.json', 'r', encoding= ...: 'utf-8') as f: ...: data = json.load(f) ...: In [13]: data Out[13]: {'sites': [{'\u540d\u5b57': 'Mike Wang', '\u4e2a\u4eba\u4e3b\u9875': 'www.xxx.com'}, {'\u540d\u5b57': 'Mike Zhang', '\u4e2a\u4eba\u4e3b\u9875': 'www.xx1.com'}, {'\u540d\u5b57': 'Mike Li', '\u4e2a\u4eba\u4e3b\u9875': 'www.xx2.com'}]} \u7528\u6cd5\u7684\u786e\u662f\u8fd9\u6837\u7684\u3002\u5229\u7528 dump() \u51fd\u6570\u548c\u7c7b\u4f3c\u7684\u64cd\u4f5c\uff0c\u8bfb\u8005\u4e0d\u59a8\u8bd5\u8bd5\u5c06 Python \u5bf9\u8c61\u5bfc\u51fa\u4fdd\u5b58\u4e3a JSON \u6587\u4ef6\u3002 10.9 YAML \u6587\u4ef6 \u00b6 YAML \u662f \u201cYet Another Markup Language\u201d\uff08\u4ecd\u662f\u4e00\u79cd\u6807\u8bb0\u8bed\u8a00\uff09\u7684\u7f29\u5199\uff0c\u5b83\u5e38\u89c1\u4e8e\u914d\u7f6e\u6587\u4ef6\uff0c\u5982 Markdown \u6587\u6863\u7684\u6587\u4ef6\u5934\u5143\u4fe1\u606f\u6ce8\u91ca\u5c31\u5e38\u5e38\u91c7\u7528 YAML \u683c\u5f0f\u3002YAML \u53ef\u4ee5\u7b80\u5355\u8868\u8fbe\u6e05\u5355\u3001\u6563\u5217\u8868\uff0c\u6807\u91cf\u7b49\u6570\u636e\u5f62\u6001\u3002\u5b83\u4f7f\u7528\u7a7a\u767d\u7b26\u53f7\u7f29\u8fdb\u548c\u5927\u91cf\u4f9d\u8d56\u5916\u89c2\u7684\u7279\u8272\uff0c\u5de7\u5999\u907f\u5f00\u5404\u79cd\u5c01\u95ed\u7b26\u53f7\uff0c\u5982\uff1a\u5f15\u53f7\u3001\u5404\u79cd\u62ec\u53f7\u7b49\uff0c\u8fd9\u4e9b\u7b26\u53f7\u5728\u5d4c\u5957\u7ed3\u6784\u65f6\u4f1a\u53d8\u5f97\u590d\u6742\u800c\u96be\u4ee5\u8fa8\u8ba4\uff0c\u56e0\u800c\u7279\u522b\u9002\u5408\u7528\u6765\u8868\u8fbe\u6216\u7f16\u8f91\u6570\u636e\u7ed3\u6784\u3001\u5404\u79cd\u914d\u7f6e\u6587\u4ef6\u3001\u503e\u5370\u8c03\u8bd5\u5185\u5bb9\u3001\u6587\u4ef6\u5927\u7eb2\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a YAML \u683c\u5f0f\u7684\u7b80\u5355\u793a\u4f8b\uff1a a string: bla another dict: foo: bar key: value the answer: 42 YAML \u4e0e JSON \u683c\u5f0f\u7684\u5173\u7cfb\u5f88\u4eb2\u5bc6\uff0cJSON \u7684\u8bed\u6cd5\u662f YAML 1.2 \u7248\u7684\u5b50\u96c6\uff0c\u56e0\u6b64\u5927\u90e8\u5206\u7684 JSON \u6587\u4ef6\u90fd\u53ef\u4ee5\u88ab YAML \u7684\u5256\u6790\u5668\u5256\u6790\u3002\u867d\u7136 YAML \u4e5f\u53ef\u4ee5\u91c7\u7528\u7c7b\u4f3c JSON \u7684\u5199\u6cd5\uff0c\u4e0d\u8fc7 YAML \u6807\u51c6\u5e76\u4e0d\u5efa\u8bae\u8fd9\u6837\u4f7f\u7528\uff0c\u9664\u975e\u8fd9\u6837\u7f16\u5199\u80fd\u8ba9\u6587\u4ef6\u53ef\u8bfb\u6027\u589e\u52a0\u3002 YAML \u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a \u4f7f\u7528\u82f1\u6587\u4e95\u53f7\u8fdb\u884c\u6ce8\u91ca\u6807\u8bc6\uff0c\u8fd9\u4e0e Python \u4e00\u81f4\uff1b \u4f7f\u7528\u7f29\u8fdb\u8868\u793a\u5c42\u7ea7\u5173\u7cfb\uff0c\u5e76\u53ea\u80fd\u4f7f\u7528\u7a7a\u683c\u7f29\u8fdb\uff0c\u4e0d\u80fd\u4f7f\u7528\u5236\u8868\u7b26\uff1b \u533a\u5206\u5927\u5c0f\u5199\uff1b \u7f29\u8fdb\u7684\u7a7a\u683c\u6570\u76ee\u4e0d\u56fa\u5b9a\uff0c\u53ea\u9700\u8981\u76f8\u540c\u5c42\u7ea7\u7684\u5143\u7d20\u5de6\u4fa7\u5bf9\u9f50\uff1b \u6587\u4ef6\u4e2d\u7684\u5b57\u7b26\u4e32\u4e0d\u9700\u8981\u4f7f\u7528\u5f15\u53f7\u6807\u6ce8\uff0c\u4f46\u82e5\u5b57\u7b26\u4e32\u5305\u542b\u6709\u7279\u6b8a\u5b57\u7b26\u5219\u9700\u7528\u5f15\u53f7\u6807\u6ce8\uff1b \u8fd9\u91cc\u63d0\u9192\u8bfb\u8005\u6ce8\u610f\u7b2c\u4e8c\u70b9\uff0c\u56e0\u4e3a Python \u662f\u540c\u65f6\u652f\u6301\u7a7a\u683c\u548c\u5236\u8868\u7b26\u7f29\u8fdb\u7684\uff0c\u53ea\u8981\u5728\u4e66\u5199\u4ee3\u7801\u5757\u65f6\u4fdd\u6301\u4e00\u81f4\u5373\u53ef\uff0c\u800c YAML \u4e0d\u652f\u6301\u5236\u8868\u7b26\u7f29\u8fdb\uff0c\u8fd9\u6837\u5982\u679c\u6211\u4eec\u5de5\u4f5c\u65f6\u540c\u65f6\u7f16\u8f91\u548c\u5904\u7406 Python \u548c YAML \u6587\u4ef6\u65f6\u7a0d\u4e0d\u6ce8\u610f YAML \u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u60f3\u4e0d\u5230\u7684\u8bed\u6cd5\u9519\u8bef\u3002\u6700\u597d\u7684\u89e3\u51b3\u529e\u6cd5\u662f\u5bf9\u4ee3\u7801\u7f16\u8f91\u5668\u8bbe\u5b9a\u5c06\u5236\u8868\u7b26\u8f6c\u6362\u4e3a\u7279\u5b9a\u6570\u76ee\u7684\u7a7a\u683c\u7b26\uff0c\u4e00\u822c\u662f 4 \u4e2a\u6216\u8005 2 \u4e2a\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u6240\u6709\u6587\u4ef6\u4f7f\u7528\u5236\u8868\u7b26\u7f29\u8fdb\u4e86\u3002\u5177\u4f53\u7684\u529e\u6cd5\u8bf7\u8bfb\u8005\u81ea\u884c\u641c\u7d22\u89e3\u51b3\u3002 YAML \u652f\u6301\u7684\u6570\u636e\u7ed3\u6784\u5982\u4e0b\uff1a \u5bf9\u8c61\uff1a\u952e\u503c\u5bf9\u7684\u96c6\u5408\uff0c\u7c7b\u4f3c Python \u4e2d\u7684\u5b57\u5178\uff1b \u6570\u7ec4\uff1a\u4e00\u7ec4\u6309\u5e8f\u6392\u5217\u7684\u503c\uff0c\u7b80\u79f0 \u201c\u5e8f\u5217\u6216\u5217\u8868\u201d\u3002\u6570\u7ec4\u524d\u52a0\u6709 \u201c-\u201d \u7b26\u53f7\uff0c\u7b26\u53f7\u4e0e\u503c\u4e4b\u95f4\u9700\u7528\u7a7a\u683c\u5206\u9694\uff1b \u6807\u91cf\uff1a\u5355\u4e2a\u7684\u3001\u4e0d\u53ef\u518d\u5206\u7684\u503c\uff0c\u5982\uff1a\u5b57\u7b26\u4e32\u3001bool \u503c\u3001\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u65f6\u95f4\u3001\u65e5\u671f\u3001null \u7b49\uff1b None\uff1a\u7a7a\u503c\uff0c\u7528 null \u6216 ~ \u8868\u793a\u3002 \u4e0b\u9762\u662f\u5e38\u89c1\u6807\u91cf\u7684\u8868\u793a\u65b9\u5f0f\uff1a \u5b57\u7b26\u4e32: name \u7279\u6b8a: \"name\\n\" \u6570\u503c: 3.14 \u5e03\u5c14\u503c: true \u7a7a\u503c: null \u7a7a\u503c2: ~ \u65f6\u95f4\u503c: 2019-11-11t11:33:22.55-06:00 \u65e5\u671f\u503c: 2019-11-11 Python \u63d0\u4f9b\u4e86 yaml \u6a21\u5757\u4ee5\u8fdb\u884c YAML \u6587\u4ef6\u7684\u89e3\u6790\uff0c\u4f7f\u7528\u65b9\u6cd5\u548c\u51fd\u6570\u540d\u90fd\u4e0e json \u7c7b\u4f3c\uff0c\u5373\u4f7f\u7528\u6587\u4ef6\u64cd\u4f5c\u51fd\u6570 open() \u6587\u4ef6\uff0c\u4f7f\u7528 safe_load() \u89e3\u6790 YAML \u6587\u4ef6\uff08load() \u51fd\u6570\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u4e0d\u5b89\u5168\uff09\uff0c\u4f7f\u7528 dump() \u4fdd\u5b58 YAML \u6587\u4ef6\u3002 \u4e0b\u9762\u5c31 YAML \u6587\u4ef6\u7684\u5bfc\u5165\u4e3e\u4e24\u4e2a\u4f8b\u5b50\uff0c\u5bfc\u51fa\u4e0e\u64cd\u4f5c JSON \u6587\u4ef6\u4e00\u81f4\uff0c\u56e0\u800c\u4e0d\u518d\u8d58\u8ff0\u3002 \u7b2c\u4e00\u4e2a\u4f8b\u5b50\u662f\u5c06\u4e0a\u9762\u5c55\u793a\u7684\u6807\u91cf\u8868\u793a\u65b9\u5f0f\u4fdd\u5b58\u5230 YAML \u6587\u4ef6 data1.yml \u4e2d\uff08YAML \u4e00\u822c\u4ee5 .yml \u4f5c\u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\uff09\uff0c\u6211\u4eec\u4f7f\u7528 Python yaml \u6a21\u5757\u89e3\u6790\u770b\u770b\u5b83\u4eec\u5728 Python \u7684\u8868\u73b0\u65b9\u5f0f\u3002 In [1]: import yaml In [2]: with open('files/chapter10/data1.yml', encoding='utf-8') as f: ...: data = yaml.safe_load(f) ...: In [3]: data Out[3]: {'\u5b57\u7b26\u4e32': 'name', '\u7279\u6b8a': 'name\\n', '\u6570\u503c': 3.14, '\u5e03\u5c14\u503c': True, '\u7a7a\u503c': None, '\u7a7a\u503c2': None, '\u65f6\u95f4\u503c': datetime.datetime(2019, 11, 11, 17, 33, 22, 550000), '\u65e5\u671f\u503c': datetime.date(2019, 11, 11)} \u7ed3\u679c\u663e\u793a\u662f\u4e00\u4e2a Python \u5b57\u5178\uff0c\u6bcf\u4e00\u884c\u7684\u5185\u5bb9\u90fd\u8f6c\u6362\u4e3a\u4e86\u4e00\u4e2a\u952e\u503c\u5bf9\u3002 \u6211\u4eec\u518d\u89c2\u5bdf\u4e00\u4e2a\u5d4c\u5957\u952e\u503c\u5bf9\u548c\u6570\u7ec4\u7684\u7ed3\u679c\u3002 user1: type: user name: a password: 123 user2: type: user name: b password: 456 user3: type: group name: - aa - bb - cc password: - 123 - 456 - null summary: - user1 - user2 - user3 \u4e0a\u9762\u6211\u4eec\u865a\u6784\u4e86\u4e00\u7ec4\u7b80\u5355\u5730\u7528\u6237\u7ba1\u7406\u6570\u636e\uff0c\u7528\u6237 user1 \u548c user1 \u662f\u4e2a\u4f53\u7528\u6237\uff0cuser3 \u662f\u7fa4\u7ec4\u7528\u6237\u3002 In [12]: with open('files/chapter10/data2.yml', encoding='utf-8') as f: ...: data = yaml.safe_load(f) ...: In [13]: data Out[13]: {'user1': {'type': 'user', 'name': 'a', 'password': 123}, 'user2': {'type': 'user', 'name': 'b', 'password': 456}, 'user3': {'type': 'group', 'name': ['aa', 'bb', 'cc'], 'password': [123, 456, None]}, 'summary': ['user1', 'user2', 'user3']} ``` \u8bfb\u8005\u4e0d\u59a8\u5bf9\u6bd4\u4e0a\u4e00\u8282\u4ecb\u7ecd\u7684 JSON \u548c\u672c\u8282\u4ecb\u7ecd\u7684 YAML\uff0c\u4ece\u89c6\u89c9\u611f\u5b98\u6765\u770b\uff0c\u867d\u7136\u4e24\u8005\u90fd\u6bd4\u8f83\u5bb9\u6613\u770b\u61c2\uff0cYAML \u7684\u5199\u6cd5\u66f4\u52a0\u6613\u8bfb\uff0c\u800c JSON \u7684\u5199\u6cd5\u66f4\u52a0\u5bb9\u6613\u548c Python \u89e3\u6790\u540e\u5c55\u793a\u7684\u7ed3\u679c\u76f4\u89c2\u5bf9\u5e94\u8d77\u6765\u3002\u53ef\u80fd\u5c31\u662f\u8fd9\u79cd\u5dee\u5f02\u8ba9\u51fa\u5904\u76f8\u540c\u3001\u7528\u5904\u76f8\u540c\u7684\u4e24\u8005\u5728\u5b9e\u9645\u7684\u5e94\u7528\u65b9\u5411\u4e0a\u5b58\u5728\u5dee\u5f02\uff1aJSON \u5e38\u7528\u4e8e\u6570\u636e\u4ea4\u6362\uff08\u673a\u5668\u89e3\u8bfb\uff09\uff0c\u800c YAML \u5e38\u7528\u4f5c\u914d\u7f6e\u6587\u4ef6\uff08\u4eba\u7c7b\u7f16\u8f91\uff09\u3002 ## 10.10 \u7f51\u9875\u6570\u636e \u7f51\u9875\u6570\u636e\u7684\u89e3\u6790\u5e38\u4e0e\u4e00\u4e2a\u5e7f\u6cdb\u6d41\u884c\u7684\u9886\u57df\u201c\u722c\u866b\u201d\u76f8\u5173\u8054\u3002\u672c\u4e66\u4e0d\u4f1a\u5bf9\u6d89\u53ca\u722c\u866b\u6280\u672f\u7684\u89e3\u8bfb\uff0c\u4f46\u6709\u5fc5\u8981\u5411\u8bfb\u8005\u7b80\u5355\u4ecb\u7ecd\u4e0b\u7f51\u9875\u6570\u636e\u683c\u5f0f\u548c\u7b80\u5355\u7684\u5904\u7406\u529e\u6cd5\u3002 \u6211\u4eec\u76ee\u524d\u6240\u6d4f\u89c8\u7684\u7f51\u9875\u5168\u90e8\u662f\u4e00\u79cd\u53eb\u4f5c\u201c\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\u201d\uff08HyperText Markup Language\uff09\uff0c\u7b80\u79f0 HTML \u7684\u6587\u4ef6\u3002\u8d85\u6587\u672c\u662f\u4e00\u79cd\u7ec4\u7ec7\u4fe1\u606f\u7684\u65b9\u5f0f\uff0c\u5b83\u5305\u62ec\u4e00\u7cfb\u5217\u6807\u7b7e\uff0e\u901a\u8fc7\u8fd9\u4e9b\u6807\u7b7e\u53ef\u4ee5\u5c06\u7f51\u7edc\u4e0a\u7684\u6587\u6863\u683c\u5f0f\u7edf\u4e00\uff0c\u6587\u5b57\u3001\u56fe\u8868\u4e0e\u5176\u4ed6\u4fe1\u606f\u5a92\u4f53\u76f8\u5173\u8054\u3002\u8fd9\u4e9b\u76f8\u4e92\u5173\u8054\u7684\u4fe1\u606f\u5a92\u4f53\u53ef\u80fd\u5728\u540c\u4e00\u6587\u672c\u4e2d\uff0c\u4e5f\u53ef\u80fd\u662f\u5176\u4ed6\u6587\u4ef6\uff0c\u6216\u662f\u5730\u7406\u4f4d\u7f6e\u76f8\u8ddd\u9065\u8fdc\u7684\u67d0\u53f0\u8ba1\u7b97\u673a\u4e0a\u7684\u6587\u4ef6\u3002 \u5982\u679c\u6211\u4eec\u5728\u672c\u5730\u6d4f\u89c8 HTML \u6587\u4ef6\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5e26\u6709\u5404\u79cd\u6807\u7b7e\u7684\u6587\u672c\uff0c\u5b83\u5fc5\u987b\u5728\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u548c\u88ab\u6d4f\u89c8\u5668\u89e3\u6790\u624d\u80fd\u89c2\u5bdf\u5230\u76f8\u5e94\u7684\u7f51\u9875\u6548\u679c\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684 HTML \u6587\u4ef6\u5185\u5bb9\uff0c\u5b83\u8bbe\u5b9a\u4e86\u4e00\u4e2a\u7f51\u9875\u7684\u6807\u9898\u3001\u5185\u5bb9\u6807\u9898\u548c\u6bb5\u843d\u6587\u5b57\u3002 ```html <!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"> <title>\u4e00\u4e2a\u7f51\u9875</title> </head> <body> <h1>\u7b2c\u4e00\u4e2a\u6807\u9898</h1> <p>\u7b2c\u4e00\u4e2a\u6bb5\u843d\u3002</p> </body> </html> \u8bfb\u8005\u53ef\u4ee5\u5c06\u5b83\u5b58\u50a8\u5230\u4e00\u4e2a\u4ee5 .html \u4f5c\u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u540e\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u5b83\u67e5\u770b\u7f51\u9875\u7684\u663e\u793a\u6548\u679c\u3002 \u867d\u7136\u5185\u5bb9\u6bd4\u8f83\u77ed\uff0c\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u8f7b\u6613\u5730\u4ece\u4e2d\u53d1\u73b0 HTML \u683c\u5f0f\u7684\u89c4\u5f8b\uff0c\u5b83\u4f7f\u7528\u7684\u5927\u90e8\u5206\u6807\u7b7e\u90fd\u662f\u4ee5 \\ \u7684\u5f62\u5f0f\u5f00\u59cb\uff0c\u4ee5 \\ \u7684\u5f62\u5f0f\u7ed3\u675f\uff0c\u5b83\u7684\u6807\u7b7e\u4f5c\u7528\u4e00\u822c\u7531\u5bf9\u5e94\u7684\u82f1\u6587\u6240\u5c55\u793a\uff0c\u6240\u4ee5\u4e5f\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u3002 \u8fdb\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u5982\u679c\u628a\u8fd9\u4e9b\u6807\u7b7e\u60f3\u8c61\u4e3a\u6811\u7684\u7ed3\u6784\uff0c\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u7684\u4fe1\u606f\uff1a html |__ head | |__ title: \u4e00\u4e2a\u7f51\u9875 | |__ body |__ h1: \u7b2c\u4e00\u4e2a\u6807\u9898 |__ p: \u7b2c\u4e00\u4e2a\u6bb5\u843d \u5f53\u7136\uff0c\u6211\u4eec\u4e0a\u7f51\u6d4f\u89c8\u7684\u7f51\u9875\u90fd\u6bd4\u8fd9\u8981\u590d\u6742\u5f97\u591a\u3002\u4e92\u8054\u7f51\u4e2d\uff0cHTML \u8fd9\u79cd\u6811\u7ed3\u6784\u4e2d\u5b58\u50a8\u7740\u5de8\u91cf\u7684\u4fe1\u606f\uff0c\u4f5c\u4e3a\u6570\u636e\u5206\u6790\u4eba\u5458\u6211\u4eec\u6709\u65f6\u5019\u4e0d\u53ef\u907f\u514d\u8981\u9762\u5bf9\u89e3\u6790\u5b83\u4eec\u3002 Python \u6807\u51c6\u6a21\u5757 html.parser \u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684 HTML \u89e3\u6790\u5668\uff0c\u8fd9\u4e2a\u6a21\u5757\u5b9a\u4e49\u4e86\u4e00\u4e2a HTMLParser \u7c7b\uff0c\u8be5\u7c7b\u7684\u5b9e\u4f8b\u7528\u6765\u63a5\u53d7 HTML \u6570\u636e\uff0c\u5e76\u5728\u6807\u8bb0\u5f00\u59cb\u3001\u6807\u8bb0\u7ed3\u675f\u3001\u6587\u672c\u3001\u6ce8\u91ca\u548c\u5176\u4ed6\u5143\u7d20\u6807\u8bb0\u51fa\u73b0\u7684\u65f6\u5019\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5\u3002\u8981\u5b9e\u73b0\u5177\u4f53\u7684\u884c\u4e3a\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 HTMLParser \u7684\u5b50\u7c7b\u5e76\u91cd\u8f7d\u5176\u65b9\u6cd5\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u6765\u81ea Python \u5b98\u65b9\u6587\u6863\u7684\u793a\u4f8b\uff1a In [1]: from html.parser import HTMLParser ...: ...: class MyHTMLParser(HTMLParser): ...: def handle_starttag(self, tag, attrs): ...: print(\"Encountered a start tag:\", tag) ...: ...: def handle_endtag(self, tag): ...: print(\"Encountered an end tag :\", tag) ...: ...: def handle_data(self, data): ...: print(\"Encountered some data :\", data) ...: ...: parser = MyHTMLParser() ...: parser.feed('<html><head><title>Test</title></head>' ...: '<body><h1>Parse me!</h1></body></html>') Encountered a start tag: html Encountered a start tag: head Encountered a start tag: title Encountered some data : Test Encountered an end tag : title Encountered an end tag : head Encountered a start tag: body Encountered a start tag: h1 Encountered some data : Parse me! Encountered an end tag : h1 Encountered an end tag : body Encountered an end tag : html \u63a5\u4e0b\u6765\u6211\u4eec\u8bd5\u7740\u7528\u8fd9\u4e2a\u89e3\u6790\u5668\u89e3\u6790\u4e0a\u9762\u7684 HTML \u6587\u4ef6\u3002 In [2]: with open('files/chapter10/data.html', encoding='utf=8') as f: ...: parser.feed(f.read()) ...: Encountered some data : Encountered a start tag: html Encountered some data : Encountered a start tag: head Encountered some data : Encountered a start tag: meta Encountered some data : Encountered a start tag: title Encountered some data : \u4e00\u4e2a\u7f51\u9875 Encountered an end tag : title Encountered some data : Encountered an end tag : head Encountered some data : Encountered a start tag: body Encountered some data : Encountered a start tag: h1 Encountered some data : \u7b2c\u4e00\u4e2a\u6807\u9898 Encountered an end tag : h1 Encountered some data : Encountered a start tag: p Encountered some data : \u7b2c\u4e00\u4e2a\u6bb5\u843d\u3002 Encountered an end tag : p Encountered some data : Encountered an end tag : body Encountered some data : Encountered an end tag : html Encountered some data : \u901a\u8fc7\u5bf9\u4e0a\u8ff0\u7a0b\u5e8f\u589e\u52a0\u5224\u65ad\u8bed\u53e5\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6\u81ea\u5df1\u611f\u5174\u8da3\u7684\u6570\u636e\u3002\u4e0d\u8fc7\u5bf9\u4e8e Python \u521d\u5b66\u8005\u6765\u8bf4\uff0c\u6211\u4eec\u6709\u66f4\u597d\u7684\u9009\u62e9\uff0c\u90a3\u5c31\u662f\u5927\u540d\u9f0e\u9f0e\u7684 BeautifulSoup \u5305\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u8981\u63d0\u53d6\u4e0a\u9762 h1 \u6807\u7b7e\u5b58\u50a8\u7684\u4fe1\u606f\uff1a In [3]: from bs4 import BeautifulSoup In [4]: with open('files/chapter10/data.html', encoding='utf=8') as f: ...: html_data = f.read() In [5]: parsed_html = BeautifulSoup(html_data) # \u6784\u5efa\u6570\u636e\u5bf9\u8c61 In [6]: parsed_html.body.find('h1').text # \u67e5\u627e h1 \u5e76\u83b7\u53d6\u5185\u5bb9 Out[6]: '\u7b2c\u4e00\u4e2a\u6807\u9898' \u722c\u866b\u6280\u672f\u548c BeautifulSoup \u5305\u7684\u4f7f\u7528\u65b9\u6cd5\u5b9e\u5728\u592a\u8fc7\u4e30\u5bcc\uff0cHTML \u4e5f\u662f\u4e00\u95e8\u8bed\u8a00\uff0c\u56e0\u4e3a\u4e00\u65f6\u96be\u4ee5\u8be6\u5c3d\uff0c\u672c\u4e66\u90fd\u4e0d\u5b9c\u8fdb\u884c\u8fc7\u591a\u4ecb\u7ecd\u3002\u611f\u5174\u8da3\u7684\u8bfb\u8005\u8bf7\u9605\u8bfb\u5b98\u65b9\u7f51\u7ad9 https://www.crummy.com/software/BeautifulSoup/ \u548c\u8d2d\u4e70\u4e13\u4e1a\u7684\u722c\u866b\u6280\u672f\u4e66\u7c4d\u8fdb\u884c\u5b66\u4e60\u3002 10.11 \u6570\u636e\u5e93\u6570\u636e \u00b6 \u672c\u7ae0\u7684\u6700\u540e\u4e00\u8282\u672c\u4e66\u5bf9\u8bfb\u5199\u6570\u636e\u5e93\u8fdb\u884c\u7b80\u5355\u7684\u4ecb\u7ecd\u3002\u5546\u4e1a\u5206\u6790\u7684\u5de5\u4f5c\u8005\u901a\u5e38\u9700\u8981\u638c\u63e1\u6570\u636e\u5e93\u64cd\u4f5c\uff0c\u800c\u6570\u636e\u79d1\u5b66\u5bb6\u4eec\u5219\u6bd4\u8f83\u5c11\u4f7f\u7528\u6570\u636e\u5e93\u3002 J.Martin \u7ed9\u6570\u636e\u5e93\u4e0b\u4e86\u4e00\u4e2a\u6bd4\u8f83\u5b8c\u6574\u7684\u5b9a\u4e49\uff1a \u6570\u636e\u5e93\u662f\u5b58\u50a8\u5728\u4e00\u8d77\u7684\u76f8\u5173\u6570\u636e\u7684\u96c6\u5408\uff0c\u8fd9\u4e9b\u6570\u636e\u662f\u7ed3\u6784\u5316\u7684\uff0c\u65e0\u6709\u5bb3\u7684\u6216\u4e0d\u5fc5\u8981\u7684\u5197\u4f59\uff0c\u5e76\u4e3a\u591a\u79cd\u5e94\u7528\u670d\u52a1\uff1b\u6570\u636e\u7684\u5b58\u50a8\u72ec\u7acb\u4e8e\u4f7f\u7528\u5b83\u7684\u7a0b\u5e8f\uff1b\u5bf9\u6570\u636e\u5e93\u63d2\u5165\u65b0\u6570\u636e\uff0c\u4fee\u6539\u548c\u68c0\u7d22\u539f\u6709\u6570\u636e\u5747\u80fd\u6309\u4e00\u79cd\u516c\u7528\u7684\u548c\u53ef\u63a7\u5236\u7684\u65b9\u5f0f\u8fdb\u884c\u3002\u5f53\u67d0\u4e2a\u7cfb\u7edf\u4e2d\u5b58\u5728\u7ed3\u6784\u4e0a\u5b8c\u5168\u5206\u5f00\u7684\u82e5\u5e72\u4e2a\u6570\u636e\u5e93\u65f6\uff0c\u5219\u8be5\u7cfb\u7edf\u5305\u542b\u4e00\u4e2a\u201c\u6570\u636e\u5e93\u96c6\u5408\u201d\u3002 \u4f7f\u7528\u6570\u636e\u5e93\u53ef\u4ee5\u5e26\u6765\u8bb8\u591a\u597d\u5904\uff1a\u5982\u51cf\u5c11\u4e86\u6570\u636e\u7684\u5197\u4f59\u5ea6\uff0c\u4ece\u800c\u5927\u5927\u5730\u8282\u7701\u4e86\u6570\u636e\u7684\u5b58\u50a8\u7a7a\u95f4\uff1b\u5b9e\u73b0\u6570\u636e\u8d44\u6e90\u7684\u5145\u5206\u5171\u4eab\u7b49\u7b49\u3002 \u76ee\u524d\u6570\u636e\u5e93\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1a \u5173\u7cfb\u578b\u6570\u636e\u5e93 - \u6307\u91c7\u7528\u4e86\u5173\u7cfb\u6a21\u578b\u6765\u7ec4\u7ec7\u6570\u636e\u7684\u6570\u636e\u5e93\u3002\u5173\u7cfb\u6a21\u578b\u6307\u7684\u5c31\u662f\u4e8c\u7ef4\u8868\u683c\u6a21\u578b\uff0c\u800c\u4e00\u4e2a\u5173\u7cfb\u578b\u6570\u636e\u5e93\u5c31\u662f\u7531\u4e8c\u7ef4\u8868\u53ca\u5176\u4e4b\u95f4\u7684\u8054\u7cfb\u6240\u7ec4\u6210\u7684\u4e00\u4e2a\u6570\u636e\u7ec4\u7ec7\u3002\u7b80\u5355\u5730\u8bf4\uff0c\u5b83\u7684\u6570\u636e\u683c\u5f0f\u5c31\u50cf\u542b\u6709\u591a\u5f20\u7d27\u5bc6\u8868\u683c\u7684 Excel \u6587\u4ef6\u3002\u5f53\u524d\u4e3b\u6d41\u7684\u5173\u7cfb\u6570\u636e\u5e93\u6709 Oracle\uff0cMicrosoft SQL Server\u3001MySQL\u3001PostgreSQL\u3001DB2\u3001Microsoft Access\u3001SQLite\u3001Teradata\u3001MariaDB\u3001SAP \u7b49\uff1b \u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93 - \u6307\u975e\u5173\u7cfb\u578b\u7684\uff0c\u5206\u5e03\u5f0f\u7684\u3002\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4ee5\u952e\u503c\u5bf9\u5b58\u50a8\uff0c\u4e14\u7ed3\u6784\u4e0d\u56fa\u5b9a\uff0c\u6bcf\u4e00\u4e2a\u5143\u7ec4\u53ef\u4ee5\u6709\u4e0d\u4e00\u6837\u7684\u5b57\u6bb5\uff0c\u6bcf\u4e2a\u5143\u7ec4\u53ef\u4ee5\u6839\u636e\u9700\u8981\u589e\u52a0\u4e00\u4e9b\u81ea\u5df1\u7684\u952e\u503c\u5bf9\uff0c\u4e0d\u5c40\u9650\u4e8e\u56fa\u5b9a\u7684\u7ed3\u6784\uff0c\u53ef\u4ee5\u51cf\u5c11\u4e00\u4e9b\u65f6\u95f4\u548c\u7a7a\u95f4\u7684\u5f00\u9500\u3002\u5176\u5b9e\u5c31\u662f\u672c\u4e66\u5728\u524d\u9762\u4ecb\u7ecd\u8fc7\u7684 JSON \u683c\u5f0f\u3002\u975e\u5173\u7cfb\u6570\u636e\u5e93\u7684\u4e3b\u8981\u4ee3\u8868\u6709 Redis\u3001Amazon DynamoDB\u3001Memcached\u3001Microsoft Azure Cosmos DB\u3002 \u5173\u7cfb\u578b\u6570\u636e\u5e93\u90fd\u662f\u9700\u8981\u901a\u8fc7 SQL \u8bed\u53e5\u8fdb\u884c\u64cd\u4f5c\uff0cSQL \u662f\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00\uff08Structured Query Language\uff09\u7684\u7f29\u5199\uff0c\u5b83\u662f\u4e00\u79cd\u5177\u6709\u7279\u5b9a\u7528\u9014\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u7528\u4e8e\u5b58\u53d6\u6570\u636e\u4ee5\u53ca\u67e5\u8be2\u3001\u66f4\u65b0\u548c\u7ba1\u7406\u5173\u7cfb\u6570\u636e\u5e93\u7cfb\u7edf\u3002\u56e0\u800c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u901a\u5e38\u88ab\u79f0\u4e3a SQL \u6570\u636e\u5e93\uff0c\u800c\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u5219\u79f0\u4e3a NoSQL \u6570\u636e\u5e93\u3002SQL \u7684\u5185\u5bb9\u8d85\u51fa\u672c\u4e66\u8303\u56f4\uff0c\u8bf7\u8bfb\u8005\u53c2\u8003\u7f51\u7edc\u8d44\u6599\u548c\u4e13\u4e1a\u4e66\u7c4d\u8fdb\u884c\u5b66\u4e60\u3002 \u5927\u90e8\u5206\u7684\u6570\u636e\u5e93\u90fd\u662f\u7531\u5546\u4e1a\u516c\u53f8\u53d1\u5e03\uff0c\u4f53\u79ef\u90fd\u6bd4\u8f83\u5e9e\u5927\uff0c\u5b89\u88c5\u9ebb\u70e6\uff0c\u800c\u4e14\u6709\u7684\u9700\u8981\u6536\u8d39\u3002\u76ee\u524d\u4e3b\u6d41\u8fd8\u662f\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4e0b\u9762\u9009\u62e9 SQLite \u8fdb\u884c\u5b66\u4e60\u3002SQLite \u662f\u5f00\u6e90\u8f6f\u4ef6\uff0c\u5b9e\u73b0\u4e86\u81ea\u7ed9\u81ea\u8db3\u7684\u3001\u65e0\u670d\u52a1\u5668\u7684\u3001\u96f6\u914d\u7f6e\u7684\u3001\u4e8b\u52a1\u6027\u7684 SQL \u6570\u636e\u5e93\u5f15\u64ce\uff0c\u5728\u4e16\u754c\u4e0a\u90e8\u7f72\u6700\u4e3a\u5e7f\u6cdb\u3002 \u5728 Python \u4e2d\u4f7f\u7528 SQLite \u9700\u8981 sqlite3 \u6a21\u5757\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u521b\u5efa\uff08\u8fde\u63a5\uff09\u6570\u636e\u5e93\u3001\u521b\u5efa\u6e38\u6807\u3001\u521b\u5efa\u8868\u683c\u3001\u5bf9\u8868\u683c\u64cd\u4f5c\u3001\u63d0\u4ea4\u4fee\u6539\u3001\u5173\u95ed\u6570\u636e\u5e93\u6574\u4e2a\u6d41\u7a0b\u3002\u6240\u6709\u7684\u6570\u636e\u5e93\u90fd\u9075\u5faa\u76f8\u4f3c\u7684\u64cd\u4f5c\u6d41\u7a0b\u3002 # \u5bfc\u5165\u6a21\u5757 import sqlite3 # \u8fde\u63a5\u6570\u636e\u5e93 connection = sqlite3.connect(\"data.db\") # \u521b\u5efa\u6e38\u6807 crsr = connection.cursor() # \u5bf9\u6570\u636e\u5e93\u4f7f\u7528 SQL \u8bed\u53e5\u521b\u5efa\u8868\u683c sql_command = \"\"\"CREATE TABLE emp ( staff_number INTEGER PRIMARY KEY, fname VARCHAR(20), lname VARCHAR(30), gender CHAR(1), joining DATE);\"\"\" # \u6267\u884c SQL \u8bed\u53e5 crsr.execute(sql_command) # \u4f7f\u7528 SQL \u8bed\u53e5\u5728\u8868\u683c\u4e2d\u63d2\u5165\u6570\u636e sql_command = \"\"\"INSERT INTO emp VALUES (23, \"Rishabh\", \"Bansal\", \"M\", \"2014-03-28\");\"\"\" crsr.execute(sql_command) # \u518d\u6b21\u63d2\u5165\u6570\u636e sql_command = \"\"\"INSERT INTO emp VALUES (1, \"Bill\", \"Gates\", \"M\", \"1980-10-28\");\"\"\" crsr.execute(sql_command) # \u63d0\u4ea4\u4fee\u6539\u5230\u6570\u636e\u5e93\uff08\u5982\u679c\u4e0d\u6267\u884c\u8be5\u64cd\u4f5c\uff0c\u4e0a\u9762\u7684\u4fee\u6539\u5c06\u4e0d\u4f1a\u4fdd\u5b58\uff09 connection.commit() # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 connection.close() \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u6570\u636e\u5e76\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u5f53\u6211\u4eec\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u65f6\uff0c\u5c31\u53ef\u4ee5\u8fde\u63a5\u6570\u636e\u5e93\u5e76\u83b7\u53d6\u6570\u636e\uff0c\u4e0b\u9762\u5c55\u793a\u4e86\u6570\u636e\u83b7\u53d6\u7684\u6d41\u7a0b\u3002 # \u5bfc\u5165\u6a21\u5757 import sqlite3 # \u8fde\u63a5 data \u6570\u636e\u5e93 connection = sqlite3.connect(\"data.db\") # \u521b\u5efa\u6e38\u6807 crsr = connection.cursor() # \u4ece\u8868\u683c emp \u4e2d\u67e5\u8be2\u6570\u636e crsr.execute(\"SELECT * FROM emp\") # \u5c06\u6570\u636e\u5b58\u50a8\u5230 ans \u53d8\u91cf ans= crsr.fetchall() # \u5faa\u73af\u6253\u5370\u6570\u636e for i in ans: print(i) # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 connection.close() \u4e0d\u96be\u770b\u51fa\uff0c\u64cd\u4f5c\u6570\u636e\u5e93\u6709\u4e00\u4e2a\u901a\u7528\u7684\u6a21\u5f0f\uff1a \u5bfc\u5165\u9700\u8981\u7684\u6a21\u5757 \u8fde\u63a5\u6570\u636e\u5e93 \u521b\u5efa\u6e38\u6807\u5bf9\u8c61 \u6267\u884c\u6570\u636e\u64cd\u4f5c\uff0c\u4e3b\u8981\u662f\u6267\u884c SQL \u8bed\u53e5 \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 10.12 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 \u672c\u7ae0\u4ece\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684\u6570\u636e\u6587\u4ef6\u683c\u5f0f CSV \u51fa\u53d1\uff0c\u9010\u6b65\u4ecb\u7ecd\u4e86\u5e38\u89c1\u6570\u636e\u683c\u5f0f\u7684\u5bfc\u5165\u65b9\u6cd5\u3002CSV \u548c Excel \u6570\u636e\u7684\u5bfc\u5165\u64cd\u4f5c\u8bfb\u8005\u9700\u8981\u638c\u63e1\u7684\uff0c\u800c\u5176\u4ed6\u4e00\u4e9b\u6570\u636e\u683c\u5f0f\u5219\u9700\u8981\u8bfb\u8005\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u9700\u6c42\u8fdb\u884c\u6df1\u5165\u5b66\u4e60\uff0c\u672c\u4e66\u6240\u505a\u7684\u662f\u521d\u6b65\u7684\u4ecb\u7ecd\u548c\u5f15\u5bfc\u3002\u7f51\u7edc\u6570\u636e\u548c\u6570\u636e\u5e93\u6570\u636e\u7684\u5904\u7406\u5f88\u590d\u6742\uff0c\u672c\u4e66\u7684\u4e3e\u4f8b\u7684\u8f83\u4e3a\u7b80\u5355\uff0c\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u8bfb\u8005\u5bf9\u8fd9\u4e9b\u6570\u636e\u6709\u6240\u4e86\u89e3\u3002\u6570\u636e\u5206\u6790\u6d89\u53ca\u5404\u884c\u5404\u4e1a\uff0c\u4e0d\u540c\u7684\u8bfb\u8005\u8fdb\u884c\u6570\u636e\u5904\u7406\u9762\u5bf9\u7684\u6570\u636e\u683c\u5f0f\uff0c\u6570\u636e\u7ed3\u6784\u7279\u70b9\u90fd\u53ef\u80fd\u6709\u6240\u4e0d\u540c\uff0c\u5e0c\u671b\u8bfb\u8005\u901a\u8fc7\u672c\u7ae0\u7684\u5b66\u4e60\u80fd\u591f\u5b66\u4e60\u5230\u4e0e\u81ea\u5df1\u9886\u57df\u76f8\u5173\u6570\u636e\u7684\u5bfc\u5165\u65b9\u5f0f\uff0c\u5e76\u5bf9 Python \u7684\u5904\u7406\u80fd\u529b\u6709\u66f4\u6e05\u6670\u7684\u8ba4\u8bc6\u3002","title":"\u7b2c 10 \u7ae0 \u6570\u636e\u5bfc\u5165"},{"location":"10-data-import/#10","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : CSV Excel JSON YAML SQLite \u201c\u4e09\u519b\u672a\u52a8\uff0c\u7cae\u8349\u5148\u884c\u201d\u3002\u6570\u636e\u662f\u6570\u636e\u5206\u6790\u7684\u8d77\u70b9\uff0c\u4e5f\u662f\u6570\u636e\u5206\u6790\u7684\u6838\u5fc3\u4e4b\u4e00\u3002\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u662f\u591a\u79cd\u591a\u6837\u7684\uff0c\u6709\u6765\u81ea\u8ba1\u7b97\u673a\u672c\u5730\u5b58\u50a8\u7684 Excel \u6587\u4ef6\u3001CSV \u6587\u4ef6\u4e2d\u7684\uff0c\u4e5f\u6709\u6765\u81ea\u7f51\u9875\u6570\u636e\uff0c\u4e13\u7528\u6570\u636e\u5e93\u4e2d\u7684\uff0c\u8fd8\u6709\u9700\u8981\u8c03\u7528\u7a0b\u5e8f API \u83b7\u53d6\u7684\u3002\u672c\u7ae0\u5c06\u4ece\u5b9e\u9645\u6570\u636e\u5904\u7406\u5e38\u89c1\u7684\u7c7b\u578b\u51fa\u53d1\uff0c\u8bb2\u89e3\u5982\u4f55\u5229\u7528\u5de5\u5177\u5bfc\u5165\u5b83\u4eec\uff0c\u4e3a\u540e\u7eed\u7684\u6570\u636e\u5206\u6790\u548c\u53ef\u89c6\u5316\u63d0\u4f9b\u6e90\u6cc9\u3002","title":"\u7b2c 10 \u7ae0 \u6570\u636e\u5bfc\u5165"},{"location":"10-data-import/#101-csv","text":"\u5728\u6570\u636e\u5206\u6790\u9886\u57df\uff0c\u6700\u5e38\u89c1\u548c\u6700\u4e3a\u63a8\u8350\u7684\u6587\u672c\u6587\u4ef6\u5f53\u5c5e\u4e8e CSV\uff08comma separated values, \u9017\u53f7\u5206\u9694\u503c\uff09\u6587\u4ef6\u3002CSV \u6587\u4ef6\u683c\u5f0f\u7b80\u5355\uff0c\u6613\u4e8e\u5bfc\u5165\u3001\u5b58\u50a8\u4e43\u81f3\u76f4\u63a5\u9605\u8bfb\u3002 \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a CSV \u6587\u4ef6\u5185\u5bb9\u7b80\u5355\u793a\u4f8b\uff0c\u56e0\u4e3a\u683c\u5f0f\u4e00\u81f4\uff0c\u6240\u4ee5\u540e\u7eed\u4ecb\u7ecd\u7684\u64cd\u4f5c\u53ef\u4ee5\u62d3\u5c55\u5230\u4efb\u610f\u884c\u7684\u6570\u636e\u4e0a\u53bb\u3002 \u59d3\u540d,\u5e74\u9f84,\u73ed\u7ea7 \u5468\u67d0\u67d0,9,3\u73ed \u738b\u67d0\u67d0,10,6\u73ed \u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u6e05\u695a\u5730\u7406\u89e3\u4e0a\u9762\u7684\u5185\u5bb9\uff0c\u5b83\u53ef\u80fd\u6765\u81ea\u67d0\u4e2a\u5b66\u6821\u5b66\u751f\u7684\u767b\u8bb0\u8868\u3002\u8fd9\u91cc\u6709\u4e00\u70b9\u503c\u5f97\u63d0\u9192\u8bfb\u8005\u6ce8\u610f\uff0cCSV \u6587\u4ef6\u91c7\u7528\u7684\u5206\u9694\u7b26\u662f\u82f1\u6587\u9017\u53f7\uff0c\u800c\u975e\u4e2d\u6587\u5e38\u7528\u7684\u9017\u53f7\u3002\u53e6\u5916\uff0c\u5728\u6b27\u6d32\u5730\u533a\u4e00\u4e9b\u56fd\u5bb6\u4e2d\uff0c\u5b83\u4eec\u662f\u4f7f\u7528\u82f1\u6587\u5206\u53f7 ; \u6765\u4f5c\u4e3a\u9017\u53f7\u5206\u9694\u7b26\u7684\uff0c\u8bfb\u8005\u5982\u679c\u89c1\u5230\u4e5f\u4e0d\u7528\u5947\u602a\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u5185\u5bb9\u4fdd\u5b58\uff0c\u4e00\u822c\u89c4\u5b9a\u4ee5 csv \u4f5c\u4e3a\u6587\u4ef6\u540e\u7f00\u540d\u3002\u5f53\u7136\uff0c\u6587\u4ef6\u5185\u5bb9\u548c\u6587\u4ef6\u540e\u7f00\u540d\u662f\u6ca1\u6709\u5173\u7cfb\u7684\uff0c\u91c7\u7528\u901a\u7528\u547d\u540d\u662f\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\u3002\u5f88\u591a txt \u540e\u7f00\u540d\u6587\u4ef6\u4e5f\u662f\u91c7\u7528\u7684 csv \u683c\u5f0f\u3002 \u73b0\u5728\u6211\u4eec\u5c06\u5176\u4fdd\u5b58\u4e3a\u6587\u4ef6 records.csv\u3002\u4fdd\u5b58\u7684\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u8bb0\u4e8b\u672c\u3001\u6587\u672c\u7f16\u8f91\u5668\u7b49\uff0cWindows \u7528\u6237\u63a8\u8350\u4e0b\u8f7d\u548c\u4f7f\u7528 Notepad++ \u8f6f\u4ef6\u8fdb\u884c\u6587\u672c\u6587\u4ef6\u7684\u7f16\u8f91\uff0c\u4e0d\u63a8\u8350\u8bfb\u8005\u4f7f\u7528 Excel\u3002 \u73b0\u5728\u5047\u8bbe\u6211\u4eec\u62ff\u5230\u4e86\u8fd9\u6837\u4e00\u4e2a\u53eb\u505a records.csv \u7684\u6587\u4ef6\uff0c\u6211\u4eec\u60f3\u8981\u5229\u7528 Python \u6253\u5f00\u5e76\u67e5\u770b\u5b83\uff0c\u8be5\u5982\u4f55\u5b9e\u73b0\u5462\uff1f \u8bfb\u8005\u4e0d\u59a8\u5148\u8fdb\u884c\u601d\u8003\u548c\u67e5\u9605\u7f51\u7edc\u8d44\u6599\u518d\u8fdb\u4e00\u6b65\u9605\u8bfb\u3002","title":"10.1 CSV \u6587\u4ef6"},{"location":"10-data-import/#1011","text":"\u5728\u7b2c 4 \u7ae0\u5411\u8bfb\u8005\u4ecb\u7ecd\u8fc7 open() \u51fd\u6570\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u6587\u672c\u6bcf\u4e00\u884c\u5185\u5bb9\u90fd\u662f\u4ee5\u82f1\u6587\u9017\u53f7\u5206\u9694\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u81ea\u7136\u5730\u60f3\u5230\u4f7f\u7528 open() \u51fd\u6570\u6253\u5f00\u6587\u4ef6\u5e76\u4f7f\u7528 split() \u65b9\u6cd5\u8fdb\u884c\u5207\u5206\u3002 In [1]: records = [] In [2]: with open(\"records.csv\", \"r\", encoding='utf-8') as f: ...: for line in f.readlines(): ...: records.append(line.strip().split(',')) ...: In [3]: records Out[3]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed ']] \u4e0a\u8ff0\u4ee3\u7801\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u5217\u8868\uff0c\u4f5c\u4e3a\u5b58\u50a8\u6587\u672c\u5185\u5bb9\u7684\u5bb9\u5668\u3002\u4e4b\u524d\u6587\u4ef6\u4fdd\u5b58\u7684\u65f6\u5019\u4f7f\u7528\u7684\u662f utf-8 \u7f16\u7801\uff0c\u6240\u4ee5\u6253\u5f00\u4e5f\u4f7f\u7528\u76f8\u540c\u7684\u7f16\u7801\u3002\u63a5\u7740\u4f7f\u7528 readlines() \u65b9\u6cd5\u8bfb\u5165\u6240\u6709\u7684\u884c\u5e76\u8fdb\u884c for \u5faa\u73af\u8fed\u4ee3\u3002\u5bf9\u4e8e\u8bfb\u5165\u7684\u6bcf\u4e00\u884c\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528 strip() \u65b9\u6cd5\u53bb\u6389\u6bcf\u4e00\u884c\u672b\u5c3e\u7684\u6362\u884c\u7b26\uff0c\u7136\u540e\u4f7f\u7528 split() \u65b9\u6cd5\u5c06\u5185\u5bb9\u6309\u7167\u82f1\u6587\u9017\u53f7\u8fdb\u884c\u5206\u5272\uff0c\u5f97\u5230\u5b50\u5217\u8868\u5e76\u5c06\u5176\u6dfb\u52a0\u5230 records \u5217\u8868\u3002\u4e0a\u8ff0\u7684\u64cd\u4f5c\u90fd\u662f\u57fa\u4e8e\u6587\u672c\u662f\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u770b\u5230\u5e74\u9f84\u90a3\u4e00\u680f\u5b58\u50a8\u7684\u65b9\u5f0f\u5c31\u662f\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u8981\u505a\u540e\u7eed\u5206\u6790\uff0c\u8bfb\u8005\u9700\u8981\u5728\u4e4b\u524d\u5c06\u5176\u8f6c\u6362\u4e3a\u6574\u578b\u3002 \u8bfb\u8005\u9700\u8981\u6ce8\u610f\u8981\u6253\u5f00\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u8fd9\u91cc\u4f7f\u7528 records.csv \u9700\u8981\u4fdd\u8bc1\u8be5\u6587\u4ef6\u5fc5\u987b\u5728 Python \u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e0b\u624d\u53ef\u4ee5\u8fd0\u884c\u3002\u5728 IPython Shell \u6216 Jupyter Notebook \u4e2d\uff0c\u4f7f\u7528\u547d\u4ee4 !pwd \u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u800c !ls \u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u3002 In [2]: !ls records.csv records.tsv records.txt In [3]: !pwd /c/Shixiang/pybook/files/chapter10","title":"10.1.1 \u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5"},{"location":"10-data-import/#1012-csv","text":"\u56e0\u4e3a csv \u6587\u4ef6\u7684\u9891\u7e41\u4f7f\u7528\uff0cPython \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u51c6\u6a21\u5757 csv \u4ee5\u8fdb\u884c CSV \u6587\u4ef6\u7684\u8bfb\u5165\u3001\u5199\u5165\u4ee5\u53ca\u683c\u5f0f\u5316\u7b49\u64cd\u4f5c\u3002 \u4e0a\u4e00\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7c7b\u4f3c\u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u6ce8\u610f\u8fd9\u91cc\u5e76\u6ca1\u6709\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u5217\u8868\u4e2d\uff0c\u800c\u662f\u76f4\u63a5\u6253\u5370\u5230\u5c4f\u5e55\u4e0a\u3002 In [4]: import csv In [5]: with open(\"records.csv\", \"r\", encoding='utf-8') as f: ...: csv_reader = csv.reader(f) ...: for row in csv_reader: ...: print(','.join(row)) ...: \u59d3\u540d,\u5e74\u9f84,\u73ed\u7ea7 \u5468\u67d0\u67d0,9,3\u73ed \u738b\u67d0\u67d0,10,6\u73ed \u53ef\u4ee5\u89c2\u5bdf\u5230\uff0ccsv \u6a21\u5757\u7684\u7b80\u4fbf\u4e4b\u5904\u6211\u4eec\u4e0d\u9700\u8981\u518d\u5bf9\u6587\u4ef6\u5185\u5bb9\u8c03\u7528\u65b9\u6cd5\u8fdb\u884c\u53bb\u6389\u6362\u53f7\u7b26\uff0c\u6307\u5b9a\u5206\u5272\u7b26\u64cd\u4f5c\u4e86\uff0c\u4f7f\u7528 reader() \u51fd\u6570\u8bfb\u5165\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u76f4\u63a5\u53ef\u4ee5\u8fed\u4ee3\u7684\u5bf9\u8c61\u3002","title":"10.1.2 \u4f7f\u7528 csv \u6807\u51c6\u6a21\u5757"},{"location":"10-data-import/#1013-pandas","text":"\u524d\u9762\u63d0\u5230\u7684\u4e24\u79cd\u65b9\u6cd5\u90fd\u9700\u8981\u663e\u5f0f\u5730\u8c03\u7528 open() \u51fd\u6570\u6253\u5f00\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528\u5de5\u5177\u8fdb\u884c\u8bfb\u5165\u5904\u7406\u3002\u76f8\u6bd4\u800c\u8a00\uff0c\u4f7f\u7528\u6d41\u884c\u5e93 Pandas \u5bf9 CSV \u6587\u4ef6\u64cd\u4f5c\u5c31\u66f4\u7b80\u5355\u4e86\u3002 In [6]: import pandas as pd In [7]: records = pd.read_csv('records.csv') In [8]: records Out[8]: \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 0 \u5468\u67d0\u67d0 9 3\u73ed 1 \u738b\u67d0\u67d0 10 6\u73ed In [9]: records.columns Out[9]: Index(['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], dtype='object') In [10]: records.index Out[10]: RangeIndex(start=0, stop=2, step=1) Pandas \u5e93\u8bfb\u5165\u6570\u636e\u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u4e0d\u4ec5\u4ec5\u7b80\u5316\u4e86\u8bfb\u5165\u4ee3\u7801\uff0c\u800c\u4e14\u5bf9\u8bfb\u5165\u7684\u6570\u636e\u8fdb\u884c\u4e86\u826f\u597d\u7684\u8f6c\u6362\uff0c\u81ea\u52a8\u5c06\u7b2c\u4e00\u884c\u8bc6\u522b\u4e3a\u4e86\u5217\u540d\uff0c\u5e76\u8bbe\u5b9a\u4e86\u884c\u7d22\u5f15\u3002Pandas \u8bfb\u5165\u7684\u7ed3\u679c\u662f\u4e00\u4e2a DataFrame \u5bf9\u8c61\uff0c\u9488\u5bf9\u5b83\u7684\u4e00\u4e9b\u57fa\u7840\u64cd\u4f5c\u65b9\u6cd5\u672c\u4e66\u5df2\u7ecf\u5728\u7b2c 8 \u7ae0\u8fdb\u884c\u4e86\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002","title":"10.1.3 \u4f7f\u7528 Pandas \u5e93"},{"location":"10-data-import/#102-csv","text":"\u901a\u8fc7\u4e0a\u4e00\u8282\u6211\u4eec\u77e5\u9053\u4e86 CSV \u6587\u4ef6\u662f\u901a\u8fc7\u82f1\u6587\u9017\u53f7\u8fdb\u884c\u6587\u5b57\u57df\u7684\u5206\u9694\uff0c\u6240\u4ee5\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u5904\u7406 CSV \u7684\u53d8\u4f53\u5e76\u4e0d\u5947\u602a\uff0c\u5176\u4e2d\u6700\u5e38\u89c1\u7684 CSV \u53d8\u4f53\u662f TSV\uff0c\u5373\u5236\u8868\u7b26\u5206\u9694\u6587\u4ef6\u3002\u5728\u6570\u636e\u5904\u7406\u65f6\uff0c\u8bfb\u8005\u78b0\u5230\u7684\u5927\u90e8\u5206 txt \u6587\u672c\u6587\u4ef6\u5176\u5b9e\u5c31\u662f TSV \u6587\u4ef6\u3002\u5236\u8868\u7b26\u53ef\u4ee5\u901a\u8fc7\u6211\u4eec\u952e\u76d8\u4e0a\u7684 Tab \u952e\u952e\u5165\uff0c\u4f46\u5728\u7a0b\u5e8f\u4e2d\u6211\u4eec\u4f7f\u7528 \\t \u6307\u5b9a\u5b83\u3002\u53e6\u5916\u6709\u7684\u6587\u672c\u4f1a\u91c7\u7528\u7a7a\u683c\u5206\u9694\u6570\u636e\uff0c\u5176\u4ed6\u7684\u60c5\u51b5\u76f8\u5bf9\u800c\u8a00\u5219\u66f4\u5c11\u89c1\u4e86\u3002 \u65e2\u7136\u6709\u8fd9\u4e48\u591a CSV \u7684\u53d8\u4f53\uff0c\u6211\u4eec\u5982\u4f55\u5bfc\u5165\u5b83\u4eec\u5462\uff0c\u603b\u4e0d\u53ef\u80fd\u4e3a\u6bcf\u4e00\u79cd\u53d8\u4f53\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5427\uff1f\u6b63\u786e\u7684\u505a\u6cd5\u662f\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u3002 \u4e0b\u9762\u662f\u5177\u4f53\u7684\u601d\u8def\u548c\u505a\u6cd5\uff1a \u5982\u679c\u662f\u81ea\u5df1\u7f16\u5199\u51fd\u6570\uff0c\u5e94\u5f53\u521b\u5efa\u5408\u7406\u7684\u9ed8\u8ba4\u53c2\u6570\uff0c\u4ee5\u5904\u7406\u5e38\u89c1\u7684\u4e00\u4e9b\u60c5\u51b5\u3002 \u5982\u679c\u662f\u4f7f\u7528\u4ed6\u4eba\u7f16\u5199\u7684\u6a21\u5757\uff0c\u9996\u5148\u5e94\u5f53\u67e5\u9605\u51fd\u6570\u6587\u6863\uff0c\u800c\u4e0d\u662f\u9a6c\u4e0a\u6c42\u52a9\u4ed6\u4eba\u6216\u8005\u5782\u5934\u4e27\u6c14\u3002\u4e00\u822c\u800c\u8a00\uff0c\u6a21\u5757\u7684\u5f00\u53d1\u8005\u90fd\u4f1a\u4e3a\u51fd\u6570\u7684\u4e00\u4e9b\u5e38\u89c1\u60c5\u51b5\u521b\u5efa\u76f8\u5e94\u7684\u53c2\u6570\uff0c\u9605\u8bfb\u51fd\u6570\u6587\u6863\u662f\u975e\u5e38\u597d\u7684\u4e60\u60ef\u3002\u5982\u679c\u51fd\u6570\u7684\u786e\u6ca1\u6709\u53c2\u6570\uff0c\u800c\u4e14\u81ea\u5df1\u53c8\u6ca1\u6709\u5f00\u53d1\u7684\u80fd\u529b\uff0c\u518d\u53bb\u7f51\u7edc\u4e0a\u641c\u7d22\u8d44\u6599\u6216\u8005\u4e13\u4e1a\u8bba\u575b\u63d0\u95ee\u3002 \u5047\u8bbe\u6211\u4eec\u9700\u8981\u5904\u7406 3 \u79cd CSV \u683c\u5f0f\u6587\u4ef6\uff1a\u82f1\u6587\u9017\u53f7\u5206\u9694\u3001\u5236\u8868\u7b26\u5206\u9694\u4ee5\u53ca\u7a7a\u683c\u5206\u9694\uff0c\u5b83\u4eec\u7684\u6587\u4ef6\u540d\u5206\u522b\u4e3a records.csv\u3001records.tsv \u4ee5\u53ca records.txt\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u770b\u770b\u5982\u4f55\u901a\u8fc7\u81ea\u5df1\u521b\u5efa\u51fd\u6570\u5bfc\u5165\u4ee5\u53ca\u4f7f\u7528 Pandas \u5e93\u8fdb\u884c\u5bfc\u5165\u3002 records.csv \u5185\u5bb9\uff1a \u59d3\u540d,\u5e74\u9f84,\u73ed\u7ea7 \u5468\u67d0\u67d0,9,3\u73ed \u738b\u67d0\u67d0,10,6\u73ed records.tsv \u5185\u5bb9\uff1a \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 \u5468\u67d0\u67d0 9 3\u73ed \u738b\u67d0\u67d0 10 6\u73ed records.txt \u5185\u5bb9\uff1a \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 \u5468\u67d0\u67d0 9 3\u73ed \u738b\u67d0\u67d0 10 6\u73ed","title":"10.2 CSV \u53d8\u4f53"},{"location":"10-data-import/#1021-csv","text":"\u4e3a\u4e86\u5904\u7406\u4e0d\u540c\u7684\u5206\u9694\u7b26\uff0c\u6211\u4eec\u4e3a\u8981\u521b\u5efa\u7684\u51fd\u6570\u6307\u5b9a\u4e00\u4e2a sep \u53c2\u6570\uff08seperator \u7684\u7b80\u5199\uff09\u3002\u53e6\u5916\uff0c\u524d\u9762\u6211\u4eec\u53d1\u73b0\u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5\u5904\u7406\u548c csv \u6a21\u5757\u5904\u7406\u7684\u7ed3\u6784\u662f\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u4e0d\u59a8\u4e5f\u8bbe\u5b9a\u4e00\u4e2a\u53c2\u6570 method \u7528\u6765\u63a7\u5236\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\u89e3\u6790\u6587\u672c\u3002 def read_csv(file_path, sep=',', method='default'): \"\"\"\u5bfc\u5165 CSV \u53ca\u5176\u53d8\u4f53\u6587\u672c\"\"\" res = [] with open(file_path, \"r\", encoding='utf-8') as f: # \u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u6307\u5b9a\u4e86 encoding \u4e3a utf-8 # \u5b9e\u9645\u4e0a\u4e3a\u4e86\u5904\u7406\u66f4\u5e7f\u6cdb\u7684\u7f16\u7801\u7c7b\u578b\uff0c # \u8bfb\u8005\u53ef\u4ee5\u5c06\u5176\u6539\u5199\u4e3a\u51fd\u6570\u7684\u4e00\u4e2a\u53c2\u6570 # \u5176\u4ed6\u9009\u9879\u4e5f\u53ef\u4ee5\u8fd9\u6837\u505a if method == \"default\": for line in f.readlines(): res.append(line.strip().split(sep)) elif method == \"csv\": print(\"Using csv module...\") import csv csv_reader = csv.reader(f, delimiter=sep) for row in csv_reader: res.append(row) else: raise ValueError('\u4e0d\u652f\u6301\u7684\u5bfc\u5165\u65b9\u6cd5\uff01') return res \u4e0a\u9762\u7684 read_csv() \u51fd\u6570\u4e2d\u6211\u4eec\u901a\u8fc7\u4e0d\u540c\u7684 method \u8c03\u7528\u4e0d\u540c\u7684\u5bfc\u5165\u65b9\u6cd5\uff0c\u901a\u8fc7\u67e5\u9605 csv \u6a21\u5757\u7684\u6587\u6863\uff08\u8bf7\u8bfb\u8005\u81ea\u884c\u67e5\u9605\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230 reader() \u51fd\u6570\u7684 delimiter \u53c2\u6570\u53ef\u4ee5\u6307\u5b9a\u5206\u9694\u7b26\u3002\u4e0b\u9762\u8ba9\u6211\u4eec\u6765\u8bd5\u8bd5\u6211\u4eec\u51fd\u6570\u7684\u5a01\u529b\u5427\uff01 \u6211\u4eec\u5148\u770b\u770b\u9ed8\u8ba4\u65b9\u6cd5\u7684\u7ed3\u679c\uff0c\u8bfb\u8005\u9700\u8981\u5148\u8fd0\u884c\u4e0a\u9762\u521b\u5efa\u7684\u51fd\u6570\u518d\u8fd0\u884c\u4e0b\u9762\u7684\u6d4b\u8bd5\u4ee3\u7801\u3002 In [11]: read_csv('records.csv') Out[11]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] In [12]: read_csv('records.tsv', sep='\\t') Out[12]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] In [13]: read_csv('records.txt', sep=' ') Out[13]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] \u4e09\u79cd\u60c5\u51b5\u8bfb\u5165\u7684\u6570\u636e\u5b8c\u5168\u4e00\u81f4\uff01\u6211\u4eec\u518d\u770b\u770b\u4f7f\u7528 csv \u6a21\u5757\u5bfc\u5165\u7684\u7ed3\u679c\u5982\u4f55\u3002 In [14]: read_csv('records.csv', method='csv') Using csv module... Out[14]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] In [15]: read_csv('records.tsv', sep='\\t', method='csv') Using csv module... Out[15]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] In [16]: read_csv('records.txt', sep=' ', method='csv') Using csv module... Out[16]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] \u7ed3\u679c\u4e5f\u662f\u5b8c\u5168\u4e00\u81f4\u3002\u53ef\u89c1\uff0c\u4e0a\u9762\u7684\u51fd\u6570\u867d\u7136\u7b80\u5355\uff0c\u4f46\u5b83\u5b8c\u5168\u5b9e\u73b0\u4e86\u6211\u4eec\u6240\u9700\u8981\u7684\u529f\u80fd\u3002\u5b9e\u9645\u4e0a\uff0c\u66f4\u590d\u6742\u7684\u51fd\u6570\u4e5f\u662f\u8fd9\u6837\u4e00\u6b65\u4e00\u6b65\u6dfb\u52a0\u9009\u9879\u5b8c\u6210\u7684\u3002","title":"10.2.1 \u521b\u5efa CSV \u5bfc\u5165\u51fd\u6570"},{"location":"10-data-import/#1022-pandas","text":"\u4f7f\u7528 Pandas \u5c31\u4e0d\u9700\u8981\u81ea\u5df1\u521b\u5efa\u51fd\u6570\u4e86\uff0c\u56e0\u4e3a Pandas \u5e93\u63d0\u4f9b\u7684 read_csv() \u51fd\u6570\u672c\u8eab\u652f\u6301 sep \u53c2\u6570\uff0c\u6240\u4ee5\u901a\u8fc7\u6307\u5b9a\u8be5\u9009\u9879\u6211\u4eec\u5c31\u80fd\u591f\u8bfb\u5165\u4e0d\u540c\u7684 CSV \u53ca\u53d8\u4f53\u683c\u5f0f\u6570\u636e\u3002 In [17]: import pandas as pd In [18]: pd.read_csv('records.csv') Out[18]: \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 0 \u5468\u67d0\u67d0 9 3\u73ed 1 \u738b\u67d0\u67d0 10 6\u73ed In [19]: pd.read_csv('records.tsv', sep='\\t') Out[19]: \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 0 \u5468\u67d0\u67d0 9 3\u73ed 1 \u738b\u67d0\u67d0 10 6\u73ed In [20]: pd.read_csv('records.txt', sep=' ') Out[20]: \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 0 \u5468\u67d0\u67d0 9 3\u73ed 1 \u738b\u67d0\u67d0 10 6\u73ed \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u8c03\u7528\u6765\u770b\uff0c\u6211\u4eec\u521b\u5efa\u7684 read_csv() \u548c Pandas \u5e93\u63d0\u4f9b\u7684\u51fd\u6570\u662f\u6ca1\u6709\u5dee\u522b\u7684\u3002\u5229\u7528\u524d\u9762\u7ae0\u8282\u5b66\u4e60\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4fee\u6539\u51fd\u6570\uff0c\u8ba9\u7ed3\u679c\u90fd\u4fdd\u6301\u4e00\u81f4\u3002 def read_csv2(file_path, sep=',', method='default'): \"\"\"\u5bfc\u5165 CSV \u53ca\u5176\u53d8\u4f53\u6587\u672c\"\"\" res = [] with open(file_path, \"r\", encoding='utf-8') as f: if method == \"default\": for line in f.readlines(): res.append(line.strip().split(sep)) elif method == \"csv\": print(\"Using csv module...\") import csv csv_reader = csv.reader(f, delimiter=sep) for row in csv_reader: res.append(row) else: raise ValueError('\u4e0d\u652f\u6301\u7684\u5bfc\u5165\u65b9\u6cd5\uff01') import pandas as pd # \u5c06\u7ed3\u679c\u8f6c\u6362\u4e3a DataFrame res = pd.DataFrame(res[1:], columns=res[0]) return res \u8fd0\u884c\u4e0a\u8ff0\u51fd\u6570\u5e76\u8fdb\u884c\u6d4b\u8bd5\u3002 In [21]: read_csv2('records.tsv', sep='\\t', method='csv') Using csv module... Out[21]: \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 0 \u5468\u67d0\u67d0 9 3\u73ed 1 \u738b\u67d0\u67d0 10 6\u73ed \u8bfb\u8005\u4e0d\u59a8\u8bd5\u8bd5\u4fee\u6539\u8981\u8bfb\u5165\u7684\u6587\u4ef6\u548c\u51fd\u6570\u9009\u9879\u770b\u770b\u51fd\u6570\u662f\u5426\u90fd\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002","title":"10.2.2 \u4f7f\u7528 Pandas \u5bfc\u5165"},{"location":"10-data-import/#1023-csv","text":"\u5c06\u5904\u7406\u540e\u5f97\u5230\u7684\u7ed3\u6784\u5316\u6570\u636e\u5bfc\u51fa\u4e3a CSV \u6587\u4ef6\u662f\u4fdd\u5b58\u6570\u636e\u7684\u6700\u4f73\u65b9\u5f0f\uff0c\u65b9\u4fbf\u5206\u4eab\u548c\u518d\u6b21\u5206\u6790\u3002\u5bfc\u51fa\u6216\u8005\u7c98\u8d34\u4e3a Excel \u8868\u683c\u662f\u975e\u5e38\u4e0d\u63a8\u8350\u7684\u65b9\u5f0f\uff0cExcel \u4f1a\u81ea\u52a8\u5bf9\u8f93\u5165\u6587\u672c\u8fdb\u884c\u5206\u6790\u548c\u8f6c\u6362\uff0c\u867d\u7136\u5927\u90e8\u5206\u65f6\u5019\u8fd9\u79cd\u65b9\u5f0f\u7b80\u5316\u4e86\u6211\u4eec\u7684\u64cd\u4f5c\uff0c\u4f46\u6709\u65f6\u5019\u5374\u4f1a\u5f97\u5230\u610f\u6599\u4e4b\u5916\u7684\u7ed3\u679c\uff0c\u7279\u522b\u662f\u5728\u8981\u6c42\u6570\u636e\u4e25\u8c28\u7684\u79d1\u5b66\u9886\u57df\u3002\u4f8b\u5982\uff0c\u5728 Excel \u8868\u683c\u4e2d\u952e\u5165 MARCH1\uff0c\u5b83\u662f\u4e00\u4e2a\u57fa\u56e0\u7684\u540d\u5b57\uff0c\u7d27\u63a5\u7740\u952e\u5165\u56de\u8f66\u540e\u5b83\u4f1a\u88ab Excel \u81ea\u52a8\u8f6c\u6362\u4e3a\u65e5\u671f 3 \u6708 1 \u53f7\uff01\u6709\u4e00\u7bc7\u79d1\u5b66\u7814\u7a76\u62a5\u9053\u79f0\uff0c\u751f\u7269\u533b\u5b66\u6587\u732e\u4e2d Excel \u4fdd\u5b58\u7684\u6570\u636e\u4e2d\uff0c\u6709 20% \u5de6\u53f3\u7684\u8868\u683c\u90fd\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u8fd9\u6781\u5927\u4e86\u5f71\u54cd\u4e86\u79d1\u5b66\u7814\u7a76\u7684\u53ef\u91cd\u590d\u6027\uff0c\u800c\u4e14\u8fd9\u79cd\u9519\u8bef\u5f88\u96be\u53d1\u73b0\uff0c\u56e0\u800c\u4f1a\u5f71\u54cd\u6240\u6709\u4f7f\u7528\u5305\u542b\u9519\u8bef\u6570\u636e\u7684\u7814\u7a76\u3002 \u5c06\u6570\u636e\u4fdd\u5b58\u4e3a CSV \u6587\u4ef6\u5176\u5b9e\u662f\u5bfc\u5165 CSV \u6587\u4ef6\u7684\u9006\u64cd\u4f5c\u3002\u56e0\u6b64\u6211\u4eec\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u63d0\u51fa\u76f8\u5e94\u7684\u4e24\u79cd\u529e\u6cd5\uff1a\u4e00\u662f\u7ed3\u5408\u4f7f\u7528 open() \u548c print() \u51fd\u6570\u5c06\u6570\u636e\u6309\u5206\u9694\u7b26\u8f93\u51fa\u5230\u6587\u4ef6\uff1b\u800c\u662f\u76f4\u63a5\u8c03\u7528 Pandas \u63d0\u4f9b\u7684 to_csv() \u65b9\u6cd5\u3002 \u5148\u8bfb\u5165\u6d4b\u8bd5\u6570\u636e\uff1a In [3]: rds1 = read_csv('records.csv') In [4]: rds2 = pd.read_csv('records.csv') In [5]: rds1 Out[5]: [['\u59d3\u540d', '\u5e74\u9f84', '\u73ed\u7ea7'], ['\u5468\u67d0\u67d0', '9', '3\u73ed'], ['\u738b\u67d0\u67d0', '10', '6\u73ed']] In [6]: rds2 Out[6]: \u59d3\u540d \u5e74\u9f84 \u73ed\u7ea7 0 \u5468\u67d0\u67d0 9 3\u73ed 1 \u738b\u67d0\u67d0 10 6\u73ed \u5982\u679c\u53ea\u662f\u7b80\u5355\u5730\u5c06\u6570\u636e\u4ee5 CSV \u683c\u5f0f\u6253\u5370\u5230\u5c4f\u5e55\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a In [13]: for row in rds1: ...: print(','.join(row)) ...: \u59d3\u540d,\u5e74\u9f84,\u73ed\u7ea7 \u5468\u67d0\u67d0,9,3\u73ed \u738b\u67d0\u67d0,10,6\u73ed \u63a5\u4e0b\u6765\u662f\u5982\u4f55\u5c06\u6570\u636e\u6253\u5370\u8f93\u51fa\u5230\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u5148\u770b\u4e00\u4e0b print() \u51fd\u6570\u8bf4\u660e\uff1a In [12]: print? Docstring: print(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False) Prints the values to a stream, or to sys.stdout by default. Optional keyword arguments: file: a file-like object (stream); defaults to the current sys.stdout. sep: string inserted between values, default a space. end: string appended after the last value, default a newline. flush: whether to forcibly flush the stream. Type: builtin_function_or_method \u53ef\u4ee5\u770b\u5230\uff0cprint() \u51fd\u6570\u652f\u6301\u53c2\u6570 file \u7528\u4e8e\u8bbe\u5b9a\u6587\u4ef6\u6d41\uff0c\u9ed8\u8ba4\u662f\u7cfb\u7edf\u6807\u51c6\u8f93\u51fa\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8054\u5408 open() \u51fd\u6570\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6 test1.csv \u5e76\u8fdb\u884c\u5199\u5165\uff1a In [16]: with open('test1.csv', 'w', encoding='utf-8') as f: ...: for row in rds1: ...: print(','.join(row), file=f) \u4f7f\u7528\u7cfb\u7edf\u547d\u4ee4\u67e5\u770b\u6587\u4ef6\u5185\u5bb9\u662f\u5426\u6b63\u786e\uff1a In [17]: !cat test1.csv \u59d3\u540d,\u5e74\u9f84,\u73ed\u7ea7 \u5468\u67d0\u67d0,9,3\u73ed \u738b\u67d0\u67d0,10,6\u73ed \u8fd9\u6837\u6211\u4eec\u5c31\u786e\u5b9a\u5c06\u6570\u636e\u6210\u529f\u5bfc\u51fa\u5230 CSV \u6587\u4ef6\u4e2d\u4e86\u3002 \u76f8\u6bd4\u800c\u8a00\uff0c\u76f4\u63a5\u4f7f\u7528 Pandas \u7684 to_csv() \u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e0a\u9762\u7684\u64cd\u4f5c\uff1a In [18]: rds2.to_csv('test2.csv') In [19]: !cat test2.csv ,\u59d3\u540d,\u5e74\u9f84,\u73ed\u7ea7 0,\u5468\u67d0\u67d0,9,3\u73ed 1,\u738b\u67d0\u67d0,10,6\u73ed \u7531\u6b64\u53ef\u89c1\uff0c\u65e0\u8bba\u6570\u636e\u8bfb\u5199\uff0cPandas \u63d0\u4f9b\u7684\u5de5\u5177\u66f4\u52a0\u7b80\u4fbf\u76f4\u89c2\u3002","title":"10.2.3 \u5bfc\u51fa CSV"},{"location":"10-data-import/#103-excel","text":"\u5c3d\u7ba1\u672c\u4e66\u4e0d\u63a8\u8350\u8bfb\u8005\u4f7f\u7528 Excel \u5904\u7406\u548c\u4fdd\u5b58\u6570\u636e\uff0c\u4f46\u662f\u56e0\u4e3a\u5fae\u8f6f\u7cfb\u7edf\u548c Office \u529e\u516c\u5957\u4ef6\u7684\u6d41\u884c\u6211\u4eec\u603b\u4f1a\u9047\u89c1\u5e76\u4e14\u5fc5\u987b\u9762\u5bf9 Excel \u6587\u4ef6\u7684\u5904\u7406\u3002\u5728 Python \u4e2d\uff0c\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u76f4\u63a5\u4f7f\u7528 open() \u51fd\u6570\u6216\u6807\u51c6\u6a21\u5757\u6765\u5bfc\u5165 Excel \u6570\u636e\uff0c\u4f46\u6709\u5f88\u591a\u5de5\u5177\u5305\u63d0\u4f9b\u4e86\u8be5\u529f\u80fd\uff0c\u6bd4\u8f83\u77e5\u540d\u7684\u6709 Pandas\u3001openpyxl\u3001xlrd\u3001xlutils \u4ee5\u53ca pyexcel\u3002","title":"10.3 Excel \u6587\u4ef6"},{"location":"10-data-import/#1031","text":"Excel \u672c\u8eab\u662f\u5fae\u8f6f\u63d0\u4f9b\u7684\u4e00\u6b3e\u975e\u5e38\u5f3a\u5927\u7684\u6570\u636e\u5206\u6790\u8f6f\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9 Excel \u7684\u5355\u5143\u683c\u8fdb\u884c\u975e\u5e38\u591a\u7684\u64cd\u4f5c\uff0c\u5305\u62ec\u8bbe\u5b9a\u683c\u5f0f\u3001\u63d2\u5165\u51fd\u6570\u547d\u4ee4\u7b49\u3002\u4e00\u65e6\u6211\u4eec\u5728 Excel \u4e2d\u5bf9\u6570\u636e\u8fdb\u884c\u4e86\u989d\u5916\u64cd\u4f5c\uff0c\u6211\u4eec\u4f7f\u7528 Python \u8fdb\u884c\u5bfc\u5165\u65f6\u5c31\u9700\u8981\u989d\u5916\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u8ddf\u6570\u636e\u65e0\u5173\u7684\u989d\u5916\u4fe1\u606f\u7834\u574f\u4e86\u6570\u636e\u7684\u89c4\u5f8b\u6027\uff0c\u589e\u52a0\u4e86\u6587\u4ef6\u7684\u590d\u6742\u6027\uff0c\u6240\u4ee5 Python \u5728\u89e3\u6790\u65f6\u975e\u5e38\u5bb9\u6613\u51fa\u9519\u3002 \u65e2\u7136\u662f\u4f7f\u7528 Python \u5904\u7406\u6570\u636e\uff0c\u90a3\u4e48\u8bfb\u8005\u63d0\u4f9b\u7684 Excel \u6570\u636e\u5e94\u5f53\u5c3d\u91cf\u662f\u89c4\u6574\u7684\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u51e0\u6761\u8981\u6c42\u8fdb\u884c\u68c0\u67e5\uff1a \u8868\u683c\u7684\u7b2c\u4e00\u884c\u5e94\u5f53\u662f\u5217\u540d \u6240\u6709\u7684\u5355\u5143\u683c\u5c3d\u91cf\u907f\u514d\u51fa\u73b0\u7a7a\u683c\uff0c\u7279\u522b\u662f\u884c\u540d\u548c\u5217\u540d\u3002\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7b26\u53f7\uff0c\u5982\u4e0b\u5212\u7ebf\u3001\u5206\u53f7\u3001\u77ed\u6a2a\u6760\u7b49\u8fdb\u884c\u66ff\u4ee3 \u540d\u5b57\u5c3d\u91cf\u7b80\u77ed\u6613\u61c2 \u786e\u4fdd\u7f3a\u5931\u503c\u90fd\u4f7f\u7528 NA \u8fdb\u884c\u6807\u6ce8 \u6211\u4eec\u77e5\u9053\uff0cExcel \u6587\u4ef6\u4e00\u822c\u662f\u4ee5 xls \u6216 xlsx \u4f5c\u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\u3002\u9664\u4e86\u5b83\u4eec\uff0cExcel \u662f\u652f\u6301\u4fdd\u5b58\u4e3a\u5176\u4ed6\u683c\u5f0f\u7684\uff0c\u63a8\u8350\u5c06\u6570\u636e\u5bfc\u51fa\u4e3a CSV \u6587\u4ef6\u540e\u7528\u524d\u9762\u4ecb\u7ecd\u8fc7\u7684\u65b9\u6cd5\u5bfc\u5165\u3002","title":"10.3.1 \u68c0\u67e5\u6570\u636e"},{"location":"10-data-import/#1032","text":"\u5728\u524d\u9762\u6267\u884c\u5bfc\u5165\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u9ed8\u8ba4 IPython Shell \u6216 Jupyter Notebook \u662f\u5728\u8981\u5bfc\u5165\u6587\u4ef6\u7684\u540c\u4e00\u76ee\u5f55\u4e0b\u542f\u52a8\u7684\uff0c\u6b64\u65f6 Python \u7684\u5de5\u4f5c\u8def\u5f84\u4e0e\u6587\u4ef6\u76ee\u5f55\u4e00\u81f4\uff0c\u6211\u4eec\u5728\u4e3a\u5bfc\u5165\u51fd\u6570\u4f20\u5165\u6587\u4ef6\u8def\u5f84\u53c2\u6570\u65f6\u53ea\u9700\u8981\u6307\u5b9a\u6587\u4ef6\u540d\u5373\u53ef\u3002\u4f46\u66f4\u4e3a\u5b9e\u9645\u7684\u60c5\u51b5\u53ef\u80fd\u662f\u6267\u884c\u7684\u811a\u672c\u3001Notebook \u6ca1\u6709\u548c\u8981\u64cd\u4f5c\u7684\u6570\u636e\u6587\u4ef6\u4f4d\u4e8e\u540c\u4e00\u8def\u5f84\uff0c\u4e00\u4e2a\u89e3\u51b3\u529e\u6cd5\u662f\u901a\u8fc7\u7edd\u5bf9\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84\u7684\u65b9\u5f0f\u6307\u5b9a\u6587\u4ef6\u8def\u5f84\uff0c\u53e6\u4e00\u4e2a\u529e\u6cd5\u662f\u5728 Python \u7a0b\u5e8f\u4e2d\u5207\u6362\u5de5\u4f5c\u76ee\u5f55\u3002 \u5047\u8bbe records.csv \u6587\u4ef6\u6709\u4ee5\u4e0b\u8def\u5f84\u5c42\u7ea7\uff1aC \u76d8\u4e2d\u6709 data \u6587\u4ef6\u5939\uff08\u76ee\u5f55\uff09\uff0cdata \u4e0b\u6709\u6587\u4ef6 records.csv\uff0c\u800c\u6211\u4eec\u5728 C \u76d8\u4e0b\u542f\u52a8\u4e86 Jupyter Notebook \u6216 IPython Shell\u3002\u90a3\u4e48 Python \u5982\u4f55\u8bbf\u95ee records.csv \u6587\u4ef6\u8def\u5f84\u5462\uff1f C: \u251c\u2500data \u2514\u2500records.csv \u7edd\u5bf9\u8def\u5f84\u662f\u4ee5\u6839\u76ee\u5f55\u4e3a\u8d77\u59cb\u7684\u8def\u5f84\uff0cWindows \u7cfb\u7edf\u4e00\u822c\u4ee5\u76d8\u7b26\u5f00\u59cb\uff0c\u5982 C:\uff1b\u800c macOS \u548c Linux \u7cfb\u7edf\u5219\u4ee5 / \u5f00\u59cb\u3002\u76f8\u5bf9\u8def\u5f84\u662f\u6307\u4ee5\u5f53\u524d\u8def\u5f84\u4e3a\u53c2\u8003\u7684\u8def\u5f84\u3002\u4ee5 C: \u4e3a\u5f53\u524d\u8def\u5f84\uff0c\u6587\u4ef6 records.csv \u7684\u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84\u7ed9\u51fa\u5982\u4e0b\uff1a # \u7edd\u5bf9\u8def\u5f84 C:/data/records.csv # \u76f8\u5bf9\u8def\u5f84 data/records.csv \u53e6\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 os \u6a21\u5757\u63d0\u4f9b\u7684 chdir() \u51fd\u6570\u5728 Python \u811a\u672c\u5185\u90e8\u5207\u6362\u5de5\u4f5c\u76ee\u5f55\u3002\u5e38\u89c1\u64cd\u4f5c\u5982\u4e0b\uff1a # \u5bfc\u5165 os import os # \u83b7\u53d6\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0ccwd \u4e3a current working directory \u9996\u5b57\u6bcd\u7f29\u5199 cwd = os.getcwd() cwd # \u6216\u8005\u4f7f\u7528\u9b54\u672f\u547d\u4ee4 pwd pwd # \u66f4\u6539\u5de5\u4f5c\u76ee\u5f55 os.chdir(\"/path/to/your/data-folder\") # \u6216\u8005\u4f7f\u7528\u9b54\u672f\u547d\u4ee4 cd cd /path/to/your/data-folder # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u7684\u6240\u6709\u6587\u4ef6\u548c\u5b50\u76ee\u5f55 os.listdir('.')","title":"10.3.2 \u51c6\u5907\u5de5\u4f5c"},{"location":"10-data-import/#1033-pandas-excel","text":"\u524d\u9762\u6211\u4eec\u5411\u8bfb\u8005\u4ecb\u7ecd\u4e86 Pandas \u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u5730\u5bfc\u5165 CSV \u6587\u672c\u6570\u636e\uff0c\u8fd9\u91cc\u5c06\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 Pandas \u8bfb\u5199 Excel \u6587\u4ef6\u3002\u4e00\u4e2a Excel \u53ef\u4ee5\u5b58\u50a8\u591a\u5f20\u8868\u683c\uff0c\u56e0\u6b64\u8bfb\u5165 Excel \u7684\u64cd\u4f5c\u5927\u6709\u4e0d\u540c\u3002 \u8fd9\u91cc\u4f7f\u7528\u4e8b\u5148\u5df2\u7ecf\u521b\u5efa\u597d\u7684 Excel \u6587\u4ef6 data.xlsx \u4f5c\u4e3a\u793a\u4f8b\u6570\u636e\uff0c\u5b83\u5305\u542b\u4e86\u4e24\u4e2a\u6570\u636e\u96c6\uff0c\u5206\u522b\u5b58\u50a8\u5728\u4e24\u4e2a\u8868\u683c\u4e2d\u3002 \u6211\u4eec\u9996\u5148\u67e5\u770b\u4e0b\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u5e76\u5c06\u5176\u5207\u6362\u5230\u6570\u636e\u5bf9\u5e94\u7684\u76ee\u5f55\u4e2d\u3002 In [2]: import os In [3]: os.getcwd() # \u83b7\u53d6\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 Out[3]: 'C:\\\\Shixiang\\\\pybook' In [4]: os.listdir('files/chapter10') # \u5217\u51fa\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u53ca\u5b50\u76ee\u5f55 Out[4]: ['data.xlsx', 'lung.csv', 'mtcars.csv', 'records.csv', 'records.tsv', 'records.txt', 'test1.csv', 'test2.csv'] In [5]: cd files # \u5207\u6362\u5de5\u4f5c\u76ee\u5f55 C:\\Shixiang\\pybook\\files In [6]: os.getcwd() # \u83b7\u53d6\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 Out[6]: 'C:\\\\Shixiang\\\\pybook\\\\files' In [7]: pwd Out[7]: 'C:\\\\Shixiang\\\\pybook\\\\files' In [8]: os.chdir('chapter10') # \u5c06\u5de5\u4f5c\u76ee\u5f55\u5207\u6362\u4e3a\u6570\u636e\u6240\u5728\u76ee\u5f55 In [9]: pwd Out[9]: 'C:\\\\Shixiang\\\\pybook\\\\files\\\\chapter10' \u4e0a\u9762\u4ee3\u7801\u5206\u522b\u6f14\u793a\u4e86\u4f7f\u7528 os \u6a21\u5757\u7684\u51fd\u6570\u548c IPython \u9b54\u672f\u547d\u4ee4\u8fdb\u884c\u5de5\u4f5c\u76ee\u5f55\u7684\u83b7\u53d6\u548c\u5207\u6362\uff0c\u4e0b\u9762\u5f00\u59cb\u8fdb\u884c\u6570\u636e\u7684\u8bfb\u5165\u3002 In [10]: import pandas as pd In [11]: file = 'data.xlsx' In [12]: xl = pd.ExcelFile(file) In [13]: # \u6253\u5370\u8868\u683c\u540d\u5b57 In [14]: print(xl.sheet_names) ['mtcars', 'lung'] \u6211\u4eec\u7684\u786e\u53ef\u4ee5\u770b\u5230 data.xlsx \u6587\u4ef6\u4e2d\u5b58\u5728\u4e24\u5f20\u8868\u540d\u5206\u522b\u4e3a mtcars \u548c lung \u7684\u8868\u683c\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u8fd9 2 \u4e2a\u6570\u636e\u96c6\u89e3\u6790\u51fa\u6765\u3002 In [15]: mtcars = xl.parse('mtcars') In [16]: mtcars.head() # \u53ea\u67e5\u770b\u5934\u51e0\u884c Out[16]: mpg cyl disp hp drat wt qsec vs am gear carb 0 21.0 6 160.0 110 3.90 2.620 16.46 0 1 4 4 1 21.0 6 160.0 110 3.90 2.875 17.02 0 1 4 4 2 22.8 4 108.0 93 3.85 2.320 18.61 1 1 4 1 3 21.4 6 258.0 110 3.08 3.215 19.44 1 0 3 1 4 18.7 8 360.0 175 3.15 3.440 17.02 0 0 3 2 In [17]: lung = xl.parse('lung') In [18]: lung.head() Out[18]: inst time status age ... ph.karno pat.karno meal.cal wt.loss 0 3.0 306 2 74 ... 90.0 100.0 1175.0 NaN 1 3.0 455 2 68 ... 90.0 90.0 1225.0 15.0 2 3.0 1010 1 56 ... 90.0 90.0 NaN 15.0 3 5.0 210 2 57 ... 90.0 60.0 1150.0 11.0 4 1.0 883 2 60 ... 100.0 90.0 NaN 0.0 [5 rows x 10 columns] \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u524d\u9762\u5b66\u4e60\u8fc7\u7684 Pandas \u77e5\u8bc6\u64cd\u4f5c\u5b83\u4eec\u4e86\u3002 \u73b0\u5728\u6211\u4eec\u5047\u8bbe\u5df2\u7ecf\u5206\u6790\u597d\u4e86\u6570\u636e\uff0c\u63a5\u4e0b\u6765\u60f3\u8981\u628a\u7ed3\u679c\u5bfc\u51fa\u4e3a Excel \u6587\u4ef6\uff0c\u600e\u4e48\u505a\u5462\uff1f\u4f7f\u7528 Pandas \u7684 to_excel() \u51fd\u6570\u5c31\u53ef\u4ee5\u5b8c\u6210\u3002 In [21]: lung.to_excel('~/\u6d4b\u8bd5\u5bfc\u51fa.xlsx') \u5982\u679c\u8bfb\u8005\u4e5f\u8fd0\u884c\u4e86\u4e0a\u9762\u8fd9\u4e2a\u547d\u4ee4\uff0c\u5feb\u53bb\u6253\u5f00\u5bb6\u76ee\u5f55\u4e0b\u7684\u201c\u6d4b\u8bd5\u5bfc\u51fa.xlsx\u201d\u6587\u4ef6\u770b\u770b\u6210\u529f\u5bfc\u51fa\u6ca1\u5427\u3002 \u8be5\u51fd\u6570\u652f\u6301\u975e\u5e38\u591a\u7684\u9009\u9879\uff1a In [22]: lung.to_excel? Signature: lung.to_excel( excel_writer, sheet_name='Sheet1', na_rep='', float_format=None, columns=None, header=True, index=True, index_label=None, startrow=0, startcol=0, engine=None, merge_cells=True, encoding=None, inf_rep='inf', verbose=True, freeze_panes=None, ) Docstring: Write object to an Excel sheet. ... \u4f8b\u5982\uff0c\u9ed8\u8ba4\u7684\u8868\u540d\u662f Sheet1\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u8fdb\u884c\u4fee\u6539\u4e3a lung\uff1a In [23]: lung.to_excel('~/\u6d4b\u8bd5\u5bfc\u51fa.xlsx', sheet_name='lung')","title":"10.3.3 \u4f7f\u7528 Pandas \u8bfb\u5199 Excel"},{"location":"10-data-import/#104-pickle","text":"\u4e0a\u9762\u4ecb\u7ecd\u7684 CSV \u6587\u4ef6\u548c Excel \u6587\u4ef6\u90fd\u53ef\u4ee5\u901a\u8fc7\u5916\u90e8\u7a0b\u5e8f\u8fdb\u884c\u4fee\u6539\uff0c\u8fd9\u53ef\u80fd\u4e0e\u67d0\u4e9b\u5b89\u5168\u7a0b\u5e8f\u7684\u76ee\u7684\u53ef\u80fd\u76f8\u6096\uff0c\u6709\u65f6\u4e5f\u4e0d\u5229\u4e8e\u5206\u6790\u7684\u53ef\u91cd\u590d\u6027\u3002\u7279\u522b\u662f CSV \u548c Excel \u7b49\u6587\u4ef6\u7c7b\u578b\u90fd\u65e0\u6cd5\u4fdd\u5b58 Python \u7279\u6709\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f8b\u5982\u7c7b\u3002\u4e3a\u6b64\uff0cPython \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u51c6\u6a21\u5757 pickle \u5b9e\u73b0\u5bf9\u4e00\u4e2a Python \u5bf9\u8c61\u7ed3\u6784\u7684\u4e8c\u8fdb\u5236\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff1a\u901a\u8fc7 pickle \u6a21\u5757\u7684\u5e8f\u5217\u5316\u64cd\u4f5c\u6211\u4eec\u80fd\u591f\u5c06 Python \u7a0b\u5e8f\u4e2d\u8fd0\u884c\u7684\u5bf9\u8c61\u4fe1\u606f\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u53bb\uff0c\u6c38\u4e45\u5b58\u50a8\uff1b\u901a\u8fc7pickle \u6a21\u5757\u7684\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c\uff0c\u6211\u4eec\u80fd\u591f\u4ece\u6587\u4ef6\u4e2d\u521b\u5efa\u4e0a\u4e00\u6b21\u7a0b\u5e8f\u4fdd\u5b58\u7684\u5bf9\u8c61\u3002 pickle \u6587\u4ef6\u4e0e CSV \u8fd9\u79cd\u6587\u672c\u6587\u4ef6\u76f8\u6bd4\u6709\u51e0\u70b9\u672c\u8d28\u7684\u4e0d\u540c\uff1a pickle \u6587\u4ef6\u662f\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684 pickle \u6587\u4ef6\u65e0\u6cd5\u901a\u8fc7\u6587\u672c\u7f16\u8f91\u5668\u76f4\u89c2\u9605\u8bfb CSV \u6587\u4ef6\u5728 Python \u7cfb\u7edf\u5916\u5e7f\u6cdb\u4f7f\u7528\uff0c\u800c pickle \u6587\u4ef6\u662f Python \u4e13\u6709\u7684 pickle \u6587\u4ef6\u53ef\u4ee5\u4fdd\u5b58 Python \u5927\u91cf\u7684\u6570\u636e\u7c7b\u578b pickle \u6587\u4ef6\u7684\u8bfb\u53d6\u548c\u4fdd\u5b58\u901a\u8fc7 pickle \u6a21\u5757\u7684 load() \u548c dump() \u51fd\u6570\u5b9e\u73b0\uff0c\u4e0b\u9762\u7b80\u5355\u4e3e\u4f8b\u8bf4\u660e\u3002 In [1]: import pickle In [2]: data = {'a':[1,2,3], 'b':['yes','no']} In [3]: with open('data.pkl', 'wb') as f: ...: pickle.dump(data, f) \u8fd9\u91cc\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u5b57\u5178 data\uff0c\u7136\u540e\u4f7f\u7528 open() \u51fd\u6570\u5e76\u4ee5\u4e8c\u8fdb\u5236\u5199\u5165\u7684\u65b9\u5f0f\u521b\u5efa\u4e86\u6587\u4ef6 data.pkl\uff0cpkl \u662f pickle \u6587\u4ef6\u7279\u6709\u7684\u62d3\u5c55\u540d\uff0c\u5728 with \u8bed\u53e5\u5185\u90e8\uff0c\u6211\u4eec\u4f7f\u7528 dump() \u51fd\u6570\u5c06\u6570\u636e\u5199\u5165\uff0c\u4fdd\u8bc1\u4e86 data.pkl \u6587\u4ef6\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u6b63\u5e38\u5173\u95ed\u3002 \u6b64\u5904\u4f7f\u7528 pickle \u6587\u4ef6\u7684\u597d\u5904\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u8fd9\u4e2a\u6570\u636e\u5e76\u4e0d\u662f\u5f88\u597d\u7528 CSV \u683c\u5f0f\u8868\u793a\u3002\u53e6\u5916\uff0c\u5982\u679c\u8003\u8651\u4f7f\u7528\u7eaf\u6587\u672c\u4fdd\u5b58\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 for \u5faa\u73af\uff0c\u800c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6570\u636e\u5982\u679c\u66f4\u590d\u6742\u70b9\u5c31\u4f1a\u96be\u4ee5\u8fd8\u539f\u4e86\u3002 \u5bfc\u5165 pickle \u6587\u4ef6\u64cd\u4f5c\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u6211\u4eec\u9700\u8981\u628a open() \u7684\u6a21\u5f0f\u8bbe\u5b9a\u4e3a\u4e8c\u8fdb\u5236\u5199\u5165 \u2018rb\u2019\uff0c\u53e6\u5916\u662f\u8c03\u7528 load() \u51fd\u6570\u800c\u975e dump()\u3002 In [4]: with open('data.pkl', 'rb') as file: ...: data_restore = pickle.load(file) ...: In [5]: print(data_restore) {'a': [1, 2, 3], 'b': ['yes', 'no']}","title":"10.4 pickle \u6587\u4ef6"},{"location":"10-data-import/#105-sas-stata","text":"\u4f5c\u4e3a\u6570\u636e\u5206\u6790\u4ece\u4e1a\u8005\uff0c\u6211\u4eec\u53ef\u80fd\u6ca1\u6709\u4f7f\u7528\u8fc7 SAS \u548c Stata\uff0c\u4f46\u80af\u5b9a\u5bf9\u5b83\u4eec\u7684\u5927\u540d\u6709\u6240\u8033\u95fb\u3002SAS \u662f Statistical Analysis System \u7684\u7f29\u5199\uff0c\u662f\u7531\u7f8e\u56fd\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u7acb\u5927\u5b66 1966 \u5e74\u5f00\u53d1\u7684\u7edf\u8ba1\u5206\u6790\u8f6f\u4ef6\u3002\u7ecf\u8fc7\u591a\u5e74\u6765\u7684\u5b8c\u5584\u548c\u53d1\u5c55\uff0cSAS \u5728\u56fd\u9645\u4e0a\u5df2\u88ab\u8a89\u4e3a\u7edf\u8ba1\u5206\u6790\u7684\u6807\u51c6\u8f6f\u4ef6\uff0c\u5728\u5404\u4e2a\u9886\u57df\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u5c24\u5176\u662f\u5546\u4e1a\u5206\u6790\u4ee5\u53ca\u751f\u7269\u7edf\u8ba1\u5b66\u3002Stata \u5219\u662f\u7531 Statistics \u548c data \u8fd9\u4e24\u4e2a\u8bcd\u5404\u53d6\u4e00\u90e8\u5206\u62fc\u63a5\u800c\u6210\uff08\u4e0e Pandas \u4e00\u8bcd\u7684\u6765\u6e90\u76f8\u4f3c\uff09\uff0c\u662f\u4e00\u5957\u63d0\u4f9b\u5176\u4f7f\u7528\u8005\u6570\u636e\u5206\u6790\u3001\u6570\u636e\u7ba1\u7406\u4ee5\u53ca\u7ed8\u5236\u4e13\u4e1a\u56fe\u8868\u7684\u5b8c\u6574\u53ca\u6574\u5408\u6027\u7edf\u8ba1\u8f6f\u4ef6\uff0c\u4e3b\u8981\u7528\u4e8e\u5b66\u672f\u7814\u7a76\uff0c\u5c24\u5176\u662f\u793e\u4f1a\u79d1\u5b66\u9886\u57df\u3002 SAS \u548c Stata \u4f5c\u4e3a\u4e13\u4e1a\u7684\u7edf\u8ba1\u5206\u6790\u8f6f\u4ef6\uff0c\u5b83\u4eec\u90fd\u6709\u81ea\u5df1\u72ec\u6709\u7684\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\u3002SAS \u76ee\u524d\u4e3b\u8981\u4f7f\u7528 sas7bdat \u4f5c\u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\uff0c\u800c Stata \u4f7f\u7528 dta \u4f5c\u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\u3002 sas7bdat \u6587\u4ef6\u7684\u5bfc\u5165\u9700\u8981\u63d0\u524d\u5b89\u88c5\u597d sas7bdat \u5305\u3002\u5b89\u88c5\u4e4b\u540e\uff0c\u6211\u4eec\u901a\u8fc7 SAS7BDAT() \u51fd\u6570\u6253\u5f00\u6570\u636e\u96c6\u6587\u4ef6\uff0c\u5e76\u8c03\u7528 to_data_frame() \u65b9\u6cd5\u53ef\u4ee5\u5c06\u6587\u4ef6\u5bfc\u5165\u4e3a\u4e00\u4e2a Pandas \u7684 DataFrame \u5bf9\u8c61\u3002 import pandas as pd from sas7bdat import SAS7BDAT # \u6b64\u5904 xxxx \u5e94\u4fee\u6539\u4e3a\u5b9e\u9645\u6587\u4ef6\u540d with SAS7BDAT('xxxx.sas7bdat') as file: df_sas = file.to_data_frame() \u800c dta \u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 Pandas \u5e93\u63d0\u4f9b\u7684 read_stata() \u51fd\u6570\u5bfc\u5165\u3002 import pandas as pd # \u6b64\u5904 xxxx \u5e94\u4fee\u6539\u4e3a\u5b9e\u9645\u6587\u4ef6\u540d data = pd.read_stata('xxxx.dta')","title":"10.5 SAS \u4e0e Stata \u6587\u4ef6"},{"location":"10-data-import/#106-hdf5","text":"HDF\uff08Hierarchical Data Format\uff09\u6307\u4e00\u79cd\u4e3a\u5b58\u50a8\u548c\u5904\u7406\u5927\u5bb9\u91cf\u79d1\u5b66\u6570\u636e\u8bbe\u8ba1\u7684\u6587\u4ef6\u683c\u5f0f\u53ca\u76f8\u5e94\u5e93\u6587\u4ef6\u3002HDF \u6700\u65e9\u7531\u7f8e\u56fd\u56fd\u5bb6\u8d85\u7ea7\u8ba1\u7b97\u5e94\u7528\u4e2d\u5fc3 NCSA \u5f00\u53d1\uff0c\u76ee\u524d\u5728\u975e\u76c8\u5229\u7ec4\u7ec7 HDF \u5c0f\u7ec4\u7ef4\u62a4\u4e0b\u7ee7\u7eed\u53d1\u5c55\u3002\u5f53\u524d\u6d41\u884c\u7684\u7248\u672c\u662f HDF5\u3002HDF5 \u62e5\u6709\u4e00\u7cfb\u5217\u7684\u4f18\u5f02\u7279\u6027\uff0c\u4f7f\u5176\u7279\u522b\u9002\u5408\u8fdb\u884c\u5927\u91cf\u79d1\u5b66\u6570\u636e\u7684\u5b58\u50a8\u548c\u64cd\u4f5c\uff0c\u5982\u5b83\u652f\u6301\u975e\u5e38\u591a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7075\u6d3b\uff0c\u901a\u7528\uff0c\u8de8\u5e73\u53f0\uff0c\u53ef\u6269\u5c55\uff0c\u9ad8\u6548\u7684 I/O \u6027\u80fd\uff0c\u652f\u6301\u51e0\u4e4e\u65e0\u9650\u91cf\u7684\u5355\u6587\u4ef6\u5b58\u50a8\u7b49\u3002\u5b83\u7684\u5b98\u7f51\u5730\u5740\u4e3a\uff1ahttps://support.hdfgroup.org/HDF5/\u3002 \u5728\u6b63\u5f0f\u5b66\u4e60\u5982\u4f55\u5bfc\u5165\u548c\u64cd\u4f5c HDF5 \u6587\u4ef6\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e0b\u5b83\u7684\u4e3b\u8981\u7279\u70b9\u3002 \u4e00\u4e2a HDF5 \u6587\u4ef6\u662f\u5b58\u50a8\u4e24\u7c7b\u5bf9\u8c61\u7684\u5bb9\u5668\uff0c\u8fd9\u4e24\u7c7b\u5bf9\u8c61\u5206\u522b\u4e3a\uff1a dataset\uff1a\u7c7b\u4f3c\u6570\u7ec4\u7684\u6570\u636e\u96c6\u5408\uff1b group\uff1b\u7ed3\u6784\u7c7b\u4f3c\u76ee\u5f55\u7684\u5bb9\u5668\uff0c\u5176\u4e2d\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a dataset \u53ca\u5176\u5b83\u7684 group\u3002 \u4e00\u4e2a HDF5 \u6587\u4ef6\u4ece\u4e00\u4e2a\u547d\u540d\u4e3a \u201c/\u201d \u7684 group \u5f00\u59cb\uff0c\u6240\u6709\u7684 dataset \u548c\u5176\u5b83 group \u90fd\u5305\u542b\u5728\u6b64 group \u4e0b\u3002\u5f53\u64cd\u4f5c HDF5 \u6587\u4ef6\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u6307\u5b9a group \u7684 dataset \u90fd\u662f\u9ed8\u8ba4\u6307 \u201c/\u201d \u4e0b\u7684 dataset\u3002 HDF5 \u6587\u4ef6\u7684 dataset \u548c group \u90fd\u53ef\u4ee5\u62e5\u6709\u63cf\u8ff0\u6027\u7684\u5143\u6570\u636e\uff0c\u79f0\u4f5c attribute\uff08\u5c5e\u6027\uff09\u3002 Python \u4e2d\u6709\u4e00\u7cfb\u5217\u7684\u5de5\u5177\u53ef\u4ee5\u64cd\u4f5c\u548c\u4f7f\u7528 HDF5 \u6570\u636e\uff0c\u5176\u4e2d\u6700\u5e38\u7528\u7684\u662f h5py \u548c PyTables\u3002\u7528 h5py \u64cd\u4f5c HDF5 \u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u4f7f\u7528\u76ee\u5f55\u4e00\u6837\u4f7f\u7528 group\uff0c\u50cf\u4f7f\u7528 NumPy \u6570\u7ec4\u4e00\u6837\u4f7f\u7528 dataset\uff0c\u50cf\u4f7f\u7528\u5b57\u5178\u4e00\u6837\u4f7f\u7528\u5c5e\u6027\uff0c\u975e\u5e38\u65b9\u4fbf\u548c\u6613\u7528\u3002 \u63a5\u4e0b\u6765\u5177\u4f53\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 h5py \u8fdb\u884c\u5bfc\u5165\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u5e76\u8fdb\u884c\u7b80\u5355\u7684\u53ef\u89c6\u5316\u3002 In [6]: import h5py In [7]: import numpy as np In [8]: import matplotlib.pyplot as plt In [9]: filename = 'data.hdf5' In [10]: data = h5py.File(filename, 'r') # \u8bfb\u5165 data.hdf5 In [11]: print(type(data)) # \u67e5\u770b\u5bf9\u8c61\u7c7b\u578b <class 'h5py._hl.files.File'> In [12]: group = data['strain'] # \u83b7\u53d6 HDF5 \u7684 group In [13]: # \u68c0\u67e5 group \u7684\u952e In [13]: for key in group.keys(): ...: print(key) ...: Strain In [14]: # \u83b7\u53d6\u6570\u636e\u96c6\u7684\u503c In [14]: strain = data['strain']['Strain'].value In [15]: # \u8bbe\u5b9a\u91c7\u6837\u6570 ...: s ...: num_samples = 10000 ...: ...: # \u8bbe\u5b9a\u65f6\u95f4\u5411\u91cf ...: time = np.arange(0, 1, 1/num_samples) In [16]: # \u7ed8\u56fe ...: plt.plot(time, strain[:num_samples]) ...: plt.xlabel('GPS Time (s)') ...: plt.ylabel('strain') ...: plt.show() \u7ed3\u679c\u56fe\u5f62\u5982\u56fe11-1\u6240\u793a\u3002 \u4e0a\u8ff0\u4ee3\u7801\u5c06 HDF5 \u6587\u4ef6\u5bfc\u5165\u4e3a\u4e00\u4e2a h5py \u7c7b\u5b9e\u4f8b\uff0c\u8be5\u5bf9\u8c61\u6709\u81ea\u5df1\u4e00\u5957\u64cd\u4f5c\u65b9\u6cd5\uff0c\u8bfb\u8005\u4ec5\u4ec5\u4f9d\u9760\u4e0a\u9762\u8fd9\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u4e0d\u8db3\u4ee5\u638c\u63e1\u5b83\u4eec\uff0c\u5982\u679c\u8bfb\u8005\u6bd4\u8f83\u611f\u5174\u8da3\uff0c\u8bf7\u901a\u8fc7\u7f51\u7edc\u8d44\u6599\u6216\u5176\u4ed6\u53c2\u8003\u4e66\u7c4d\u81ea\u884c\u5b66\u4e60\u548c\u7ec3\u4e60\u3002","title":"10.6 HDF5 \u6587\u4ef6"},{"location":"10-data-import/#107-matlab","text":"MATLAB \u662f matrix \u548c laboratory \u4e24\u4e2a\u8bcd\u7684\u7ec4\u5408\uff0c\u8bd1\u4f5c\u77e9\u9635\u5b9e\u9a8c\u5ba4\u3002\u5b83\u662f\u7531\u7f8e\u56fd mathworks \u516c\u53f8\u53d1\u5e03\u7684\u4e3b\u8981\u9762\u5bf9\u79d1\u5b66\u8ba1\u7b97\u3001\u53ef\u89c6\u5316\u4ee5\u53ca\u4ea4\u4e92\u5f0f\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u9ad8\u79d1\u6280\u8ba1\u7b97\u73af\u5883\u3002MATLAB \u4e3b\u8981\u5e94\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u3001\u5de5\u7a0b\u6280\u672f\u7b49\u9886\u57df\uff0c\u4e0e\u5de5\u4e1a\u754c\u7ed3\u5408\u975e\u5e38\u7d27\u5bc6\uff0c\u4e5f\u662f\u6df1\u5ea6\u5b66\u4e60\u5e94\u7528\u7684\u4e3b\u8981\u5e73\u53f0\u4e4b\u4e00\u3002 MATLAB \u6240\u4f7f\u7528\u7684\u6570\u636e\u683c\u5f0f\u4ee5 mat \u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\uff0c\u5728 Python \u4e2d\u53ef\u4ee5\u901a\u8fc7\u6765\u81ea scipy.io \u6a21\u5757\u4e2d\u7684 loadmat() \u548c savemat() \u51fd\u6570\u8fdb\u884c\u8bfb\u5199\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6570\u636e\u5bfc\u5165\u7684\u64cd\u4f5c\u8303\u4f8b\u3002 import scipy.io filename = 'xxx.mat' # \u8bfb\u5165 mat \u6587\u4ef6 mat = scipy.io.loadmat(filename) print(type(mat)) # mat['x'] \u4e2d\u7684 x \u662f # MATLAB \u6587\u4ef6\u4e2d\u7684\u53d8\u91cf x\uff0c # mat['x'] \u662f \u53d8\u91cf x \u7684\u503c print(type(mat['x'])) print(mat['x']) \u4e0d\u96be\u7406\u89e3\uff0cmat \u6587\u4ef6\u4e2d\u5b58\u50a8\u7684\u53d8\u91cf\u540d\u548c\u76f8\u5e94\u503c\uff08\u6765\u81ea MATLAB\uff09\u8f6c\u6362\u4e3a\u4e86 Python \u4e2d\u7684\u952e\u503c\u5bf9\u5f62\u5f0f\u3002","title":"10.7 MATLAB \u6587\u4ef6"},{"location":"10-data-import/#108-json","text":"JSON \u6307\u7684\u662f JavaScript \u5bf9\u8c61\u8868\u793a\u6cd5\uff08JavaScript Object Notation\uff09\uff0c\u5b83\u662f\u8f7b\u91cf\u7ea7\u7684\u6587\u672c\u6570\u636e\u4ea4\u6362\u683c\u5f0f\uff0c\u6613\u4e8e\u4eba\u9605\u8bfb\u548c\u7f16\u5199\u3002\u540c\u65f6\u4e5f\u6613\u4e8e\u673a\u5668\u89e3\u6790\u548c\u751f\u6210\uff0c\u5e76\u6709\u6548\u5730\u63d0\u5347\u7f51\u7edc\u4f20\u8f93\u6548\u7387\u3002JSON \u867d\u7136\u4f7f\u7528 Javascript \u8bed\u6cd5\u6765\u63cf\u8ff0\u6570\u636e\u5bf9\u8c61\uff0c\u4f46\u662f\u5b83\u5b8c\u5168\u72ec\u7acb\u4e8e\u7f16\u7a0b\u8bed\u8a00\u548c\u5e73\u53f0\u3002\u76ee\u524d\u975e\u5e38\u591a\u7684\u52a8\u6001\uff08PHP\u3001Python\u3001R\uff09\u7f16\u7a0b\u8bed\u8a00\u90fd\u652f\u6301 JSON\u3002 JSON \u7684\u8bed\u6cd5\u89c4\u5219\u5982\u4e0b\uff1a \u6570\u636e\u5728\u540d\u79f0/\u503c\u5bf9\u4e2d \u6570\u636e\u7531\u9017\u53f7\u5206\u9694 \u5927\u62ec\u53f7\u4fdd\u5b58\u5bf9\u8c61 \u4e2d\u62ec\u53f7\u4fdd\u5b58\u6570\u7ec4 \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u5bf9\u8c61\u793a\u4f8b\uff1a { \"\u540d\u5b57\": \"Mike Wang\" , \"\u4e2a\u4eba\u4e3b\u9875\":\"www.xxx.com\" } \u5f53\u5b58\u5728\u591a\u4e2a\u6570\u636e\u65f6\uff0c\u5219\u53ef\u4ee5\u7528\u6570\u7ec4\u8868\u793a\u3002 { \"sites\": [ { \"\u540d\u5b57\": \"Mike Wang\" , \"\u4e2a\u4eba\u4e3b\u9875\":\"www.xxx.com\" }, { \"\u540d\u5b57\": \"Mike Zhang\" , \"\u4e2a\u4eba\u4e3b\u9875\":\"www.xx1.com\" }, { \"\u540d\u5b57\": \"Mike Li\" , \"\u4e2a\u4eba\u4e3b\u9875\":\"www.xx2.com\" } ] } \u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u79cd\u7ed3\u6784\u5728 Python \u4e2d\u5c31\u662f\u5217\u8868\u548c\u5b57\u5178\u7684\u5d4c\u5957\uff0c\u56e0\u6b64\u4f7f\u7528 Python \u975e\u5e38\u5bb9\u6613\u5b8c\u6210 JSON \u7684\u89e3\u6790\u3002Python \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u51c6\u6a21\u5757 json \u4e13\u95e8\u5904\u7406\u8fd9\u9879\u5de5\u4f5c\uff0c\u5176\u4e2d loads()\u3001load() \u51fd\u6570\u7528\u4e8e\u5c06 JSON \u7ed3\u6784\u89e3\u6790\u4e3a Python \u5bf9\u8c61\uff0cdumps()\u3001dump() \u51fd\u6570\u7528\u4e8e\u5c06 Python \u5bf9\u8c61\u89e3\u6790\u4e3a JSON \u7ed3\u6784\u3002\u8fd9\u91cc\uff0c\u5e26 s \u7ed3\u5c3e\u7684\u51fd\u6570\u7684\u7528\u5904\u662f\u5904\u7406\u975e\u6587\u672c\u5bf9\u8c61\uff0c\u800c\u4e0d\u5e26 s \u7ed3\u5c3e\u7684\u51fd\u6570\u7528\u5904\u662f\u5904\u7406\u6587\u4ef6\uff0c\u8bf7\u8bfb\u8005\u6ce8\u610f\u533a\u5206\u3002 \u6211\u4eec\u5148\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u4e86\u89e3 loads() \u548c dumps() \u4e24\u4e2a\u51fd\u6570\u7684\u7528\u6cd5\u3002 In [1]: import json In [2]: json_data = '{ \"\u540d\u5b57\": \"Mike Wang\" , \"\u4e2a\u4eba\u4e3b\u9875\":\"www.x ...: xx.com\" }' In [3]: json.loads(json_data) # \u89e3\u6790 json \u6570\u636e\u4e3a\u5b57\u5178 Out[3]: {'\u540d\u5b57': 'Mike Wang', '\u4e2a\u4eba\u4e3b\u9875': 'www.xxx.com'} In [4]: data = json.loads(json_data) In [5]: json.dumps(data) # \u5c06\u5b57\u5178\u89e3\u6790\u4e3a json \u6570\u636e Out[5]: '{\"\\\\u540d\\\\u5b57\": \"Mike Wang\", \"\\\\u4e2a\\\\u4eba\\\\u4e3b\\\\u9875\": \"www.xxx.com\"}' Python \u4e0e JSON \u7684\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\u8868\u6240\u793a\uff1a Python \u5bf9\u8c61 JSON \u7b49\u4ef7\u7269 \u5b57\u5178 \u5bf9\u8c61 \u5217\u8868\u3001\u5143\u7ec4 \u6570\u7ec4 \u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32 \u6570\u503c \u6570\u503c True true False false None null \u4e0b\u9762\u662f\u4e00\u4e9b\u7b80\u5355\u7684\u6d4b\u8bd5\uff1a In [7]: json.dumps([1, 2, 3]) Out[7]: '[1, 2, 3]' In [8]: json.dumps(True) Out[8]: 'true' In [9]: json.dumps(None) Out[9]: 'null' In [10]: json.dumps(('a', 'b', 'c')) Out[10]: '[\"a\", \"b\", \"c\"]' load() \u548c dump() \u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u8f93\u5165\u662f\u6587\u672c\u5bf9\u8c61\uff0c\u8bfb\u8005\u6839\u636e\u524d\u9762\u6240\u5b66\u7684\u77e5\u8bc6\u53ef\u4ee5\u63a8\u6d4b\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u5e94\u8be5\u53ef\u4ee5\u5bfc\u5165 JSON \u6587\u4ef6\u3002 with open('xxx.json') as f: data = json.load(f) \u73b0\u5728\u6211\u4eec\u8bd5\u4e00\u8bd5\uff1a In [12]: with open('files/chapter10/data.json', 'r', encoding= ...: 'utf-8') as f: ...: data = json.load(f) ...: In [13]: data Out[13]: {'sites': [{'\u540d\u5b57': 'Mike Wang', '\u4e2a\u4eba\u4e3b\u9875': 'www.xxx.com'}, {'\u540d\u5b57': 'Mike Zhang', '\u4e2a\u4eba\u4e3b\u9875': 'www.xx1.com'}, {'\u540d\u5b57': 'Mike Li', '\u4e2a\u4eba\u4e3b\u9875': 'www.xx2.com'}]} \u7528\u6cd5\u7684\u786e\u662f\u8fd9\u6837\u7684\u3002\u5229\u7528 dump() \u51fd\u6570\u548c\u7c7b\u4f3c\u7684\u64cd\u4f5c\uff0c\u8bfb\u8005\u4e0d\u59a8\u8bd5\u8bd5\u5c06 Python \u5bf9\u8c61\u5bfc\u51fa\u4fdd\u5b58\u4e3a JSON \u6587\u4ef6\u3002","title":"10.8 json \u6587\u4ef6"},{"location":"10-data-import/#109-yaml","text":"YAML \u662f \u201cYet Another Markup Language\u201d\uff08\u4ecd\u662f\u4e00\u79cd\u6807\u8bb0\u8bed\u8a00\uff09\u7684\u7f29\u5199\uff0c\u5b83\u5e38\u89c1\u4e8e\u914d\u7f6e\u6587\u4ef6\uff0c\u5982 Markdown \u6587\u6863\u7684\u6587\u4ef6\u5934\u5143\u4fe1\u606f\u6ce8\u91ca\u5c31\u5e38\u5e38\u91c7\u7528 YAML \u683c\u5f0f\u3002YAML \u53ef\u4ee5\u7b80\u5355\u8868\u8fbe\u6e05\u5355\u3001\u6563\u5217\u8868\uff0c\u6807\u91cf\u7b49\u6570\u636e\u5f62\u6001\u3002\u5b83\u4f7f\u7528\u7a7a\u767d\u7b26\u53f7\u7f29\u8fdb\u548c\u5927\u91cf\u4f9d\u8d56\u5916\u89c2\u7684\u7279\u8272\uff0c\u5de7\u5999\u907f\u5f00\u5404\u79cd\u5c01\u95ed\u7b26\u53f7\uff0c\u5982\uff1a\u5f15\u53f7\u3001\u5404\u79cd\u62ec\u53f7\u7b49\uff0c\u8fd9\u4e9b\u7b26\u53f7\u5728\u5d4c\u5957\u7ed3\u6784\u65f6\u4f1a\u53d8\u5f97\u590d\u6742\u800c\u96be\u4ee5\u8fa8\u8ba4\uff0c\u56e0\u800c\u7279\u522b\u9002\u5408\u7528\u6765\u8868\u8fbe\u6216\u7f16\u8f91\u6570\u636e\u7ed3\u6784\u3001\u5404\u79cd\u914d\u7f6e\u6587\u4ef6\u3001\u503e\u5370\u8c03\u8bd5\u5185\u5bb9\u3001\u6587\u4ef6\u5927\u7eb2\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a YAML \u683c\u5f0f\u7684\u7b80\u5355\u793a\u4f8b\uff1a a string: bla another dict: foo: bar key: value the answer: 42 YAML \u4e0e JSON \u683c\u5f0f\u7684\u5173\u7cfb\u5f88\u4eb2\u5bc6\uff0cJSON \u7684\u8bed\u6cd5\u662f YAML 1.2 \u7248\u7684\u5b50\u96c6\uff0c\u56e0\u6b64\u5927\u90e8\u5206\u7684 JSON \u6587\u4ef6\u90fd\u53ef\u4ee5\u88ab YAML \u7684\u5256\u6790\u5668\u5256\u6790\u3002\u867d\u7136 YAML \u4e5f\u53ef\u4ee5\u91c7\u7528\u7c7b\u4f3c JSON \u7684\u5199\u6cd5\uff0c\u4e0d\u8fc7 YAML \u6807\u51c6\u5e76\u4e0d\u5efa\u8bae\u8fd9\u6837\u4f7f\u7528\uff0c\u9664\u975e\u8fd9\u6837\u7f16\u5199\u80fd\u8ba9\u6587\u4ef6\u53ef\u8bfb\u6027\u589e\u52a0\u3002 YAML \u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a \u4f7f\u7528\u82f1\u6587\u4e95\u53f7\u8fdb\u884c\u6ce8\u91ca\u6807\u8bc6\uff0c\u8fd9\u4e0e Python \u4e00\u81f4\uff1b \u4f7f\u7528\u7f29\u8fdb\u8868\u793a\u5c42\u7ea7\u5173\u7cfb\uff0c\u5e76\u53ea\u80fd\u4f7f\u7528\u7a7a\u683c\u7f29\u8fdb\uff0c\u4e0d\u80fd\u4f7f\u7528\u5236\u8868\u7b26\uff1b \u533a\u5206\u5927\u5c0f\u5199\uff1b \u7f29\u8fdb\u7684\u7a7a\u683c\u6570\u76ee\u4e0d\u56fa\u5b9a\uff0c\u53ea\u9700\u8981\u76f8\u540c\u5c42\u7ea7\u7684\u5143\u7d20\u5de6\u4fa7\u5bf9\u9f50\uff1b \u6587\u4ef6\u4e2d\u7684\u5b57\u7b26\u4e32\u4e0d\u9700\u8981\u4f7f\u7528\u5f15\u53f7\u6807\u6ce8\uff0c\u4f46\u82e5\u5b57\u7b26\u4e32\u5305\u542b\u6709\u7279\u6b8a\u5b57\u7b26\u5219\u9700\u7528\u5f15\u53f7\u6807\u6ce8\uff1b \u8fd9\u91cc\u63d0\u9192\u8bfb\u8005\u6ce8\u610f\u7b2c\u4e8c\u70b9\uff0c\u56e0\u4e3a Python \u662f\u540c\u65f6\u652f\u6301\u7a7a\u683c\u548c\u5236\u8868\u7b26\u7f29\u8fdb\u7684\uff0c\u53ea\u8981\u5728\u4e66\u5199\u4ee3\u7801\u5757\u65f6\u4fdd\u6301\u4e00\u81f4\u5373\u53ef\uff0c\u800c YAML \u4e0d\u652f\u6301\u5236\u8868\u7b26\u7f29\u8fdb\uff0c\u8fd9\u6837\u5982\u679c\u6211\u4eec\u5de5\u4f5c\u65f6\u540c\u65f6\u7f16\u8f91\u548c\u5904\u7406 Python \u548c YAML \u6587\u4ef6\u65f6\u7a0d\u4e0d\u6ce8\u610f YAML \u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u60f3\u4e0d\u5230\u7684\u8bed\u6cd5\u9519\u8bef\u3002\u6700\u597d\u7684\u89e3\u51b3\u529e\u6cd5\u662f\u5bf9\u4ee3\u7801\u7f16\u8f91\u5668\u8bbe\u5b9a\u5c06\u5236\u8868\u7b26\u8f6c\u6362\u4e3a\u7279\u5b9a\u6570\u76ee\u7684\u7a7a\u683c\u7b26\uff0c\u4e00\u822c\u662f 4 \u4e2a\u6216\u8005 2 \u4e2a\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u6240\u6709\u6587\u4ef6\u4f7f\u7528\u5236\u8868\u7b26\u7f29\u8fdb\u4e86\u3002\u5177\u4f53\u7684\u529e\u6cd5\u8bf7\u8bfb\u8005\u81ea\u884c\u641c\u7d22\u89e3\u51b3\u3002 YAML \u652f\u6301\u7684\u6570\u636e\u7ed3\u6784\u5982\u4e0b\uff1a \u5bf9\u8c61\uff1a\u952e\u503c\u5bf9\u7684\u96c6\u5408\uff0c\u7c7b\u4f3c Python \u4e2d\u7684\u5b57\u5178\uff1b \u6570\u7ec4\uff1a\u4e00\u7ec4\u6309\u5e8f\u6392\u5217\u7684\u503c\uff0c\u7b80\u79f0 \u201c\u5e8f\u5217\u6216\u5217\u8868\u201d\u3002\u6570\u7ec4\u524d\u52a0\u6709 \u201c-\u201d \u7b26\u53f7\uff0c\u7b26\u53f7\u4e0e\u503c\u4e4b\u95f4\u9700\u7528\u7a7a\u683c\u5206\u9694\uff1b \u6807\u91cf\uff1a\u5355\u4e2a\u7684\u3001\u4e0d\u53ef\u518d\u5206\u7684\u503c\uff0c\u5982\uff1a\u5b57\u7b26\u4e32\u3001bool \u503c\u3001\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u65f6\u95f4\u3001\u65e5\u671f\u3001null \u7b49\uff1b None\uff1a\u7a7a\u503c\uff0c\u7528 null \u6216 ~ \u8868\u793a\u3002 \u4e0b\u9762\u662f\u5e38\u89c1\u6807\u91cf\u7684\u8868\u793a\u65b9\u5f0f\uff1a \u5b57\u7b26\u4e32: name \u7279\u6b8a: \"name\\n\" \u6570\u503c: 3.14 \u5e03\u5c14\u503c: true \u7a7a\u503c: null \u7a7a\u503c2: ~ \u65f6\u95f4\u503c: 2019-11-11t11:33:22.55-06:00 \u65e5\u671f\u503c: 2019-11-11 Python \u63d0\u4f9b\u4e86 yaml \u6a21\u5757\u4ee5\u8fdb\u884c YAML \u6587\u4ef6\u7684\u89e3\u6790\uff0c\u4f7f\u7528\u65b9\u6cd5\u548c\u51fd\u6570\u540d\u90fd\u4e0e json \u7c7b\u4f3c\uff0c\u5373\u4f7f\u7528\u6587\u4ef6\u64cd\u4f5c\u51fd\u6570 open() \u6587\u4ef6\uff0c\u4f7f\u7528 safe_load() \u89e3\u6790 YAML \u6587\u4ef6\uff08load() \u51fd\u6570\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u4e0d\u5b89\u5168\uff09\uff0c\u4f7f\u7528 dump() \u4fdd\u5b58 YAML \u6587\u4ef6\u3002 \u4e0b\u9762\u5c31 YAML \u6587\u4ef6\u7684\u5bfc\u5165\u4e3e\u4e24\u4e2a\u4f8b\u5b50\uff0c\u5bfc\u51fa\u4e0e\u64cd\u4f5c JSON \u6587\u4ef6\u4e00\u81f4\uff0c\u56e0\u800c\u4e0d\u518d\u8d58\u8ff0\u3002 \u7b2c\u4e00\u4e2a\u4f8b\u5b50\u662f\u5c06\u4e0a\u9762\u5c55\u793a\u7684\u6807\u91cf\u8868\u793a\u65b9\u5f0f\u4fdd\u5b58\u5230 YAML \u6587\u4ef6 data1.yml \u4e2d\uff08YAML \u4e00\u822c\u4ee5 .yml \u4f5c\u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\uff09\uff0c\u6211\u4eec\u4f7f\u7528 Python yaml \u6a21\u5757\u89e3\u6790\u770b\u770b\u5b83\u4eec\u5728 Python \u7684\u8868\u73b0\u65b9\u5f0f\u3002 In [1]: import yaml In [2]: with open('files/chapter10/data1.yml', encoding='utf-8') as f: ...: data = yaml.safe_load(f) ...: In [3]: data Out[3]: {'\u5b57\u7b26\u4e32': 'name', '\u7279\u6b8a': 'name\\n', '\u6570\u503c': 3.14, '\u5e03\u5c14\u503c': True, '\u7a7a\u503c': None, '\u7a7a\u503c2': None, '\u65f6\u95f4\u503c': datetime.datetime(2019, 11, 11, 17, 33, 22, 550000), '\u65e5\u671f\u503c': datetime.date(2019, 11, 11)} \u7ed3\u679c\u663e\u793a\u662f\u4e00\u4e2a Python \u5b57\u5178\uff0c\u6bcf\u4e00\u884c\u7684\u5185\u5bb9\u90fd\u8f6c\u6362\u4e3a\u4e86\u4e00\u4e2a\u952e\u503c\u5bf9\u3002 \u6211\u4eec\u518d\u89c2\u5bdf\u4e00\u4e2a\u5d4c\u5957\u952e\u503c\u5bf9\u548c\u6570\u7ec4\u7684\u7ed3\u679c\u3002 user1: type: user name: a password: 123 user2: type: user name: b password: 456 user3: type: group name: - aa - bb - cc password: - 123 - 456 - null summary: - user1 - user2 - user3 \u4e0a\u9762\u6211\u4eec\u865a\u6784\u4e86\u4e00\u7ec4\u7b80\u5355\u5730\u7528\u6237\u7ba1\u7406\u6570\u636e\uff0c\u7528\u6237 user1 \u548c user1 \u662f\u4e2a\u4f53\u7528\u6237\uff0cuser3 \u662f\u7fa4\u7ec4\u7528\u6237\u3002 In [12]: with open('files/chapter10/data2.yml', encoding='utf-8') as f: ...: data = yaml.safe_load(f) ...: In [13]: data Out[13]: {'user1': {'type': 'user', 'name': 'a', 'password': 123}, 'user2': {'type': 'user', 'name': 'b', 'password': 456}, 'user3': {'type': 'group', 'name': ['aa', 'bb', 'cc'], 'password': [123, 456, None]}, 'summary': ['user1', 'user2', 'user3']} ``` \u8bfb\u8005\u4e0d\u59a8\u5bf9\u6bd4\u4e0a\u4e00\u8282\u4ecb\u7ecd\u7684 JSON \u548c\u672c\u8282\u4ecb\u7ecd\u7684 YAML\uff0c\u4ece\u89c6\u89c9\u611f\u5b98\u6765\u770b\uff0c\u867d\u7136\u4e24\u8005\u90fd\u6bd4\u8f83\u5bb9\u6613\u770b\u61c2\uff0cYAML \u7684\u5199\u6cd5\u66f4\u52a0\u6613\u8bfb\uff0c\u800c JSON \u7684\u5199\u6cd5\u66f4\u52a0\u5bb9\u6613\u548c Python \u89e3\u6790\u540e\u5c55\u793a\u7684\u7ed3\u679c\u76f4\u89c2\u5bf9\u5e94\u8d77\u6765\u3002\u53ef\u80fd\u5c31\u662f\u8fd9\u79cd\u5dee\u5f02\u8ba9\u51fa\u5904\u76f8\u540c\u3001\u7528\u5904\u76f8\u540c\u7684\u4e24\u8005\u5728\u5b9e\u9645\u7684\u5e94\u7528\u65b9\u5411\u4e0a\u5b58\u5728\u5dee\u5f02\uff1aJSON \u5e38\u7528\u4e8e\u6570\u636e\u4ea4\u6362\uff08\u673a\u5668\u89e3\u8bfb\uff09\uff0c\u800c YAML \u5e38\u7528\u4f5c\u914d\u7f6e\u6587\u4ef6\uff08\u4eba\u7c7b\u7f16\u8f91\uff09\u3002 ## 10.10 \u7f51\u9875\u6570\u636e \u7f51\u9875\u6570\u636e\u7684\u89e3\u6790\u5e38\u4e0e\u4e00\u4e2a\u5e7f\u6cdb\u6d41\u884c\u7684\u9886\u57df\u201c\u722c\u866b\u201d\u76f8\u5173\u8054\u3002\u672c\u4e66\u4e0d\u4f1a\u5bf9\u6d89\u53ca\u722c\u866b\u6280\u672f\u7684\u89e3\u8bfb\uff0c\u4f46\u6709\u5fc5\u8981\u5411\u8bfb\u8005\u7b80\u5355\u4ecb\u7ecd\u4e0b\u7f51\u9875\u6570\u636e\u683c\u5f0f\u548c\u7b80\u5355\u7684\u5904\u7406\u529e\u6cd5\u3002 \u6211\u4eec\u76ee\u524d\u6240\u6d4f\u89c8\u7684\u7f51\u9875\u5168\u90e8\u662f\u4e00\u79cd\u53eb\u4f5c\u201c\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\u201d\uff08HyperText Markup Language\uff09\uff0c\u7b80\u79f0 HTML \u7684\u6587\u4ef6\u3002\u8d85\u6587\u672c\u662f\u4e00\u79cd\u7ec4\u7ec7\u4fe1\u606f\u7684\u65b9\u5f0f\uff0c\u5b83\u5305\u62ec\u4e00\u7cfb\u5217\u6807\u7b7e\uff0e\u901a\u8fc7\u8fd9\u4e9b\u6807\u7b7e\u53ef\u4ee5\u5c06\u7f51\u7edc\u4e0a\u7684\u6587\u6863\u683c\u5f0f\u7edf\u4e00\uff0c\u6587\u5b57\u3001\u56fe\u8868\u4e0e\u5176\u4ed6\u4fe1\u606f\u5a92\u4f53\u76f8\u5173\u8054\u3002\u8fd9\u4e9b\u76f8\u4e92\u5173\u8054\u7684\u4fe1\u606f\u5a92\u4f53\u53ef\u80fd\u5728\u540c\u4e00\u6587\u672c\u4e2d\uff0c\u4e5f\u53ef\u80fd\u662f\u5176\u4ed6\u6587\u4ef6\uff0c\u6216\u662f\u5730\u7406\u4f4d\u7f6e\u76f8\u8ddd\u9065\u8fdc\u7684\u67d0\u53f0\u8ba1\u7b97\u673a\u4e0a\u7684\u6587\u4ef6\u3002 \u5982\u679c\u6211\u4eec\u5728\u672c\u5730\u6d4f\u89c8 HTML \u6587\u4ef6\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5e26\u6709\u5404\u79cd\u6807\u7b7e\u7684\u6587\u672c\uff0c\u5b83\u5fc5\u987b\u5728\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u548c\u88ab\u6d4f\u89c8\u5668\u89e3\u6790\u624d\u80fd\u89c2\u5bdf\u5230\u76f8\u5e94\u7684\u7f51\u9875\u6548\u679c\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684 HTML \u6587\u4ef6\u5185\u5bb9\uff0c\u5b83\u8bbe\u5b9a\u4e86\u4e00\u4e2a\u7f51\u9875\u7684\u6807\u9898\u3001\u5185\u5bb9\u6807\u9898\u548c\u6bb5\u843d\u6587\u5b57\u3002 ```html <!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"> <title>\u4e00\u4e2a\u7f51\u9875</title> </head> <body> <h1>\u7b2c\u4e00\u4e2a\u6807\u9898</h1> <p>\u7b2c\u4e00\u4e2a\u6bb5\u843d\u3002</p> </body> </html> \u8bfb\u8005\u53ef\u4ee5\u5c06\u5b83\u5b58\u50a8\u5230\u4e00\u4e2a\u4ee5 .html \u4f5c\u4e3a\u6587\u4ef6\u62d3\u5c55\u540d\u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u540e\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u5b83\u67e5\u770b\u7f51\u9875\u7684\u663e\u793a\u6548\u679c\u3002 \u867d\u7136\u5185\u5bb9\u6bd4\u8f83\u77ed\uff0c\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u8f7b\u6613\u5730\u4ece\u4e2d\u53d1\u73b0 HTML \u683c\u5f0f\u7684\u89c4\u5f8b\uff0c\u5b83\u4f7f\u7528\u7684\u5927\u90e8\u5206\u6807\u7b7e\u90fd\u662f\u4ee5 \\ \u7684\u5f62\u5f0f\u5f00\u59cb\uff0c\u4ee5 \\ \u7684\u5f62\u5f0f\u7ed3\u675f\uff0c\u5b83\u7684\u6807\u7b7e\u4f5c\u7528\u4e00\u822c\u7531\u5bf9\u5e94\u7684\u82f1\u6587\u6240\u5c55\u793a\uff0c\u6240\u4ee5\u4e5f\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u3002 \u8fdb\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u5982\u679c\u628a\u8fd9\u4e9b\u6807\u7b7e\u60f3\u8c61\u4e3a\u6811\u7684\u7ed3\u6784\uff0c\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u7684\u4fe1\u606f\uff1a html |__ head | |__ title: \u4e00\u4e2a\u7f51\u9875 | |__ body |__ h1: \u7b2c\u4e00\u4e2a\u6807\u9898 |__ p: \u7b2c\u4e00\u4e2a\u6bb5\u843d \u5f53\u7136\uff0c\u6211\u4eec\u4e0a\u7f51\u6d4f\u89c8\u7684\u7f51\u9875\u90fd\u6bd4\u8fd9\u8981\u590d\u6742\u5f97\u591a\u3002\u4e92\u8054\u7f51\u4e2d\uff0cHTML \u8fd9\u79cd\u6811\u7ed3\u6784\u4e2d\u5b58\u50a8\u7740\u5de8\u91cf\u7684\u4fe1\u606f\uff0c\u4f5c\u4e3a\u6570\u636e\u5206\u6790\u4eba\u5458\u6211\u4eec\u6709\u65f6\u5019\u4e0d\u53ef\u907f\u514d\u8981\u9762\u5bf9\u89e3\u6790\u5b83\u4eec\u3002 Python \u6807\u51c6\u6a21\u5757 html.parser \u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684 HTML \u89e3\u6790\u5668\uff0c\u8fd9\u4e2a\u6a21\u5757\u5b9a\u4e49\u4e86\u4e00\u4e2a HTMLParser \u7c7b\uff0c\u8be5\u7c7b\u7684\u5b9e\u4f8b\u7528\u6765\u63a5\u53d7 HTML \u6570\u636e\uff0c\u5e76\u5728\u6807\u8bb0\u5f00\u59cb\u3001\u6807\u8bb0\u7ed3\u675f\u3001\u6587\u672c\u3001\u6ce8\u91ca\u548c\u5176\u4ed6\u5143\u7d20\u6807\u8bb0\u51fa\u73b0\u7684\u65f6\u5019\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5\u3002\u8981\u5b9e\u73b0\u5177\u4f53\u7684\u884c\u4e3a\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 HTMLParser \u7684\u5b50\u7c7b\u5e76\u91cd\u8f7d\u5176\u65b9\u6cd5\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u6765\u81ea Python \u5b98\u65b9\u6587\u6863\u7684\u793a\u4f8b\uff1a In [1]: from html.parser import HTMLParser ...: ...: class MyHTMLParser(HTMLParser): ...: def handle_starttag(self, tag, attrs): ...: print(\"Encountered a start tag:\", tag) ...: ...: def handle_endtag(self, tag): ...: print(\"Encountered an end tag :\", tag) ...: ...: def handle_data(self, data): ...: print(\"Encountered some data :\", data) ...: ...: parser = MyHTMLParser() ...: parser.feed('<html><head><title>Test</title></head>' ...: '<body><h1>Parse me!</h1></body></html>') Encountered a start tag: html Encountered a start tag: head Encountered a start tag: title Encountered some data : Test Encountered an end tag : title Encountered an end tag : head Encountered a start tag: body Encountered a start tag: h1 Encountered some data : Parse me! Encountered an end tag : h1 Encountered an end tag : body Encountered an end tag : html \u63a5\u4e0b\u6765\u6211\u4eec\u8bd5\u7740\u7528\u8fd9\u4e2a\u89e3\u6790\u5668\u89e3\u6790\u4e0a\u9762\u7684 HTML \u6587\u4ef6\u3002 In [2]: with open('files/chapter10/data.html', encoding='utf=8') as f: ...: parser.feed(f.read()) ...: Encountered some data : Encountered a start tag: html Encountered some data : Encountered a start tag: head Encountered some data : Encountered a start tag: meta Encountered some data : Encountered a start tag: title Encountered some data : \u4e00\u4e2a\u7f51\u9875 Encountered an end tag : title Encountered some data : Encountered an end tag : head Encountered some data : Encountered a start tag: body Encountered some data : Encountered a start tag: h1 Encountered some data : \u7b2c\u4e00\u4e2a\u6807\u9898 Encountered an end tag : h1 Encountered some data : Encountered a start tag: p Encountered some data : \u7b2c\u4e00\u4e2a\u6bb5\u843d\u3002 Encountered an end tag : p Encountered some data : Encountered an end tag : body Encountered some data : Encountered an end tag : html Encountered some data : \u901a\u8fc7\u5bf9\u4e0a\u8ff0\u7a0b\u5e8f\u589e\u52a0\u5224\u65ad\u8bed\u53e5\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6\u81ea\u5df1\u611f\u5174\u8da3\u7684\u6570\u636e\u3002\u4e0d\u8fc7\u5bf9\u4e8e Python \u521d\u5b66\u8005\u6765\u8bf4\uff0c\u6211\u4eec\u6709\u66f4\u597d\u7684\u9009\u62e9\uff0c\u90a3\u5c31\u662f\u5927\u540d\u9f0e\u9f0e\u7684 BeautifulSoup \u5305\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u8981\u63d0\u53d6\u4e0a\u9762 h1 \u6807\u7b7e\u5b58\u50a8\u7684\u4fe1\u606f\uff1a In [3]: from bs4 import BeautifulSoup In [4]: with open('files/chapter10/data.html', encoding='utf=8') as f: ...: html_data = f.read() In [5]: parsed_html = BeautifulSoup(html_data) # \u6784\u5efa\u6570\u636e\u5bf9\u8c61 In [6]: parsed_html.body.find('h1').text # \u67e5\u627e h1 \u5e76\u83b7\u53d6\u5185\u5bb9 Out[6]: '\u7b2c\u4e00\u4e2a\u6807\u9898' \u722c\u866b\u6280\u672f\u548c BeautifulSoup \u5305\u7684\u4f7f\u7528\u65b9\u6cd5\u5b9e\u5728\u592a\u8fc7\u4e30\u5bcc\uff0cHTML \u4e5f\u662f\u4e00\u95e8\u8bed\u8a00\uff0c\u56e0\u4e3a\u4e00\u65f6\u96be\u4ee5\u8be6\u5c3d\uff0c\u672c\u4e66\u90fd\u4e0d\u5b9c\u8fdb\u884c\u8fc7\u591a\u4ecb\u7ecd\u3002\u611f\u5174\u8da3\u7684\u8bfb\u8005\u8bf7\u9605\u8bfb\u5b98\u65b9\u7f51\u7ad9 https://www.crummy.com/software/BeautifulSoup/ \u548c\u8d2d\u4e70\u4e13\u4e1a\u7684\u722c\u866b\u6280\u672f\u4e66\u7c4d\u8fdb\u884c\u5b66\u4e60\u3002","title":"10.9 YAML \u6587\u4ef6"},{"location":"10-data-import/#1011_1","text":"\u672c\u7ae0\u7684\u6700\u540e\u4e00\u8282\u672c\u4e66\u5bf9\u8bfb\u5199\u6570\u636e\u5e93\u8fdb\u884c\u7b80\u5355\u7684\u4ecb\u7ecd\u3002\u5546\u4e1a\u5206\u6790\u7684\u5de5\u4f5c\u8005\u901a\u5e38\u9700\u8981\u638c\u63e1\u6570\u636e\u5e93\u64cd\u4f5c\uff0c\u800c\u6570\u636e\u79d1\u5b66\u5bb6\u4eec\u5219\u6bd4\u8f83\u5c11\u4f7f\u7528\u6570\u636e\u5e93\u3002 J.Martin \u7ed9\u6570\u636e\u5e93\u4e0b\u4e86\u4e00\u4e2a\u6bd4\u8f83\u5b8c\u6574\u7684\u5b9a\u4e49\uff1a \u6570\u636e\u5e93\u662f\u5b58\u50a8\u5728\u4e00\u8d77\u7684\u76f8\u5173\u6570\u636e\u7684\u96c6\u5408\uff0c\u8fd9\u4e9b\u6570\u636e\u662f\u7ed3\u6784\u5316\u7684\uff0c\u65e0\u6709\u5bb3\u7684\u6216\u4e0d\u5fc5\u8981\u7684\u5197\u4f59\uff0c\u5e76\u4e3a\u591a\u79cd\u5e94\u7528\u670d\u52a1\uff1b\u6570\u636e\u7684\u5b58\u50a8\u72ec\u7acb\u4e8e\u4f7f\u7528\u5b83\u7684\u7a0b\u5e8f\uff1b\u5bf9\u6570\u636e\u5e93\u63d2\u5165\u65b0\u6570\u636e\uff0c\u4fee\u6539\u548c\u68c0\u7d22\u539f\u6709\u6570\u636e\u5747\u80fd\u6309\u4e00\u79cd\u516c\u7528\u7684\u548c\u53ef\u63a7\u5236\u7684\u65b9\u5f0f\u8fdb\u884c\u3002\u5f53\u67d0\u4e2a\u7cfb\u7edf\u4e2d\u5b58\u5728\u7ed3\u6784\u4e0a\u5b8c\u5168\u5206\u5f00\u7684\u82e5\u5e72\u4e2a\u6570\u636e\u5e93\u65f6\uff0c\u5219\u8be5\u7cfb\u7edf\u5305\u542b\u4e00\u4e2a\u201c\u6570\u636e\u5e93\u96c6\u5408\u201d\u3002 \u4f7f\u7528\u6570\u636e\u5e93\u53ef\u4ee5\u5e26\u6765\u8bb8\u591a\u597d\u5904\uff1a\u5982\u51cf\u5c11\u4e86\u6570\u636e\u7684\u5197\u4f59\u5ea6\uff0c\u4ece\u800c\u5927\u5927\u5730\u8282\u7701\u4e86\u6570\u636e\u7684\u5b58\u50a8\u7a7a\u95f4\uff1b\u5b9e\u73b0\u6570\u636e\u8d44\u6e90\u7684\u5145\u5206\u5171\u4eab\u7b49\u7b49\u3002 \u76ee\u524d\u6570\u636e\u5e93\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1a \u5173\u7cfb\u578b\u6570\u636e\u5e93 - \u6307\u91c7\u7528\u4e86\u5173\u7cfb\u6a21\u578b\u6765\u7ec4\u7ec7\u6570\u636e\u7684\u6570\u636e\u5e93\u3002\u5173\u7cfb\u6a21\u578b\u6307\u7684\u5c31\u662f\u4e8c\u7ef4\u8868\u683c\u6a21\u578b\uff0c\u800c\u4e00\u4e2a\u5173\u7cfb\u578b\u6570\u636e\u5e93\u5c31\u662f\u7531\u4e8c\u7ef4\u8868\u53ca\u5176\u4e4b\u95f4\u7684\u8054\u7cfb\u6240\u7ec4\u6210\u7684\u4e00\u4e2a\u6570\u636e\u7ec4\u7ec7\u3002\u7b80\u5355\u5730\u8bf4\uff0c\u5b83\u7684\u6570\u636e\u683c\u5f0f\u5c31\u50cf\u542b\u6709\u591a\u5f20\u7d27\u5bc6\u8868\u683c\u7684 Excel \u6587\u4ef6\u3002\u5f53\u524d\u4e3b\u6d41\u7684\u5173\u7cfb\u6570\u636e\u5e93\u6709 Oracle\uff0cMicrosoft SQL Server\u3001MySQL\u3001PostgreSQL\u3001DB2\u3001Microsoft Access\u3001SQLite\u3001Teradata\u3001MariaDB\u3001SAP \u7b49\uff1b \u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93 - \u6307\u975e\u5173\u7cfb\u578b\u7684\uff0c\u5206\u5e03\u5f0f\u7684\u3002\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4ee5\u952e\u503c\u5bf9\u5b58\u50a8\uff0c\u4e14\u7ed3\u6784\u4e0d\u56fa\u5b9a\uff0c\u6bcf\u4e00\u4e2a\u5143\u7ec4\u53ef\u4ee5\u6709\u4e0d\u4e00\u6837\u7684\u5b57\u6bb5\uff0c\u6bcf\u4e2a\u5143\u7ec4\u53ef\u4ee5\u6839\u636e\u9700\u8981\u589e\u52a0\u4e00\u4e9b\u81ea\u5df1\u7684\u952e\u503c\u5bf9\uff0c\u4e0d\u5c40\u9650\u4e8e\u56fa\u5b9a\u7684\u7ed3\u6784\uff0c\u53ef\u4ee5\u51cf\u5c11\u4e00\u4e9b\u65f6\u95f4\u548c\u7a7a\u95f4\u7684\u5f00\u9500\u3002\u5176\u5b9e\u5c31\u662f\u672c\u4e66\u5728\u524d\u9762\u4ecb\u7ecd\u8fc7\u7684 JSON \u683c\u5f0f\u3002\u975e\u5173\u7cfb\u6570\u636e\u5e93\u7684\u4e3b\u8981\u4ee3\u8868\u6709 Redis\u3001Amazon DynamoDB\u3001Memcached\u3001Microsoft Azure Cosmos DB\u3002 \u5173\u7cfb\u578b\u6570\u636e\u5e93\u90fd\u662f\u9700\u8981\u901a\u8fc7 SQL \u8bed\u53e5\u8fdb\u884c\u64cd\u4f5c\uff0cSQL \u662f\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00\uff08Structured Query Language\uff09\u7684\u7f29\u5199\uff0c\u5b83\u662f\u4e00\u79cd\u5177\u6709\u7279\u5b9a\u7528\u9014\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u7528\u4e8e\u5b58\u53d6\u6570\u636e\u4ee5\u53ca\u67e5\u8be2\u3001\u66f4\u65b0\u548c\u7ba1\u7406\u5173\u7cfb\u6570\u636e\u5e93\u7cfb\u7edf\u3002\u56e0\u800c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u901a\u5e38\u88ab\u79f0\u4e3a SQL \u6570\u636e\u5e93\uff0c\u800c\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u5219\u79f0\u4e3a NoSQL \u6570\u636e\u5e93\u3002SQL \u7684\u5185\u5bb9\u8d85\u51fa\u672c\u4e66\u8303\u56f4\uff0c\u8bf7\u8bfb\u8005\u53c2\u8003\u7f51\u7edc\u8d44\u6599\u548c\u4e13\u4e1a\u4e66\u7c4d\u8fdb\u884c\u5b66\u4e60\u3002 \u5927\u90e8\u5206\u7684\u6570\u636e\u5e93\u90fd\u662f\u7531\u5546\u4e1a\u516c\u53f8\u53d1\u5e03\uff0c\u4f53\u79ef\u90fd\u6bd4\u8f83\u5e9e\u5927\uff0c\u5b89\u88c5\u9ebb\u70e6\uff0c\u800c\u4e14\u6709\u7684\u9700\u8981\u6536\u8d39\u3002\u76ee\u524d\u4e3b\u6d41\u8fd8\u662f\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4e0b\u9762\u9009\u62e9 SQLite \u8fdb\u884c\u5b66\u4e60\u3002SQLite \u662f\u5f00\u6e90\u8f6f\u4ef6\uff0c\u5b9e\u73b0\u4e86\u81ea\u7ed9\u81ea\u8db3\u7684\u3001\u65e0\u670d\u52a1\u5668\u7684\u3001\u96f6\u914d\u7f6e\u7684\u3001\u4e8b\u52a1\u6027\u7684 SQL \u6570\u636e\u5e93\u5f15\u64ce\uff0c\u5728\u4e16\u754c\u4e0a\u90e8\u7f72\u6700\u4e3a\u5e7f\u6cdb\u3002 \u5728 Python \u4e2d\u4f7f\u7528 SQLite \u9700\u8981 sqlite3 \u6a21\u5757\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u521b\u5efa\uff08\u8fde\u63a5\uff09\u6570\u636e\u5e93\u3001\u521b\u5efa\u6e38\u6807\u3001\u521b\u5efa\u8868\u683c\u3001\u5bf9\u8868\u683c\u64cd\u4f5c\u3001\u63d0\u4ea4\u4fee\u6539\u3001\u5173\u95ed\u6570\u636e\u5e93\u6574\u4e2a\u6d41\u7a0b\u3002\u6240\u6709\u7684\u6570\u636e\u5e93\u90fd\u9075\u5faa\u76f8\u4f3c\u7684\u64cd\u4f5c\u6d41\u7a0b\u3002 # \u5bfc\u5165\u6a21\u5757 import sqlite3 # \u8fde\u63a5\u6570\u636e\u5e93 connection = sqlite3.connect(\"data.db\") # \u521b\u5efa\u6e38\u6807 crsr = connection.cursor() # \u5bf9\u6570\u636e\u5e93\u4f7f\u7528 SQL \u8bed\u53e5\u521b\u5efa\u8868\u683c sql_command = \"\"\"CREATE TABLE emp ( staff_number INTEGER PRIMARY KEY, fname VARCHAR(20), lname VARCHAR(30), gender CHAR(1), joining DATE);\"\"\" # \u6267\u884c SQL \u8bed\u53e5 crsr.execute(sql_command) # \u4f7f\u7528 SQL \u8bed\u53e5\u5728\u8868\u683c\u4e2d\u63d2\u5165\u6570\u636e sql_command = \"\"\"INSERT INTO emp VALUES (23, \"Rishabh\", \"Bansal\", \"M\", \"2014-03-28\");\"\"\" crsr.execute(sql_command) # \u518d\u6b21\u63d2\u5165\u6570\u636e sql_command = \"\"\"INSERT INTO emp VALUES (1, \"Bill\", \"Gates\", \"M\", \"1980-10-28\");\"\"\" crsr.execute(sql_command) # \u63d0\u4ea4\u4fee\u6539\u5230\u6570\u636e\u5e93\uff08\u5982\u679c\u4e0d\u6267\u884c\u8be5\u64cd\u4f5c\uff0c\u4e0a\u9762\u7684\u4fee\u6539\u5c06\u4e0d\u4f1a\u4fdd\u5b58\uff09 connection.commit() # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 connection.close() \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u6570\u636e\u5e76\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u5f53\u6211\u4eec\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u65f6\uff0c\u5c31\u53ef\u4ee5\u8fde\u63a5\u6570\u636e\u5e93\u5e76\u83b7\u53d6\u6570\u636e\uff0c\u4e0b\u9762\u5c55\u793a\u4e86\u6570\u636e\u83b7\u53d6\u7684\u6d41\u7a0b\u3002 # \u5bfc\u5165\u6a21\u5757 import sqlite3 # \u8fde\u63a5 data \u6570\u636e\u5e93 connection = sqlite3.connect(\"data.db\") # \u521b\u5efa\u6e38\u6807 crsr = connection.cursor() # \u4ece\u8868\u683c emp \u4e2d\u67e5\u8be2\u6570\u636e crsr.execute(\"SELECT * FROM emp\") # \u5c06\u6570\u636e\u5b58\u50a8\u5230 ans \u53d8\u91cf ans= crsr.fetchall() # \u5faa\u73af\u6253\u5370\u6570\u636e for i in ans: print(i) # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 connection.close() \u4e0d\u96be\u770b\u51fa\uff0c\u64cd\u4f5c\u6570\u636e\u5e93\u6709\u4e00\u4e2a\u901a\u7528\u7684\u6a21\u5f0f\uff1a \u5bfc\u5165\u9700\u8981\u7684\u6a21\u5757 \u8fde\u63a5\u6570\u636e\u5e93 \u521b\u5efa\u6e38\u6807\u5bf9\u8c61 \u6267\u884c\u6570\u636e\u64cd\u4f5c\uff0c\u4e3b\u8981\u662f\u6267\u884c SQL \u8bed\u53e5 \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5","title":"10.11 \u6570\u636e\u5e93\u6570\u636e"},{"location":"10-data-import/#1012","text":"\u672c\u7ae0\u4ece\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684\u6570\u636e\u6587\u4ef6\u683c\u5f0f CSV \u51fa\u53d1\uff0c\u9010\u6b65\u4ecb\u7ecd\u4e86\u5e38\u89c1\u6570\u636e\u683c\u5f0f\u7684\u5bfc\u5165\u65b9\u6cd5\u3002CSV \u548c Excel \u6570\u636e\u7684\u5bfc\u5165\u64cd\u4f5c\u8bfb\u8005\u9700\u8981\u638c\u63e1\u7684\uff0c\u800c\u5176\u4ed6\u4e00\u4e9b\u6570\u636e\u683c\u5f0f\u5219\u9700\u8981\u8bfb\u8005\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u9700\u6c42\u8fdb\u884c\u6df1\u5165\u5b66\u4e60\uff0c\u672c\u4e66\u6240\u505a\u7684\u662f\u521d\u6b65\u7684\u4ecb\u7ecd\u548c\u5f15\u5bfc\u3002\u7f51\u7edc\u6570\u636e\u548c\u6570\u636e\u5e93\u6570\u636e\u7684\u5904\u7406\u5f88\u590d\u6742\uff0c\u672c\u4e66\u7684\u4e3e\u4f8b\u7684\u8f83\u4e3a\u7b80\u5355\uff0c\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u8bfb\u8005\u5bf9\u8fd9\u4e9b\u6570\u636e\u6709\u6240\u4e86\u89e3\u3002\u6570\u636e\u5206\u6790\u6d89\u53ca\u5404\u884c\u5404\u4e1a\uff0c\u4e0d\u540c\u7684\u8bfb\u8005\u8fdb\u884c\u6570\u636e\u5904\u7406\u9762\u5bf9\u7684\u6570\u636e\u683c\u5f0f\uff0c\u6570\u636e\u7ed3\u6784\u7279\u70b9\u90fd\u53ef\u80fd\u6709\u6240\u4e0d\u540c\uff0c\u5e0c\u671b\u8bfb\u8005\u901a\u8fc7\u672c\u7ae0\u7684\u5b66\u4e60\u80fd\u591f\u5b66\u4e60\u5230\u4e0e\u81ea\u5df1\u9886\u57df\u76f8\u5173\u6570\u636e\u7684\u5bfc\u5165\u65b9\u5f0f\uff0c\u5e76\u5bf9 Python \u7684\u5904\u7406\u80fd\u529b\u6709\u66f4\u6e05\u6670\u7684\u8ba4\u8bc6\u3002","title":"10.12 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"11-toolbox/","text":"\u7b2c 11 \u7ae0 \u6570\u636e\u5206\u6790\u5de5\u5177\u7bb1 \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : \u8f85\u52a9\u51fd\u6570\u4e0e\u5de5\u5177 \u4f5c\u7528\u57df\u4e0e\u6c42\u503c\u8ba1\u7b97 \u5f02\u5e38\u6355\u83b7 \u51fd\u6570\u5f0f\u7f16\u7a0b \u751f\u6210\u5668\u4e0e\u88c5\u9970\u5668 \u6b63\u5219\u8868\u8fbe\u5f0f \u672c\u7ae0\u7684\u6d89\u53ca\u7684\u5185\u5bb9\u975e\u5e38\u5e7f\u6cdb\uff0c\u76f8\u5bf9\u672c\u4e66\u5176\u4ed6\u7ae0\u8282\u800c\u8a00\u8f83\u4e3a\u9a73\u6742\uff0c\u4e3b\u65e8\u662f\u4ecb\u7ecd\u6570\u636e\u5206\u6790\u53ef\u80fd\u4f1a\u5229\u7528\u4e0a\u7684\u5de5\u5177\u51fd\u6570\u548c\u65b9\u6cd5\uff0c\u4e5f\u5305\u542b Python \u9ad8\u7ea7\u7f16\u7a0b\u76f8\u5173\u7684\u7406\u8bba\u77e5\u8bc6\u3002 11.1 \u8f85\u52a9\u51fd\u6570\u4e0e\u5de5\u5177 \u00b6 11.1.1 \u5e8f\u5217\u89e3\u5305 \u00b6 \u5728 Python \u4e2d\uff0c\u591a\u4e2a\u8d4b\u503c\u64cd\u4f5c\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5143\u7ec4\u5b9e\u73b0\uff1a x, y, z = 1, 2, 3 print(x, y, z) \u5229\u7528\u8be5\u65b9\u6cd5\u53ef\u4ee5\u4ea4\u6362\u591a\u4e2a\u53d8\u91cf\uff1a x, y = y, x \u8fd9\u7cbe\u7b80\u4e86\u4e0b\u9762\u4ee3\u7801\uff1a temp = x x = y y = temp \u8fd9\u79cd\u7279\u6027\u53eb\u505a\u5e8f\u5217\u89e3\u5305\uff0c\u5c06\u591a\u4e2a\u503c\u7684\u5e8f\u5217\u89e3\u5f00\uff0c\u7136\u540e\u653e\u5230\u5de6\u4fa7\u7684\u53d8\u91cf\u5e8f\u5217\u4e2d\u3002\u5f53\u51fd\u6570\u6216\u8005\u65b9\u6cd5\u8fd4\u56de\u5143\u7ec4\uff08\u6216\u5176\u4ed6\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff09\u65f6\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5c24\u4e3a\u6709\u7528\u3002 def func(): a = 1 b = 2 c = 3 return a, b, c # \u5e8f\u5217\u89e3\u5305\u64cd\u4f5c\uff1a # \u5c06\u51fd\u6570\u7ed3\u679c\u76f4\u63a5\u8d4b\u503c\u5230\u591a\u4e2a\u53d8\u91cf\u4e2d # \u6309\u987a\u5e8f\u4e00\u4e00\u5bf9\u5e94 # d <- a # e <- b # f <- c d, e, f = func() \u4e0a\u8ff0\u5e8f\u5217\u89e3\u5305\u64cd\u4f5c\u7b80\u5316\u4e86\u4e0b\u9762\u7684\u4ee3\u7801\uff1a # \u83b7\u53d6\u4e00\u4e2a\u5143\u7ec4\u7ed3\u679c tup_res = func() # \u5206\u522b\u8d4b\u503c d = tup_res[0] e = tup_res[1] f = tup_res[2] \u6ce8\u610f\uff0c\u7b49\u53f7\u4e24\u4fa7\u5143\u7d20\u6570\u91cf\u8981\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 11.1.2 \u65ad\u8a00 \u00b6 \u4e0e\u5176\u8ba9\u7a0b\u5e8f\u5728\u665a\u4e9b\u65f6\u5019\u5d29\u6e83\uff0c\u4e0d\u5982\u5728\u9519\u8bef\u6761\u4ef6\u51fa\u73b0\u65f6\u76f4\u63a5\u8ba9\u5b83\u5d29\u6e83\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c3d\u65e9\u9501\u5b9a\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u8282\u7701\u65f6\u95f4\u548c\u8c03\u8bd5\u6210\u672c\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cassert \u8bed\u53e5\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a\u3002 assert \u4f1a\u68c0\u67e5\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5982\u679c\u8fd4\u56de\u903b\u8f91\u503c False\uff0c\u5c31\u4f1a\u751f\u6210\u65ad\u8a00\u9519\u8bef\u3002assert \u4e5f\u53ef\u4ee5\u5e26\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7528\u6765\u8be6\u7ec6\u5730\u63cf\u8ff0\u9519\u8bef\u3002 In [1]: a = 10 In [2]: assert a > 10 --------------------------------------------------------------------- AssertionError Traceback (most recent call last) <ipython-input-2-92ef20669630> in <module> ----> 1 assert a > 10 AssertionError: In [3]: assert a > 10, 'a \u4e0d\u5927\u4e8e 10' --------------------------------------------------------------------- AssertionError Traceback (most recent call last) <ipython-input-3-d19bab11044a> in <module> ----> 1 assert a > 10, 'a \u4e0d\u5927\u4e8e 10' AssertionError: a \u4e0d\u5927\u4e8e 10 \u7a0b\u5e8f\u5458\u7ecf\u5e38\u5c06\u65ad\u8a00\u653e\u5230\u51fd\u6570\u7684\u5f00\u59cb\u90e8\u5206\u7528\u4e8e\u68c0\u67e5\u8f93\u5165\u662f\u5426\u5408\u6cd5\uff0c\u4ee5\u53ca\u5728\u51fd\u6570\u8c03\u7528\u540e\u4f7f\u7528\u4ee5\u68c0\u67e5\u8f93\u51fa\u662f\u5426\u5408\u6cd5\u3002 11.1.3 \u5e38\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5 \u00b6 \u672c\u5c0f\u8282\u4e3b\u8981\u901a\u8fc7\u4ee3\u7801\u793a\u4f8b\u7b80\u8981\u4ecb\u7ecd\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u65b9\u6cd5\uff0c\u5176\u4e2d\u4e00\u4e9b\u51fd\u6570\u5728\u524d\u9762\u7ae0\u8282\u4e2d\u6709\u8fc7\u4ecb\u7ecd\u548c\u4f7f\u7528\u3002 In [4]: print(\", \".join([\"spam\", \"eggs\", \"ham\"])) # \u5b57\u7b26\u4e32\u62fc\u63a5 spam, eggs, ham In [5]: print(\"Hello ME\".replace(\"ME\", \"wrold\")) # \u5b57\u7b26\u4e32\u66ff\u6362 Hello wrold In [6]: print(\"This is a sentence.\".startswith(\"This\")) # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5 This \u8d77\u59cb True In [7]: print(\"This is a sentence.\".endswith(\"sentence.\")) # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5 sentence. \u7ed3\u675f True In [8]: print(\"This is a sentence.\".upper()) # \u5b57\u6bcd\u5168\u90e8\u8f6c\u6362\u4e3a\u5927\u5199 THIS IS A SENTENCE. In [9]: print(\"THIS IS A SENTENCE.\".lower()) # \u5b57\u6bcd\u5168\u90e8\u8f6c\u6362\u4e3a\u5c0f\u5199 this is a sentence. In [10]: print(\"spam, eggs, ham\".split()) # \u5b57\u7b26\u4e32\u62c6\u5206 ['spam,', 'eggs,', 'ham'] 11.2 \u4f5c\u7528\u57df\u4e0e\u6c42\u503c\u8ba1\u7b97 \u00b6 11.2.1 \u4f5c\u7528\u57df \u00b6 \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u5728\u51fd\u6570\u5185\u90e8\u547d\u540d\u7684\u53d8\u91cf\u4e0d\u4f1a\u5f71\u54cd\u51fd\u6570\u5916\u90e8\u7684\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u81ea\u5df1\u4f5c\u7528\u7684\u8303\u56f4\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u9002\u7528\u4e8e\u51fd\u6570\uff0c\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6 Python \u5bf9\u8c61\u3002 In [11]: x = 1 In [12]: scope = vars() In [13]: scope['x'] Out[13]: 1 In [14]: scope['x'] += 2 In [15]: scope['x'] Out[15]: 3 In [16]: type(scope) Out[16]: dict \u4e0a\u8ff0\u4ee3\u7801\u5728\u6267\u884c x = 1 \u8d4b\u503c\u8bed\u53e5\u540e\uff0c\u7b26\u53f7 x \u5f15\u7528\u5230\u503c 1\u3002\u8fd9\u5c31\u50cf\u5b57\u5178\u4e00\u6837\uff0c\u952e\u5f15\u7528\u503c\u3002\u5f53\u7136\uff0c\u53d8\u91cf\u548c\u6240\u5bf9\u5e94\u7684\u503c\u7528\u7684\u662f\u4e00\u4e2a\u4e0d\u53ef\u89c1\u7684\u5b57\u5178\uff0c\u5b9e\u9645\u4e0a\u8fd9\u5df2\u7ecf\u5f88\u63a5\u8fd1\u771f\u5b9e\u60c5\u51b5\uff0c\u5185\u5efa\u7684 vars() \u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u8fd9\u4e2a\u5b57\u5178\u3002\u8fd9\u4e2a\u5b57\u5178\u5c31\u53eb\u505a\u547d\u540d\u7a7a\u95f4\u6216\u4f5c\u7528\u57df\u3002\u9664\u4e86\u5168\u5c40\u4f5c\u7528\u57df\u5916\uff0c\u6bcf\u4e2a\u51fd\u6570\u8c03\u7528\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df\u3002 \u7531\u4e8e\u540c\u540d\u53d8\u91cf\u7684\u5b58\u5728\u4ea7\u751f\u4e86\u5c4f\u853d\u95ee\u9898\uff1a\u5f53\u5c40\u90e8\u53d8\u91cf\u540d\u548c\u5168\u5c40\u53d8\u91cf\u540d\u540c\u540d\u65f6\uff0c\u524d\u8005\u4f1a\u5c4f\u853d\u540e\u8005\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5982\u679c\u60f3\u8981\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u53ef\u4ee5\u4f7f\u7528 globals() \u51fd\u6570\u3002globals \u51fd\u6570\u8fd4\u56de\u5168\u5c40\u53d8\u91cf\u5b57\u5178\uff0c\u800c locals() \u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5b57\u5178\u3002 In [26]: a = 10 In [27]: def masking(): ...: a = 1 ...: print(a) ...: los = locals() ...: glo = globals() ...: print(los['a']) ...: print(glo['a']) ...: In [28]: masking() 1 1 10 \u5982\u679c\u60f3\u8981\u5c06\u5c40\u90e8\u53d8\u91cf x \u58f0\u660e\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u4f7f\u7528\u4ee3\u7801 global x\u3002 In [36]: a = 10 In [37]: def change_global(): ...: global a ...: a = 5 ...: In [38]: change_global() In [39]: a Out[39]: 5 11.2.2 \u4f7f\u7528 exec() \u548c eval() \u6267\u884c\u8ba1\u7b97 \u00b6 \u6709\u65f6\u5019\uff0c\u6211\u4eec\u60f3\u8981\u4ece\u5b57\u7b26\u4e32\u4e2d\u521b\u5efa Python \u4ee3\u7801\uff0c\u8fd9\u53ef\u4ee5\u7528\u4e8e\u52a8\u6001\u7f16\u7a0b\u3002exec() \u548c eval() \u51fd\u6570\u63d0\u4f9b\u4e86\u8fd9\u65b9\u9762\u7684\u652f\u6301\u3002 In [40]: exec(\"print('Hello world')\") Hello world \u5b83\u53ef\u80fd\u4f1a\u5e72\u6270\u547d\u540d\u7a7a\u95f4\uff08\u4f5c\u7528\u57df\uff09\u3002 In [41]: from math import sqrt In [42]: exec('sqrt = 1') In [43]: sqrt(4) --------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-43-317e033d29d5> in <module> ----> 1 sqrt(4) TypeError: 'int' object is not callable \u4e0a\u8ff0\u4ee3\u7801\u62a5\u9519\u7684\u539f\u56e0\u5728\u4e8e\u6211\u4eec\u5728\u5168\u5c40\u7a7a\u95f4\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u53d8\u91cf sqrt \u5e76\u8d4b\u503c 1\uff0c\u5b83\u5c4f\u853d\u4e86\u5148\u524d\u4ece math \u6a21\u5757\u4e2d\u5bfc\u5165\u7684 sqrt \u51fd\u6570\u3002 \u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u6765\u907f\u514d\u4e0a\u8ff0\u95ee\u9898\u3002 In [44]: scope = {} In [45]: exec('sqrt = 1', scope) In [46]: scope['sqrt'] ...: 1 Out[46]: 1 exec() \u51fd\u6570\u4f1a\u6267\u884c\u4e00\u7cfb\u5217 Python \u8bed\u53e5\uff0c\u800c eval() \u51fd\u6570\u8ba1\u7b97\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4e66\u5199\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u503c\u3002 In [47]: eval('sqrt = 1') Traceback (most recent call last): File \"/home/shixiang/miniconda3/lib/python3.7/site-packages/IPython/core/interactiveshell.py\", line 3326, in run_code exec(code_obj, self.user_global_ns, self.user_ns) File \"<ipython-input-47-e7321eeaf096>\", line 1, in <module> eval('sqrt = 1') File \"<string>\", line 1 sqrt = 1 ^ SyntaxError: invalid syntax In [48]: eval('sqrt + 3') Out[48]: 4 eval() \u51fd\u6570\u4e5f\u53ef\u4ee5\u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u3002 In [48]: eval('sqrt + 3') Out[48]: 4 In [49]: scope = {} In [50]: scope['x'] = 3 In [51]: scope['y'] = 5 In [52]: eval('x * y', scope) Out[52]: 15 11.3 \u5f02\u5e38\u7684\u6355\u83b7\u548c\u5904\u7406 \u00b6 11.3.1 \u6355\u83b7\u5f02\u5e38 \u00b6 \u5728\u7b2c 4 \u7ae0\u4e2d\u6211\u4eec\u5176\u5b9e\u5df2\u7ecf\u5b66\u4e60\u8fc7\u5982\u4f55\u6355\u83b7\u5f02\u5e38\uff0c\u5373\u4f7f\u7528 try\u2026finally \u8bfb/\u5199\u6587\u4ef6\uff0c\u786e\u4fdd\u65e0\u8bba\u53d1\u751f\u4ec0\u4e48\u90fd\u8981\u5bf9\u6587\u4ef6\u8fdb\u884c\u5173\u95ed\u64cd\u4f5c\u3002\u8fd9\u91cc\u672c\u4e66\u4f1a\u66f4\u52a0\u8be6\u7ec6\u5730\u4ecb\u7ecd\u5f02\u5e38\u3001\u5f02\u5e38\u6355\u83b7\u548c\u5904\u7406\u7684\u65b9\u6cd5\u3002 \u5f02\u5e38\u662f\u7531\u4e8e\u4e0d\u540c\u7684\u539f\u56e0\u4ea7\u751f\u7684\u51fa\u4e4e\u610f\u6599\u7684\u7ed3\u679c\uff0c\u6709\u4ee5\u4e0b\u51e0\u4e2a\u5e38\u89c1\u7c7b\u578b\uff1a ImportError - \u5bfc\u5165\u5931\u8d25 IndexError - \u7d22\u5f15\u8d85\u51fa\u5e8f\u5217\u8303\u56f4 NameError - \u4f7f\u7528\u4e86\u672a\u77e5\u7684\u53d8\u91cf SyntaxError - \u4ee3\u7801\u4e0d\u80fd\u88ab\u6b63\u786e\u89e3\u6790 TypeError - \u51fd\u6570\u53c2\u6570\u8f93\u5165\u4e86\u9519\u8bef\u7684\u6570\u636e\u7c7b\u578b ValueError - \u51fd\u6570\u8c03\u7528\u6b63\u5e38\uff0c\u4f46\u8fd4\u56de\u503c\u6709\u95ee\u9898 \u5f53 Python \u7a0b\u5e8f\u629b\u51fa\u8fd9\u4e9b\u5f02\u5e38\u540e\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u591f\u901a\u8fc7\u5f02\u5e38\u7c7b\u578b\u7406\u89e3\u5176\u539f\u56e0\uff0c\u56f0\u96be\u4e4b\u5904\u5728\u4e8e\u5982\u4f55\u9501\u5b9a\u5f02\u5e38\u53d1\u751f\u7684\u4f4d\u7f6e\u4ee5\u53ca\u5bf9\u5f02\u5e38\u8fdb\u884c\u5904\u7406\u3002\u800c\u5bf9\u4e8e\u5c0f\u578b\u7a0b\u5e8f\u548c\u5e38\u89c1\u7684\u6570\u636e\u5206\u6790\u4efb\u52a1\uff0c\u9501\u5b9a\u5f02\u5e38\u7684\u53d1\u751f\u5730\u70b9\u4e5f\u901a\u5e38\u6bd4\u8f83\u5bb9\u6613\uff0c\u4e00\u822c\u901a\u8fc7\u9010\u884c\u8f93\u5165\u4ee3\u7801\u8fd0\u884c\u5373\u53ef\u627e\u5230\u3002\u6211\u4eec\u4e0b\u9762\u805a\u7126\u4e8e\u5f02\u5e38\u7684\u5904\u7406\u3002 \u5904\u7406\u5f02\u5e38\u7684\u57fa\u672c\u8bed\u53e5\u662f try/except\uff0c\u6211\u4eec\u5c06\u53ef\u80fd\u4ea7\u751f\u5f02\u5e38\u7684\u4ee3\u7801\u653e\u5165 try \u8bed\u53e5\u5757\u4e2d\uff0c\u800c\u5c06\u5904\u7406\u8bed\u53e5\u653e\u5165 except \u8bed\u53e5\u5757\u4e2d\u3002\u5982\u679c\u8fd0\u884c\u4ee3\u7801\u65f6\u771f\u7684\u4ea7\u751f\u5f02\u5e38\uff0cPython \u4f1a\u505c\u6b62\u6267\u884c\u9519\u8bef\u4ee3\u7801\u5757\uff0c\u800c\u8df3\u8f6c\u5230\u6267\u884c except \u8bed\u53e5\u5757\u3002 \u4e0b\u9762\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a try: num1 = 7 num2 = 0 print(num1 / num2) print(\"\u5b8c\u6210\u8ba1\u7b97\uff01\") except ZeroDivisionError: print(\"\u56e0\u4e3a\u9664\u4ee5 0 \u5bfc\u81f4\u9519\u8bef\uff01\") try \u8bed\u53e5\u5757\u4e2d\u53ef\u4ee5\u6709\u591a\u6761\u4e0d\u540c\u7684 except \u8bed\u53e5\u7528\u4e8e\u5904\u7406\u4e0d\u540c\u7684\u5f02\u5e38\u60c5\u51b5\u3002\u53e6\u5916\uff0c\u591a\u79cd\u5f02\u5e38\u4e5f\u53ef\u4ee5\u901a\u8fc7\u62ec\u53f7\u653e\u5165\u5230\u5355\u4e2a except \u8bed\u53e5\u4e2d\uff1a try: var = 10 print(var + \"hello\") print(var / 2) except ZeroDivisionError: print(\"\u9664\u6570\u4e3a0\uff01\") except (ValueError, TypeError): print(\"\u9519\u8bef\u53d1\u751f\u4e86\uff01\") \u5982\u679c\u4e00\u6761 except \u8bed\u53e5\u6ca1\u6709\u6307\u660e\u4efb\u4f55\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u90a3\u4e48\u6240\u6709\u7684\u9519\u8bef\u90fd\u5c06\u88ab\u6355\u83b7\u3002\u8bf7\u8bfb\u8005\u5c3d\u91cf\u5c11\u7528\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3a\u4f1a\u6355\u83b7\u5230\u610f\u60f3\u4e0d\u5230\u7684\u9519\u8bef\u5e76\u5bfc\u81f4\u7a0b\u5e8f\u5904\u7406\u5931\u8d25\u3002 try: wd = \"hello world\" print(wd / 0) except: print(\"\u53d1\u751f\u4e86\u4e00\u4e2a\u9519\u8bef\") \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 finally \u8bed\u53e5\u4fdd\u8bc1\u65e0\u8bba\u53d1\u751f\u4ec0\u4e48\u9519\u8bef\uff0c\u90fd\u4f1a\u8fd0\u884c\u4e00\u4e9b\u4ee3\u7801\uff0c\u5982\u6b63\u786e\u5173\u95ed\u6587\u4ef6\u3002finally \u8bed\u53e5\u653e\u7f6e\u5728 try/except \u8bed\u53e5\u4e4b\u540e\uff0c\u65e0\u8bba\u524d\u9762\u6267\u884c\u4e86 try \u8bed\u53e5\u5757\u7684\u4ee3\u7801\u8fd8\u662f\u6267\u884c\u4e86 except \u8bed\u53e5\u7684\u4ee3\u7801\uff0cfinally \u8bed\u53e5\u603b\u662f\u4f1a\u88ab\u8fd0\u884c\u3002 try: print(\"Hello World!\") print(1 / 0) except: ZeroDivisionError: print(\"\u4e0d\u80fd\u88ab0\u6574\u9664\uff01\") finally: print(\"\u65e0\u8bba\u4e0a\u9762\u5e72\u5565\uff0c\u6211\u90fd\u4f1a\u8fd0\u884c\uff01\") 11.3.2 \u4ea7\u751f\u5f02\u5e38 \u00b6 \u901a\u8fc7\u4f7f\u7528 raise \u8bed\u53e5\uff0c\u6211\u4eec\u53ef\u4ee5\u751f\u6210\u5f02\u5e38\u4fe1\u606f\u3002 print(1) raise ValueError print(2) \u5f02\u5e38\u90fd\u53ef\u4ee5\u5e26\u63cf\u8ff0\u6027\u7684\u53c2\u6570\uff1a name = '123' raise NameError(\"Invalid name!\") \u5728 except \u8bed\u53e5\u5757\u4e2d\uff0c\u4e0d\u5e26\u53c2\u6570\u7684 raise \u8bed\u53e5\u53ef\u4ee5\u7528\u6765\u91cd\u65b0\u751f\u6210\u5df2\u7ecf\u53d1\u751f\u7684\u5f02\u5e38\u3002 try: 5 / 0 except: print(\"\u53d1\u751f\u4e86\u4e00\u4e2a\u5f02\u5e38\") raise 11.4 \u51fd\u6570\u5f0f\u7f16\u7a0b \u00b6 \u51fd\u6570\u5f0f\u7f16\u7a0b\u662f\u4e00\u79cd\u4ee5\u51fd\u6570\u4e3a\u57fa\u7840\u7684\u7f16\u7a0b\u65b9\u5f0f\uff0c\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u5176\u4ed6\u5bf9\u8c61\u57fa\u672c\u4e00\u6837\uff0c\u53ef\u4ee5\u5206\u914d\u7ed9\u53d8\u91cf\uff0c\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u4ee5\u53ca\u4ece\u5176\u4ed6\u51fd\u6570\u8fd4\u56de\u3002\u5c3d\u7ba1 Python \u4e0d\u501a\u91cd\u51fd\u6570\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8fdb\u884c\u51fd\u6570\u5f0f\u7a0b\u5e8f\u8bbe\u8ba1\u3002 11.4.1 \u9ad8\u9636\u51fd\u6570 \u00b6 \u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u4e00\u4e2a\u5173\u952e\u90e8\u5206\u662f\u9ad8\u9636\u51fd\u6570\u3002\u9ad8\u9636\u51fd\u6570\u4ee5\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u6216\u8005\u4ee5\u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u7ed3\u679c\u3002 def do_twice(func, args): return fun(func(args)) def add_two(x): return x + 2 print(do_twice(add_two, 1)) def multiplier(factor): def multiplyByFactor(number): return number*factor return multiplyByFactor \u51fd\u6570\u5f0f\u7f16\u7a0b\u9700\u8981\u4f7f\u7528\u7eaf\u51fd\u6570\u3002\u7eaf\u51fd\u6570\u6ca1\u6709\u526f\u4f5c\u7528\u5e76\u4e14\u8fd4\u56de\u503c\u53ea\u4f9d\u8d56\u4e8e\u5b83\u7684\u53c2\u6570\u3002 # Pure function def pure_func(x, y): return x + y * x # Impure function # \u8fd9\u4e2a\u51fd\u6570\u6539\u53d8\u4e86 a_list \u7684\u72b6\u6001 # \u6240\u4ee5\u4e0d\u662f\u7eaf\u51fd\u6570 a_list = [] def impure_func(args): a_list.append(args) \u4f7f\u7528\u7eaf\u51fd\u6570\u6709\u4e00\u4e9b\u4f18\u70b9\uff0c\u4e5f\u6709\u4e00\u4e9b\u7f3a\u70b9\u3002 \u66f4\u5bb9\u6613\u63a8\u65ad\u548c\u6d4b\u8bd5 \u66f4\u9ad8\u6548 \u66f4\u5bb9\u6613\u5e76\u884c \u4e0d\u8fc7\u6709\u65f6\u5019\u6bd4\u8f83\u96be\u5199\uff0c\u53e6\u5916\u4e00\u4e9b\u60c5\u51b5\u9700\u8981\u51fd\u6570\u7684\u526f\u4f5c\u7528\u800c\u7eaf\u51fd\u6570\u65e0\u6cd5\u63d0\u4f9b\u8be5\u7279\u6027\u3002 lambda \u8868\u8fbe\u5f0f\u53ef\u4ee5\u521b\u5efa\u533f\u540d\u51fd\u6570\uff0c\u8fd9\u5728\u7b2c 8 \u7ae0\u6709\u7b80\u5355\u4f7f\u7528\u8fc7\u3002lambda \u51fd\u6570\u53ef\u4ee5\u8d4b\u7ed9\u53d8\u91cf\uff0c\u5e76\u4e14\u53ef\u4ee5\u5411\u6b63\u5e38\u51fd\u6570\u4e00\u6837\u4f7f\u7528\u3002\u4e0d\u8fc7\u8fd9\u79cd\u60c5\u51b5\u4f7f\u7528 def \u5b9a\u4e49\u51fd\u6570\u66f4\u597d\u3002 double = lambda x: x * 2 print(double(4)) 11.4.2 \u5e38\u7528\u9ad8\u9636\u51fd\u6570 \u00b6 \u5185\u7f6e\u51fd\u6570 map()\u3001filter() \u4ee5\u53ca reduce() \u90fd\u662f\u975e\u5e38\u5b9e\u7528\u7684\u7528\u4e8e\u64cd\u4f5c\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5982\u5217\u8868\u3001\u5143\u7ec4\uff09\u7684\u9ad8\u9636\u51fd\u6570\u3002 map() \u51fd\u6570\u5c06\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u5168\u90e8\u4f20\u9012\u7ed9\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002 In [54]: def double(x): ...: return x * 2 ...: ...: data = [11, 22, 33, 44] ...: res = map(double, data) ...: print(list(res)) ...: [22, 44, 66, 88] \u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u533f\u540d\u51fd\u6570\uff1a In [55]: print(list(map(lambda x: x* 2, data))) [22, 44, 66, 88] filter() \u57fa\u4e8e\u4e00\u4e2a\u8fd4\u56de\u5e03\u5c14\u503c\u7684\u51fd\u6570\u5bf9\u5143\u7d20\u8fdb\u884c\u8fc7\u6ee4 In [56]: list(filter(lambda x: x % 2 == 0, data)) Out[56]: [22, 44] reduce() \u53ef\u4ee5\u8fdb\u884c\u805a\u5408\u3002 In [3]: from functools import reduce In [4]: def add(x, y): ...: return x+y ...: In [5]: reduce(add, [1,2,3,4,5]) Out[5]: 15 11.4.3 itertools \u6a21\u5757 \u00b6 itertools \u662f Python \u7684\u4e00\u4e2a\u6807\u51c6\u5e93\uff0c\u63d0\u4f9b\u4e86\u8bb8\u591a\u7528\u4e8e\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u51fd\u6570\u3002 \u5176\u4e2d\u4e00\u7c7b\u51fd\u6570\u7528\u4e8e\u751f\u6210\u65e0\u9650\u8fed\u4ee3\u5668\uff0c\u5305\u62ec count()\u3001cycle() \u548c repeat()\u3002 count() \u51fd\u6570\u4ece\u4e00\u4e2a\u6570\u5f00\u59cb\u8ba1\u6570\u5230\u65e0\u9650 cycle() \u51fd\u6570\u65e0\u9650\u8fed\u4ee3\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5982\u5217\u8868\u6216\u5b57\u7b26\u4e32\uff09 repeat() \u51fd\u6570\u91cd\u590d\u4e00\u4e2a\u5e8f\u5217\u6709\u9650\u6216\u65e0\u9650\u6b21 \u4e0b\u9762\u4ee5 count() \u4f5c\u4e3a\u7b80\u5355\u793a\u4f8b\uff1a In [22]: for i in count(11): ...: print(i) ...: if i > 20: ...: break ...: 11 12 13 14 15 16 17 18 19 20 21 \u4e0a\u9762\u4ee3\u7801\u8f93\u51fa\u4e86\u5e8f\u5217 11-21\uff0c\u56e0\u4e3a\u662f\u65e0\u9650\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7 break \u8f85\u52a9\u8df3\u51fa\u5faa\u73af\u3002 itertools \u5e93\u4e2d\u4e5f\u6709\u4e00\u4e9b\u7c7b\u4f3c map() \u548c filter() \u7684\u51fd\u6570\uff0c\u5982 takewhile() \u51fd\u6570\u53ef\u4ee5\u4ece\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6839\u636e\u9884\u6d4b\u51fd\u6570\u63d0\u53d6\u5143\u7d20\uff0cchain() \u51fd\u6570\u53ef\u4ee5\u5c06\u591a\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e32\u8054\u4e3a\u4e00\u4e2a\uff0caccumulate() \u51fd\u6570\u53ef\u4ee5\u5bf9\u53ef\u8fed\u4ee3\u5bf9\u8c61\u6c42\u548c\u3002\u4e0b\u9762\u4ee3\u7801\u4ec5\u4f5c\u7b80\u5355\u7684\u793a\u4f8b\u3002 In [23]: from itertools import chain, takewhile, accumulate In [24]: list(chain(list(range(1,5)), list(range(6,10)))) Out[24]: [1, 2, 3, 4, 6, 7, 8, 9] In [25]: nms = list(accumulate(range(20))) In [26]: nms Out[26]: [0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78, 91, 105, 120, 136, 153, 171, 190] In [27]: print(list(takewhile(lambda x: x <= 10, nms))) [0, 1, 3, 6, 10] 11.5 \u751f\u6210\u5668\u4e0e\u88c5\u9970\u5668 \u00b6 11.5.1 \u751f\u6210\u5668 \u00b6 \u751f\u6210\u5668\u662f\u4e00\u7c7b\u50cf\u5217\u8868\u3001\u5143\u7ec4\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002\u751f\u6210\u5668\u4e0d\u50cf\u5217\u8868\u652f\u6301\u7d22\u5f15\uff0c\u4f46\u662f\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 for \u5faa\u73af\u8fdb\u884c\u8fed\u4ee3\uff08\u53ef\u8fed\u4ee3\u5bf9\u8c61\u90fd\u53ef\u4ee5\u4f7f\u7528 for \u5faa\u73af\u8fed\u4ee3\uff0c\u8fd9\u662f\u8fed\u4ee3\u5668\u7684\u4e00\u4e2a\u7279\u6027\uff09\u3002 \u521b\u5efa\u751f\u6210\u5668\u7684\u65b9\u5f0f\u6bd4\u8f83\u7279\u522b\uff0c\u9700\u8981\u4f7f\u7528\u51fd\u6570\u548c\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5b57 yield\u3002\u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e2a\u751f\u6210 1-9 \u5e8f\u5217\u7684\u4f8b\u5b50\u3002 In [1]: def range2(i): ...: while i > 0: ...: yield i ...: i -= 1 ...: In [2]: for x in range2(9): ...: print(x) ...: 9 8 7 6 5 4 3 2 1 In [3]: range2(9) Out[3]: <generator object range2 at 0x7fde103f1f50> In [4]: range(1, 10) Out[4]: range(1, 10) \u4ece for \u5faa\u73af\u4e2d\u7684\u4f7f\u7528\u6765\u770b\uff0c\u8ddf\u5217\u8868\u548c\u5143\u7ec4\u5b8c\u5168\u6ca1\u6709\u5dee\u522b\uff0c\u4f46 range2() \u7684\u7ed3\u679c\u8ddf\u6211\u4eec\u5b66\u4e60\u8fc7\u7684 range() \u662f\u76f8\u4f3c\u7684\uff0c\u5b83\u4eec\u8fd4\u56de\u7684\u662f\u5bf9\u8c61\u800c\u975e\u5b9e\u9645\u7684\u5e8f\u5217\u3002\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 list() \u663e\u5f0f\u5730\u5c06\u751f\u6210\u5668\u8f6c\u6362\u4e3a\u5217\u8868\u3002 In [5]: list(range(1, 10)) Out[5]: [1, 2, 3, 4, 5, 6, 7, 8, 9] In [6]: list(range2(9)) Out[6]: [9, 8, 7, 6, 5, 4, 3, 2, 1] \u8fd9\u91cc\u8bfb\u8005\u53ef\u80fd\u4f1a\u6709\u70b9\u56f0\u60d1\uff0c\u751f\u6210\u5668\u548c\u5217\u8868\u5230\u5e95\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f\u8fd9\u91cc\u7684\u5173\u952e\u5728\u4e8e\u7406\u89e3\u751f\u6210\u5668\u7684\u4e00\u4e2a\u7279\u6027\uff1a\u5b83\u662f\u60f0\u6027\u6c42\u503c\u7684\u3002\u6211\u4eec\u518d\u6765\u89c2\u5bdf\u4e0b range2() \u51fd\u6570\uff1a def range2(i): while i > 0: yield i i -= 1 \u76f8\u6bd4\u4e8e\u76f4\u63a5\u8fd4\u56de\u8981\u751f\u6210\u7684\u5e8f\u5217\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u503c\u7684\u89c4\u5219\uff0c\u5373 i -= 1\uff0c\u5728\u8c03\u7528\u8be5\u751f\u6210\u5668\u540e\uff0c\u8ba1\u7b97\u673a\u4e0d\u4f1a\u7acb\u9a6c\u6267\u884c\u6240\u6709\u7684\u8ba1\u7b97\uff0c\u800c\u662f\u5b58\u50a8\u8be5\u89c4\u5219\uff0c\u7b49\u5f85\u6211\u4eec\u9700\u8981\u65f6\u518d\u6267\u884c\uff0c\u8fd9\u4e00\u70b9\u6211\u4eec\u53ef\u4ee5\u5229\u7528 next() \u51fd\u6570\u8fdb\u884c\u9a8c\u8bc1\u3002 In [7]: a = range2(10) In [8]: next(a) Out[8]: 10 In [9]: next(a) Out[9]: 9 \u8fd9\u79cd\u6309\u9700\u8ba1\u7b97\u7684\u65b9\u5f0f\u663e\u8457\u5730\u63d0\u5347\u4e86\u8ba1\u7b97\u7684\u6027\u80fd\uff0c\u4e00\u65b9\u9762\u751f\u6210\u5668\u964d\u4f4e\u4e86\u5185\u5b58\u7684\u4f7f\u7528\uff08\u6587\u4ef6\u4e0d\u9700\u8981\u4e00\u6b21\u6027\u8bfb\u5165\uff09\uff0c\u53e6\u4e00\u65b9\u9762\u6211\u4eec\u4e0d\u5fc5\u7b49\u5f85\u6240\u6709\u7684\u5e8f\u5217\u751f\u6210\u540e\u624d\u80fd\u5f00\u59cb\u4f7f\u7528\u3002\u8bfb\u8005\u53ef\u80fd\u6ca1\u6709\u53d1\u73b0\uff0c\u6587\u4ef6\u7684\u8bfb\u53d6\u4f7f\u7528\u7684\u5c31\u662f\u751f\u6210\u5668\uff0copen() \u51fd\u6570\u8bfb\u5165\u7684\u5bf9\u8c61\u9700\u8981\u9010\u884c\u5b58\u50a8\u6216\u8ba1\u7b97\uff0c\u5e76\u975e\u4e00\u6b21\u6027\u5b58\u50a8\u5230\u5185\u5b58\u4e2d\u3002 11.5.2 \u5229\u7528\u751f\u6210\u5668\u8bfb\u5165\u5927\u578b\u6570\u636e\u96c6 \u00b6 Python open() \u51fd\u6570\u672c\u8eab\u5c31\u8fd4\u56de\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u5bb9\u6613\u5730\u521b\u5efa\u751f\u6210\u5668\u4ee5\u8bfb\u5165\u5927\u7684\u6570\u636e\u96c6\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u7528\u4e8e\u53c2\u8003\u6a21\u677f\uff1a def read_large_file(file_object): \"\"\"A generator function to read a large file lazily.\"\"\" # \u5faa\u73af\u76f4\u5230\u6587\u4ef6\u5c3e\u90e8 while True: data = file_object.readline() if not data: break # \u751f\u6210\u6570\u636e\u884c yield data with open('xxx.csv') as file: gen_file = read_large_file(file) # \u6253\u5370\u6587\u4ef6\u7684\u7b2c\u4e00\u884c print(next(gen_file)) Pandas \u5e93\u7684 read_csv() \u51fd\u6570\u66f4\u65b9\u4fbf\uff0c\u4f7f\u7528 chunksize \u9009\u9879\uff0c\u4f1a\u751f\u6210 reader \u751f\u6210\u5668\u3002 import pandas as pd df_reader = pd.read_csv('xxx.csv', chunksize=10) print(next(df_reader)) 11.5.3 \u88c5\u9970\u5668 \u00b6 \u88c5\u9970\u5668\u662f\u4e00\u79cd\u53ef\u4ee5\u4fee\u9970\uff08\u6539\uff09\u5176\u4ed6\u51fd\u6570\u7684\u51fd\u6570\uff0c\u8fd9\u5728\u4e0d\u66f4\u6539\u539f\u51fd\u6570\u7684\u60c5\u51b5\u4e0b\u62d3\u5c55\u539f\u51fd\u6570\u7684\u7279\u6027\u975e\u5e38\u597d\u7528\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u60f3\u8981\u5728\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u8fd0\u884c\u524d\u540e\u6dfb\u52a0\u4fe1\u606f\u8f93\u51fa\u3002 \u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u51fd\u6570 hello() \u4ee3\u8868\u5b9e\u9645\u7684\u5de5\u4f5c\u51fd\u6570\uff0c\u521b\u5efa\u88c5\u9970\u5668 add_text() \u7528\u6765\u5b8c\u6210\u5bf9 hello() \u7684\u989d\u5916\u4fee\u9970\u3002 In [16]: def add_text(func): ...: def wrap(): ...: print(\"== This is head of function ==\") ...: func() ...: print(\"== This is the end of function ==\") ...: return wrap ...: ...: def hello(): ...: print(\"Hello world!\") ...: \u4e0b\u9762\u770b\u770b\u6211\u4eec\u589e\u52a0\u5bf9 hello() \u7684\u4fee\u9970\u4f1a\u8ba9\u5b83\u6709\u4ec0\u4e48\u4e0d\u540c\u3002 In [17]: hello = add_text(hello) In [18]: hello() == This is head of function == Hello world! == This is the end of function == \u6211\u4eec\u5728 add_text() \u4e2d\u6dfb\u52a0\u7684\u4fe1\u606f\u6210\u529f\u5728\u8fd0\u884c\u65f6\u8f93\u51fa\u4e86\u3002\u73b0\u5728\u6211\u4eec\u5173\u6ce8\u88c5\u9970\u5668\u7684\u521b\u5efa\uff0c\u4ece\u903b\u8f91\u4e0a\u7406\u89e3\u5b83\u7684\u7ed3\u6784\uff1a\u5b83\u4ee5\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u5728\u5185\u90e8\u5b9a\u4e49\u4e00\u4e2a\u5d4c\u5957\u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c\u3002\u8fd9\u6837\uff0c\u5f53\u5b9e\u9645\u4e0a\u4e00\u4e2a\u51fd\u6570\u88ab\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u65f6\uff0c\u8be5\u51fd\u6570\u88ab\u91cd\u5851\u4e3a\u4e00\u4e2a\u65b0\u7684\u51fd\u6570 wrap() \u5e76\u88ab\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de\uff0c\u5b8c\u6210\u4e86\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u6784\u5efa\uff0c\u4f46\u4ece\u5916\u89c2\u6765\u770b\uff0c\u6211\u4eec\u611f\u89c9\u5230\u539f\u51fd\u6570\u88ab\u201c\u4fee\u9970\u201d\u4e86\u3002 \u4e3a\u4e86\u7b80\u5316\u88c5\u9970\u5668\u7684\u5206\u914d\uff0cPython \u5141\u8bb8\u5728\u539f\u51fd\u6570\u5b9a\u4e49\u524d\u4f7f\u7528\u7b26\u53f7 @ \u6307\u6d3e\u88c5\u9970\u5668\uff0c\u4ece\u800c\u7b80\u5316\u4e86\u4ee3\u7801\u7684\u7f16\u5199\u3002 In [19]: def add_text(func): ...: def wrap(): ...: print(\"== This is head of function ==\") ...: func() ...: print(\"== This is the end of function ==\") ...: return wrap ...: ...: @add_text ...: def hello(): ...: print(\"Hello world!\") ...: In [20]: hello() == This is head of function == Hello world! == This is the end of function == 11.6 \u6b63\u5219\u8868\u8fbe\u5f0f \u00b6 \u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u4e00\u79cd\u64cd\u4f5c\u5b57\u7b26\u4e32\u7684\u5f3a\u5927\u5de5\u5177\u3002\u5b83\u662f\u4e00\u79cd\u9886\u57df\u4e13\u5c5e\u8bed\u8a00\uff08domain specific language, DSL\uff09\uff0c\u610f\u601d\u662f\u5b83\u4ee5\u4e00\u79cd\u5e93\u7684\u5f62\u5f0f\u5448\u73b0\u5728\u5404\u7c7b\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u800c\u4e0d\u4ec5\u4ec5 Python \u4e2d\u3002\u8fd9\u4e0e\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u53e5 SQL \u662f\u7c7b\u4f3c\u7684\u3002 \u6b63\u5219\u8868\u8fbe\u5f0f\u901a\u5e38\u6709\u4e24\u5927\u7528\u5904\uff1a \u9a8c\u8bc1\u5b57\u7b26\u4e32\u5339\u914d\u83ab\u79cd\u6a21\u5f0f\uff0c\u5982\u9a8c\u8bc1\u90ae\u7bb1\u683c\u5f0f\u3001\u7535\u8bdd\u53f7\u7801 \u5bf9\u5b57\u7b26\u4e32\u6267\u884c\u66ff\u6362\uff0c\u5982\u5c06\u7f8e\u5f0f\u82f1\u8bed\u8f6c\u6362\u4e3a\u82f1\u5f0f\u82f1\u8bed Python \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u51c6\u5e93 re \u7528\u4e8e\u64cd\u4f5c\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u5728\u6211\u4eec\u5b9a\u4e49\u597d\u6b63\u5219\u8868\u8fbe\u5f0f\u540e\uff0c\u51fd\u6570 re.match() \u53ef\u4ee5\u7528\u6765\u67e5\u770b\u662f\u5426\u5b83\u5339\u914d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u3002\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u5339\u914d\u5bf9\u8c61\uff1b\u5982\u679c\u5339\u914d\u5931\u8d25\uff0c\u8fd4\u56de None\u3002\u4e3a\u4e86\u907f\u514d\u6df7\u6dc6\uff0c\u6211\u4eec\u8fd9\u91cc\u90fd\u4f7f\u7528\u539f\u751f\u5b57\u7b26\u4e32 r\u2019string\u2019 \u521b\u5efa\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 In [1]: import re In [2]: pattern = r'spam' In [3]: if re.match(pattern, 'spamxxx'): ...: print('\u5339\u914d\u6210\u529f') ...: else: ...: print('\u5339\u914d\u5931\u8d25') ...: \u5339\u914d\u6210\u529f In [5]: print(re.match(pattern, 'xspamxx')) None \u53e6\u5916\u6709\u51fd\u6570 re.search() \u7528\u4e8e\u5728\u5b57\u7b26\u4e32\u4efb\u610f\u4e4b\u5904\u5bfb\u627e\u5339\u914d\u7684\u6a21\u5f0f\uff0cre.findall() \u5bfb\u627e\u5339\u914d\u4e00\u4e2a\u6a21\u5f0f\u7684\u6240\u6709\u5b50\u4e32\u3002 In [6]: print(re.search(pattern, 'xspamxx')) <re.Match object; span=(1, 5), match='spam'> In [7]: print(re.findall(pattern, 'xspamxxspamspam')) ['spam', 'spam', 'spam'] \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762 re.search() \u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a Match \u5bf9\u8c61\uff0c\u6709\u51e0\u4e2a\u5e38\u7528\u7684\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u5339\u914d\u7684\u4fe1\u606f\u3002 In [8]: match = re.search(pattern, 'xspamxx') In [9]: match.group() Out[9]: 'spam' In [10]: match.start() Out[10]: 1 In [11]: match.end() Out[11]: 5 In [12]: match.span() Out[12]: (1, 5) re \u6a21\u5757\u6700\u5e38\u7528\u7684\u51fd\u6570\u4e4b\u4e00\u53ef\u80fd\u5c31\u662f sub() \u4e86\uff0c\u5b83\u53ef\u4ee5\u57fa\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u5b9e\u73b0\u5b57\u7b26\u4e32\u90e8\u5206\u5185\u5bb9\u7684\u66ff\u6362\u3002 In [13]: re.sub? Signature: re.sub(pattern, repl, string, count=0, flags=0) Docstring: Return the string obtained by replacing the leftmost non-overlapping occurrences of the pattern in string by the replacement repl. repl can be either a string or a callable; if a string, backslash escapes in it are processed. If it is a callable, it's passed the Match object and must return a replacement string to be used. File: ~/miniconda3/lib/python3.7/re.py Type: function \u5f53\u4e0d\u4fee\u6539 count \u65f6\uff0c\u9ed8\u8ba4\u4f1a\u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u5339\u914d\u7684\u6a21\u5f0f\u3002 In [14]: to_sub = 'apple orange apple' In [16]: re.sub(r'apple', 'juice', to_sub) Out[16]: 'juice orange juice' In [17]: re.sub(r'apple', 'juice', to_sub, count=1) Out[17]: 'juice orange apple' \u5143\u5b57\u7b26\u662f\u4e00\u7c7b\u7279\u6b8a\u7684\u5b57\u7b26\uff0c\u5b83\u4eec\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u6709\u7279\u522b\u7684\u542b\u4e49\u548c\u7528\u5904\uff0c\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6838\u5fc3\uff0c\u5e38\u89c1\u5e38\u7528\u7684\u4e3b\u8981\u6709\u4e0b\u9762\u4e00\u4e9b\uff1a \u951a\u5b9a\u7b26 ^ \u2014\u2014 \u7528\u4e8e\u951a\u5b9a\u884c\u9996 $ \u2014\u2014 \u7528\u4e8e\u951a\u5b9a\u884c\u5c3e \u6570\u76ee\u7b26 . \u2014\u2014 \u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 ? \u2014\u2014 0 \u4e2a\u6216 1 \u4e2a + \u2014\u2014 \u4e00\u4e2a\u6216\u4ee5\u4e0a * \u2014\u2014 \u4efb\u610f\u4e2a\uff08\u5305\u62ec 0 \u4e2a\uff09 {m, n} \u2014\u2014 \u81f3\u5c11 m \u4e2a\uff0c\u81f3\u591a n \u4e2a \u53ef\u9009\u7b26 [abc] \u2014\u2014 a b c \u4e09\u4e2a\u4e2d\u4efb\u610f\u4e00\u4e2a [^abc] \u2014\u2014 \u4e0d\u80fd\u662f a b c \u4e2d\u4efb\u610f\u4e00\u4e2a\uff08\u5373\u6392\u9664 a b c\uff09 [a-z] \u2014\u2014 \u6240\u6709\u5c0f\u5199\u5b57\u6bcd [A-Z] \u2014\u2014 \u6240\u6709\u5927\u5199\u5b57\u6bcd [0-9] \u2014\u2014 \u6240\u6709\u6570\u5b57 \u951a\u5b9a\u7b26\u7528\u4e8e\u5b9a\u4e49\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8d77\u59cb\u548c\u7ed3\u5c3e\u3002 In [22]: print(re.search(r'^apple', ' apple')) # \u9650\u5b9a\u5fc5\u987b\u4ee5 a \u8d77\u59cb None In [23]: print(re.search(r'apple$', 'apple ')) # \u9650\u5b9a\u5fc5\u987b\u4ee5 e \u7ed3\u675f None In [24]: print(re.search(r'apple', ' apple')) <re.Match object; span=(1, 6), match='apple'> In [25]: print(re.search(r'apple', 'apple ')) <re.Match object; span=(0, 5), match='apple'> \u6570\u76ee\u7b26\u548c\u53ef\u9009\u7b26\u7528\u4e8e\u5360\u4f4d\u3001\u7b5b\u9009\u548c\u6a21\u7cca\u5339\u914d\u3002 In [26]: print(re.search(r'[a-z]', 'happy new year')) <re.Match object; span=(0, 1), match='h'> In [27]: print(re.search(r'[a-z]', 'HAPPY NEW YEAR')) None In [28]: print(re.search(r'[A-Z]', 'HAPPY NEW YEAR')) <re.Match object; span=(0, 1), match='H'> In [29]: print(re.search(r'[A-Za-z]', 'HAPPY new YEar')) <re.Match object; span=(0, 1), match='H'> In [30]: print(re.search(r'[A-Z]', 'happy new year')) None \u5047\u8bbe\u6211\u4eec\u9700\u8981\u5339\u914d 11 \u4f4d\u7684\u624b\u673a\u53f7\u7801\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a TEL: 12345678912 \u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5199\u4e3a r'^TEL: [0-9]{11}$' \u4e0b\u9762\u6d4b\u8bd5\u770b\u770b\uff1a In [31]: print(re.match(r'^TEL: [0-9]{11}$', 'TEL: 12345678912')) <re.Match object; span=(0, 16), match='TEL: 12345678912'> In [32]: print(re.match(r'^TEL: [0-9]{11}$', 'TEL: 1234567891')) None In [33]: print(re.match(r'^TEL: [0-9]{11}$', 'TEL: 12345678912 ')) None In [34]: print(re.match(r'^TEL: [0-9]{11}$', 'EL: 12345678912')) None In [35]: print(re.match(r'^TEL: [0-9]{11}$', 'TEL:12345678912')) None \u7b2c\u4e00\u6b21\u5f53\u6211\u4eec\u8f93\u5165\u6b63\u786e\u683c\u5f0f\u7684\u6570\u636e\u65f6\uff0c\u8fd4\u56de\u4e86\u5339\u914d\u3002\u540e\u9762\u6240\u6709\u7684\u5b57\u7b26\u4e32\u90fd\u6709\u6240\u4e0d\u540c\uff0c\u56e0\u6b64\u90fd\u4e0d\u80fd\u5339\u914d\u3002\u4e0d\u77e5\u9053\u8bfb\u8005\u662f\u5426\u611f\u53d7\u5230\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5f3a\u5927\uff0c\u5982\u679c\u5de5\u4f5c\u4e2d\u6709\u9047\u5230\u53ef\u4ee5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u8d76\u7d27\u7528\u8d77\u6765\u5427\u3002 11.7 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 \u672c\u7ae0\u7684\u6d89\u53ca\u7684\u5185\u5bb9\u975e\u5e38\u5e7f\u6cdb\uff0c\u76f8\u5bf9\u672c\u4e66\u5176\u4ed6\u7ae0\u8282\u800c\u8a00\u8f83\u4e3a\u9a73\u6742\uff0c\u4e3b\u65e8\u662f\u4ecb\u7ecd\u6570\u636e\u5206\u6790\u53ef\u80fd\u4f1a\u5229\u7528\u4e0a\u7684\u5de5\u5177\u51fd\u6570\u548c\u65b9\u6cd5\uff0c\u4e5f\u5305\u542b Python \u9ad8\u7ea7\u7f16\u7a0b\u76f8\u5173\u7684\u7406\u8bba\u77e5\u8bc6\u3002","title":"\u7b2c 11 \u7ae0 \u6570\u636e\u5206\u6790\u5de5\u5177\u7bb1"},{"location":"11-toolbox/#11","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : \u8f85\u52a9\u51fd\u6570\u4e0e\u5de5\u5177 \u4f5c\u7528\u57df\u4e0e\u6c42\u503c\u8ba1\u7b97 \u5f02\u5e38\u6355\u83b7 \u51fd\u6570\u5f0f\u7f16\u7a0b \u751f\u6210\u5668\u4e0e\u88c5\u9970\u5668 \u6b63\u5219\u8868\u8fbe\u5f0f \u672c\u7ae0\u7684\u6d89\u53ca\u7684\u5185\u5bb9\u975e\u5e38\u5e7f\u6cdb\uff0c\u76f8\u5bf9\u672c\u4e66\u5176\u4ed6\u7ae0\u8282\u800c\u8a00\u8f83\u4e3a\u9a73\u6742\uff0c\u4e3b\u65e8\u662f\u4ecb\u7ecd\u6570\u636e\u5206\u6790\u53ef\u80fd\u4f1a\u5229\u7528\u4e0a\u7684\u5de5\u5177\u51fd\u6570\u548c\u65b9\u6cd5\uff0c\u4e5f\u5305\u542b Python \u9ad8\u7ea7\u7f16\u7a0b\u76f8\u5173\u7684\u7406\u8bba\u77e5\u8bc6\u3002","title":"\u7b2c 11 \u7ae0 \u6570\u636e\u5206\u6790\u5de5\u5177\u7bb1"},{"location":"11-toolbox/#111","text":"","title":"11.1 \u8f85\u52a9\u51fd\u6570\u4e0e\u5de5\u5177"},{"location":"11-toolbox/#1111","text":"\u5728 Python \u4e2d\uff0c\u591a\u4e2a\u8d4b\u503c\u64cd\u4f5c\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5143\u7ec4\u5b9e\u73b0\uff1a x, y, z = 1, 2, 3 print(x, y, z) \u5229\u7528\u8be5\u65b9\u6cd5\u53ef\u4ee5\u4ea4\u6362\u591a\u4e2a\u53d8\u91cf\uff1a x, y = y, x \u8fd9\u7cbe\u7b80\u4e86\u4e0b\u9762\u4ee3\u7801\uff1a temp = x x = y y = temp \u8fd9\u79cd\u7279\u6027\u53eb\u505a\u5e8f\u5217\u89e3\u5305\uff0c\u5c06\u591a\u4e2a\u503c\u7684\u5e8f\u5217\u89e3\u5f00\uff0c\u7136\u540e\u653e\u5230\u5de6\u4fa7\u7684\u53d8\u91cf\u5e8f\u5217\u4e2d\u3002\u5f53\u51fd\u6570\u6216\u8005\u65b9\u6cd5\u8fd4\u56de\u5143\u7ec4\uff08\u6216\u5176\u4ed6\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff09\u65f6\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5c24\u4e3a\u6709\u7528\u3002 def func(): a = 1 b = 2 c = 3 return a, b, c # \u5e8f\u5217\u89e3\u5305\u64cd\u4f5c\uff1a # \u5c06\u51fd\u6570\u7ed3\u679c\u76f4\u63a5\u8d4b\u503c\u5230\u591a\u4e2a\u53d8\u91cf\u4e2d # \u6309\u987a\u5e8f\u4e00\u4e00\u5bf9\u5e94 # d <- a # e <- b # f <- c d, e, f = func() \u4e0a\u8ff0\u5e8f\u5217\u89e3\u5305\u64cd\u4f5c\u7b80\u5316\u4e86\u4e0b\u9762\u7684\u4ee3\u7801\uff1a # \u83b7\u53d6\u4e00\u4e2a\u5143\u7ec4\u7ed3\u679c tup_res = func() # \u5206\u522b\u8d4b\u503c d = tup_res[0] e = tup_res[1] f = tup_res[2] \u6ce8\u610f\uff0c\u7b49\u53f7\u4e24\u4fa7\u5143\u7d20\u6570\u91cf\u8981\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002","title":"11.1.1 \u5e8f\u5217\u89e3\u5305"},{"location":"11-toolbox/#1112","text":"\u4e0e\u5176\u8ba9\u7a0b\u5e8f\u5728\u665a\u4e9b\u65f6\u5019\u5d29\u6e83\uff0c\u4e0d\u5982\u5728\u9519\u8bef\u6761\u4ef6\u51fa\u73b0\u65f6\u76f4\u63a5\u8ba9\u5b83\u5d29\u6e83\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c3d\u65e9\u9501\u5b9a\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u8282\u7701\u65f6\u95f4\u548c\u8c03\u8bd5\u6210\u672c\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cassert \u8bed\u53e5\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a\u3002 assert \u4f1a\u68c0\u67e5\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5982\u679c\u8fd4\u56de\u903b\u8f91\u503c False\uff0c\u5c31\u4f1a\u751f\u6210\u65ad\u8a00\u9519\u8bef\u3002assert \u4e5f\u53ef\u4ee5\u5e26\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7528\u6765\u8be6\u7ec6\u5730\u63cf\u8ff0\u9519\u8bef\u3002 In [1]: a = 10 In [2]: assert a > 10 --------------------------------------------------------------------- AssertionError Traceback (most recent call last) <ipython-input-2-92ef20669630> in <module> ----> 1 assert a > 10 AssertionError: In [3]: assert a > 10, 'a \u4e0d\u5927\u4e8e 10' --------------------------------------------------------------------- AssertionError Traceback (most recent call last) <ipython-input-3-d19bab11044a> in <module> ----> 1 assert a > 10, 'a \u4e0d\u5927\u4e8e 10' AssertionError: a \u4e0d\u5927\u4e8e 10 \u7a0b\u5e8f\u5458\u7ecf\u5e38\u5c06\u65ad\u8a00\u653e\u5230\u51fd\u6570\u7684\u5f00\u59cb\u90e8\u5206\u7528\u4e8e\u68c0\u67e5\u8f93\u5165\u662f\u5426\u5408\u6cd5\uff0c\u4ee5\u53ca\u5728\u51fd\u6570\u8c03\u7528\u540e\u4f7f\u7528\u4ee5\u68c0\u67e5\u8f93\u51fa\u662f\u5426\u5408\u6cd5\u3002","title":"11.1.2 \u65ad\u8a00"},{"location":"11-toolbox/#1113","text":"\u672c\u5c0f\u8282\u4e3b\u8981\u901a\u8fc7\u4ee3\u7801\u793a\u4f8b\u7b80\u8981\u4ecb\u7ecd\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u65b9\u6cd5\uff0c\u5176\u4e2d\u4e00\u4e9b\u51fd\u6570\u5728\u524d\u9762\u7ae0\u8282\u4e2d\u6709\u8fc7\u4ecb\u7ecd\u548c\u4f7f\u7528\u3002 In [4]: print(\", \".join([\"spam\", \"eggs\", \"ham\"])) # \u5b57\u7b26\u4e32\u62fc\u63a5 spam, eggs, ham In [5]: print(\"Hello ME\".replace(\"ME\", \"wrold\")) # \u5b57\u7b26\u4e32\u66ff\u6362 Hello wrold In [6]: print(\"This is a sentence.\".startswith(\"This\")) # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5 This \u8d77\u59cb True In [7]: print(\"This is a sentence.\".endswith(\"sentence.\")) # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5 sentence. \u7ed3\u675f True In [8]: print(\"This is a sentence.\".upper()) # \u5b57\u6bcd\u5168\u90e8\u8f6c\u6362\u4e3a\u5927\u5199 THIS IS A SENTENCE. In [9]: print(\"THIS IS A SENTENCE.\".lower()) # \u5b57\u6bcd\u5168\u90e8\u8f6c\u6362\u4e3a\u5c0f\u5199 this is a sentence. In [10]: print(\"spam, eggs, ham\".split()) # \u5b57\u7b26\u4e32\u62c6\u5206 ['spam,', 'eggs,', 'ham']","title":"11.1.3 \u5e38\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5"},{"location":"11-toolbox/#112","text":"","title":"11.2 \u4f5c\u7528\u57df\u4e0e\u6c42\u503c\u8ba1\u7b97"},{"location":"11-toolbox/#1121","text":"\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u5728\u51fd\u6570\u5185\u90e8\u547d\u540d\u7684\u53d8\u91cf\u4e0d\u4f1a\u5f71\u54cd\u51fd\u6570\u5916\u90e8\u7684\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u81ea\u5df1\u4f5c\u7528\u7684\u8303\u56f4\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u9002\u7528\u4e8e\u51fd\u6570\uff0c\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6 Python \u5bf9\u8c61\u3002 In [11]: x = 1 In [12]: scope = vars() In [13]: scope['x'] Out[13]: 1 In [14]: scope['x'] += 2 In [15]: scope['x'] Out[15]: 3 In [16]: type(scope) Out[16]: dict \u4e0a\u8ff0\u4ee3\u7801\u5728\u6267\u884c x = 1 \u8d4b\u503c\u8bed\u53e5\u540e\uff0c\u7b26\u53f7 x \u5f15\u7528\u5230\u503c 1\u3002\u8fd9\u5c31\u50cf\u5b57\u5178\u4e00\u6837\uff0c\u952e\u5f15\u7528\u503c\u3002\u5f53\u7136\uff0c\u53d8\u91cf\u548c\u6240\u5bf9\u5e94\u7684\u503c\u7528\u7684\u662f\u4e00\u4e2a\u4e0d\u53ef\u89c1\u7684\u5b57\u5178\uff0c\u5b9e\u9645\u4e0a\u8fd9\u5df2\u7ecf\u5f88\u63a5\u8fd1\u771f\u5b9e\u60c5\u51b5\uff0c\u5185\u5efa\u7684 vars() \u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u8fd9\u4e2a\u5b57\u5178\u3002\u8fd9\u4e2a\u5b57\u5178\u5c31\u53eb\u505a\u547d\u540d\u7a7a\u95f4\u6216\u4f5c\u7528\u57df\u3002\u9664\u4e86\u5168\u5c40\u4f5c\u7528\u57df\u5916\uff0c\u6bcf\u4e2a\u51fd\u6570\u8c03\u7528\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df\u3002 \u7531\u4e8e\u540c\u540d\u53d8\u91cf\u7684\u5b58\u5728\u4ea7\u751f\u4e86\u5c4f\u853d\u95ee\u9898\uff1a\u5f53\u5c40\u90e8\u53d8\u91cf\u540d\u548c\u5168\u5c40\u53d8\u91cf\u540d\u540c\u540d\u65f6\uff0c\u524d\u8005\u4f1a\u5c4f\u853d\u540e\u8005\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5982\u679c\u60f3\u8981\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u53ef\u4ee5\u4f7f\u7528 globals() \u51fd\u6570\u3002globals \u51fd\u6570\u8fd4\u56de\u5168\u5c40\u53d8\u91cf\u5b57\u5178\uff0c\u800c locals() \u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5b57\u5178\u3002 In [26]: a = 10 In [27]: def masking(): ...: a = 1 ...: print(a) ...: los = locals() ...: glo = globals() ...: print(los['a']) ...: print(glo['a']) ...: In [28]: masking() 1 1 10 \u5982\u679c\u60f3\u8981\u5c06\u5c40\u90e8\u53d8\u91cf x \u58f0\u660e\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u4f7f\u7528\u4ee3\u7801 global x\u3002 In [36]: a = 10 In [37]: def change_global(): ...: global a ...: a = 5 ...: In [38]: change_global() In [39]: a Out[39]: 5","title":"11.2.1 \u4f5c\u7528\u57df"},{"location":"11-toolbox/#1122-exec-eval","text":"\u6709\u65f6\u5019\uff0c\u6211\u4eec\u60f3\u8981\u4ece\u5b57\u7b26\u4e32\u4e2d\u521b\u5efa Python \u4ee3\u7801\uff0c\u8fd9\u53ef\u4ee5\u7528\u4e8e\u52a8\u6001\u7f16\u7a0b\u3002exec() \u548c eval() \u51fd\u6570\u63d0\u4f9b\u4e86\u8fd9\u65b9\u9762\u7684\u652f\u6301\u3002 In [40]: exec(\"print('Hello world')\") Hello world \u5b83\u53ef\u80fd\u4f1a\u5e72\u6270\u547d\u540d\u7a7a\u95f4\uff08\u4f5c\u7528\u57df\uff09\u3002 In [41]: from math import sqrt In [42]: exec('sqrt = 1') In [43]: sqrt(4) --------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-43-317e033d29d5> in <module> ----> 1 sqrt(4) TypeError: 'int' object is not callable \u4e0a\u8ff0\u4ee3\u7801\u62a5\u9519\u7684\u539f\u56e0\u5728\u4e8e\u6211\u4eec\u5728\u5168\u5c40\u7a7a\u95f4\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u53d8\u91cf sqrt \u5e76\u8d4b\u503c 1\uff0c\u5b83\u5c4f\u853d\u4e86\u5148\u524d\u4ece math \u6a21\u5757\u4e2d\u5bfc\u5165\u7684 sqrt \u51fd\u6570\u3002 \u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u6765\u907f\u514d\u4e0a\u8ff0\u95ee\u9898\u3002 In [44]: scope = {} In [45]: exec('sqrt = 1', scope) In [46]: scope['sqrt'] ...: 1 Out[46]: 1 exec() \u51fd\u6570\u4f1a\u6267\u884c\u4e00\u7cfb\u5217 Python \u8bed\u53e5\uff0c\u800c eval() \u51fd\u6570\u8ba1\u7b97\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4e66\u5199\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u503c\u3002 In [47]: eval('sqrt = 1') Traceback (most recent call last): File \"/home/shixiang/miniconda3/lib/python3.7/site-packages/IPython/core/interactiveshell.py\", line 3326, in run_code exec(code_obj, self.user_global_ns, self.user_ns) File \"<ipython-input-47-e7321eeaf096>\", line 1, in <module> eval('sqrt = 1') File \"<string>\", line 1 sqrt = 1 ^ SyntaxError: invalid syntax In [48]: eval('sqrt + 3') Out[48]: 4 eval() \u51fd\u6570\u4e5f\u53ef\u4ee5\u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u3002 In [48]: eval('sqrt + 3') Out[48]: 4 In [49]: scope = {} In [50]: scope['x'] = 3 In [51]: scope['y'] = 5 In [52]: eval('x * y', scope) Out[52]: 15","title":"11.2.2 \u4f7f\u7528 exec() \u548c eval() \u6267\u884c\u8ba1\u7b97"},{"location":"11-toolbox/#113","text":"","title":"11.3 \u5f02\u5e38\u7684\u6355\u83b7\u548c\u5904\u7406"},{"location":"11-toolbox/#1131","text":"\u5728\u7b2c 4 \u7ae0\u4e2d\u6211\u4eec\u5176\u5b9e\u5df2\u7ecf\u5b66\u4e60\u8fc7\u5982\u4f55\u6355\u83b7\u5f02\u5e38\uff0c\u5373\u4f7f\u7528 try\u2026finally \u8bfb/\u5199\u6587\u4ef6\uff0c\u786e\u4fdd\u65e0\u8bba\u53d1\u751f\u4ec0\u4e48\u90fd\u8981\u5bf9\u6587\u4ef6\u8fdb\u884c\u5173\u95ed\u64cd\u4f5c\u3002\u8fd9\u91cc\u672c\u4e66\u4f1a\u66f4\u52a0\u8be6\u7ec6\u5730\u4ecb\u7ecd\u5f02\u5e38\u3001\u5f02\u5e38\u6355\u83b7\u548c\u5904\u7406\u7684\u65b9\u6cd5\u3002 \u5f02\u5e38\u662f\u7531\u4e8e\u4e0d\u540c\u7684\u539f\u56e0\u4ea7\u751f\u7684\u51fa\u4e4e\u610f\u6599\u7684\u7ed3\u679c\uff0c\u6709\u4ee5\u4e0b\u51e0\u4e2a\u5e38\u89c1\u7c7b\u578b\uff1a ImportError - \u5bfc\u5165\u5931\u8d25 IndexError - \u7d22\u5f15\u8d85\u51fa\u5e8f\u5217\u8303\u56f4 NameError - \u4f7f\u7528\u4e86\u672a\u77e5\u7684\u53d8\u91cf SyntaxError - \u4ee3\u7801\u4e0d\u80fd\u88ab\u6b63\u786e\u89e3\u6790 TypeError - \u51fd\u6570\u53c2\u6570\u8f93\u5165\u4e86\u9519\u8bef\u7684\u6570\u636e\u7c7b\u578b ValueError - \u51fd\u6570\u8c03\u7528\u6b63\u5e38\uff0c\u4f46\u8fd4\u56de\u503c\u6709\u95ee\u9898 \u5f53 Python \u7a0b\u5e8f\u629b\u51fa\u8fd9\u4e9b\u5f02\u5e38\u540e\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u591f\u901a\u8fc7\u5f02\u5e38\u7c7b\u578b\u7406\u89e3\u5176\u539f\u56e0\uff0c\u56f0\u96be\u4e4b\u5904\u5728\u4e8e\u5982\u4f55\u9501\u5b9a\u5f02\u5e38\u53d1\u751f\u7684\u4f4d\u7f6e\u4ee5\u53ca\u5bf9\u5f02\u5e38\u8fdb\u884c\u5904\u7406\u3002\u800c\u5bf9\u4e8e\u5c0f\u578b\u7a0b\u5e8f\u548c\u5e38\u89c1\u7684\u6570\u636e\u5206\u6790\u4efb\u52a1\uff0c\u9501\u5b9a\u5f02\u5e38\u7684\u53d1\u751f\u5730\u70b9\u4e5f\u901a\u5e38\u6bd4\u8f83\u5bb9\u6613\uff0c\u4e00\u822c\u901a\u8fc7\u9010\u884c\u8f93\u5165\u4ee3\u7801\u8fd0\u884c\u5373\u53ef\u627e\u5230\u3002\u6211\u4eec\u4e0b\u9762\u805a\u7126\u4e8e\u5f02\u5e38\u7684\u5904\u7406\u3002 \u5904\u7406\u5f02\u5e38\u7684\u57fa\u672c\u8bed\u53e5\u662f try/except\uff0c\u6211\u4eec\u5c06\u53ef\u80fd\u4ea7\u751f\u5f02\u5e38\u7684\u4ee3\u7801\u653e\u5165 try \u8bed\u53e5\u5757\u4e2d\uff0c\u800c\u5c06\u5904\u7406\u8bed\u53e5\u653e\u5165 except \u8bed\u53e5\u5757\u4e2d\u3002\u5982\u679c\u8fd0\u884c\u4ee3\u7801\u65f6\u771f\u7684\u4ea7\u751f\u5f02\u5e38\uff0cPython \u4f1a\u505c\u6b62\u6267\u884c\u9519\u8bef\u4ee3\u7801\u5757\uff0c\u800c\u8df3\u8f6c\u5230\u6267\u884c except \u8bed\u53e5\u5757\u3002 \u4e0b\u9762\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a try: num1 = 7 num2 = 0 print(num1 / num2) print(\"\u5b8c\u6210\u8ba1\u7b97\uff01\") except ZeroDivisionError: print(\"\u56e0\u4e3a\u9664\u4ee5 0 \u5bfc\u81f4\u9519\u8bef\uff01\") try \u8bed\u53e5\u5757\u4e2d\u53ef\u4ee5\u6709\u591a\u6761\u4e0d\u540c\u7684 except \u8bed\u53e5\u7528\u4e8e\u5904\u7406\u4e0d\u540c\u7684\u5f02\u5e38\u60c5\u51b5\u3002\u53e6\u5916\uff0c\u591a\u79cd\u5f02\u5e38\u4e5f\u53ef\u4ee5\u901a\u8fc7\u62ec\u53f7\u653e\u5165\u5230\u5355\u4e2a except \u8bed\u53e5\u4e2d\uff1a try: var = 10 print(var + \"hello\") print(var / 2) except ZeroDivisionError: print(\"\u9664\u6570\u4e3a0\uff01\") except (ValueError, TypeError): print(\"\u9519\u8bef\u53d1\u751f\u4e86\uff01\") \u5982\u679c\u4e00\u6761 except \u8bed\u53e5\u6ca1\u6709\u6307\u660e\u4efb\u4f55\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u90a3\u4e48\u6240\u6709\u7684\u9519\u8bef\u90fd\u5c06\u88ab\u6355\u83b7\u3002\u8bf7\u8bfb\u8005\u5c3d\u91cf\u5c11\u7528\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3a\u4f1a\u6355\u83b7\u5230\u610f\u60f3\u4e0d\u5230\u7684\u9519\u8bef\u5e76\u5bfc\u81f4\u7a0b\u5e8f\u5904\u7406\u5931\u8d25\u3002 try: wd = \"hello world\" print(wd / 0) except: print(\"\u53d1\u751f\u4e86\u4e00\u4e2a\u9519\u8bef\") \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 finally \u8bed\u53e5\u4fdd\u8bc1\u65e0\u8bba\u53d1\u751f\u4ec0\u4e48\u9519\u8bef\uff0c\u90fd\u4f1a\u8fd0\u884c\u4e00\u4e9b\u4ee3\u7801\uff0c\u5982\u6b63\u786e\u5173\u95ed\u6587\u4ef6\u3002finally \u8bed\u53e5\u653e\u7f6e\u5728 try/except \u8bed\u53e5\u4e4b\u540e\uff0c\u65e0\u8bba\u524d\u9762\u6267\u884c\u4e86 try \u8bed\u53e5\u5757\u7684\u4ee3\u7801\u8fd8\u662f\u6267\u884c\u4e86 except \u8bed\u53e5\u7684\u4ee3\u7801\uff0cfinally \u8bed\u53e5\u603b\u662f\u4f1a\u88ab\u8fd0\u884c\u3002 try: print(\"Hello World!\") print(1 / 0) except: ZeroDivisionError: print(\"\u4e0d\u80fd\u88ab0\u6574\u9664\uff01\") finally: print(\"\u65e0\u8bba\u4e0a\u9762\u5e72\u5565\uff0c\u6211\u90fd\u4f1a\u8fd0\u884c\uff01\")","title":"11.3.1 \u6355\u83b7\u5f02\u5e38"},{"location":"11-toolbox/#1132","text":"\u901a\u8fc7\u4f7f\u7528 raise \u8bed\u53e5\uff0c\u6211\u4eec\u53ef\u4ee5\u751f\u6210\u5f02\u5e38\u4fe1\u606f\u3002 print(1) raise ValueError print(2) \u5f02\u5e38\u90fd\u53ef\u4ee5\u5e26\u63cf\u8ff0\u6027\u7684\u53c2\u6570\uff1a name = '123' raise NameError(\"Invalid name!\") \u5728 except \u8bed\u53e5\u5757\u4e2d\uff0c\u4e0d\u5e26\u53c2\u6570\u7684 raise \u8bed\u53e5\u53ef\u4ee5\u7528\u6765\u91cd\u65b0\u751f\u6210\u5df2\u7ecf\u53d1\u751f\u7684\u5f02\u5e38\u3002 try: 5 / 0 except: print(\"\u53d1\u751f\u4e86\u4e00\u4e2a\u5f02\u5e38\") raise","title":"11.3.2 \u4ea7\u751f\u5f02\u5e38"},{"location":"11-toolbox/#114","text":"\u51fd\u6570\u5f0f\u7f16\u7a0b\u662f\u4e00\u79cd\u4ee5\u51fd\u6570\u4e3a\u57fa\u7840\u7684\u7f16\u7a0b\u65b9\u5f0f\uff0c\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u5176\u4ed6\u5bf9\u8c61\u57fa\u672c\u4e00\u6837\uff0c\u53ef\u4ee5\u5206\u914d\u7ed9\u53d8\u91cf\uff0c\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u4ee5\u53ca\u4ece\u5176\u4ed6\u51fd\u6570\u8fd4\u56de\u3002\u5c3d\u7ba1 Python \u4e0d\u501a\u91cd\u51fd\u6570\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8fdb\u884c\u51fd\u6570\u5f0f\u7a0b\u5e8f\u8bbe\u8ba1\u3002","title":"11.4 \u51fd\u6570\u5f0f\u7f16\u7a0b"},{"location":"11-toolbox/#1141","text":"\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u4e00\u4e2a\u5173\u952e\u90e8\u5206\u662f\u9ad8\u9636\u51fd\u6570\u3002\u9ad8\u9636\u51fd\u6570\u4ee5\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u6216\u8005\u4ee5\u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u7ed3\u679c\u3002 def do_twice(func, args): return fun(func(args)) def add_two(x): return x + 2 print(do_twice(add_two, 1)) def multiplier(factor): def multiplyByFactor(number): return number*factor return multiplyByFactor \u51fd\u6570\u5f0f\u7f16\u7a0b\u9700\u8981\u4f7f\u7528\u7eaf\u51fd\u6570\u3002\u7eaf\u51fd\u6570\u6ca1\u6709\u526f\u4f5c\u7528\u5e76\u4e14\u8fd4\u56de\u503c\u53ea\u4f9d\u8d56\u4e8e\u5b83\u7684\u53c2\u6570\u3002 # Pure function def pure_func(x, y): return x + y * x # Impure function # \u8fd9\u4e2a\u51fd\u6570\u6539\u53d8\u4e86 a_list \u7684\u72b6\u6001 # \u6240\u4ee5\u4e0d\u662f\u7eaf\u51fd\u6570 a_list = [] def impure_func(args): a_list.append(args) \u4f7f\u7528\u7eaf\u51fd\u6570\u6709\u4e00\u4e9b\u4f18\u70b9\uff0c\u4e5f\u6709\u4e00\u4e9b\u7f3a\u70b9\u3002 \u66f4\u5bb9\u6613\u63a8\u65ad\u548c\u6d4b\u8bd5 \u66f4\u9ad8\u6548 \u66f4\u5bb9\u6613\u5e76\u884c \u4e0d\u8fc7\u6709\u65f6\u5019\u6bd4\u8f83\u96be\u5199\uff0c\u53e6\u5916\u4e00\u4e9b\u60c5\u51b5\u9700\u8981\u51fd\u6570\u7684\u526f\u4f5c\u7528\u800c\u7eaf\u51fd\u6570\u65e0\u6cd5\u63d0\u4f9b\u8be5\u7279\u6027\u3002 lambda \u8868\u8fbe\u5f0f\u53ef\u4ee5\u521b\u5efa\u533f\u540d\u51fd\u6570\uff0c\u8fd9\u5728\u7b2c 8 \u7ae0\u6709\u7b80\u5355\u4f7f\u7528\u8fc7\u3002lambda \u51fd\u6570\u53ef\u4ee5\u8d4b\u7ed9\u53d8\u91cf\uff0c\u5e76\u4e14\u53ef\u4ee5\u5411\u6b63\u5e38\u51fd\u6570\u4e00\u6837\u4f7f\u7528\u3002\u4e0d\u8fc7\u8fd9\u79cd\u60c5\u51b5\u4f7f\u7528 def \u5b9a\u4e49\u51fd\u6570\u66f4\u597d\u3002 double = lambda x: x * 2 print(double(4))","title":"11.4.1 \u9ad8\u9636\u51fd\u6570"},{"location":"11-toolbox/#1142","text":"\u5185\u7f6e\u51fd\u6570 map()\u3001filter() \u4ee5\u53ca reduce() \u90fd\u662f\u975e\u5e38\u5b9e\u7528\u7684\u7528\u4e8e\u64cd\u4f5c\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5982\u5217\u8868\u3001\u5143\u7ec4\uff09\u7684\u9ad8\u9636\u51fd\u6570\u3002 map() \u51fd\u6570\u5c06\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u5168\u90e8\u4f20\u9012\u7ed9\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002 In [54]: def double(x): ...: return x * 2 ...: ...: data = [11, 22, 33, 44] ...: res = map(double, data) ...: print(list(res)) ...: [22, 44, 66, 88] \u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u533f\u540d\u51fd\u6570\uff1a In [55]: print(list(map(lambda x: x* 2, data))) [22, 44, 66, 88] filter() \u57fa\u4e8e\u4e00\u4e2a\u8fd4\u56de\u5e03\u5c14\u503c\u7684\u51fd\u6570\u5bf9\u5143\u7d20\u8fdb\u884c\u8fc7\u6ee4 In [56]: list(filter(lambda x: x % 2 == 0, data)) Out[56]: [22, 44] reduce() \u53ef\u4ee5\u8fdb\u884c\u805a\u5408\u3002 In [3]: from functools import reduce In [4]: def add(x, y): ...: return x+y ...: In [5]: reduce(add, [1,2,3,4,5]) Out[5]: 15","title":"11.4.2 \u5e38\u7528\u9ad8\u9636\u51fd\u6570"},{"location":"11-toolbox/#1143-itertools","text":"itertools \u662f Python \u7684\u4e00\u4e2a\u6807\u51c6\u5e93\uff0c\u63d0\u4f9b\u4e86\u8bb8\u591a\u7528\u4e8e\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u51fd\u6570\u3002 \u5176\u4e2d\u4e00\u7c7b\u51fd\u6570\u7528\u4e8e\u751f\u6210\u65e0\u9650\u8fed\u4ee3\u5668\uff0c\u5305\u62ec count()\u3001cycle() \u548c repeat()\u3002 count() \u51fd\u6570\u4ece\u4e00\u4e2a\u6570\u5f00\u59cb\u8ba1\u6570\u5230\u65e0\u9650 cycle() \u51fd\u6570\u65e0\u9650\u8fed\u4ee3\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5982\u5217\u8868\u6216\u5b57\u7b26\u4e32\uff09 repeat() \u51fd\u6570\u91cd\u590d\u4e00\u4e2a\u5e8f\u5217\u6709\u9650\u6216\u65e0\u9650\u6b21 \u4e0b\u9762\u4ee5 count() \u4f5c\u4e3a\u7b80\u5355\u793a\u4f8b\uff1a In [22]: for i in count(11): ...: print(i) ...: if i > 20: ...: break ...: 11 12 13 14 15 16 17 18 19 20 21 \u4e0a\u9762\u4ee3\u7801\u8f93\u51fa\u4e86\u5e8f\u5217 11-21\uff0c\u56e0\u4e3a\u662f\u65e0\u9650\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7 break \u8f85\u52a9\u8df3\u51fa\u5faa\u73af\u3002 itertools \u5e93\u4e2d\u4e5f\u6709\u4e00\u4e9b\u7c7b\u4f3c map() \u548c filter() \u7684\u51fd\u6570\uff0c\u5982 takewhile() \u51fd\u6570\u53ef\u4ee5\u4ece\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6839\u636e\u9884\u6d4b\u51fd\u6570\u63d0\u53d6\u5143\u7d20\uff0cchain() \u51fd\u6570\u53ef\u4ee5\u5c06\u591a\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e32\u8054\u4e3a\u4e00\u4e2a\uff0caccumulate() \u51fd\u6570\u53ef\u4ee5\u5bf9\u53ef\u8fed\u4ee3\u5bf9\u8c61\u6c42\u548c\u3002\u4e0b\u9762\u4ee3\u7801\u4ec5\u4f5c\u7b80\u5355\u7684\u793a\u4f8b\u3002 In [23]: from itertools import chain, takewhile, accumulate In [24]: list(chain(list(range(1,5)), list(range(6,10)))) Out[24]: [1, 2, 3, 4, 6, 7, 8, 9] In [25]: nms = list(accumulate(range(20))) In [26]: nms Out[26]: [0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78, 91, 105, 120, 136, 153, 171, 190] In [27]: print(list(takewhile(lambda x: x <= 10, nms))) [0, 1, 3, 6, 10]","title":"11.4.3 itertools \u6a21\u5757"},{"location":"11-toolbox/#115","text":"","title":"11.5 \u751f\u6210\u5668\u4e0e\u88c5\u9970\u5668"},{"location":"11-toolbox/#1151","text":"\u751f\u6210\u5668\u662f\u4e00\u7c7b\u50cf\u5217\u8868\u3001\u5143\u7ec4\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002\u751f\u6210\u5668\u4e0d\u50cf\u5217\u8868\u652f\u6301\u7d22\u5f15\uff0c\u4f46\u662f\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 for \u5faa\u73af\u8fdb\u884c\u8fed\u4ee3\uff08\u53ef\u8fed\u4ee3\u5bf9\u8c61\u90fd\u53ef\u4ee5\u4f7f\u7528 for \u5faa\u73af\u8fed\u4ee3\uff0c\u8fd9\u662f\u8fed\u4ee3\u5668\u7684\u4e00\u4e2a\u7279\u6027\uff09\u3002 \u521b\u5efa\u751f\u6210\u5668\u7684\u65b9\u5f0f\u6bd4\u8f83\u7279\u522b\uff0c\u9700\u8981\u4f7f\u7528\u51fd\u6570\u548c\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5b57 yield\u3002\u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e2a\u751f\u6210 1-9 \u5e8f\u5217\u7684\u4f8b\u5b50\u3002 In [1]: def range2(i): ...: while i > 0: ...: yield i ...: i -= 1 ...: In [2]: for x in range2(9): ...: print(x) ...: 9 8 7 6 5 4 3 2 1 In [3]: range2(9) Out[3]: <generator object range2 at 0x7fde103f1f50> In [4]: range(1, 10) Out[4]: range(1, 10) \u4ece for \u5faa\u73af\u4e2d\u7684\u4f7f\u7528\u6765\u770b\uff0c\u8ddf\u5217\u8868\u548c\u5143\u7ec4\u5b8c\u5168\u6ca1\u6709\u5dee\u522b\uff0c\u4f46 range2() \u7684\u7ed3\u679c\u8ddf\u6211\u4eec\u5b66\u4e60\u8fc7\u7684 range() \u662f\u76f8\u4f3c\u7684\uff0c\u5b83\u4eec\u8fd4\u56de\u7684\u662f\u5bf9\u8c61\u800c\u975e\u5b9e\u9645\u7684\u5e8f\u5217\u3002\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 list() \u663e\u5f0f\u5730\u5c06\u751f\u6210\u5668\u8f6c\u6362\u4e3a\u5217\u8868\u3002 In [5]: list(range(1, 10)) Out[5]: [1, 2, 3, 4, 5, 6, 7, 8, 9] In [6]: list(range2(9)) Out[6]: [9, 8, 7, 6, 5, 4, 3, 2, 1] \u8fd9\u91cc\u8bfb\u8005\u53ef\u80fd\u4f1a\u6709\u70b9\u56f0\u60d1\uff0c\u751f\u6210\u5668\u548c\u5217\u8868\u5230\u5e95\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f\u8fd9\u91cc\u7684\u5173\u952e\u5728\u4e8e\u7406\u89e3\u751f\u6210\u5668\u7684\u4e00\u4e2a\u7279\u6027\uff1a\u5b83\u662f\u60f0\u6027\u6c42\u503c\u7684\u3002\u6211\u4eec\u518d\u6765\u89c2\u5bdf\u4e0b range2() \u51fd\u6570\uff1a def range2(i): while i > 0: yield i i -= 1 \u76f8\u6bd4\u4e8e\u76f4\u63a5\u8fd4\u56de\u8981\u751f\u6210\u7684\u5e8f\u5217\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u503c\u7684\u89c4\u5219\uff0c\u5373 i -= 1\uff0c\u5728\u8c03\u7528\u8be5\u751f\u6210\u5668\u540e\uff0c\u8ba1\u7b97\u673a\u4e0d\u4f1a\u7acb\u9a6c\u6267\u884c\u6240\u6709\u7684\u8ba1\u7b97\uff0c\u800c\u662f\u5b58\u50a8\u8be5\u89c4\u5219\uff0c\u7b49\u5f85\u6211\u4eec\u9700\u8981\u65f6\u518d\u6267\u884c\uff0c\u8fd9\u4e00\u70b9\u6211\u4eec\u53ef\u4ee5\u5229\u7528 next() \u51fd\u6570\u8fdb\u884c\u9a8c\u8bc1\u3002 In [7]: a = range2(10) In [8]: next(a) Out[8]: 10 In [9]: next(a) Out[9]: 9 \u8fd9\u79cd\u6309\u9700\u8ba1\u7b97\u7684\u65b9\u5f0f\u663e\u8457\u5730\u63d0\u5347\u4e86\u8ba1\u7b97\u7684\u6027\u80fd\uff0c\u4e00\u65b9\u9762\u751f\u6210\u5668\u964d\u4f4e\u4e86\u5185\u5b58\u7684\u4f7f\u7528\uff08\u6587\u4ef6\u4e0d\u9700\u8981\u4e00\u6b21\u6027\u8bfb\u5165\uff09\uff0c\u53e6\u4e00\u65b9\u9762\u6211\u4eec\u4e0d\u5fc5\u7b49\u5f85\u6240\u6709\u7684\u5e8f\u5217\u751f\u6210\u540e\u624d\u80fd\u5f00\u59cb\u4f7f\u7528\u3002\u8bfb\u8005\u53ef\u80fd\u6ca1\u6709\u53d1\u73b0\uff0c\u6587\u4ef6\u7684\u8bfb\u53d6\u4f7f\u7528\u7684\u5c31\u662f\u751f\u6210\u5668\uff0copen() \u51fd\u6570\u8bfb\u5165\u7684\u5bf9\u8c61\u9700\u8981\u9010\u884c\u5b58\u50a8\u6216\u8ba1\u7b97\uff0c\u5e76\u975e\u4e00\u6b21\u6027\u5b58\u50a8\u5230\u5185\u5b58\u4e2d\u3002","title":"11.5.1 \u751f\u6210\u5668"},{"location":"11-toolbox/#1152","text":"Python open() \u51fd\u6570\u672c\u8eab\u5c31\u8fd4\u56de\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u5bb9\u6613\u5730\u521b\u5efa\u751f\u6210\u5668\u4ee5\u8bfb\u5165\u5927\u7684\u6570\u636e\u96c6\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u7528\u4e8e\u53c2\u8003\u6a21\u677f\uff1a def read_large_file(file_object): \"\"\"A generator function to read a large file lazily.\"\"\" # \u5faa\u73af\u76f4\u5230\u6587\u4ef6\u5c3e\u90e8 while True: data = file_object.readline() if not data: break # \u751f\u6210\u6570\u636e\u884c yield data with open('xxx.csv') as file: gen_file = read_large_file(file) # \u6253\u5370\u6587\u4ef6\u7684\u7b2c\u4e00\u884c print(next(gen_file)) Pandas \u5e93\u7684 read_csv() \u51fd\u6570\u66f4\u65b9\u4fbf\uff0c\u4f7f\u7528 chunksize \u9009\u9879\uff0c\u4f1a\u751f\u6210 reader \u751f\u6210\u5668\u3002 import pandas as pd df_reader = pd.read_csv('xxx.csv', chunksize=10) print(next(df_reader))","title":"11.5.2 \u5229\u7528\u751f\u6210\u5668\u8bfb\u5165\u5927\u578b\u6570\u636e\u96c6"},{"location":"11-toolbox/#1153","text":"\u88c5\u9970\u5668\u662f\u4e00\u79cd\u53ef\u4ee5\u4fee\u9970\uff08\u6539\uff09\u5176\u4ed6\u51fd\u6570\u7684\u51fd\u6570\uff0c\u8fd9\u5728\u4e0d\u66f4\u6539\u539f\u51fd\u6570\u7684\u60c5\u51b5\u4e0b\u62d3\u5c55\u539f\u51fd\u6570\u7684\u7279\u6027\u975e\u5e38\u597d\u7528\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u60f3\u8981\u5728\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u8fd0\u884c\u524d\u540e\u6dfb\u52a0\u4fe1\u606f\u8f93\u51fa\u3002 \u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u51fd\u6570 hello() \u4ee3\u8868\u5b9e\u9645\u7684\u5de5\u4f5c\u51fd\u6570\uff0c\u521b\u5efa\u88c5\u9970\u5668 add_text() \u7528\u6765\u5b8c\u6210\u5bf9 hello() \u7684\u989d\u5916\u4fee\u9970\u3002 In [16]: def add_text(func): ...: def wrap(): ...: print(\"== This is head of function ==\") ...: func() ...: print(\"== This is the end of function ==\") ...: return wrap ...: ...: def hello(): ...: print(\"Hello world!\") ...: \u4e0b\u9762\u770b\u770b\u6211\u4eec\u589e\u52a0\u5bf9 hello() \u7684\u4fee\u9970\u4f1a\u8ba9\u5b83\u6709\u4ec0\u4e48\u4e0d\u540c\u3002 In [17]: hello = add_text(hello) In [18]: hello() == This is head of function == Hello world! == This is the end of function == \u6211\u4eec\u5728 add_text() \u4e2d\u6dfb\u52a0\u7684\u4fe1\u606f\u6210\u529f\u5728\u8fd0\u884c\u65f6\u8f93\u51fa\u4e86\u3002\u73b0\u5728\u6211\u4eec\u5173\u6ce8\u88c5\u9970\u5668\u7684\u521b\u5efa\uff0c\u4ece\u903b\u8f91\u4e0a\u7406\u89e3\u5b83\u7684\u7ed3\u6784\uff1a\u5b83\u4ee5\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u5728\u5185\u90e8\u5b9a\u4e49\u4e00\u4e2a\u5d4c\u5957\u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c\u3002\u8fd9\u6837\uff0c\u5f53\u5b9e\u9645\u4e0a\u4e00\u4e2a\u51fd\u6570\u88ab\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u65f6\uff0c\u8be5\u51fd\u6570\u88ab\u91cd\u5851\u4e3a\u4e00\u4e2a\u65b0\u7684\u51fd\u6570 wrap() \u5e76\u88ab\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de\uff0c\u5b8c\u6210\u4e86\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u6784\u5efa\uff0c\u4f46\u4ece\u5916\u89c2\u6765\u770b\uff0c\u6211\u4eec\u611f\u89c9\u5230\u539f\u51fd\u6570\u88ab\u201c\u4fee\u9970\u201d\u4e86\u3002 \u4e3a\u4e86\u7b80\u5316\u88c5\u9970\u5668\u7684\u5206\u914d\uff0cPython \u5141\u8bb8\u5728\u539f\u51fd\u6570\u5b9a\u4e49\u524d\u4f7f\u7528\u7b26\u53f7 @ \u6307\u6d3e\u88c5\u9970\u5668\uff0c\u4ece\u800c\u7b80\u5316\u4e86\u4ee3\u7801\u7684\u7f16\u5199\u3002 In [19]: def add_text(func): ...: def wrap(): ...: print(\"== This is head of function ==\") ...: func() ...: print(\"== This is the end of function ==\") ...: return wrap ...: ...: @add_text ...: def hello(): ...: print(\"Hello world!\") ...: In [20]: hello() == This is head of function == Hello world! == This is the end of function ==","title":"11.5.3 \u88c5\u9970\u5668"},{"location":"11-toolbox/#116","text":"\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u4e00\u79cd\u64cd\u4f5c\u5b57\u7b26\u4e32\u7684\u5f3a\u5927\u5de5\u5177\u3002\u5b83\u662f\u4e00\u79cd\u9886\u57df\u4e13\u5c5e\u8bed\u8a00\uff08domain specific language, DSL\uff09\uff0c\u610f\u601d\u662f\u5b83\u4ee5\u4e00\u79cd\u5e93\u7684\u5f62\u5f0f\u5448\u73b0\u5728\u5404\u7c7b\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u800c\u4e0d\u4ec5\u4ec5 Python \u4e2d\u3002\u8fd9\u4e0e\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u53e5 SQL \u662f\u7c7b\u4f3c\u7684\u3002 \u6b63\u5219\u8868\u8fbe\u5f0f\u901a\u5e38\u6709\u4e24\u5927\u7528\u5904\uff1a \u9a8c\u8bc1\u5b57\u7b26\u4e32\u5339\u914d\u83ab\u79cd\u6a21\u5f0f\uff0c\u5982\u9a8c\u8bc1\u90ae\u7bb1\u683c\u5f0f\u3001\u7535\u8bdd\u53f7\u7801 \u5bf9\u5b57\u7b26\u4e32\u6267\u884c\u66ff\u6362\uff0c\u5982\u5c06\u7f8e\u5f0f\u82f1\u8bed\u8f6c\u6362\u4e3a\u82f1\u5f0f\u82f1\u8bed Python \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u51c6\u5e93 re \u7528\u4e8e\u64cd\u4f5c\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u5728\u6211\u4eec\u5b9a\u4e49\u597d\u6b63\u5219\u8868\u8fbe\u5f0f\u540e\uff0c\u51fd\u6570 re.match() \u53ef\u4ee5\u7528\u6765\u67e5\u770b\u662f\u5426\u5b83\u5339\u914d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u3002\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u5339\u914d\u5bf9\u8c61\uff1b\u5982\u679c\u5339\u914d\u5931\u8d25\uff0c\u8fd4\u56de None\u3002\u4e3a\u4e86\u907f\u514d\u6df7\u6dc6\uff0c\u6211\u4eec\u8fd9\u91cc\u90fd\u4f7f\u7528\u539f\u751f\u5b57\u7b26\u4e32 r\u2019string\u2019 \u521b\u5efa\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 In [1]: import re In [2]: pattern = r'spam' In [3]: if re.match(pattern, 'spamxxx'): ...: print('\u5339\u914d\u6210\u529f') ...: else: ...: print('\u5339\u914d\u5931\u8d25') ...: \u5339\u914d\u6210\u529f In [5]: print(re.match(pattern, 'xspamxx')) None \u53e6\u5916\u6709\u51fd\u6570 re.search() \u7528\u4e8e\u5728\u5b57\u7b26\u4e32\u4efb\u610f\u4e4b\u5904\u5bfb\u627e\u5339\u914d\u7684\u6a21\u5f0f\uff0cre.findall() \u5bfb\u627e\u5339\u914d\u4e00\u4e2a\u6a21\u5f0f\u7684\u6240\u6709\u5b50\u4e32\u3002 In [6]: print(re.search(pattern, 'xspamxx')) <re.Match object; span=(1, 5), match='spam'> In [7]: print(re.findall(pattern, 'xspamxxspamspam')) ['spam', 'spam', 'spam'] \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762 re.search() \u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a Match \u5bf9\u8c61\uff0c\u6709\u51e0\u4e2a\u5e38\u7528\u7684\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u5339\u914d\u7684\u4fe1\u606f\u3002 In [8]: match = re.search(pattern, 'xspamxx') In [9]: match.group() Out[9]: 'spam' In [10]: match.start() Out[10]: 1 In [11]: match.end() Out[11]: 5 In [12]: match.span() Out[12]: (1, 5) re \u6a21\u5757\u6700\u5e38\u7528\u7684\u51fd\u6570\u4e4b\u4e00\u53ef\u80fd\u5c31\u662f sub() \u4e86\uff0c\u5b83\u53ef\u4ee5\u57fa\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u5b9e\u73b0\u5b57\u7b26\u4e32\u90e8\u5206\u5185\u5bb9\u7684\u66ff\u6362\u3002 In [13]: re.sub? Signature: re.sub(pattern, repl, string, count=0, flags=0) Docstring: Return the string obtained by replacing the leftmost non-overlapping occurrences of the pattern in string by the replacement repl. repl can be either a string or a callable; if a string, backslash escapes in it are processed. If it is a callable, it's passed the Match object and must return a replacement string to be used. File: ~/miniconda3/lib/python3.7/re.py Type: function \u5f53\u4e0d\u4fee\u6539 count \u65f6\uff0c\u9ed8\u8ba4\u4f1a\u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u5339\u914d\u7684\u6a21\u5f0f\u3002 In [14]: to_sub = 'apple orange apple' In [16]: re.sub(r'apple', 'juice', to_sub) Out[16]: 'juice orange juice' In [17]: re.sub(r'apple', 'juice', to_sub, count=1) Out[17]: 'juice orange apple' \u5143\u5b57\u7b26\u662f\u4e00\u7c7b\u7279\u6b8a\u7684\u5b57\u7b26\uff0c\u5b83\u4eec\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u6709\u7279\u522b\u7684\u542b\u4e49\u548c\u7528\u5904\uff0c\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6838\u5fc3\uff0c\u5e38\u89c1\u5e38\u7528\u7684\u4e3b\u8981\u6709\u4e0b\u9762\u4e00\u4e9b\uff1a \u951a\u5b9a\u7b26 ^ \u2014\u2014 \u7528\u4e8e\u951a\u5b9a\u884c\u9996 $ \u2014\u2014 \u7528\u4e8e\u951a\u5b9a\u884c\u5c3e \u6570\u76ee\u7b26 . \u2014\u2014 \u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 ? \u2014\u2014 0 \u4e2a\u6216 1 \u4e2a + \u2014\u2014 \u4e00\u4e2a\u6216\u4ee5\u4e0a * \u2014\u2014 \u4efb\u610f\u4e2a\uff08\u5305\u62ec 0 \u4e2a\uff09 {m, n} \u2014\u2014 \u81f3\u5c11 m \u4e2a\uff0c\u81f3\u591a n \u4e2a \u53ef\u9009\u7b26 [abc] \u2014\u2014 a b c \u4e09\u4e2a\u4e2d\u4efb\u610f\u4e00\u4e2a [^abc] \u2014\u2014 \u4e0d\u80fd\u662f a b c \u4e2d\u4efb\u610f\u4e00\u4e2a\uff08\u5373\u6392\u9664 a b c\uff09 [a-z] \u2014\u2014 \u6240\u6709\u5c0f\u5199\u5b57\u6bcd [A-Z] \u2014\u2014 \u6240\u6709\u5927\u5199\u5b57\u6bcd [0-9] \u2014\u2014 \u6240\u6709\u6570\u5b57 \u951a\u5b9a\u7b26\u7528\u4e8e\u5b9a\u4e49\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8d77\u59cb\u548c\u7ed3\u5c3e\u3002 In [22]: print(re.search(r'^apple', ' apple')) # \u9650\u5b9a\u5fc5\u987b\u4ee5 a \u8d77\u59cb None In [23]: print(re.search(r'apple$', 'apple ')) # \u9650\u5b9a\u5fc5\u987b\u4ee5 e \u7ed3\u675f None In [24]: print(re.search(r'apple', ' apple')) <re.Match object; span=(1, 6), match='apple'> In [25]: print(re.search(r'apple', 'apple ')) <re.Match object; span=(0, 5), match='apple'> \u6570\u76ee\u7b26\u548c\u53ef\u9009\u7b26\u7528\u4e8e\u5360\u4f4d\u3001\u7b5b\u9009\u548c\u6a21\u7cca\u5339\u914d\u3002 In [26]: print(re.search(r'[a-z]', 'happy new year')) <re.Match object; span=(0, 1), match='h'> In [27]: print(re.search(r'[a-z]', 'HAPPY NEW YEAR')) None In [28]: print(re.search(r'[A-Z]', 'HAPPY NEW YEAR')) <re.Match object; span=(0, 1), match='H'> In [29]: print(re.search(r'[A-Za-z]', 'HAPPY new YEar')) <re.Match object; span=(0, 1), match='H'> In [30]: print(re.search(r'[A-Z]', 'happy new year')) None \u5047\u8bbe\u6211\u4eec\u9700\u8981\u5339\u914d 11 \u4f4d\u7684\u624b\u673a\u53f7\u7801\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a TEL: 12345678912 \u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5199\u4e3a r'^TEL: [0-9]{11}$' \u4e0b\u9762\u6d4b\u8bd5\u770b\u770b\uff1a In [31]: print(re.match(r'^TEL: [0-9]{11}$', 'TEL: 12345678912')) <re.Match object; span=(0, 16), match='TEL: 12345678912'> In [32]: print(re.match(r'^TEL: [0-9]{11}$', 'TEL: 1234567891')) None In [33]: print(re.match(r'^TEL: [0-9]{11}$', 'TEL: 12345678912 ')) None In [34]: print(re.match(r'^TEL: [0-9]{11}$', 'EL: 12345678912')) None In [35]: print(re.match(r'^TEL: [0-9]{11}$', 'TEL:12345678912')) None \u7b2c\u4e00\u6b21\u5f53\u6211\u4eec\u8f93\u5165\u6b63\u786e\u683c\u5f0f\u7684\u6570\u636e\u65f6\uff0c\u8fd4\u56de\u4e86\u5339\u914d\u3002\u540e\u9762\u6240\u6709\u7684\u5b57\u7b26\u4e32\u90fd\u6709\u6240\u4e0d\u540c\uff0c\u56e0\u6b64\u90fd\u4e0d\u80fd\u5339\u914d\u3002\u4e0d\u77e5\u9053\u8bfb\u8005\u662f\u5426\u611f\u53d7\u5230\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5f3a\u5927\uff0c\u5982\u679c\u5de5\u4f5c\u4e2d\u6709\u9047\u5230\u53ef\u4ee5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u8d76\u7d27\u7528\u8d77\u6765\u5427\u3002","title":"11.6 \u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"11-toolbox/#117","text":"\u672c\u7ae0\u7684\u6d89\u53ca\u7684\u5185\u5bb9\u975e\u5e38\u5e7f\u6cdb\uff0c\u76f8\u5bf9\u672c\u4e66\u5176\u4ed6\u7ae0\u8282\u800c\u8a00\u8f83\u4e3a\u9a73\u6742\uff0c\u4e3b\u65e8\u662f\u4ecb\u7ecd\u6570\u636e\u5206\u6790\u53ef\u80fd\u4f1a\u5229\u7528\u4e0a\u7684\u5de5\u5177\u51fd\u6570\u548c\u65b9\u6cd5\uff0c\u4e5f\u5305\u542b Python \u9ad8\u7ea7\u7f16\u7a0b\u76f8\u5173\u7684\u7406\u8bba\u77e5\u8bc6\u3002","title":"11.7 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"12-advanced-pandas/","text":"\u7b2c 12 \u7ae0 Pandas \u8fdb\u9636 \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : \u6df1\u5165 Pandas \u6570\u636e\u7ed3\u6784 \u8fed\u4ee3\u4e0e\u51fd\u6570\u5e94\u7528 \u6570\u636e\u6e05\u6d17 \u7b80\u5355\u53ef\u89c6\u5316 \u672c\u4e66\u5728\u7b2c 8 \u7ae0\u3001\u7b2c 10 \u7ae0\u5206\u522b\u5411\u8bfb\u8005\u4ecb\u7ecd\u4e86 Pandas \u7684\u57fa\u672c\u6570\u636e\u7ed3\u6784\u3001\u64cd\u4f5c\u548c\u5bfc\u5165\u5e38\u89c1\u7684\u6570\u636e\u6587\u4ef6\uff0c\u672c\u7ae0\u7684\u5185\u5bb9\u5c06\u66f4\u52a0\u6df1\u5165\uff0c\u9664\u4e86\u4ecb\u7ecd\u66f4\u591a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u672c\u7ae0\u8fd8\u5305\u542b\u51fd\u6570\u5e94\u7528\u3001\u6570\u636e\u6e05\u6d17\u7b49\u6570\u636e\u5904\u7406\u7684\u4e00\u4e9b\u6838\u5fc3\u6280\u80fd\u3002 12.1 \u6df1\u5165 Pandas \u6570\u636e\u7ed3\u6784 \u00b6 12.1.1 \u56de\u987e \u00b6 \u5728\u5b66\u4e60\u65b0\u7684\u77e5\u8bc6\u4e4b\u524d\uff0c\u6211\u4eec\u4e0d\u59a8\u5148\u6765\u56de\u987e\u548c\u6574\u7406\u4e00\u4e0b\u76ee\u524d\u63a5\u89e6\u5230\u7684 Pandas \u7684\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u5b83\u4eec\u7684\u8054\u7cfb\u3002 NumPy \u6570\u7ec4\u662f Pandas \u6570\u636e\u7ed3\u6784\u7684\u6784\u6210\u6838\u5fc3\uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u503c\u3002\u6211\u4eec\u5e38\u7528\u4e00\u7ef4\u548c\u4e8c\u7ef4\u7684 ndarray\u3002 In [1]: import numpy as np In [2]: a = np.arange(9) In [3]: a Out[3]: array([0, 1, 2, 3, 4, 5, 6, 7, 8]) In [4]: b = np.arange(9).reshape((3, 3)) In [5]: b Out[5]: array([[0, 1, 2], [3, 4, 5], [6, 7, 8]]) Pandas \u7684 Series \u5c31\u662f\u5728\u4e00\u7ef4 ndarray \u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e86\u5bf9\u6570\u636e\u542b\u4e49\u7684\u63cf\u8ff0\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u7d22\u5f15\u6216\u6807\u7b7e\u3002\u4e0e ndarray \u672c\u8eab\u6240\u652f\u6301\u7684\u6574\u6570\u7d22\u5f15\u6240\u4e0d\u540c\u7684\u662f\uff0cPandas \u540c\u65f6\u652f\u6301\u6574\u6570\u7d22\u5f15\u548c\u5b57\u7b26\u7d22\u5f15\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6574\u6570\u7d22\u5f15\u4f1a\u88ab\u4f7f\u7528\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u8303\u56f4\u7d22\u5f15\u5bf9\u8c61 RangeIndex\uff0c\u8be5\u5bf9\u8c61\u51cf\u5c11\u4e86\u5bf9\u5185\u5b58\u7684\u5229\u7528\u3002\u4f8b\u5982\uff0c0-9 \u5373\u53ef\u7528\u8d77\u70b9 0\uff0c\u6b65\u957f 1\uff0c\u7ec8\u6b62\u70b9 10 \u52a0\u4ee5\u8868\u8ff0\u3002\u66f4\u5927\u8303\u56f4\u7684\u6570\u503c\u4e5f\u662f\u5982\u6b64\u3002 In [6]: import pandas as pd In [7]: pd.RangeIndex(10) Out[7]: RangeIndex(start=0, stop=10, step=1) \u4e0b\u9762\u4ee3\u7801\u786e\u8ba4\u4e86 RangeIndex \u9ed8\u8ba4\u88ab\u4f7f\u7528\uff1a In [8]: a_series = pd.Series([5, 7, 9]) In [9]: a_series.index Out[9]: RangeIndex(start=0, stop=3, step=1) \u5f53\u7136\uff0cPandas \u7684\u7279\u8272\u5728\u4e8e\u5bf9\u5b57\u7b26\u7d22\u5f15\u7684\u652f\u6301\uff0c\u5b57\u7b26\u7d22\u5f15\u65e2\u53ef\u4ee5\u660e\u786e\u6570\u503c\u542b\u4e49\uff0c\u4e5f\u5efa\u7acb\u7684\u6620\u5c04\u5173\u7cfb\u65b9\u4fbf\u6570\u636e\u7684\u8bbf\u95ee\u3001\u4fee\u6539\u7b49\u64cd\u4f5c\u3002 \u52a0\u4e0a\u5b57\u7b26\u7d22\u5f15\uff0c\u4e0a\u9762\u7684 Series \u6447\u8eab\u4e00\u53d8\u6210\u4e3a\u4e86 3 \u4e2a\u7528\u6237\u67d0\u4e2a\u5c5e\u6027\u7684\u5ea6\u91cf\u503c\u3002 In [10]: a_series = pd.Series([5, 7, 9], index = ['user1', 'user2', 'user3']) In [11]: a_series Out[11]: user1 5 user2 7 user3 9 dtype: int64 \u4e0d\u59a8\u52a0\u4e0a\u4e2a\u540d\u5b57\uff0c\u8ba9\u542b\u4e49\u9650\u5b9a\u4e3a\u4fe1\u7528\u5f97\u5206\u3002 In [12]: a_series = pd.Series([5, 7, 9], index = ['user1', 'user2', 'user3'], name='credit_score') In [13]: a_series Out[13]: user1 5 user2 7 user3 9 Name: credit_score, dtype: int64 \u8fd9\u91cc Series \u53ea\u80fd\u8868\u793a\u7528\u6237\u7684\u4e00\u79cd\u5c5e\u6027\uff0cDataFrame \u8fdb\u884c\u4e86\u62d3\u5c55\uff0c\u652f\u6301\u591a\u79cd\u5c5e\u6027\u4e14\u4e0d\u540c\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u4e0d\u540c\u3002\u8fd9\u5b8c\u7f8e\u5730\u4e0e\u5de5\u4f5c\u4e2d\u5e38\u89c1\u7684\u8868\u683c\u6570\u636e\u5bf9\u5e94\u4e86\u8d77\u6765\u3002\u867d\u7136\u8bf4\u6570\u636e\u7684\u4e3b\u4f53\u8868\u73b0\u65b9\u5f0f\u662f\u4e00\u4e2a\u77e9\u9635\uff0c\u4f46\u4e0e 2 \u7ef4 ndarray \u662f\u5b8c\u5168\u4e0d\u540c\u7684\u3002 \u4ee5\u4e0b\u4ee3\u7801\u5c55\u793a\u4e86\u4e00\u4e2a\u5178\u578b\u7684\u6570\u636e\u6846\uff0c\u884c\u4e00\u822c\u7528\u4e8e\u8868\u793a\u72ec\u7acb\u7684\u8bb0\u5f55\uff0c\u5982\u8fd9\u91cc\u7684 student\uff1b\u5217\u4e00\u822c\u8868\u793a\u8bb0\u5f55\u7684\u76f8\u5173\u5c5e\u6027\uff0c\u5982\u8fd9\u91cc student \u7684 score \u548c height\u3002 In [14]: df = pd.DataFrame([[5, 166], [7, 178], [9, 160]], ...: index=['student1', 'student2', 'student3'], columns=['score', 'height']) In [15]: df Out[15]: score height student1 5 166 student2 7 178 student3 9 160 \u884c\u7d22\u5f15\u4f9d\u65e7\u662f\u4f7f\u7528 index \u63cf\u8ff0\uff0c\u4e3a\u4e86\u63cf\u8ff0\u4e0d\u540c\u7684\u5217\uff0cDataFrame \u5f15\u5165\u4e86 column \u5c5e\u6027\u503c\u3002\u8fd9\u6837\uff0c\u4e24\u4e2a\u7ef4\u5ea6\u7684\u7d22\u5f15\u548c\u6570\u636e\u542b\u4e49\u7684\u63cf\u8ff0\u5bf9\u5e94\u4e86\u8d77\u6765\u3002 \u603b\u7ed3\u4e00\u4e0b\uff0cPandas \u7684\u6570\u636e\u7ed3\u6784\u662f\u7531 NumPy \u6570\u7ec4\u52a0\u4e0a\u6570\u636e\u63cf\u8ff0\u7ec4\u6210\uff0c\u5176\u4e2d Series = 1 \u7ef4 ndarray + index DataFrame = \u591a\u4e2a 1 \u7ef4 ndarray + index + column \u8fd9\u4e9b\u77e5\u8bc6\u53ef\u4ee5\u5f52\u7eb3\u4e3a\u4e00\u4e2a\u6bd4\u8f83\u5f62\u8c61\u7684\u56fe\u5f62\uff0c\u5982\u56fe 12-1 \u6240\u793a\u3002 12.1.2 \u5206\u7c7b\u53d8\u91cf \u00b6 \u672c\u5c0f\u8282\u4ecb\u7ecd\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u7c7b\u578b\u2014\u2014\u5206\u7c7b\u53d8\u91cf\u3002\u5206\u7c7b\u6709\u65f6\u4e5f\u79f0\u4e3a\u56e0\u5b50\u578b\u53d8\u91cf\uff08factor\uff09\uff0c\u5b83\u7528\u4e8e\u8868\u793a\u91cd\u590d\u7684\u6587\u672c\u5217\u3002\u4e00\u4e9b\u5305\u542b\u6709\u9650\u4e2a\u5143\u7d20\u7684\u5217\u5e38\u5e38\u4f1a\u5728\u9700\u8981\u5904\u7406\u7684\u6570\u636e\u4e2d\u51fa\u73b0\uff0c\u5982\u6027\u522b\u3001\u56fd\u5bb6\u3001\u4e00\u4e9b\u7a0b\u5e8f\u63cf\u8ff0\u8bcd\uff08\u4f4e\u3001\u4e2d\u3001\u9ad8\uff09\u7b49\u3002\u5206\u7c7b\u53d8\u91cf\u7684\u5143\u7d20\u662f\u56fa\u5b9a\u7684\uff0c\u5982\u6027\u522b\u53ea\u4f1a\u6709\u7537\u3001\u5973\u3002\u5206\u7c7b\u53d8\u91cf\u6709\u65f6\u5019\u53ef\u80fd\u6709\u987a\u5e8f\uff0c\u5982\u4f4e < \u4e2d < \u9ad8\u3002 \u770b\u5230\u8fd9\u91cc\uff0c\u8bfb\u8005\u53ef\u80fd\u5fc3\u4e2d\u5bf9\u5206\u7c7b\u53d8\u91cf\u6709\u4e86\u4e00\u4e2a\u6bd4\u8f83\u5f62\u8c61\u7684\u63cf\u8ff0\uff1a\u6709\u5e8f\u7684\u96c6\u5408\u3002\u6ca1\u9519\uff0c\u5b83\u770b\u8d77\u6765\u5c31\u662f\u5982\u6b64\u3002\u90a3\u4e48\u5206\u7c7b\u53d8\u91cf\u5728\u6570\u636e\u5206\u6790\u65f6\u6709\u4ec0\u4e48\u7528\u5462\uff1fPandas \u5e93\u4e3a\u4ec0\u4e48\u8981\u63d0\u4f9b\u8fd9\u6837\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff1f \u8282\u7701\u5b58\u50a8\u2014\u2014\u5206\u7c7b\u53d8\u91cf\u5728\u5b58\u50a8\u65f6\u662f\u5c06\u5b57\u7b26\u4e32\u6620\u5c04\u4e3a\u6574\u6570\u503c\u7684\uff0c\u8fd9\u5927\u5927\u8282\u7701\u4e86\u5185\u5b58\u7684\u4f7f\u7528\u3002\u6570\u636e\u8d8a\u5927\uff0c\u6548\u7387\u8d8a\u9ad8\u3002\u4f8b\u5982\uff0c\u6709 10 \u4e07\u4e2a one\u3001two\u3001three\uff0c\u5206\u7c7b\u53d8\u91cf\u5c06\u5b83\u4eec\u6620\u5c04\u4e3a 1\u30012\u30013 \u8fdb\u884c\u5b58\u50a8\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u7684\u82f1\u6587\u5b57\u7b26\u3002 \u5206\u7c7b\u6392\u5e8f\u2014\u2014\u4f8b\u5982\u6709 3 \u4e2a\u5206\u7c7b one\u3001two\u3001three\uff0c\u6211\u4eec\u9700\u8981\u7ed8\u5236\u5b83\u4eec\u7684\u9891\u6570\u6761\u5f62\u56fe\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5206\u7c7b\u53d8\u91cf\u6309\u7167\u81ea\u5df1\u7684\u7684\u60f3\u6cd5\u6392\u5217\u8fd9\u4e09\u4e2a\u5206\u7c7b\uff0c\u63a7\u5236\u7ed8\u56fe\u65f6\u5b83\u4eec\u7684\u6392\u5e8f\u3002 \u6709\u4e24\u79cd\u529e\u6cd5\u53ef\u4ee5\u521b\u5efa\u5206\u7c7b\u53d8\u91cf\uff0c\u4e00\u79cd\u662f\u5728\u521b\u5efa Pandas \u7684 Series \u6216 DataFrame \u65f6\u6307\u5b9a\u6570\u636e\u7c7b\u578b dtype \u4e3a category\uff0c\u7b2c\u4e8c\u79cd\u662f\u76f4\u63a5\u4f7f\u7528 Pandas \u63d0\u4f9b\u7684\u6784\u9020\u5668\u51fd\u6570 Categorical()\u3002 \u6211\u4eec\u5148\u770b\u7b2c\u4e00\u79cd\u529e\u6cd5\uff1a In [16]: pd.Series(['a', 'a', 'b', 'c', 'b'], dtype='category') Out[16]: 0 a 1 a 2 b 3 c 4 b dtype: category Categories (3, object): [a, b, c] \u6211\u4eec\u5bf9\u6bd4\u4e0b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u503c\u65f6\u7684\u7ed3\u679c\uff1a In [17]: pd.Series(['a', 'a', 'b', 'c', 'b']) Out[17]: 0 a 1 a 2 b 3 c 4 b dtype: object \u4e24\u8005\u7684\u5dee\u522b\u4e3b\u8981\u4f53\u73b0\u5728 dtype \u4e0a\uff0c\u9ed8\u8ba4\u5b58\u50a8\u5b57\u7b26\u4f7f\u7528\u7684\u662f object \u7c7b\u578b\uff0c\u5f53 dtype \u6307\u5b9a\u4e3a category \u540e\uff0cPandas \u5c06 5 \u4e2a\u5b57\u7b26\u8f6c\u6362\u5177\u6709 3 \u4e2a\u552f\u4e00\u503c [a, b, c] \u7684\u7c7b\u522b\u3002\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u751f\u6210\u7684 Series \u5b58\u50a8\u7684\u6570\u636e\u662f\u4ece [a, b, c] \u4e2d\u91cd\u590d\u62bd\u6837\u7684\u7ed3\u679c\u3002 \u6211\u4eec\u518d\u770b\u5982\u4f55\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u6784\u9020\u5206\u7c7b\u53d8\u91cf\u3002 In [2]: pd.Categorical(['a', 'a', 'b', 'c', 'b']) Out[2]: [a, a, b, c, b] Categories (3, object): [a, b, c] \u51fd\u6570\u6587\u6863\u663e\u793a\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7c7b\u522b\u4ee5\u53ca\u662f\u5426\u6392\u5e8f\u3002 pd.Categorical( values, categories=None, ordered=None, dtype=None, fastpath=False, ) \u6211\u4eec\u8bd5\u4e00\u8bd5\uff1a In [6]: pd.Categorical(['a', 'a', 'b', 'c', 'b'], categories=['a', 'c']) Out[6]: [a, a, NaN, c, NaN] Categories (2, object): [a, c] In [7]: pd.Categorical(['a', 'a', 'b', 'c', 'b'], ordered=True) Out[7]: [a, a, b, c, b] Categories (3, object): [a < b < c] \u7b2c\u4e00\u884c\u4ee3\u7801\u6211\u4eec\u6307\u5b9a\u4e86\u5408\u6cd5\u7684\u7c7b\u522b\u662f \u201ca\u201d \u548c \u201cc\u201d\uff0c\u6240\u4ee5\u5176\u4ed6\u7684\u5b57\u6bcd\u90fd\u4f1a\u88ab\u8f6c\u6362\u4e3a NaN \u503c\u3002\u7b2c\u4e8c\u884c\u4ee3\u7801\u7684\u7ed3\u679c\u663e\u793a\u4e86\u4e0d\u4ec5\u6709 3 \u4e2a\u7c7b\u522b\uff0c\u800c\u4e14\u8fd8\u5b58\u5728 a < b < c \u7684\u987a\u5e8f\u5173\u7cfb\u3002 \u5bf9\u4e8e\u5206\u7c7b\u6570\u636e\uff0c\u6211\u4eec\u4e00\u4e2a\u5e38\u89c1\u9700\u6c42\u662f\u83b7\u53d6\u5143\u7d20\u7684\u9891\u6570\u6216\u9891\u7387\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 describe() \u65b9\u6cd5\u5b9e\u73b0\u3002 In [9]: cts = pd.Categorical(['a', 'a', 'b', 'c', 'b'], ordered=True) In [10]: cts.describe() Out[10]: counts freqs categories a 2 0.4 b 2 0.4 c 1 0.2 \u8be5\u5bf9\u8c61\u7684\u7c7b\u522b\u4e5f\u662f\u6709\u7528\u7684\uff0c\u8fd9\u53ef\u80fd\u4f7f\u7528\u5bf9\u8c61\u7684\u5c5e\u6027\u503c categories \u83b7\u53d6\u3002 In [11]: cts.categories Out[11]: Index(['a', 'b', 'c'], dtype='object') \u53e6\u5916\uff0cordered \u5c5e\u6027\u53ef\u4ee5\u7ed9\u51fa\u5bf9\u8c61\u662f\u5426\u7ecf\u8fc7\u6392\u5e8f\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\u3002 In [12]: cts.ordered Out[12]: True \u5bf9\u5206\u7c7b\u5bf9\u8c61\u5e38\u89c1\u7684\u64cd\u4f5c\u6709\u91cd\u547d\u540d\u3001\u65b0\u589e\u3001\u5220\u9664\u548c\u6bd4\u8f83\uff0c\u4e0b\u9762\u4e3e\u4f8b\u4ecb\u7ecd\u3002 \u4e0a\u9762\u6211\u4eec\u770b\u5230\u5206\u7c7b\u4fe1\u606f\u5b58\u50a8\u5728\u5bf9\u8c61\u7684 categories \u5c5e\u6027\u4e2d\uff0c\u6211\u4eec\u91cd\u5199\u8be5\u5c5e\u6027\u5373\u53ef\u91cd\u547d\u540d\u7c7b\u522b\u3002 In [13]: cts_new = cts.copy() In [14]: cts_new.categories = ['aa', 'bb', 'cc'] In [15]: cts Out[15]: [a, a, b, c, b] Categories (3, object): [a < b < c] In [16]: cts_new Out[16]: [aa, aa, bb, cc, bb] Categories (3, object): [aa < bb < cc] \u6700\u540e\u7684\u8f93\u51fa\u663e\u793a\u6240\u6709\u7684\u5143\u7d20\u90fd\u88ab\u66ff\u6362\u4e86\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u7279\u6027\u3002 \u589e\u52a0\u65b0\u7684\u7c7b\u522b\u53ef\u4ee5\u4f7f\u7528 add_categories() \u65b9\u6cd5\u5b9e\u73b0\uff0c\u65b0\u7684\u7c7b\u522b\u4f1a\u88ab\u6dfb\u52a0\u5230\u6700\u540e\u3002 In [17]: cts_new.add_categories(['ff']) Out[17]: [aa, aa, bb, cc, bb] Categories (4, object): [aa < bb < cc < ff] \u5220\u9664\u7c7b\u522b\u540e\uff0c\u539f\u6709\u7684\u503c\u4f1a\u88ab NaN \u503c\u66ff\u4ee3\uff1a In [19]: cts_new.remove_categories(\"bb\") Out[19]: [aa, aa, NaN, cc, NaN] Categories (2, object): [aa < cc] \u5206\u7c7b\u5bf9\u8c61\u7684\u6bd4\u8f83\u5728\u5bf9\u8c61\u662f\u6709\u5e8f\u65f6\u6bd4\u8f83\u6709\u7528\u3002 In [23]: cts Out[23]: [a, a, b, c, b] Categories (3, object): [a < b < c] In [24]: cts2 = pd.Categorical(['b', 'c', 'a', 'a'], ordered=True) In [25]: cts > cts2 --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-25-d954cff14835> in <module> ----> 1 cts > cts2 ~/miniconda3/lib/python3.7/site-packages/pandas/core/arrays/categorical.py in f(self, other) 113 other_codes = other._codes 114 --> 115 mask = (self._codes == -1) | (other_codes == -1) 116 f = getattr(self._codes, op) 117 ret = f(other_codes) ValueError: operands could not be broadcast together with shapes (5,) (4,) In [26]: cts2 = pd.Categorical(['b', 'c', 'a', 'a', 'a'], ordered=True) In [27]: cts > cts2 Out[27]: array([False, False, True, True, True]) \u5f53\u4e24\u4e2a\u5bf9\u8c61\u90fd\u662f\u5206\u7c7b\u5bf9\u8c61\u65f6\u4e00\u5b9a\u8981\u6ce8\u610f\u957f\u5ea6\u8981\u4e00\u81f4\uff0c\u5e76\u4e14\u8bbe\u5b9a\u7684\u7c7b\u522b\u4e00\u81f4\u3002 \u5f53\u5176\u4e2d\u4e00\u4e2a\u5bf9\u8c61\u662f\u6807\u91cf\u65f6\uff0c\u8ba1\u7b97\u4f1a\u81ea\u52a8\u8fdb\u884c\u5e7f\u64ad\u3002 In [28]: cts > 'b' Out[28]: array([False, False, False, True, False]) \u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u5c1d\u8bd5\u5176\u4ed6\u5bf9\u6bd4\u7c7b\u578b\u7684\u7ed3\u679c\u3002 12.1.3 \u65f6\u95f4\u5e8f\u5217 \u00b6 \u6570\u636e\u7684\u751f\u6210\u548c\u91c7\u96c6\u5f80\u5f80\u662f\u8fde\u7eed\u7684\u8fc7\u7a0b\uff0c\u8fd9\u79bb\u4e0d\u5f00\u65f6\u95f4\u7684\u7d2f\u79ef\u3002 \u65f6\u95f4\u5e8f\u5217\u5373\u662f\u6309\u65f6\u95f4\u987a\u5e8f\u7ec4\u6210\u7684\u6570\u636e\u5e8f\u5217\uff0c\u5b83\u5c55\u793a\u4e86\u6570\u636e\u53d8\u5316\u7684\u8d8b\u52bf\u3001\u53ef\u80fd\u7684\u5468\u671f\u6027\u548c\u89c4\u5f8b\u6027\u3002 \u65f6\u95f4\u5e8f\u5217\u5206\u6790\u7684\u4e3b\u8981\u76ee\u7684\u662f\u6839\u636e\u5df2\u6709\u7684\u5386\u53f2\u6570\u636e\u5bfb\u627e\u89c4\u5f8b\u3001\u5efa\u7acb\u6a21\u578b\u7528\u6765\u5bf9\u672a\u6765\u7684\u6570\u636e\u503c\u8fdb\u884c\u9884\u6d4b\u3002 \u8fd9\u79cd\u7c7b\u578b\u7684\u5206\u6790\u5e38\u7528\u4e8e\u91d1\u878d\u9886\u57df\uff0cPandas \u7684\u521b\u5efa\u7684\u521d\u59cb\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u5904\u7406\u91d1\u878d\u6570\u636e\uff0c\u56e0\u6b64\u63d0\u4f9b \u4e86\u65f6\u95f4\u65e5\u671f\u5bf9\u8c61\u548c\u4e30\u5bcc\u7684\u65f6\u5e8f\u5206\u6790\u529f\u80fd\u7279\u6027\u3002 \u65f6\u95f4\u65e5\u671f \u00b6 Python \u7684\u6807\u51c6\u5e93\u5c31\u63d0\u4f9b\u4e86\u5bf9\u65e5\u671f\u548c\u65f6\u95f4\u7684\u652f\u6301\uff0c\u5982\u8ba1\u7b97\u5f53\u524d\u7684\u65f6\u95f4\u6233\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\uff1a In [32]: import time In [33]: time.time() Out[33]: 1576340722.0232272 \u65f6\u95f4\u6233\u662f\u4ee5 1970 \u5e74 1 \u6708 1 \u65e5\u96f6\u70b9\u7ecf\u8fc7\u4e86\u591a\u957f\u65f6\u95f4\u6765\u8868\u793a\u3002 \u65f6\u95f4\u6233\u5355\u4f4d\u6700\u9002\u4e8e\u505a\u65e5\u671f\u8fd0\u7b97\u3002\u4f46\u662f 1970 \u5e74\u4e4b\u524d\u7684\u65e5\u671f\u5c31\u65e0\u6cd5\u4ee5\u6b64\u8868\u793a\u4e86\u3002 \u672a\u6765\u592a\u9065\u8fdc\u7684\u65e5\u671f\u4e5f\u4e0d\u53ef\u4ee5\uff0cLinux/macOS \u548c Windows \u7cfb\u7edf\u53ea\u652f\u6301\u5230 2038 \u5e74\u3002 \u5c06\u65f6\u95f4\u6233\u4f20\u9012\u7ed9 localtime() \u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u66f4\u4e3a\u53ef\u8bfb\u7684\u65f6\u95f4\u8bb0\u5f55\u3002 In [34]: time.localtime(time.time()) Out[34]: time.struct_time(tm_year=2019, tm_mon=12, tm_mday=15, tm_hour=10, tm_min=6, tm_sec=45, tm_wday=6, tm_yda y=349, tm_isdst=0) \u5982\u679c\u60f3\u8981\u83b7\u5f97\u66f4\u4e3a\u7b80\u8981\u7684\u65f6\u95f4\u8868\u793a\uff0c\u53ef\u4ee5\u5c06\u4e0a\u8ff0\u4ee3\u7801\u4f20\u4e3a asctime() \u7684\u53c2\u6570\uff1a In [36]: time.asctime(time.localtime(time.time())) Out[36]: 'Sun Dec 15 10:09:29 2019' \u65f6\u95f4\u65e5\u671f\u683c\u5f0f\u5316\u7b26\u53f7 \u00b6 \u4e0a\u4e00\u4e2a\u4ee3\u7801\u7684\u7ed3\u679c\u662f\u6309\u7167\u661f\u671f\u3001\u65e5\u671f\u3001\u65f6\u95f4\u3001\u5e74\u4efd\u7684\u7ed3\u679c\u8f93\u51fa\u7684\uff0c\u5f88\u591a\u65f6\u5019\u6211\u4eec\u9700\u8981\u81ea\u5df1\u683c\u5f0f\u5316\u65f6\u95f4\u65e5\u671f\u7684\u663e\u793a\u3002 \u56e0\u6b64\uff0c\u4e86\u89e3\u76f8\u5173\u7684\u683c\u5f0f\u5316\u7b26\u53f7\u662f\u6709\u5fc5\u8981\u7684\uff0c\u5b83\u5728\u6240\u6709\u7684\u65f6\u95f4\u65e5\u671f\u6709\u5173\u7684 Python \u5305\u6216\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u91cc\u9762\u90fd\u662f\u901a\u7528\u7684\u3002 \u5e38\u7528\u7684\u683c\u5f0f\u5316\u7b26\u53f7\u6c47\u603b\u5982\u4e0b\u8868\u3002 \u7b26\u53f7 \u542b\u4e49 %y \u4e24\u4f4d\u6570\u7684\u5e74\u4efd\u8868\u793a\uff0800-99\uff09 %Y \u56db\u4f4d\u6570\u7684\u5e74\u4efd\u8868\u793a\uff08000-9999\uff09 %m \u6708\u4efd\uff0801-12\uff09 %d \u6708\u5185\u4e2d\u7684\u4e00\u5929\uff080-31 %H 24\u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff080-23 %I 12\u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff0801-12\uff09 %M \u5206\u949f\u6570\uff0800=59\uff09 %S \u79d2\uff0800-59\uff09 %a \u7b80\u5316\u661f\u671f\u540d\u79f0 %A \u5b8c\u6574\u661f\u671f\u540d\u79f0 %b \u7b80\u5316\u7684\u6708\u4efd\u540d\u79f0 %B \u5b8c\u6574\u7684\u6708\u4efd\u540d\u79f0 %c \u672c\u5730\u76f8\u5e94\u7684\u65e5\u671f\u8868\u793a\u548c\u65f6\u95f4\u8868\u793a %j \u5e74\u5185\u7684\u4e00\u5929\uff08001-366\uff09 %p \u672c\u5730A.M.\u6216P.M.\u7684\u7b49\u4ef7\u7b26 %U \u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800-53\uff09\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb %w \u661f\u671f\uff080-6\uff09\uff0c\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb %W \u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800-53\uff09\u661f\u671f\u4e00\u4e3a\u661f\u671f\u7684\u5f00\u59cb %x \u672c\u5730\u76f8\u5e94\u7684\u65e5\u671f\u8868\u793a %X \u672c\u5730\u76f8\u5e94\u7684\u65f6\u95f4\u8868\u793a %Z \u5f53\u524d\u65f6\u533a\u7684\u540d\u79f0 %% %\u53f7\u672c\u8eab time \u6a21\u5757\u63d0\u4f9b\u4e86 strftime() \u51fd\u6570\u7528\u4e8e\u683c\u5f0f\u5316\u3002 \u4e0b\u9762\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4ee5\u5e74\u6708\u65e5\u65f6\u95f4\u7684\u987a\u5e8f\u8f93\u51fa\u5f53\u524d\u65f6\u95f4\u65e5\u671f\uff0c\u8be5\u683c\u5f0f\u662f\u6211\u4eec\u5e73\u65f6\u6700\u5e38\u89c1\u7684\u683c\u5f0f\u3002 In [37]: time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime()) Out[37]: '2019-12-15 10:28:23' datetime \u6a21\u5757 \u00b6 datetime \u6a21\u5757\u4e5f\u662f Python \u63d0\u4f9b\u7684\u6807\u51c6\u5e93\uff0c\u5b83\u5728\u5206\u6790\u4e2d\u66f4\u4e3a\u5e38\u7528\u3002 \u8be5\u6a21\u5757\u63d0\u4f9b\u4e86 4 \u4e2a\u4e3b\u8981\u7684\u7c7b\u7528\u4e8e\u8868\u793a\u65f6\u95f4\u65e5\u671f\u53ca\u5176\u53d8\u5316\u3002 time\uff1a\u53ea\u5305\u542b\u65f6\u3001\u5206\u3001\u79d2\u3001\u5fae\u5999\u7b49\u4fe1\u606f date\uff1a\u53ea\u5305\u542b\u5e74\u3001\u6708\u3001\u65e5\u3001\u661f\u671f\u7b49\u4fe1\u606f datetime\uff1a\u5305\u542b\u4e0a\u8ff0\u4e24\u79cd\u4fe1\u606f timedelta\uff1a\u8868\u793a datetime \u4e4b\u95f4\u5dee\u503c\u7684\u7c7b \u8fd9\u91cc\u6211\u4eec\u4ec5\u4ecb\u7ecd\u6700\u5e38\u89c1\u7684\u65f6\u95f4\u65e5\u671f\u8868\u793a\uff0c\u66f4\u4e3a\u8be6\u7ec6\u7684\u5185\u5bb9\u8bf7\u8bfb\u8005\u9605\u8bfb\u5b98\u65b9\u6587\u6863\u3002 \u65f6\u95f4\u8868\u793a\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a\u672c\u5730\u65f6\u95f4\u548c\u4e16\u754c\u6807\u51c6\u65f6\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u65f6\u95f4\u6233\uff0c\u4f46\u53ef\u8bfb\u6027\u5f88\u5dee\u3002 In [39]: now = datetime.datetime.now() # \u5f53\u524d\u672c\u5730\u65f6\u95f4 In [40]: now Out[40]: datetime.datetime(2019, 12, 15, 10, 34, 54, 516482) In [41]: utc = datetime.datetime.utcnow() # \u5f53\u524d\u4e16\u754c\u6807\u51c6\u65f6 In [42]: utc Out[42]: datetime.datetime(2019, 12, 15, 2, 35, 18, 609633) In [45]: now.timestamp() # \u5f53\u524d\u65f6\u95f4\u6233 Out[45]: 1576377294.516482 \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53ef\u4ee5\u8c03\u7528 strftime() \u65b9\u6cd5\uff08\u6ce8\u610f\uff0c\u5728 time \u6a21\u5757\u4e2d\u4f7f\u7528\u7684\u662f\u540c\u540d\u51fd\u6570\uff09\u3002 In [46]: now.strftime(\"%Y-%m-%d %H:%M:%S\") Out[46]: '2019-12-15 10:34:54' \u65f6\u95f4\u5dee\u4e5f\u6bd4\u8f83\u5e38\u7528\uff0c\u76f4\u63a5\u5c06\u4e24\u4e2a datetime \u5bf9\u8c61\u76f8\u51cf\u5c31\u53ef\u4ee5\uff0c\u8fd4\u56de\u7684\u662f\u76f8\u5dee\u7684\u79d2\u6570\u548c\u5fae\u79d2\u6570\u3002 \u53e6\u5916\u4e5f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5bf9\u5e94\u7684\u5c5e\u6027\u503c\u8bbf\u95ee\u3002 In [47]: now2 = datetime.datetime.now() In [48]: now2 - now Out[48]: datetime.timedelta(seconds=486, microseconds=231216) In [49]: td = now2 - now In [52]: td.seconds Out[52]: 486 \u7531\u4e8e datetime \u6a21\u5757\u6bd4\u8f83\u597d\u7528\uff0cPandas \u5e93\u76f4\u63a5\u5c06\u5176\u5f15\u5165\u4f5c\u4e3a\u4e00\u4e2a\u5b50\u6a21\u5757\u3002 \u4e0b\u9762\u4ee3\u7801\u663e\u793a\u4e86\u8c03\u7528 datetime \u5b50\u6a21\u5757\u7684 now() \u51fd\u6570\u5f97\u5230\u7684\u662f\u4e00\u4e2a datetime \u5bf9\u8c61\u3002 In [55]: pd.datetime.now() Out[55]: datetime.datetime(2019, 12, 15, 10, 47, 58, 642985) Pandas \u65e5\u671f\u5e8f\u5217 \u00b6 \u5728\u5904\u7406\u65f6\u95f4\u65e5\u671f\u6570\u636e\u65f6\u6211\u4eec\u4f1a\u7ecf\u5e38\u9700\u8981\u751f\u6210\u65e5\u671f\u5e8f\u5217\u4ee5\u53ca\u8f6c\u6362\u4e0d\u540c\u7684\u65e5\u671f\u9891\u7387\uff08\u5b63\u5ea6\u3001\u6708\u4efd\u3001\u5468\u7b49\uff09\uff0c Pandas \u5e93\u5728\u8fd9\u65b9\u9762\u63d0\u4f9b\u4e86\u76f8\u5173\u7684\u529f\u80fd\u7279\u6027\u3002 \u4f7f\u7528 date_range() \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u65e5\u671f\u5e8f\u5217\uff0c\u9ed8\u8ba4\u7684\u9891\u7387\u662f\u5929\u3002 In [56]: pd.date_range('20190101', periods=7) Out[56]: DatetimeIndex(['2019-01-01', '2019-01-02', '2019-01-03', '2019-01-04', '2019-01-05', '2019-01-06', '2019-01-07'], dtype='datetime64[ns]', freq='D') D \u662f Day \u7684\u7f29\u5199\u3002\u6211\u4eec\u53ef\u4ee5\u66f4\u6539\u65e5\u671f\u7684\u9891\u7387\uff0c\u6bd4\u5982\u8bf4\u6708\u4efd\u3002 In [58]: pd.date_range('20190101', periods=7, freq='M') Out[58]: DatetimeIndex(['2019-01-31', '2019-02-28', '2019-03-31', '2019-04-30', '2019-05-31', '2019-06-30', '2019-07-31'], dtype='datetime64[ns]', freq='M') \u5546\u4e1a\u5206\u6790\u4e2d\u5e38\u5e38\u53ea\u4f7f\u7528\u5de5\u4f5c\u65e5\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u7528 bdate_range() \u751f\u6210\u5e8f\u5217\uff0c\u5b83\u4f1a\u81ea\u52a8\u8df3\u8fc7\u5468\u672b\u3002 In [59]: pd.bdate_range('20190101', periods=7) Out[59]: DatetimeIndex(['2019-01-01', '2019-01-02', '2019-01-03', '2019-01-04', '2019-01-07', '2019-01-08', '2019-01-09'], dtype='datetime64[ns]', freq='B') \u6b64\u65f6\u8f93\u51fa\u7ed3\u679c\u663e\u793a\u9891\u7387\u662f B\uff08\u5546\u4e1a\u7684\u82f1\u6587\u5355\u8bcd\u9996\u5b57\u6bcd\uff09\u3002\u5728\u751f\u6210\u7684\u5e8f\u5217\u4e2d\uff0c1 \u6708 5 \u53f7 \u548c 6 \u53f7\u88ab\u81ea\u52a8\u8df3\u8fc7\u4e86\u3002 \u65f6\u95f4\u5dee \u00b6 Pandas \u5e93\u63d0\u4f9b\u4e86 Timedelta \u7c7b\u6765\u8868\u793a\u65f6\u95f4\u5dee\u5f02\uff0c\u76f8\u6bd4\u4e8e datetime \u6a21\u5757\u63d0\u4f9b\u7684\u51fd\u6570\uff0c \u5b83\u66f4\u52a0\u7684\u7075\u6d3b\u548c\u529f\u80fd\u4e30\u5bcc\u3002 \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165\u5177\u6709\u63cf\u8ff0\u6027\u7684\u82f1\u6587\u8bed\u53e5\uff0c\u5b83\u4f1a\u88ab Pandas \u81ea\u52a8\u89e3\u6790\u3002 In [60]: pd.Timedelta('1 days 2 hours 3 minutes 4 seconds') Out[60]: Timedelta('1 days 02:03:04') \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6574\u6570\u503c\uff0c\u5e76\u6307\u5b9a\u65f6\u95f4\u5dee\u7684\u5355\u4f4d\u6765\u751f\u6210 Timedelta \u5bf9\u8c61\u3002 In [61]: pd.Timedelta(10, unit='h') Out[61]: Timedelta('0 days 10:00:00') \u6211\u4eec\u8fd8\u53ef\u4ee5\u4f20\u5165\u5173\u952e\u5b57\u53c2\u6570\u8868\u793a\u65f6\u95f4\u7684\u9891\u7387\u3002 In [64]: pd.Timedelta(days=10) Out[64]: Timedelta('10 days 00:00:00') In [65]: pd.Timedelta(hours=10) Out[65]: Timedelta('0 days 10:00:00') In [66]: pd.Timedelta(minutes=10) Out[66]: Timedelta('0 days 00:10:00') Timedelta \u5bf9\u8c61\u5e38\u7528\u4e8e\u65f6\u95f4\u7684\u52a0\u51cf\u8fd0\u7b97\u4e2d\uff0c\u8fd0\u7b97\u652f\u6301\u81ea\u52a8\u5e7f\u64ad\uff0c\u4e0b\u9762\u662f\u7b80\u5355\u7684\u4f8b\u5b50\u3002 In [67]: pd.date_range('20190101', periods=7) Out[67]: DatetimeIndex(['2019-01-01', '2019-01-02', '2019-01-03', '2019-01-04', '2019-01-05', '2019-01-06', '2019-01-07'], dtype='datetime64[ns]', freq='D') In [68]: pd.date_range('20190101', periods=7) + pd.Timedelta(hours=10) Out[68]: DatetimeIndex(['2019-01-01 10:00:00', '2019-01-02 10:00:00', '2019-01-03 10:00:00', '2019-01-04 10:00:00', '2019-01-05 10:00:00', '2019-01-06 10:00:00', '2019-01-07 10:00:00'], dtype='datetime64[ns]', freq='D') In [69]: pd.date_range('20190101', periods=7) - pd.Timedelta(hours=10) Out[69]: DatetimeIndex(['2018-12-31 14:00:00', '2019-01-01 14:00:00', '2019-01-02 14:00:00', '2019-01-03 14:00:00', '2019-01-04 14:00:00', '2019-01-05 14:00:00', '2019-01-06 14:00:00'], dtype='datetime64[ns]', freq='D') 12.2 \u8fed\u4ee3\u4e0e\u51fd\u6570\u5e94\u7528 \u00b6 12.2.1 \u8fed\u4ee3 \u00b6 Pandas \u5bf9\u8c61\u4e4b\u95f4\u7684\u57fa\u672c\u8fed\u4ee3\u7684\u884c\u4e3a\u53d6\u51b3\u4e8e\u6570\u636e\u7c7b\u578b\u3002 \u5f53\u8fed\u4ee3\u4e00\u4e2a Series \u5bf9\u8c61\u65f6\uff0c\u5b83\u88ab\u89c6\u4e3a\u6570\u7ec4\uff0c\u8fed\u4ee3\u4f1a\u9010\u4e00\u4f7f\u7528\u5143\u7d20\u503c\u3002 \u800c DataFrame \u9075\u5faa\u7c7b\u4f3c\u7684\u89c4\u5219\u8fed\u4ee3\u5bf9\u8c61\u7684\u5217\u6807\u7b7e\u3002 \u6211\u4eec\u5148\u5206\u522b\u751f\u6210\u4e00\u4e2a Series \u548c DataFrame \u5bf9\u8c61\u3002 In [74]: s = pd.Series(['a', 'b', 'c']) In [75]: df = df = {'\u59d3\u540d': ['\u5c0f\u660e','\u5c0f\u738b','\u5c0f\u5f20'], '\u8bed\u6587':[80,85,90], '\u6570\u5b66':[99,88,86]} In [76]: df = pd.DataFrame(df) In [77]: s Out[77]: 0 a 1 b 2 c dtype: object In [78]: df Out[78]: \u59d3\u540d \u8bed\u6587 \u6570\u5b66 0 \u5c0f\u660e 80 99 1 \u5c0f\u738b 85 88 2 \u5c0f\u5f20 90 86 \u7528 for \u5faa\u73af\u8fed\u4ee3\u4e24\u4e2a\u5bf9\u8c61\u770b\u770b\u7ed3\u679c\u662f\u5426\u5982\u524d\u9762\u6240\u8bf4\u3002 In [80]: for i in s: ...: print(i) ...: a b c In [81]: for i in df: ...: print(i) ...: \u59d3\u540d \u8bed\u6587 \u6570\u5b66 \u7684\u786e\u5982\u6b64\u3002Series \u5bf9\u8c61\u548c DataFrame \u5bf9\u8c61\u7684 for \u5faa\u73af\u5dee\u522b\u5f88\u5927\u3002 \u5f53\u6211\u4eec\u9700\u8981\u8fed\u4ee3 Series \u5bf9\u8c61\u7684\u7d22\u5f15\u65f6\u53ef\u4ee5\u901a\u8fc7 index \u5c5e\u6027\u8bbf\u95ee\u3002 In [82]: for i in s.index: ...: print(i) ...: 0 1 2 \u8fed\u4ee3 DataFrame \u7684\u9700\u6c42\u5e38\u5e38\u4e0d\u53ea\u662f\u83b7\u53d6\u5217\u6807\u7b7e\uff0c\u8fd8\u6709\u5bf9\u5185\u5bb9\u8fdb\u884c\u8fed\u4ee3\u3002 \u53ef\u4ee5\u4f7f\u7528\u7684\u65b9\u6cd5\u6709\u4ee5\u4e0b 3 \u79cd\u3002 iteritems() - \u8fed\u4ee3\u952e\u503c\u5bf9\u3002 iterrows() - \u5c06\u884c\u8fed\u4ee3\u4e3a\u7d22\u5f15 Series \u5bf9\u3002 itertuples() - \u4ee5\u547d\u540d\u5143\u7ec4\u7684\u5f62\u5f0f\u8fed\u4ee3\u884c\u3002 \u5148\u770b\u770b\u7b2c\u4e00\u4e2a\u65b9\u6cd5\uff1a In [84]: for key, value in df.iteritems(): ...: print(key, value) ...: \u59d3\u540d 0 \u5c0f\u660e 1 \u5c0f\u738b 2 \u5c0f\u5f20 Name: \u59d3\u540d, dtype: object \u8bed\u6587 0 80 1 85 2 90 Name: \u8bed\u6587, dtype: int64 \u6570\u5b66 0 99 1 88 2 86 Name: \u6570\u5b66, dtype: int64 In [85]: for key, value in df.iteritems(): ...: print(type(value)) ...: <class 'pandas.core.series.Series'> <class 'pandas.core.series.Series'> <class 'pandas.core.series.Series'> iteritems() \u65b9\u6cd5\u4ee5 DataFrame \u7684\u5217\u6807\u7b7e\u4e3a\u952e\uff0c\u5217\u503c\u4e3a\u503c\u8fdb\u884c\u8fed\u4ee3\u3002 \u6bcf\u4e00\u4e2a\u503c\u90fd\u662f Series \u5bf9\u8c61\u3002 \u6211\u4eec\u518d\u6765\u770b\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\uff1a In [87]: for key, value in df.iterrows(): ...: print(key, value) ...: 0 \u59d3\u540d \u5c0f\u660e \u8bed\u6587 80 \u6570\u5b66 99 Name: 0, dtype: object 1 \u59d3\u540d \u5c0f\u738b \u8bed\u6587 85 \u6570\u5b66 88 Name: 1, dtype: object 2 \u59d3\u540d \u5c0f\u5f20 \u8bed\u6587 90 \u6570\u5b66 86 Name: 2, dtype: object In [88]: for row, value in df.iterrows(): ...: print(type(value)) ...: <class 'pandas.core.series.Series'> <class 'pandas.core.series.Series'> <class 'pandas.core.series.Series'> iterrows() \u65b9\u6cd5\u7684\u7ed3\u679c\u4e5f\u662f Series \u5bf9\u8c61\uff0c\u4ee5 DataFrame \u7684\u5217\u6807\u7b7e\u4f5c\u4e3a\u7d22\u5f15\u3002 \u8bfb\u8005\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u65f6\u7531\u4e8e\u6bcf\u4e00\u884c\u662f\u4e00\u4e2a Series \u5bf9\u8c61\uff0c\u4e4b\u524d DataFrame \u6bcf\u5217 \u7684\u6570\u636e\u7c7b\u578b\u4f1a\u81ea\u52a8\u5f3a\u5236\u8f6c\u6362\uff0c\u56e0\u6b64\u5f53\u524d\u6bcf\u4e00\u4e2a Series \u90fd\u662f\u5b57\u7b26\u5bf9\u8c61 object\u3002 \u6211\u4eec\u6700\u540e\u770b\u770b\u7b2c\u4e09\u4e2a\u65b9\u6cd5 itertuples()\uff1a In [89]: for key, value in df.itertuples(): ...: print(key, value) ...: --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-89-6b42ad46ae68> in <module> ----> 1 for key, value in df.itertuples(): 2 print(key, value) 3 ValueError: too many values to unpack (expected 2) In [90]: for value in df.itertuples(): ...: print(value) ...: Pandas(Index=0, \u59d3\u540d='\u5c0f\u660e', \u8bed\u6587=80, \u6570\u5b66=99) Pandas(Index=1, \u59d3\u540d='\u5c0f\u738b', \u8bed\u6587=85, \u6570\u5b66=88) Pandas(Index=2, \u59d3\u540d='\u5c0f\u5f20', \u8bed\u6587=90, \u6570\u5b66=86) In [91]: for value in df.itertuples(): ...: print(type(value)) ...: <class 'pandas.core.frame.Pandas'> <class 'pandas.core.frame.Pandas'> <class 'pandas.core.frame.Pandas'> \u5f53\u6211\u4eec\u4f7f\u7528\u4e0e\u524d\u4e24\u4e2a\u65b9\u6cd5\u7c7b\u4f3c\u7684\u64cd\u4f5c\u65f6\uff0c\u7a0b\u5e8f\u62a5\u9519\u4e86\uff0c\u539f\u56e0\u662f\u8be5\u65b9\u6cd5\u751f\u6210\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20 \u90fd\u662f\u4e00\u4e2a\u7c7b\u540d\u4e3a Pandas \u7684\u72ec\u7acb\u5143\u7ec4\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 tuple() \u5c06\u5176\u8f6c\u6362\u4e3a Python \u5185\u7f6e \u7684\u5143\u7ec4\u5bf9\u8c61\u3002 In [92]: for value in df.itertuples(): ...: print(tuple(value)) ...: (0, '\u5c0f\u660e', 80, 99) (1, '\u5c0f\u738b', 85, 88) (2, '\u5c0f\u5f20', 90, 86) 12.2.2 \u51fd\u6570\u5e94\u7528 \u00b6 \u9488\u5bf9 DataFrame \u5bf9\u8c61\u4e00\u822c\u6709 3 \u4e2a\u4e0d\u540c\u5c42\u9762\u7684\u64cd\u4f5c\uff1a\u4e00\u662f\u6574\u4e2a DataFrame\uff0c \u4e8c\u662f\u6309\u884c\u6216\u6309\u5217\uff0c\u4e09\u662f\u6bcf\u4e00\u4e2a\u5143\u7d20\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u5c06\u5305/\u5e93\u63d0\u4f9b\u7684\u51fd\u6570 \u5e94\u7528\u5230 DataFrame \u4e0a\uff0c\u6709\u4e09\u4e2a\u76f8\u5e94\u7684\u91cd\u8981\u65b9\u6cd5\uff0c\u5b83\u4eec\u5206\u522b\u662f pipe()\u3001apply() \u548c applymap()\u3002 Series \u5bf9\u8c61\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff0c\u4e0d\u8fc7\u6b64\u5904\u5185\u5bb9\u805a\u7126\u4e8e DataFrame \u5bf9\u8c61\u7684\u64cd\u4f5c\u3002 pipe() \u00b6 pipe() \u662f\u8868\u683c\u7ea7\u522b\u7684\u51fd\u6570\u5e94\u7528\uff0c\u6211\u4eec\u5148\u5b9a\u4e49\u4e00\u4e2a\u4e58\u6cd5\u5668\u3002 In [97]: def timer(e1, e2): ...: return(e1*e2) ...: \u521b\u5efa\u7528\u4e8e\u793a\u4f8b\u7684 DataFrame \u5bf9\u8c61\uff1a In [98]: df1 = pd.DataFrame(6*np.random.randn(6, 3), columns=['col1', 'col2', 'col3']) In [99]: df1 Out[99]: col1 col2 col3 0 -2.327459 4.391074 8.796776 1 3.736191 2.711543 -11.112365 2 -5.686908 -0.246942 -0.692201 3 4.060646 9.178073 1.355170 4 10.171053 -3.417467 0.447833 5 -7.363384 -0.176782 -6.391243 \u4f7f\u7528 pipe() \u8c03\u7528\u8be5\u4e0a\u8ff0\u5b9a\u4e49\u7684\u4e58\u6cd5\u5668\uff0c\u5bf9 df1 \u4e58\u4ee5 10\u3002 In [100]: df1.pipe(timer, 10) Out[100]: col1 col2 col3 0 -23.274593 43.910736 87.967759 1 37.361914 27.115432 -111.123654 2 -56.869085 -2.469423 -6.922007 3 40.606458 91.780725 13.551700 4 101.710534 -34.174668 4.478325 5 -73.633838 -1.767825 -63.912430 \u8fd9\u91cc 10 \u81ea\u52a8\u8fdb\u884c\u4e86\u5e7f\u64ad\u62d3\u5c55\u5230 df1 \u76f8\u540c\u7684\u5927\u5c0f\u518d\u8fdb\u884c\u7684\u8fd0\u7b97\uff0c\u4f20\u5165 pipe() \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e5f\u53ef\u4ee5\u662f\u76f8\u540c\u5927\u5c0f\u7684 DataFrame\u3002 In [103]: df1.pipe(timer, pd.DataFrame(6*np.random.randn(6, 3), columns=['col1', 'col2', 'col3'])) Out[103]: col1 col2 col3 0 5.756520 -26.905602 21.285264 1 20.548535 -10.953445 -99.671865 2 -2.653793 1.188218 2.159359 3 15.746131 225.602231 13.177158 4 95.979467 -1.891072 0.294889 5 14.734334 0.651522 27.829243 pipe() \u51fd\u6570\u7684\u5b9e\u7528\u6027\u5e76\u4e0d\u5f3a\uff0c\u7531\u4e8e\u5e7f\u64ad\u673a\u5236\u7684\u5b58\u5728\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5 \u4f7f\u7528\u8fd0\u7b97\u7b26\u8fbe\u5230\u76f8\u540c\u7684\u76ee\u7684\u3002 In [104]: df1 * 10 Out[104]: col1 col2 col3 0 -23.274593 43.910736 87.967759 1 37.361914 27.115432 -111.123654 2 -56.869085 -2.469423 -6.922007 3 40.606458 91.780725 13.551700 4 101.710534 -34.174668 4.478325 5 -73.633838 -1.767825 -63.912430 In [105]: df1 * df1 Out[105]: col1 col2 col3 0 5.417067 19.281527 77.383267 1 13.959126 7.352467 123.484665 2 32.340928 0.060981 0.479142 3 16.488844 84.237015 1.836486 4 103.450327 11.679079 0.200554 5 54.219421 0.031252 40.847987 apply() \u00b6 apply() \u662f 3 \u4e2a\u65b9\u6cd5\u4e2d\u6700\u5e38\u7528\u6700\u5b9e\u7528\u7684\uff0c\u53ef\u4ee5\u5bf9\u5217\u6216\u884c\u8fdb\u884c\u51fd\u6570\u5e94\u7528\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0capply() \u5bf9\u5217\u8fdb\u884c\u64cd\u4f5c\u3002 \u8fd8\u662f\u4f7f\u7528\u4e0a\u9762\u7684\u6570\u636e\u548c\u51fd\u6570\uff0c\u76ee\u7684\u4e5f\u4e00\u6837\uff0c\u5bf9\u6bcf\u5217\u4e58\u4ee5 10\u3002 In [114]: df1.apply(timer, axis=0, e2=10) Out[114]: col1 col2 col3 0 -23.274593 43.910736 87.967759 1 37.361914 27.115432 -111.123654 2 -56.869085 -2.469423 -6.922007 3 40.606458 91.780725 13.551700 4 101.710534 -34.174668 4.478325 5 -73.633838 -1.767825 -63.912430 \u8fd9\u91cc df1 \u88ab apply() \u4f20\u5165\u4e3a timer() \u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5fc5\u987b\u7528 \u5173\u952e\u5b57\u53c2\u6570\u6307\u5b9a\u3002 \u6211\u4eec\u53ef\u4ee5\u6307\u5b9a apply() \u5e94\u7528\u4e8e\u7279\u5b9a\u7684\u5217\u6216\u884c\uff0c\u5b9e\u9645\u4e0a\u6b64\u65f6\u5c31\u662f Series \u5bf9\u8c61\u4f7f\u7528 apply()\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u53ea\u64cd\u4f5c\u7b2c 3 \u5217\u6216\u7b2c 3 \u884c\u3002 In [123]: df1.iloc[:,2].apply(timer, e2=10) Out[123]: 0 87.967759 1 -111.123654 2 -6.922007 3 13.551700 4 4.478325 5 -63.912430 Name: col3, dtype: float64 In [124]: df1.iloc[2,].apply(timer, e2=10) Out[124]: col1 -56.869085 col2 -2.469423 col3 -6.922007 Name: 2, dtype: float64 applymap() \u00b6 applymap() \u8fdb\u884c\u7684\u662f\u5143\u7d20\u7ea7\u522b\u7684\u5e94\u7528\uff0c\u5b83\u4e5f\u5b8c\u5168\u53ef\u4ee5\u505a\u5230\u4e0a\u8ff0 pipe() \u7684\u793a\u4f8b\u7ed3\u679c\u3002 \u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u8c03\u7528\u533f\u540d\u51fd\u6570\uff0c\u66f4\u52a0\u65b9\u4fbf\u5feb\u6377\u3002 In [125]: df1.applymap(lambda x: 10 * x) Out[125]: col1 col2 col3 0 -23.274593 43.910736 87.967759 1 37.361914 27.115432 -111.123654 2 -56.869085 -2.469423 -6.922007 3 40.606458 91.780725 13.551700 4 101.710534 -34.174668 4.478325 5 -73.633838 -1.767825 -63.912430 \u5f53\u7136\u8fd9\u4f53\u73b0\u4e0d\u51fa\u8be5\u65b9\u6cd5\u7684\u4f18\u52bf\uff0capplymap() \u5728\u5bf9\u6240\u6709\u5143\u7d20\u505a\u9009\u62e9\u6027\u64cd\u4f5c\u65f6\u624d\u662f\u6700\u6709\u4ef7\u503c\u7684\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u5bf9 df1 \u4e2d\u5c0f\u4e8e 0 \u7684\u5e73\u65b9\uff0c\u5927\u4e8e 0 \u7684\u52a0 10\u3002 In [126]: df1.applymap(lambda x: x ** 2 if x < 0 else x + 10) Out[126]: col1 col2 col3 0 5.417067 14.391074 18.796776 1 13.736191 12.711543 123.484665 2 32.340928 0.060981 0.479142 3 14.060646 19.178073 11.355170 4 20.171053 11.679079 10.447833 5 54.219421 0.031252 40.847987 12.2.3 \u5b57\u7b26\u4e32\u51fd\u6570 \u00b6 \u9664\u4e86\u6570\u503c\u8ba1\u7b97\uff0c\u6570\u636e\u5206\u6790\u5e38\u5e38\u4e5f\u5904\u7406\u6587\u672c\u6570\u636e\uff0c\u5b57\u7b26\u4e32\u51fd\u6570\u5728\u5176\u4e2d\u4f5c\u7528\u91cd\u5927\u3002 Pandas \u5e93\u4e3a\u6587\u672c\u6570\u636e\u63d0\u4f9b\u4e86\u5b57\u7b26\u5c5e\u6027\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u5229\u7528 Python \u5185\u7f6e\u5b57\u7b26\u4e32\u51fd\u6570 \u540c\u540d\u65b9\u6cd5\u8fdb\u884c\u64cd\u4f5c\u3002 \u672c\u5c0f\u8282\u5c06\u5bf9\u5e38\u89c1\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c\u51fd\u6570\u8fdb\u884c\u4e3e\u4f8b\uff0c\u6700\u540e\u8fdb\u884c\u8868\u683c\u6c47\u603b\u3002 \u6211\u4eec\u5148\u6784\u5efa\u4e00\u4e2a\u6837\u4f8b\u6570\u636e\u3002 In [127]: sample_data = pd.Series(['Mike', 'Shixiang', np.nan, '012345', 'HAPPY', 'hurry']) In [128]: sample_data Out[128]: 0 Mike 1 Shixiang 2 NaN 3 012345 4 HAPPY 5 hurry dtype: object \u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5\u524d\u9700\u8981\u8bbf\u95ee str \u5c5e\u6027\u3002 lower() \u00b6 lower() \u65b9\u6cd5\u5c06\u6240\u6709\u5b57\u6bcd\u53d8\u4e3a\u5c0f\u5199\u3002 In [129]: sample_data.str.lower() Out[129]: 0 mike 1 shixiang 2 NaN 3 012345 4 happy 5 hurry dtype: object upper() \u00b6 upper() \u65b9\u6cd5\u7684\u4f5c\u7528\u4e0e lower() \u76f8\u53cd\u3002 In [130]: sample_data.str.upper() Out[130]: 0 MIKE 1 SHIXIANG 2 NaN 3 012345 4 HAPPY 5 HURRY dtype: object len() \u00b6 len() \u65b9\u6cd5\u83b7\u53d6\u5b57\u7b26\u957f\u5ea6\u3002 In [131]: sample_data.str.len() Out[131]: 0 4.0 1 8.0 2 NaN 3 6.0 4 5.0 5 5.0 dtype: float64 replace() \u00b6 replace() \u65b9\u6cd5\u66ff\u6362\u5b57\u7b26\u4e32\u3002 In [132]: sample_data.str.replace('H', 'YY') Out[132]: 0 Mike 1 Shixiang 2 NaN 3 012345 4 YYAPPY 5 hurry dtype: object count() \u00b6 count() \u65b9\u6cd5\u5bf9\u6307\u5b9a\u5b57\u7b26\u8fdb\u884c\u8ba1\u6570\u3002 In [133]: sample_data.str.count('a') Out[133]: 0 0.0 1 1.0 2 NaN 3 0.0 4 0.0 5 0.0 dtype: float64 swapcase() \u00b6 swapcase() \u65b9\u6cd5\u8f6c\u6362\u5b57\u6bcd\u5927\u5c0f\u5199\u3002 In [134]: sample_data.str.swapcase() Out[134]: 0 mIKE 1 sHIXIANG 2 NaN 3 012345 4 happy 5 HURRY dtype: object \u5176\u4ed6\u7684\u65b9\u6cd5\u4e0d\u518d\u4e00\u4e00\u5217\u4e3e\uff0c\u5168\u90e8\u90fd\u6c47\u603b\u4e3a\u4e0b\u8868\u3002 \u65b9\u6cd5 \u63cf\u8ff0 lower() \u5c06 Series/Index \u4e2d\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5c0f\u5199 upper() \u5c06 Series/Index \u4e2d\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5927\u5199 len() \u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6 strip() \u5e2e\u52a9\u4ece\u4e24\u4fa7\u7684\u7cfb\u5217/\u7d22\u5f15\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5220\u9664\u7a7a\u683c(\u5305\u62ec\u6362\u884c\u7b26) split(' ') \u7528\u7ed9\u5b9a\u7684\u6a21\u5f0f\u62c6\u5206\u6bcf\u4e2a\u5b57\u7b26\u4e32 cat(sep=' ') \u4f7f\u7528\u7ed9\u5b9a\u7684\u5206\u9694\u7b26\u8fde\u63a5\u7cfb\u5217/\u7d22\u5f15\u5143\u7d20 get_dummies() \u8fd4\u56de\u5177\u6709\u5355\u70ed\u7f16\u7801\u503c\u7684 DataFrame contains(pattern) \u5982\u679c\u5143\u7d20\u4e2d\u5305\u542b\u5b50\u5b57\u7b26\u4e32\uff0c\u5219\u8fd4\u56de\u6bcf\u4e2a\u5143\u7d20\u7684\u5e03\u5c14\u503c True \uff0c\u5426\u5219\u4e3a False replace(a,b) \u5c06\u5b57\u7b26 a \u66ff\u6362\u4e3a\u503c b repeat(value) \u91cd\u590d\u6bcf\u4e2a\u5143\u7d20\u6307\u5b9a\u7684\u6b21\u6570 count(pattern) \u8fd4\u56de\u6a21\u5f0f\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u603b\u6570 startswith(pattern) \u5982\u679c\u7cfb\u5217/\u7d22\u5f15\u4e2d\u7684\u5143\u7d20\u4ee5\u6a21\u5f0f\u5f00\u59cb\uff0c\u5219\u8fd4\u56de true endswith(pattern) \u5982\u679c\u7cfb\u5217/\u7d22\u5f15\u4e2d\u7684\u5143\u7d20\u4ee5\u6a21\u5f0f\u7ed3\u675f\uff0c\u5219\u8fd4\u56de true find(pattern) \u8fd4\u56de\u6a21\u5f0f\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e findall(pattern) \u8fd4\u56de\u6a21\u5f0f\u7684\u6240\u6709\u51fa\u73b0\u7684\u5217\u8868 swapcase() \u53d8\u6362\u5b57\u6bcd\u5927\u5c0f\u5199 islower() \u68c0\u67e5\u7cfb\u5217/\u7d22\u5f15\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u662f\u5426\u5c0f\u5199\uff0c\u8fd4\u56de\u5e03\u5c14\u503c isupper() \u68c0\u67e5\u7cfb\u5217/\u7d22\u5f15\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u662f\u5426\u5927\u5199\uff0c\u8fd4\u56de\u5e03\u5c14\u503c isnumeric() \u68c0\u67e5\u7cfb\u5217/\u7d22\u5f15\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u662f\u5426\u4e3a\u6570\u5b57\uff0c\u8fd4\u56de\u5e03\u5c14\u503c 12.2.4 \u5206\u7ec4\u8ba1\u7b97 \u00b6 \u5206\u7ec4\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e00\u79cd\u975e\u5e38\u5f3a\u5927\u7684\u6c47\u603b\u6280\u672f\uff0c\u5b83\u7684\u6838\u5fc3\u53ef\u4ee5\u5206\u4e3a 3 \u4e2a\u6b65\u9aa4\uff1a \u62c6\u5206\u3001\u5e94\u7528\u548c\u5408\u5e76\u3002 \u524d\u9762\u7684 apply() \u51fd\u6570\u53ef\u4ee5\u8ba9\u6211\u4eec\u5bf9\u67d0\u5217\u6216\u884c\u8fdb\u884c\u6570\u503c\u8ba1\u7b97\uff0c\u5728\u771f\u5b9e\u7684\u4e16\u754c\u4e2d\uff0c \u6211\u4eec\u53ef\u80fd\u9700\u8981\u6839\u636e\u8868\u683c\u7684\u67d0\u4e00\u5217\u5206\u7ec4\uff0c\u7136\u540e\u5206\u522b\u8ba1\u7b97\u6bcf\u4e2a\u7ec4\u522b\u4e2d\u5176\u4ed6\u5217\u7684\u6c47\u603b\u503c\uff0c\u5982\u548c\uff0c\u5747\u503c\u3002 Pandas \u63d0\u4f9b\u4e86 groupby() \u65b9\u6cd5\u5b8c\u6210\u4e0a\u9762\u7684\u9700\u6c42\u3002 \u6211\u4eec\u770b\u4e00\u4e2a\u6765\u81ea Pandas \u5b98\u65b9\u6587\u6863\u7684\u793a\u4f8b\uff0c\u8ba1\u7b97\u4e0d\u540c\u52a8\u7269\u6700\u5927\u901f\u5ea6\u7684\u5747\u503c\u3002 df = pd.DataFrame({'Animal': ['Falcon', 'Falcon', 'Parrot', 'Parrot'], 'Max Speed': [380., 370., 24., 26.]}) In [136]: df Out[136]: Animal Max Speed 0 Falcon 380.0 1 Falcon 370.0 2 Parrot 24.0 3 Parrot 26.0 In [137]: df.groupby(['Animal']).mean() Out[137]: Max Speed Animal Falcon 375.0 Parrot 25.0 \u867d\u7136\u6570\u636e\u5f88\u7b80\u5355\uff0c\u4f46\u5b83\u8db3\u4ee5\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u5b83\u7684\u64cd\u4f5c\u65b9\u6cd5\uff0c\u5176\u6838\u5fc3\u6b65\u9aa4\u63cf\u8ff0\u5982\u4e0b\uff1a \u62c6\u5206 - \u5c06 DataFrame \u6309\u7167 Animal \u5206\u4e3a\u4e24\u4e2a\u5b50 DataFrame\uff1b \u5e94\u7528 - \u5bf9\u4e24\u4e2a\u5b50 DataFrame \u7684\u901f\u5ea6\u5217\u8fdb\u884c\u5747\u503c\u51fd\u6570\u8ba1\u7b97\u5f97\u5230\u6c47\u603b\u503c\uff1b \u5408\u5e76 - \u5c06\u5206\u7ec4\u8ba1\u7b97\u7684\u7ed3\u679c\u5408\u5e76\u8d77\u6765\u3002 12.3 \u6570\u636e\u6e05\u6d17 \u00b6 \u4f5c\u4e3a\u4e00\u540d\u6570\u636e\u5de5\u4f5c\u8005\uff0c\u6211\u4eec 80% \u7684\u65f6\u95f4\u4e0d\u662f\u82b1\u5728\u6570\u636e\u7684\u8f6c\u6362\u548c\u8ba1\u7b97\u4e0a\uff0c\u800c\u662f\u82b1\u5728\u6570\u636e\u6e05\u6d17\u4e0a\u3002 \u7531\u4e8e\u539f\u59cb\u6570\u636e\u7684\u6765\u6e90\u4e0d\u4e00\u81f4\u3001\u6570\u636e\u8bb0\u5f55\u7684\u4eba\u529b\u7269\u529b\u6295\u5165\u4e0d\u5e73\u8861\u3001\u6570\u636e\u5b58\u50a8\u683c\u5f0f\u7684\u8bbe\u8ba1\u4e0d\u76f8\u540c\u7b49\u7b49 \u5404\u79cd\u539f\u56e0\uff0c\u6570\u636e\u7684\u7f3a\u5931\u3001\u4e0d\u89c4\u6574\u662f\u73b0\u5b9e\u751f\u6d3b\u4e2d\u4e0d\u53ef\u907f\u514d\u95ee\u9898\u3002\u7279\u522b\u662f\u5728\u5f53\u524d\u6d41\u884c\u7684\u673a\u5668\u5b66\u4e60 \u548c\u6570\u636e\u6316\u6398\u7b49\u9886\u57df\uff0c\u8d28\u91cf\u5c42\u6b21\u4e0d\u9f50\u7684\u6570\u636e\u5bfc\u81f4\u6a21\u578b\u9884\u6d4b\u9762\u4e34\u4e25\u91cd\u7684\u51c6\u786e\u6027\u548c\u53ef\u62d3\u5c55\u6027\u95ee\u9898\u3002 12.3.1 \u7f3a\u5931\u503c\u503c\u5904\u7406 \u00b6 \u5f53\u6570\u636e\u8bb0\u5f55\u7f3a\u5931\u65f6\uff0c\u4e00\u822c\u7528 NA\uff08Not Available\uff09\u503c\u4ee3\u8868\uff0cNA \u503c\u5904\u7406\u65f6\u6570\u636e\u6e05\u6d17\u7684\u91cd\u70b9\u3002 \u7531\u8ba1\u7b97\u5f15\u5165\u7684 NaN\uff08Not A Number\uff09\u4e5f\u53ef\u4ee5\u5f52\u5165\u7f3a\u5931\u503c\u3002 \u6211\u4eec\u5148\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u7f3a\u5931\u503c\u6570\u636e\u3002 In [138]: df = pd.DataFrame(np.random.randn(4, 4), index = ['user1', 'user2', 'user3', 'user4'], columns=['c ...: ol1', 'col2', 'col3', 'col4']) In [139]: df Out[139]: col1 col2 col3 col4 user1 0.368869 1.021476 -0.771651 -1.908077 user2 0.023887 0.799769 -0.230265 -0.800586 user3 -0.139025 -0.032772 1.078525 -1.453405 user4 -1.042709 1.022162 -0.686548 -1.497647 In [141]: df = df.reindex(['user0', 'user1', 'user2', 'user3', 'user4', 'user5']) In [142]: df Out[142]: col1 col2 col3 col4 user0 NaN NaN NaN NaN user1 0.368869 1.021476 -0.771651 -1.908077 user2 0.023887 0.799769 -0.230265 -0.800586 user3 -0.139025 -0.032772 1.078525 -1.453405 user4 -1.042709 1.022162 -0.686548 -1.497647 user5 NaN NaN NaN NaN \u68c0\u67e5\u7f3a\u5931\u503c \u00b6 Pandas \u5e93\u63d0\u4f9b\u4e86 isnull() \u548c notnull() \u51fd\u6570\u5bf9\u7f3a\u5931\u503c\u8fdb\u884c\u68c0\u6d4b\u3002 \u6211\u4eec\u65e2\u53ef\u4ee5\u68c0\u6d4b\u6574\u4e2a DataFrame\uff0c\u4e5f\u53ef\u4ee5\u503c\u5173\u6ce8\u67d0\u4e00\u5217\u3002 In [143]: df.isnull() Out[143]: col1 col2 col3 col4 user0 True True True True user1 False False False False user2 False False False False user3 False False False False user4 False False False False user5 True True True True In [144]: df.col1.isnull() Out[144]: user0 True user1 False user2 False user3 False user4 False user5 True Name: col1, dtype: bool \u7f3a\u5931\u503c\u76f8\u5173\u8ba1\u7b97 \u00b6 \u5f53\u6570\u636e\u5b58\u5728\u7f3a\u5931\u503c\u65f6\uff0cPandas \u8ba1\u7b97\u65f6\u4f1a\u81ea\u52a8\u5ffd\u7565\u5b83\u4eec\u3002\u5f53\u6240\u6709\u7684\u5143\u7d20\u662f\u7f3a\u5931\u503c\u65f6\uff0c \u7ed3\u679c\u8fd4\u56de\u7f3a\u5931\u503c\u3002\u6ce8\u610f\u5728\u6c42\u548c\u6570\u636e\u65f6\uff0c\u7f3a\u5931\u503c\u4f1a\u88ab\u5f53\u505a 0 \u5904\u7406\u3002 In [145]: df.sum() Out[145]: col1 -0.788979 col2 2.810636 col3 -0.609939 col4 -5.659715 dtype: float64 In [146]: pd.Series([np.nan, np.nan]).sum() Out[146]: 0.0 In [147]: pd.Series([np.nan, np.nan]).mean() Out[147]: nan \u586b\u5145\u7f3a\u5931\u503c \u00b6 Pandas \u5e93\u63d0\u4f9b\u4e86\u8bf8\u591a\u65b9\u6cd5\u7528\u4e8e\u6e05\u9664\u7f3a\u5931\u503c\u3002\u5176\u4e2d\uff0cfillna() \u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u96c6\u4e2d\u65b9\u6cd5 \u586b\u5145\u7f3a\u5931\u503c\uff0c\u4e0b\u9762\u4e3e\u4f8b\u4ecb\u7ecd\u3002 \u6700\u5e38\u89c1\u7684\u7b56\u7565\u662f\u7528\u4e00\u4e2a\u6807\u91cf\u586b\u5145\u7f3a\u5931\u503c\uff0c\u5982\u679c\u6ca1\u6709\u7279\u522b\u7684\u9700\u6c42\uff0c\u4e00\u822c\u53ef\u4ee5\u8bbe\u4e3a 0\u3002 In [148]: df.fillna(0) Out[148]: col1 col2 col3 col4 user0 0.000000 0.000000 0.000000 0.000000 user1 0.368869 1.021476 -0.771651 -1.908077 user2 0.023887 0.799769 -0.230265 -0.800586 user3 -0.139025 -0.032772 1.078525 -1.453405 user4 -1.042709 1.022162 -0.686548 -1.497647 user5 0.000000 0.000000 0.000000 0.000000 \u8fd8\u53ef\u4ee5\u8bbe\u5b9a\u7f3a\u5931\u503c\u6839\u636e\u524d\u540e\u7684\u6570\u636e\u8fdb\u884c\u586b\u5145\uff0c\u5206\u4e3a\u5411\u524d\u548c\u5411\u540e\u4e24\u79cd\u3002 In [150]: df.fillna(method='pad') # \u5411\u524d\u586b\u5145 Out[150]: col1 col2 col3 col4 user0 NaN NaN NaN NaN user1 0.368869 1.021476 -0.771651 -1.908077 user2 0.023887 0.799769 -0.230265 -0.800586 user3 -0.139025 -0.032772 1.078525 -1.453405 user4 -1.042709 1.022162 -0.686548 -1.497647 user5 -1.042709 1.022162 -0.686548 -1.497647 In [151]: df.fillna(method='backfill') # \u5411\u540e\u586b\u5145 Out[151]: col1 col2 col3 col4 user0 0.368869 1.021476 -0.771651 -1.908077 user1 0.368869 1.021476 -0.771651 -1.908077 user2 0.023887 0.799769 -0.230265 -0.800586 user3 -0.139025 -0.032772 1.078525 -1.453405 user4 -1.042709 1.022162 -0.686548 -1.497647 user5 NaN NaN NaN NaN \u542b\u7f3a\u5931\u503c\u7684\u6570\u636e\u63d0\u4f9b\u7684\u662f\u4e0d\u5b8c\u6574\u7684\u4fe1\u606f\uff0c\u5728\u6837\u672c\u8f83\u591a\u65f6\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u820d\u5f03\u3002 \u4f7f\u7528 dropna() \u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u53bb\u6389\u542b\u7f3a\u5931\u503c\u7684\u884c\u6216\u5217\uff0c\u9ed8\u8ba4\u662f\u884c\u3002 In [152]: df.dropna() Out[152]: col1 col2 col3 col4 user1 0.368869 1.021476 -0.771651 -1.908077 user2 0.023887 0.799769 -0.230265 -0.800586 user3 -0.139025 -0.032772 1.078525 -1.453405 user4 -1.042709 1.022162 -0.686548 -1.497647 \u5982\u679c\u6309\u5217\u53bb\u9664\uff0cdf \u5c31\u6ca1\u6709\u53ef\u4ee5\u7528\u7684\u6570\u636e\u4e86\u3002 In [153]: df.dropna(axis=1) Out[153]: Empty DataFrame Columns: [] Index: [user0, user1, user2, user3, user4, user5] 12.3.2 \u8fde\u63a5 \u00b6 \u6700\u540e\u7528\u4e8e\u6c47\u62a5\u6216\u8005\u7ed8\u56fe\u7684\u6570\u636e\u53ef\u80fd\u6765\u81ea\u591a\u4e2a\u6570\u636e\u8868\u683c\uff0c\u6211\u4eec\u6709\u65f6\u9700\u8981\u5c06\u5b83\u4eec\u5408\u5e76\u5230\u4e00\u8d77\uff0c \u79f0\u4e3a\u8fde\u63a5\u3002Pandas \u5e93\u63d0\u4f9b\u4e86 merge() \u51fd\u6570\u7528\u4e8e DataFrame \u7684\u8fde\u63a5\u3002 \u8fde\u63a5\u64cd\u4f5c\u4e00\u822c\u662f\u6839\u636e\u952e\u8fdb\u884c\u7684\uff0c\u952e\u662f\u4e24\u4e2a\u6570\u636e\u8868\u683c\u5171\u6709\u7684\u5217\u3002\u6309\u952e\u8fde\u63a5\u6839\u636e\u952e\u7684\u591a\u5c11 \u53ef\u4ee5\u5206\u4e3a\u5355\u952e\u8fde\u63a5\u548c\u591a\u952e\u8fde\u63a5\u3002\u8fde\u63a5\u64cd\u4f5c\u4e0e SQL \u64cd\u4f5c\u6781\u4e3a\u76f8\u4f3c\u3002 \u65e0\u8bba\u591a\u5c11\u4e2a\u952e\u7684\u8fde\u63a5\u3001\u4e0d\u540c\u7c7b\u578b\u7684\u8fde\u63a5\u90fd\u662f\u4f7f\u7528 merge() \u51fd\u6570\uff0c\u53ea\u662f\u53c2\u6570\u8bbe\u5b9a\u4e0d\u540c\u3002 merge() \u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u663e\u793a\u5982\u4e0b\uff1a pd.merge( left, right, how='inner', on=None, left_on=None, right_on=None, left_index=False, right_index=False, sort=False, suffixes=('_x', '_y'), copy=True, indicator=False, validate=None, ) \u6211\u4eec\u63a5\u7740\u6784\u5efa\u7528\u4e8e\u8fde\u63a5\u7684\u4e24\u4e2a\u6570\u636e\u6846\uff0c\u4e00\u4e2a DataFrame \u5b58\u50a8\u6545\u4e8b\u7684 id \u7684\u540d\u5b57\uff0c \u4e00\u4e2a DataFrame \u5b58\u50a8\u6545\u4e8b\u6240\u5c5e\u7684 subject \u548c\u6545\u4e8b\u8bc4\u5206\u3002 In [155]: stories = pd.DataFrame({'story_id':[1,2,3], 'title':['lions', 'tigers', 'bears']}) In [156]: data = pd.DataFrame({'subject':[1,2,1,2], 'story_id':[1,2,5,6], 'rating':[6.7, 7.8, 3.2, 9.0]}) In [157]: stories Out[157]: story_id title 0 1 lions 1 2 tigers 2 3 bears In [158]: data Out[158]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 \u63a5\u4e0b\u6765\u6839\u636e\u4e0d\u540c\u7684\u9700\u6c42\u5206\u522b\u4ecb\u7ecd\u8fde\u63a5\u64cd\u4f5c\u3002 \u5de6\u8fde\u63a5 \u00b6 \u8fde\u63a5\u7684 DataFrame \u6839\u636e\u53c2\u6570\u7684\u987a\u5e8f\u6309 left \u548c right \u533a\u5206\u3002 \u6309\u5de6\u8fde\u63a5\uff08left join\uff09\u64cd\u4f5c\u5408\u5e76\u4e4b\u540e\u663e\u793a left \u7684\u6240\u6709\u884c\u3002 \u8fde\u63a5\u7684\u65b9\u5f0f\u7531 how \u53c2\u6570\u63a7\u5236\uff0c\u7528\u4e8e\u8fde\u63a5\u7684\u5217\u540d\u7531 on \u53c2\u6570\u6307\u5b9a\u3002 In [159]: pd.merge(stories, data, how='left', on='story_id') Out[159]: story_id title subject rating 0 1 lions 1.0 6.7 1 2 tigers 2.0 7.8 2 3 bears NaN NaN \u8fde\u63a5\u540e\u4e0d\u5b58\u5728\u7684\u6570\u503c\u5c06\u4ee5 NaN \u586b\u5145\u3002 \u53f3\u8fde\u63a5 \u00b6 \u5728\u7406\u89e3\u5de6\u8fde\u63a5\u540e\uff0c\u7406\u89e3\u5176\u4ed6\u7684\u64cd\u4f5c\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\u3002 \u53f3\u8fde\u63a5\uff08right join\uff09\u64cd\u4f5c\u5408\u5e76\u4e4b\u540e\u663e\u793a right \u7684\u6240\u6709\u884c\u3002 \u5176\u5b9e\u8fd9\u4e0e\u5bf9\u8c03\u8f93\u5165\u7684\u4e24\u4e2a DataFrame \u7684\u5de6\u8fde\u63a5\u7ed3\u679c\u4e00\u81f4\u3002 In [160]: pd.merge(stories, data, how='right', on='story_id') Out[160]: story_id title subject rating 0 1 lions 1 6.7 1 2 tigers 2 7.8 2 5 NaN 1 3.2 3 6 NaN 2 9.0 In [161]: pd.merge(data, stories, how='left', on='story_id') Out[161]: subject story_id rating title 0 1 1 6.7 lions 1 2 2 7.8 tigers 2 1 5 3.2 NaN 3 2 6 9.0 NaN \u867d\u7136\u7ed3\u679c\u4e00\u81f4\uff0c\u4f46\u7ed3\u679c\u663e\u793a\u4e24\u79cd\u64cd\u4f5c\u7684\u5217\u540d\u987a\u5e8f\u6709\u4e9b\u4e0d\u540c\u3002 \u5916\u8fde\u63a5 \u00b6 \u5916\u8fde\u63a5\uff08outer join\uff09\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u770b\u4f5c\u53d6\u5e76\u96c6\uff0c\u5b83\u4f1a\u5408\u5e76 left \u548c right \u6240\u6709\u7684\u884c\u3002 In [162]: pd.merge(stories, data, how='outer', on='story_id') Out[162]: story_id title subject rating 0 1 lions 1.0 6.7 1 2 tigers 2.0 7.8 2 3 bears NaN NaN 3 5 NaN 1.0 3.2 4 6 NaN 2.0 9.0 \u5185\u8fde\u63a5 \u00b6 \u5185\u8fde\u63a5\uff08inner join\uff09\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u770b\u4f5c\u53d6\u4ea4\u96c6\uff0c\u5b83\u4f1a\u5408\u5e76 left \u548c right \u5171\u6709\u7684\u884c\u3002 In [163]: pd.merge(stories, data, how='inner', on='story_id') Out[163]: story_id title subject rating 0 1 lions 1 6.7 1 2 tigers 2 7.8 \u4e0a\u8ff0\u6240\u8bf4\u7684\u5171\u6709\u662f\u6307\u7528\u4e8e\u8fde\u63a5\u7684\u952e\u7684\u5171\u6709\u503c\uff0c\u5982 stories \u548c data \u7684 story_id \u5171\u6709 \u7684\u503c\u662f 1 \u548c 2\u3002 \u591a\u952e\u8fde\u63a5 \u00b6 \u591a\u952e\u8fde\u63a5\u96be\u5ea6\u4e5f\u4e0d\u5927\uff0c\u4ee5\u5217\u8868\u5f62\u5f0f\u6307\u5b9a on \u53c2\u6570\u4e3a\u4e24\u4e2a DataFrame \u5171\u6709\u7684\u5217\u540d\u5373\u53ef\u3002 In [168]: data2 = pd.merge(stories, data, how='inner', on='story_id') In [169]: data Out[169]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 In [170]: pd.merge(data2, data, how='inner', on=['story_id', 'subject']) Out[170]: story_id title subject rating_x rating_y 0 1 lions 1 6.7 6.7 1 2 tigers 2 7.8 7.8 \u5982\u679c\u4e24\u4e2a DataFrame \u9664\u4e86\u4f5c\u4e3a\u952e\u7684\u5217\u4e4b\u5916\u8fd8\u6709\u540c\u540d\u5217\uff0c\u5408\u5e76\u540e\u4f1a\u88ab\u81ea\u52a8 \u6dfb\u52a0 x \u548c y \u540e\u7f00\u4ee5\u793a\u533a\u522b\u3002 12.3.3 \u7ea7\u8054 \u00b6 \u9664\u4e86\u901a\u8fc7\u952e\u5c06 DataFrame \u4ee5\u5217\u7684\u5f62\u5f0f\u8fde\u63a5\u5230\u4e00\u8d77\uff0c\u8fd8\u6709\u7ea7\u8054\u7684\u65b9\u5f0f\u53ef\u4ee5\u5408\u5e76 DataFrame\u3002 \u7ea7\u8054\u64cd\u4f5c\u4f7f\u7528 concat() \u51fd\u6570\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u5c06\u591a\u4e2a DataFrame \u6309\u884c\uff08\u9ed8\u8ba4\uff09\u6216\u6309\u5217\u7ec4\u5408\u3002 In [171]: data = pd.DataFrame({'subject':[1,2,1,2], 'story_id':[1,2,5,6], 'rating':[6.7, 7.8, 3.2, 9.0]}) In [172]: data2 = pd.DataFrame({'subject':[1,2], 'story_id':[3, 4], 'rating':[5, 9.7]}) In [173]: data Out[173]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 In [174]: data2 Out[174]: subject story_id rating 0 1 3 5.0 1 2 4 9.7 \u4e0a\u8ff0\u4ee3\u7801\u751f\u6210\u4e86\u4e24\u4e2a\u5217\u540d\u4e00\u81f4\u7684 DataFrame\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5b83\u4eec\u6309\u884c\u7ec4\u5408\u8d77\u6765\u3002 In [175]: pd.concat([data, data2]) Out[175]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 0 1 3 5.0 1 2 4 9.7 \u600e\u4e48\u6837\uff0c\u7b80\u5355\u5427\uff1f \u6709\u65f6\u6211\u4eec\u53ef\u80fd\u60f3\u8981\u6807\u5b9a\u884c\u7684\u6570\u636e\u6765\u6e90\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u7528\u952e\u5b9e\u73b0\u3002 In [176]: pd.concat([data, data2], keys=['data', 'data2']) Out[176]: subject story_id rating data 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 data2 0 1 3 5.0 1 2 4 9.7 \u4ed4\u7ec6\u89c2\u5bdf\u8bfb\u8005\u4e0d\u96be\u53d1\u73b0 index \u4e2d\u7684 0 \u548c 1 \u91cd\u590d\u4e86\uff0c\u6307\u5b9a ignore_index \u9009\u9879 \u53ef\u4ee5\u53d8\u6210\u8fde\u7eed\u7684 index\u3002\u4e0d\u8fc7\u6b64\u64cd\u4f5c\u540e keys \u7684\u8bbe\u5b9a\u5c06\u4e0d\u8d77\u4f5c\u7528\u4e86\u3002 In [177]: pd.concat([data, data2], keys=['data', 'data2'], ignore_index=True) Out[177]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 4 1 3 5.0 5 2 4 9.7 In [178]: pd.concat([data, data2], ignore_index=True) Out[178]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 4 1 3 5.0 5 2 4 9.7 \u6211\u4eec\u518d\u8bd5\u8bd5\u6309\u5217\u5408\u5e76\uff1a In [180]: pd.concat([data, data2], axis=1) Out[180]: subject story_id rating subject story_id rating 0 1 1 6.7 1.0 3.0 5.0 1 2 2 7.8 2.0 4.0 9.7 2 1 5 3.2 NaN NaN NaN 3 2 6 9.0 NaN NaN NaN \u7f3a\u5c11\u7684\u884c\u4f1a\u4f7f\u7528 NaN \u81ea\u52a8\u586b\u5145\u3002\u6307\u5b9a ignore_index \u540e\uff0c\u6240\u6709\u5217\u7d22\u5f15\u5c06\u91cd\u65b0\u751f\u6210\u3002 In [181]: pd.concat([data, data2], ignore_index=True, axis=1) Out[181]: 0 1 2 3 4 5 0 1 1 6.7 1.0 3.0 5.0 1 2 2 7.8 2.0 4.0 9.7 2 1 5 3.2 NaN NaN NaN 3 2 6 9.0 NaN NaN NaN \u9664\u4e86 concat() \u51fd\u6570\uff0cappend() \u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7528\u4e8e\u884c\u7684\u5408\u5e76\u3002 In [182]: data.append(data2) Out[182]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 0 1 3 5.0 1 2 4 9.7 \u4e0d\u8fc7\u5b83\u7684\u6700\u5927\u7528\u5904\u5728\u4e8e\u6dfb\u52a0\u65b0\u7684\u884c\uff0c\u5982\u7ed9 DataFrame \u6dfb\u52a0 Series \u5bf9\u8c61\u3002 In [185]: data.append(pd.Series({'subject':1, 'story_id':10, 'rating':7}, name=6)) Out[185]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 6 1 10 7.0 12.4 Pandas \u53ef\u89c6\u5316 \u00b6 Pandas \u4e3a Series \u548c DataFrame \u5bf9\u8c61\u63d0\u4f9b\u4e86 Matplotlib \u5e93 plot() \u51fd\u6570\u7684\u7b80\u5355\u5305\u88c5\u5b9e\u73b0\uff0c \u672c\u8282\u8fdb\u884c\u7b80\u5355\u7684\u4ecb\u7ecd\u3002 \u6211\u4eec\u5148\u5bfc\u5165\u793a\u4f8b\u6570\u636e\u96c6 mtcars\uff0c\u5b83\u662f\u7f8e\u56fd Motor Trend \u6536\u96c6 \u7684 1973 \u5230 1974 \u5e74\u671f\u95f4\u603b\u5171 32 \u8f86\u6c7d\u8f66\u7684 11 \u4e2a\u6307\u6807\uff0c \u5305\u542b\u6cb9\u8017\u3001\u8bbe\u8ba1\u3001\u6027\u80fd\u7b49\u65b9\u9762\u3002 In [187]: mtcars = pd.read_csv('files/chapter10/mtcars.csv') In [188]: mtcars.describe() Out[188]: mpg cyl disp ... am gear carb count 32.000000 32.000000 32.000000 ... 32.000000 32.000000 32.0000 mean 20.090625 6.187500 230.721875 ... 0.406250 3.687500 2.8125 std 6.026948 1.785922 123.938694 ... 0.498991 0.737804 1.6152 min 10.400000 4.000000 71.100000 ... 0.000000 3.000000 1.0000 25% 15.425000 4.000000 120.825000 ... 0.000000 3.000000 2.0000 50% 19.200000 6.000000 196.300000 ... 0.000000 4.000000 2.0000 75% 22.800000 8.000000 326.000000 ... 1.000000 4.000000 4.0000 max 33.900000 8.000000 472.000000 ... 1.000000 5.000000 8.0000 [8 rows x 11 columns] In [189]: mtcars.shape Out[189]: (32, 11) mtcars \u6240\u6709\u5217\u4e2d mpg \u662f\u6bcf\u767e\u516c\u91cc\u6cb9\u8017\uff0ccyl \u662f\u53d1\u52a8\u673a\u6c7d\u7f38\u6570\u3002\u4e0b\u9762\u6211\u4eec\u5c31\u4f7f\u7528\u8fd9\u4e24\u5217\u8fdb\u884c\u53ef\u89c6\u5316\u5206\u6790\u3002 In [193]: df = mtcars.loc[:, ['cyl', 'mpg']] In [194]: df.head() Out[194]: cyl mpg 0 6 21.0 1 6 21.0 2 4 22.8 3 6 21.4 4 8 18.7 In [195]: %matplotlib inline In [196]: df.plot() \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cplot() \u65b9\u6cd5\u4f7f\u7528\u7ebf\u56fe\u5f62\u5f0f\u8fdb\u884c\u7ed8\u5236\u3002\u5982\u679c\u60f3\u8981\u7ed8\u5236\u5176\u4ed6\u7684\u56fe\u5f62\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570 kind \u8fdb\u884c\u6307\u5b9a\u3002 bar - \u6761\u5f62\u56fe barh - \u6a2a\u6761\u5f62\u56fe hist - \u76f4\u65b9\u56fe box - \u7bb1\u7ebf\u56fe area - \u9762\u79ef\u56fe scatter \u6563\u70b9\u56fe 12.4.1 \u6761\u5f62\u56fe \u00b6 \u6761\u5f62\u56fe\u5229\u7528\u6761\u5f62\u7684\u9ad8\u5ea6\u6765\u8868\u793a\u6570\u503c\uff0c\u6b64\u5904\u6211\u4eec\u6709 32 \u8f86\u6c7d\u8f66\u7684\u6570\u636e\uff0c\u6240\u4ee5\u4f1a\u6709 32 \u7ec4\u6761\u5f62\u3002 df.plot(kind='bar') \u4f7f\u7528 barh \u6765\u8c03\u6362 x \u548c y \u8f74\u3002 df.plot(kind='barh') \u6211\u4eec\u53ef\u80fd\u60f3\u5c06\u56fe\u5f62\u5806\u53e0\u8d77\u6765\uff0c\u53ef\u4ee5\u6307\u5b9a stacked \u4e3a True\u3002 df.plot(kind='bar', stacked=True) \u56fe\u4e2d x \u8f74\u663e\u793a\u7684\u662f\u6570\u503c\uff0c\u6ca1\u6709\u7279\u522b\u7684\u542b\u4e49\uff0c\u6211\u4eec\u7ed9\u6570\u636e\u52a0\u4e0a\u6807\u7b7e\uff0c\u8ba9\u5b83\u663e\u793a\u51fa\u6765\u3002 df2 = df.copy() df2.index = ['car '+str(i) for i in np.arange(32) + 1] df2.plot(kind='bar', stacked=True) 12.4.2 \u76f4\u65b9\u56fe \u00b6 \u76f4\u65b9\u56fe\u53ef\u4ee5\u6bd4\u8f83\u76f4\u89c2\u5c55\u793a\u6570\u636e\u5206\u5e03\uff0c\u662f\u521d\u6b65\u4e86\u89e3\u6570\u636e\u7684\u6700\u597d\u65b9\u5f0f\u4e4b\u4e00\u3002 df.plot(kind='hist') \u901a\u8fc7\u6307\u5b9a bins \u9009\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539 bin \u7684\u5bbd\u5ea6\u3002 df.plot(kind='hist', bins=20) \u4e0a\u9762\u5c06\u4e24\u4e2a\u53d8\u91cf\u7684\u5206\u5e03\u7ed8\u5236\u5728\u4e86\u4e00\u4e2a\u56fe\u4e2d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 hist() \u65b9\u6cd5\u4e3a\u6bcf\u4e00\u4e2a\u53d8\u91cf\u5355\u72ec\u7ed8\u5236\u76f4\u65b9\u56fe\u3002 df.hist(bins=20) 12.4.3 \u7bb1\u7ebf\u56fe \u00b6 \u4e0a\u9762\u7684\u76f4\u65b9\u56fe\u663e\u793a\u4e86\u6c14\u7f38\u6570\u662f 3 \u4e2a\u79bb\u6563\u503c 4\u30016\u30018\u3002\u6211\u4eec\u53ef\u80fd\u66f4\u52a0\u60f3\u8981\u6bd4\u8f83\u4e0d\u540c\u7ec4\u522b\u4e4b\u95f4\u6cb9\u8017\u7684\u5dee\u5f02\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7bb1\u7ebf\u56fe\u662f\u5f88\u597d\u7684\u5c55\u793a\u65b9\u5f0f\u3002 \u4e0d\u8fc7 plot() \u65b9\u6cd5\u7ed8\u5236\u7bb1\u7ebf\u56fe\u65f6\u9ed8\u8ba4\u662f\u4e3a\u6bcf\u5217\u5355\u72ec\u7ed8\u5236\uff0c\u65e0\u6cd5\u8fdb\u884c\u5206\u7ec4\u3002 df.plot(kind='box') \u4e3a\u4e86\u5c06\u6cb9\u8017\u6309\u7167\u6c14\u7f38\u6570\u5206\u7ec4\u540e\u7ed8\u5236\u7bb1\u7ebf\u56fe\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 boxplot() \u65b9\u6cd5\uff0c\u5b83\u652f\u6301\u66f4\u591a\u7684\u7ed8\u56fe\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u901a\u8fc7 by \u53c2\u6570\u6307\u5b9a\u8fdb\u884c\u5206\u7ec4\u7684\u5217\u540d\u3002 # \u4e3a\u4e86\u4f18\u5316\u663e\u793a\u6548\u679c\uff0c\u6211\u4eec\u8fdb\u884c\u4e86 3 \u9879\u81ea\u5b9a\u4e49\uff1a # \u53bb\u6389\u7f51\u683c\u7ebf # \u65cb\u8f6c x \u8f74\u6807\u7b7e # \u589e\u5927\u5b57\u4f53 df.boxplot(by='cyl', grid=False, rot=45, fontsize=15) 12.4.4 \u9762\u79ef\u56fe \u00b6 \u9762\u79ef\u56fe\u7684\u6548\u679c\u6709\u70b9\u7c7b\u4f3c\u5806\u53e0\u6761\u5f62\u56fe\uff0c\u524d\u8005\u66f4\u9002\u7528\u4e8e\u8fde\u7eed\u53d8\u91cf\uff0c\u540e\u8005\u66f4\u9002\u7528\u4e8e\u79bb\u6563\u53d8\u91cf\u3002 df.plot(kind='area') 12.4.5 \u6563\u70b9\u56fe \u00b6 \u6563\u70b9\u56fe\u53ef\u4ee5\u66f4\u52a0\u76f4\u89c2\u5730\u89c2\u6d4b\u5355\u4e2a\u6570\u636e\u70b9\u7684\u60c5\u51b5\u3002\u8fd9\u91cc\u53d8\u91cf cyl \u662f\u79bb\u6563\u503c\uff0c\u6240\u4ee5\u4e0b\u9762\u7ed8\u5236\u7684\u56fe\u5f62\u53ef\u80fd\u770b\u8d77\u6765\u6709\u70b9\u5947\u602a\u3002\u4e0d\u8fc7\uff0c\u6709\u65f6\u5019\u8fd9\u79cd\u8868\u73b0\u5f62\u5f0f\u53ef\u80fd\u5e26\u6765\u610f\u60f3\u4e0d\u5230\u7684\u6548\u679c\u3002 df.plot(kind='scatter', x='cyl', y='mpg') 12.4.6 \u997c\u56fe \u00b6 \u997c\u56fe\u53ef\u4ee5\u663e\u793a\u6570\u636e\u7684\u5360\u6bd4\u60c5\u51b5\uff0c\u4e00\u822c\u662f\u4f7f\u7528\u4e00\u5217\u7684\u6570\u636e\uff0c\u5373\u4e00\u4e2a Series \u5bf9\u8c61\u3002\u4e0b\u9762\u4ee3\u7801\u63d0\u53d6\u4e86 cyl \u53d8\u91cf\u5e76\u8fdb\u884c\u4e86\u53ef\u89c6\u5316\u3002 df.cyl.plot(kind='pie') \u5f53\u9700\u8981\u53ef\u89c6\u5316\u591a\u5217\uff0c\u5373\u4e00\u4e2a DataFrame \u5bf9\u8c61\u65f6\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a subplots \u4e3a True\u3002 \u4e0b\u9762\u4ee3\u7801\u63d0\u53d6\u4e86 df \u524d 5 \u884c\u7684\u6570\u636e\u7528\u4e8e\u53ef\u89c6\u5316\u3002 df.head(5).plot(kind='pie', subplots=True) 12.5 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 Pandas \u5e93\u4f5c\u4e3a Python \u8fdb\u884c\u6570\u636e\u5206\u6790\u7684\u7075\u9b42\u5de5\u5177\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u6570\u636e\u7c7b\u578b\u3001\u7ed3\u6784\u3001\u51fd\u6570\u3001\u65b9\u6cd5 \u548c\u53ef\u89c6\u5316\u7279\u6027\u3002\u672c\u7ae0\u9996\u5148\u5728\u7b2c 8 \u7ae0\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u603b\u7ed3\u56de\u987e\uff0c\u5e76\u5bf9\u5176\u4ed6\u4e00\u4e9b\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u4e86\u62d3\u5c55\u3002 \u7136\u540e\u672c\u7ae0\u5bf9\u51fd\u6570\u5e94\u7528\u548c DataFrame \u7684\u8fed\u4ee3\u8ba1\u7b97\u8fdb\u884c\u4e86\u6bd4\u8f83\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u5305\u62ec\u6309\u884c\u548c\u6309\u5217\u7b49\u4e0d\u540c\u7684 \u65b9\u5f0f\u3002\u5206\u7ec4\u8ba1\u7b97\u662f\u975e\u5e38\u597d\u7684\u6280\u672f\uff0c\u63a8\u8350\u8bfb\u8005\u591a\u591a\u7ec3\u4e60\u548c\u4f7f\u7528\u3002\u540e\u9762\u4ecb\u7ecd\u7684\u7f3a\u5931\u503c\u5185\u5bb9\u8bfb\u8005\u6309\u7167\u81ea\u5df1\u7684 \u9700\u6c42\u8fdb\u884c\u638c\u63e1\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u901a\u8fc7 dropna() \u53bb\u6389\u7f3a\u5931\u503c\u6570\u636e\u5373\u53ef\u3002DataFrame \u7684\u8fde\u63a5\u548c\u7ea7\u8054\u5408\u5e76\u662f \u975e\u5e38\u6838\u5fc3\u7684\u77e5\u8bc6\uff0c\u5b83\u4e0e\u6570\u636e\u5e93\u64cd\u4f5c\u975e\u5e38\u7c7b\u4f3c\uff0c\u638c\u63e1\u5b83\u4eec\u4f1a\u5e2e\u52a9\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3\u548c\u64cd\u4f5c\u6570\u636e\u3002\u53ef\u89c6\u5316 \u662f\u67e5\u770b\u6570\u636e\u5206\u5e03\u3001\u8fdb\u884c\u6bd4\u8f83\u7684\u7edd\u4f73\u65b9\u6848\uff0cPandas \u5e93\u57fa\u4e8e Matplotlib \u5e93\u5c01\u88c5\u7684\u7ed8\u56fe\u51fd\u6570\u7b80\u5355\u6613\u7528\u3002 \u867d\u7136\u672c\u4e66\u4f7f\u7528\u4e86\u4e24\u4e2a\u7ae0\u8282\u7684\u5185\u5bb9\u4ecb\u7ecd Pandas \u5e93\uff0c\u4f46\u4ecd\u6709\u8bb8\u591a\u672a\u80fd\u6db5\u76d6\u7684\u77e5\u8bc6\u70b9\uff0c\u8bfb\u8005\u4e0d\u59a8\u53c2\u9605 Pandas \u6587\u6863\u548c\u76f8\u5173\u6280\u672f\u4e66\u7c4d\u8fdb\u884c\u8fdb\u4e00\u6b65\u5b66\u4e60\u3002","title":"\u7b2c 12 \u7ae0 Pandas \u8fdb\u9636"},{"location":"12-advanced-pandas/#12-pandas","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : \u6df1\u5165 Pandas \u6570\u636e\u7ed3\u6784 \u8fed\u4ee3\u4e0e\u51fd\u6570\u5e94\u7528 \u6570\u636e\u6e05\u6d17 \u7b80\u5355\u53ef\u89c6\u5316 \u672c\u4e66\u5728\u7b2c 8 \u7ae0\u3001\u7b2c 10 \u7ae0\u5206\u522b\u5411\u8bfb\u8005\u4ecb\u7ecd\u4e86 Pandas \u7684\u57fa\u672c\u6570\u636e\u7ed3\u6784\u3001\u64cd\u4f5c\u548c\u5bfc\u5165\u5e38\u89c1\u7684\u6570\u636e\u6587\u4ef6\uff0c\u672c\u7ae0\u7684\u5185\u5bb9\u5c06\u66f4\u52a0\u6df1\u5165\uff0c\u9664\u4e86\u4ecb\u7ecd\u66f4\u591a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u672c\u7ae0\u8fd8\u5305\u542b\u51fd\u6570\u5e94\u7528\u3001\u6570\u636e\u6e05\u6d17\u7b49\u6570\u636e\u5904\u7406\u7684\u4e00\u4e9b\u6838\u5fc3\u6280\u80fd\u3002","title":"\u7b2c 12 \u7ae0 Pandas \u8fdb\u9636"},{"location":"12-advanced-pandas/#121-pandas","text":"","title":"12.1 \u6df1\u5165 Pandas \u6570\u636e\u7ed3\u6784"},{"location":"12-advanced-pandas/#1211","text":"\u5728\u5b66\u4e60\u65b0\u7684\u77e5\u8bc6\u4e4b\u524d\uff0c\u6211\u4eec\u4e0d\u59a8\u5148\u6765\u56de\u987e\u548c\u6574\u7406\u4e00\u4e0b\u76ee\u524d\u63a5\u89e6\u5230\u7684 Pandas \u7684\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u5b83\u4eec\u7684\u8054\u7cfb\u3002 NumPy \u6570\u7ec4\u662f Pandas \u6570\u636e\u7ed3\u6784\u7684\u6784\u6210\u6838\u5fc3\uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u503c\u3002\u6211\u4eec\u5e38\u7528\u4e00\u7ef4\u548c\u4e8c\u7ef4\u7684 ndarray\u3002 In [1]: import numpy as np In [2]: a = np.arange(9) In [3]: a Out[3]: array([0, 1, 2, 3, 4, 5, 6, 7, 8]) In [4]: b = np.arange(9).reshape((3, 3)) In [5]: b Out[5]: array([[0, 1, 2], [3, 4, 5], [6, 7, 8]]) Pandas \u7684 Series \u5c31\u662f\u5728\u4e00\u7ef4 ndarray \u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e86\u5bf9\u6570\u636e\u542b\u4e49\u7684\u63cf\u8ff0\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u7d22\u5f15\u6216\u6807\u7b7e\u3002\u4e0e ndarray \u672c\u8eab\u6240\u652f\u6301\u7684\u6574\u6570\u7d22\u5f15\u6240\u4e0d\u540c\u7684\u662f\uff0cPandas \u540c\u65f6\u652f\u6301\u6574\u6570\u7d22\u5f15\u548c\u5b57\u7b26\u7d22\u5f15\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6574\u6570\u7d22\u5f15\u4f1a\u88ab\u4f7f\u7528\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u8303\u56f4\u7d22\u5f15\u5bf9\u8c61 RangeIndex\uff0c\u8be5\u5bf9\u8c61\u51cf\u5c11\u4e86\u5bf9\u5185\u5b58\u7684\u5229\u7528\u3002\u4f8b\u5982\uff0c0-9 \u5373\u53ef\u7528\u8d77\u70b9 0\uff0c\u6b65\u957f 1\uff0c\u7ec8\u6b62\u70b9 10 \u52a0\u4ee5\u8868\u8ff0\u3002\u66f4\u5927\u8303\u56f4\u7684\u6570\u503c\u4e5f\u662f\u5982\u6b64\u3002 In [6]: import pandas as pd In [7]: pd.RangeIndex(10) Out[7]: RangeIndex(start=0, stop=10, step=1) \u4e0b\u9762\u4ee3\u7801\u786e\u8ba4\u4e86 RangeIndex \u9ed8\u8ba4\u88ab\u4f7f\u7528\uff1a In [8]: a_series = pd.Series([5, 7, 9]) In [9]: a_series.index Out[9]: RangeIndex(start=0, stop=3, step=1) \u5f53\u7136\uff0cPandas \u7684\u7279\u8272\u5728\u4e8e\u5bf9\u5b57\u7b26\u7d22\u5f15\u7684\u652f\u6301\uff0c\u5b57\u7b26\u7d22\u5f15\u65e2\u53ef\u4ee5\u660e\u786e\u6570\u503c\u542b\u4e49\uff0c\u4e5f\u5efa\u7acb\u7684\u6620\u5c04\u5173\u7cfb\u65b9\u4fbf\u6570\u636e\u7684\u8bbf\u95ee\u3001\u4fee\u6539\u7b49\u64cd\u4f5c\u3002 \u52a0\u4e0a\u5b57\u7b26\u7d22\u5f15\uff0c\u4e0a\u9762\u7684 Series \u6447\u8eab\u4e00\u53d8\u6210\u4e3a\u4e86 3 \u4e2a\u7528\u6237\u67d0\u4e2a\u5c5e\u6027\u7684\u5ea6\u91cf\u503c\u3002 In [10]: a_series = pd.Series([5, 7, 9], index = ['user1', 'user2', 'user3']) In [11]: a_series Out[11]: user1 5 user2 7 user3 9 dtype: int64 \u4e0d\u59a8\u52a0\u4e0a\u4e2a\u540d\u5b57\uff0c\u8ba9\u542b\u4e49\u9650\u5b9a\u4e3a\u4fe1\u7528\u5f97\u5206\u3002 In [12]: a_series = pd.Series([5, 7, 9], index = ['user1', 'user2', 'user3'], name='credit_score') In [13]: a_series Out[13]: user1 5 user2 7 user3 9 Name: credit_score, dtype: int64 \u8fd9\u91cc Series \u53ea\u80fd\u8868\u793a\u7528\u6237\u7684\u4e00\u79cd\u5c5e\u6027\uff0cDataFrame \u8fdb\u884c\u4e86\u62d3\u5c55\uff0c\u652f\u6301\u591a\u79cd\u5c5e\u6027\u4e14\u4e0d\u540c\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u4e0d\u540c\u3002\u8fd9\u5b8c\u7f8e\u5730\u4e0e\u5de5\u4f5c\u4e2d\u5e38\u89c1\u7684\u8868\u683c\u6570\u636e\u5bf9\u5e94\u4e86\u8d77\u6765\u3002\u867d\u7136\u8bf4\u6570\u636e\u7684\u4e3b\u4f53\u8868\u73b0\u65b9\u5f0f\u662f\u4e00\u4e2a\u77e9\u9635\uff0c\u4f46\u4e0e 2 \u7ef4 ndarray \u662f\u5b8c\u5168\u4e0d\u540c\u7684\u3002 \u4ee5\u4e0b\u4ee3\u7801\u5c55\u793a\u4e86\u4e00\u4e2a\u5178\u578b\u7684\u6570\u636e\u6846\uff0c\u884c\u4e00\u822c\u7528\u4e8e\u8868\u793a\u72ec\u7acb\u7684\u8bb0\u5f55\uff0c\u5982\u8fd9\u91cc\u7684 student\uff1b\u5217\u4e00\u822c\u8868\u793a\u8bb0\u5f55\u7684\u76f8\u5173\u5c5e\u6027\uff0c\u5982\u8fd9\u91cc student \u7684 score \u548c height\u3002 In [14]: df = pd.DataFrame([[5, 166], [7, 178], [9, 160]], ...: index=['student1', 'student2', 'student3'], columns=['score', 'height']) In [15]: df Out[15]: score height student1 5 166 student2 7 178 student3 9 160 \u884c\u7d22\u5f15\u4f9d\u65e7\u662f\u4f7f\u7528 index \u63cf\u8ff0\uff0c\u4e3a\u4e86\u63cf\u8ff0\u4e0d\u540c\u7684\u5217\uff0cDataFrame \u5f15\u5165\u4e86 column \u5c5e\u6027\u503c\u3002\u8fd9\u6837\uff0c\u4e24\u4e2a\u7ef4\u5ea6\u7684\u7d22\u5f15\u548c\u6570\u636e\u542b\u4e49\u7684\u63cf\u8ff0\u5bf9\u5e94\u4e86\u8d77\u6765\u3002 \u603b\u7ed3\u4e00\u4e0b\uff0cPandas \u7684\u6570\u636e\u7ed3\u6784\u662f\u7531 NumPy \u6570\u7ec4\u52a0\u4e0a\u6570\u636e\u63cf\u8ff0\u7ec4\u6210\uff0c\u5176\u4e2d Series = 1 \u7ef4 ndarray + index DataFrame = \u591a\u4e2a 1 \u7ef4 ndarray + index + column \u8fd9\u4e9b\u77e5\u8bc6\u53ef\u4ee5\u5f52\u7eb3\u4e3a\u4e00\u4e2a\u6bd4\u8f83\u5f62\u8c61\u7684\u56fe\u5f62\uff0c\u5982\u56fe 12-1 \u6240\u793a\u3002","title":"12.1.1 \u56de\u987e"},{"location":"12-advanced-pandas/#1212","text":"\u672c\u5c0f\u8282\u4ecb\u7ecd\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u7c7b\u578b\u2014\u2014\u5206\u7c7b\u53d8\u91cf\u3002\u5206\u7c7b\u6709\u65f6\u4e5f\u79f0\u4e3a\u56e0\u5b50\u578b\u53d8\u91cf\uff08factor\uff09\uff0c\u5b83\u7528\u4e8e\u8868\u793a\u91cd\u590d\u7684\u6587\u672c\u5217\u3002\u4e00\u4e9b\u5305\u542b\u6709\u9650\u4e2a\u5143\u7d20\u7684\u5217\u5e38\u5e38\u4f1a\u5728\u9700\u8981\u5904\u7406\u7684\u6570\u636e\u4e2d\u51fa\u73b0\uff0c\u5982\u6027\u522b\u3001\u56fd\u5bb6\u3001\u4e00\u4e9b\u7a0b\u5e8f\u63cf\u8ff0\u8bcd\uff08\u4f4e\u3001\u4e2d\u3001\u9ad8\uff09\u7b49\u3002\u5206\u7c7b\u53d8\u91cf\u7684\u5143\u7d20\u662f\u56fa\u5b9a\u7684\uff0c\u5982\u6027\u522b\u53ea\u4f1a\u6709\u7537\u3001\u5973\u3002\u5206\u7c7b\u53d8\u91cf\u6709\u65f6\u5019\u53ef\u80fd\u6709\u987a\u5e8f\uff0c\u5982\u4f4e < \u4e2d < \u9ad8\u3002 \u770b\u5230\u8fd9\u91cc\uff0c\u8bfb\u8005\u53ef\u80fd\u5fc3\u4e2d\u5bf9\u5206\u7c7b\u53d8\u91cf\u6709\u4e86\u4e00\u4e2a\u6bd4\u8f83\u5f62\u8c61\u7684\u63cf\u8ff0\uff1a\u6709\u5e8f\u7684\u96c6\u5408\u3002\u6ca1\u9519\uff0c\u5b83\u770b\u8d77\u6765\u5c31\u662f\u5982\u6b64\u3002\u90a3\u4e48\u5206\u7c7b\u53d8\u91cf\u5728\u6570\u636e\u5206\u6790\u65f6\u6709\u4ec0\u4e48\u7528\u5462\uff1fPandas \u5e93\u4e3a\u4ec0\u4e48\u8981\u63d0\u4f9b\u8fd9\u6837\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff1f \u8282\u7701\u5b58\u50a8\u2014\u2014\u5206\u7c7b\u53d8\u91cf\u5728\u5b58\u50a8\u65f6\u662f\u5c06\u5b57\u7b26\u4e32\u6620\u5c04\u4e3a\u6574\u6570\u503c\u7684\uff0c\u8fd9\u5927\u5927\u8282\u7701\u4e86\u5185\u5b58\u7684\u4f7f\u7528\u3002\u6570\u636e\u8d8a\u5927\uff0c\u6548\u7387\u8d8a\u9ad8\u3002\u4f8b\u5982\uff0c\u6709 10 \u4e07\u4e2a one\u3001two\u3001three\uff0c\u5206\u7c7b\u53d8\u91cf\u5c06\u5b83\u4eec\u6620\u5c04\u4e3a 1\u30012\u30013 \u8fdb\u884c\u5b58\u50a8\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u7684\u82f1\u6587\u5b57\u7b26\u3002 \u5206\u7c7b\u6392\u5e8f\u2014\u2014\u4f8b\u5982\u6709 3 \u4e2a\u5206\u7c7b one\u3001two\u3001three\uff0c\u6211\u4eec\u9700\u8981\u7ed8\u5236\u5b83\u4eec\u7684\u9891\u6570\u6761\u5f62\u56fe\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5206\u7c7b\u53d8\u91cf\u6309\u7167\u81ea\u5df1\u7684\u7684\u60f3\u6cd5\u6392\u5217\u8fd9\u4e09\u4e2a\u5206\u7c7b\uff0c\u63a7\u5236\u7ed8\u56fe\u65f6\u5b83\u4eec\u7684\u6392\u5e8f\u3002 \u6709\u4e24\u79cd\u529e\u6cd5\u53ef\u4ee5\u521b\u5efa\u5206\u7c7b\u53d8\u91cf\uff0c\u4e00\u79cd\u662f\u5728\u521b\u5efa Pandas \u7684 Series \u6216 DataFrame \u65f6\u6307\u5b9a\u6570\u636e\u7c7b\u578b dtype \u4e3a category\uff0c\u7b2c\u4e8c\u79cd\u662f\u76f4\u63a5\u4f7f\u7528 Pandas \u63d0\u4f9b\u7684\u6784\u9020\u5668\u51fd\u6570 Categorical()\u3002 \u6211\u4eec\u5148\u770b\u7b2c\u4e00\u79cd\u529e\u6cd5\uff1a In [16]: pd.Series(['a', 'a', 'b', 'c', 'b'], dtype='category') Out[16]: 0 a 1 a 2 b 3 c 4 b dtype: category Categories (3, object): [a, b, c] \u6211\u4eec\u5bf9\u6bd4\u4e0b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u503c\u65f6\u7684\u7ed3\u679c\uff1a In [17]: pd.Series(['a', 'a', 'b', 'c', 'b']) Out[17]: 0 a 1 a 2 b 3 c 4 b dtype: object \u4e24\u8005\u7684\u5dee\u522b\u4e3b\u8981\u4f53\u73b0\u5728 dtype \u4e0a\uff0c\u9ed8\u8ba4\u5b58\u50a8\u5b57\u7b26\u4f7f\u7528\u7684\u662f object \u7c7b\u578b\uff0c\u5f53 dtype \u6307\u5b9a\u4e3a category \u540e\uff0cPandas \u5c06 5 \u4e2a\u5b57\u7b26\u8f6c\u6362\u5177\u6709 3 \u4e2a\u552f\u4e00\u503c [a, b, c] \u7684\u7c7b\u522b\u3002\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u751f\u6210\u7684 Series \u5b58\u50a8\u7684\u6570\u636e\u662f\u4ece [a, b, c] \u4e2d\u91cd\u590d\u62bd\u6837\u7684\u7ed3\u679c\u3002 \u6211\u4eec\u518d\u770b\u5982\u4f55\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u6784\u9020\u5206\u7c7b\u53d8\u91cf\u3002 In [2]: pd.Categorical(['a', 'a', 'b', 'c', 'b']) Out[2]: [a, a, b, c, b] Categories (3, object): [a, b, c] \u51fd\u6570\u6587\u6863\u663e\u793a\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7c7b\u522b\u4ee5\u53ca\u662f\u5426\u6392\u5e8f\u3002 pd.Categorical( values, categories=None, ordered=None, dtype=None, fastpath=False, ) \u6211\u4eec\u8bd5\u4e00\u8bd5\uff1a In [6]: pd.Categorical(['a', 'a', 'b', 'c', 'b'], categories=['a', 'c']) Out[6]: [a, a, NaN, c, NaN] Categories (2, object): [a, c] In [7]: pd.Categorical(['a', 'a', 'b', 'c', 'b'], ordered=True) Out[7]: [a, a, b, c, b] Categories (3, object): [a < b < c] \u7b2c\u4e00\u884c\u4ee3\u7801\u6211\u4eec\u6307\u5b9a\u4e86\u5408\u6cd5\u7684\u7c7b\u522b\u662f \u201ca\u201d \u548c \u201cc\u201d\uff0c\u6240\u4ee5\u5176\u4ed6\u7684\u5b57\u6bcd\u90fd\u4f1a\u88ab\u8f6c\u6362\u4e3a NaN \u503c\u3002\u7b2c\u4e8c\u884c\u4ee3\u7801\u7684\u7ed3\u679c\u663e\u793a\u4e86\u4e0d\u4ec5\u6709 3 \u4e2a\u7c7b\u522b\uff0c\u800c\u4e14\u8fd8\u5b58\u5728 a < b < c \u7684\u987a\u5e8f\u5173\u7cfb\u3002 \u5bf9\u4e8e\u5206\u7c7b\u6570\u636e\uff0c\u6211\u4eec\u4e00\u4e2a\u5e38\u89c1\u9700\u6c42\u662f\u83b7\u53d6\u5143\u7d20\u7684\u9891\u6570\u6216\u9891\u7387\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 describe() \u65b9\u6cd5\u5b9e\u73b0\u3002 In [9]: cts = pd.Categorical(['a', 'a', 'b', 'c', 'b'], ordered=True) In [10]: cts.describe() Out[10]: counts freqs categories a 2 0.4 b 2 0.4 c 1 0.2 \u8be5\u5bf9\u8c61\u7684\u7c7b\u522b\u4e5f\u662f\u6709\u7528\u7684\uff0c\u8fd9\u53ef\u80fd\u4f7f\u7528\u5bf9\u8c61\u7684\u5c5e\u6027\u503c categories \u83b7\u53d6\u3002 In [11]: cts.categories Out[11]: Index(['a', 'b', 'c'], dtype='object') \u53e6\u5916\uff0cordered \u5c5e\u6027\u53ef\u4ee5\u7ed9\u51fa\u5bf9\u8c61\u662f\u5426\u7ecf\u8fc7\u6392\u5e8f\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\u3002 In [12]: cts.ordered Out[12]: True \u5bf9\u5206\u7c7b\u5bf9\u8c61\u5e38\u89c1\u7684\u64cd\u4f5c\u6709\u91cd\u547d\u540d\u3001\u65b0\u589e\u3001\u5220\u9664\u548c\u6bd4\u8f83\uff0c\u4e0b\u9762\u4e3e\u4f8b\u4ecb\u7ecd\u3002 \u4e0a\u9762\u6211\u4eec\u770b\u5230\u5206\u7c7b\u4fe1\u606f\u5b58\u50a8\u5728\u5bf9\u8c61\u7684 categories \u5c5e\u6027\u4e2d\uff0c\u6211\u4eec\u91cd\u5199\u8be5\u5c5e\u6027\u5373\u53ef\u91cd\u547d\u540d\u7c7b\u522b\u3002 In [13]: cts_new = cts.copy() In [14]: cts_new.categories = ['aa', 'bb', 'cc'] In [15]: cts Out[15]: [a, a, b, c, b] Categories (3, object): [a < b < c] In [16]: cts_new Out[16]: [aa, aa, bb, cc, bb] Categories (3, object): [aa < bb < cc] \u6700\u540e\u7684\u8f93\u51fa\u663e\u793a\u6240\u6709\u7684\u5143\u7d20\u90fd\u88ab\u66ff\u6362\u4e86\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u7279\u6027\u3002 \u589e\u52a0\u65b0\u7684\u7c7b\u522b\u53ef\u4ee5\u4f7f\u7528 add_categories() \u65b9\u6cd5\u5b9e\u73b0\uff0c\u65b0\u7684\u7c7b\u522b\u4f1a\u88ab\u6dfb\u52a0\u5230\u6700\u540e\u3002 In [17]: cts_new.add_categories(['ff']) Out[17]: [aa, aa, bb, cc, bb] Categories (4, object): [aa < bb < cc < ff] \u5220\u9664\u7c7b\u522b\u540e\uff0c\u539f\u6709\u7684\u503c\u4f1a\u88ab NaN \u503c\u66ff\u4ee3\uff1a In [19]: cts_new.remove_categories(\"bb\") Out[19]: [aa, aa, NaN, cc, NaN] Categories (2, object): [aa < cc] \u5206\u7c7b\u5bf9\u8c61\u7684\u6bd4\u8f83\u5728\u5bf9\u8c61\u662f\u6709\u5e8f\u65f6\u6bd4\u8f83\u6709\u7528\u3002 In [23]: cts Out[23]: [a, a, b, c, b] Categories (3, object): [a < b < c] In [24]: cts2 = pd.Categorical(['b', 'c', 'a', 'a'], ordered=True) In [25]: cts > cts2 --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-25-d954cff14835> in <module> ----> 1 cts > cts2 ~/miniconda3/lib/python3.7/site-packages/pandas/core/arrays/categorical.py in f(self, other) 113 other_codes = other._codes 114 --> 115 mask = (self._codes == -1) | (other_codes == -1) 116 f = getattr(self._codes, op) 117 ret = f(other_codes) ValueError: operands could not be broadcast together with shapes (5,) (4,) In [26]: cts2 = pd.Categorical(['b', 'c', 'a', 'a', 'a'], ordered=True) In [27]: cts > cts2 Out[27]: array([False, False, True, True, True]) \u5f53\u4e24\u4e2a\u5bf9\u8c61\u90fd\u662f\u5206\u7c7b\u5bf9\u8c61\u65f6\u4e00\u5b9a\u8981\u6ce8\u610f\u957f\u5ea6\u8981\u4e00\u81f4\uff0c\u5e76\u4e14\u8bbe\u5b9a\u7684\u7c7b\u522b\u4e00\u81f4\u3002 \u5f53\u5176\u4e2d\u4e00\u4e2a\u5bf9\u8c61\u662f\u6807\u91cf\u65f6\uff0c\u8ba1\u7b97\u4f1a\u81ea\u52a8\u8fdb\u884c\u5e7f\u64ad\u3002 In [28]: cts > 'b' Out[28]: array([False, False, False, True, False]) \u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u5c1d\u8bd5\u5176\u4ed6\u5bf9\u6bd4\u7c7b\u578b\u7684\u7ed3\u679c\u3002","title":"12.1.2 \u5206\u7c7b\u53d8\u91cf"},{"location":"12-advanced-pandas/#1213","text":"\u6570\u636e\u7684\u751f\u6210\u548c\u91c7\u96c6\u5f80\u5f80\u662f\u8fde\u7eed\u7684\u8fc7\u7a0b\uff0c\u8fd9\u79bb\u4e0d\u5f00\u65f6\u95f4\u7684\u7d2f\u79ef\u3002 \u65f6\u95f4\u5e8f\u5217\u5373\u662f\u6309\u65f6\u95f4\u987a\u5e8f\u7ec4\u6210\u7684\u6570\u636e\u5e8f\u5217\uff0c\u5b83\u5c55\u793a\u4e86\u6570\u636e\u53d8\u5316\u7684\u8d8b\u52bf\u3001\u53ef\u80fd\u7684\u5468\u671f\u6027\u548c\u89c4\u5f8b\u6027\u3002 \u65f6\u95f4\u5e8f\u5217\u5206\u6790\u7684\u4e3b\u8981\u76ee\u7684\u662f\u6839\u636e\u5df2\u6709\u7684\u5386\u53f2\u6570\u636e\u5bfb\u627e\u89c4\u5f8b\u3001\u5efa\u7acb\u6a21\u578b\u7528\u6765\u5bf9\u672a\u6765\u7684\u6570\u636e\u503c\u8fdb\u884c\u9884\u6d4b\u3002 \u8fd9\u79cd\u7c7b\u578b\u7684\u5206\u6790\u5e38\u7528\u4e8e\u91d1\u878d\u9886\u57df\uff0cPandas \u7684\u521b\u5efa\u7684\u521d\u59cb\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u5904\u7406\u91d1\u878d\u6570\u636e\uff0c\u56e0\u6b64\u63d0\u4f9b \u4e86\u65f6\u95f4\u65e5\u671f\u5bf9\u8c61\u548c\u4e30\u5bcc\u7684\u65f6\u5e8f\u5206\u6790\u529f\u80fd\u7279\u6027\u3002","title":"12.1.3 \u65f6\u95f4\u5e8f\u5217"},{"location":"12-advanced-pandas/#122","text":"","title":"12.2 \u8fed\u4ee3\u4e0e\u51fd\u6570\u5e94\u7528"},{"location":"12-advanced-pandas/#1221","text":"Pandas \u5bf9\u8c61\u4e4b\u95f4\u7684\u57fa\u672c\u8fed\u4ee3\u7684\u884c\u4e3a\u53d6\u51b3\u4e8e\u6570\u636e\u7c7b\u578b\u3002 \u5f53\u8fed\u4ee3\u4e00\u4e2a Series \u5bf9\u8c61\u65f6\uff0c\u5b83\u88ab\u89c6\u4e3a\u6570\u7ec4\uff0c\u8fed\u4ee3\u4f1a\u9010\u4e00\u4f7f\u7528\u5143\u7d20\u503c\u3002 \u800c DataFrame \u9075\u5faa\u7c7b\u4f3c\u7684\u89c4\u5219\u8fed\u4ee3\u5bf9\u8c61\u7684\u5217\u6807\u7b7e\u3002 \u6211\u4eec\u5148\u5206\u522b\u751f\u6210\u4e00\u4e2a Series \u548c DataFrame \u5bf9\u8c61\u3002 In [74]: s = pd.Series(['a', 'b', 'c']) In [75]: df = df = {'\u59d3\u540d': ['\u5c0f\u660e','\u5c0f\u738b','\u5c0f\u5f20'], '\u8bed\u6587':[80,85,90], '\u6570\u5b66':[99,88,86]} In [76]: df = pd.DataFrame(df) In [77]: s Out[77]: 0 a 1 b 2 c dtype: object In [78]: df Out[78]: \u59d3\u540d \u8bed\u6587 \u6570\u5b66 0 \u5c0f\u660e 80 99 1 \u5c0f\u738b 85 88 2 \u5c0f\u5f20 90 86 \u7528 for \u5faa\u73af\u8fed\u4ee3\u4e24\u4e2a\u5bf9\u8c61\u770b\u770b\u7ed3\u679c\u662f\u5426\u5982\u524d\u9762\u6240\u8bf4\u3002 In [80]: for i in s: ...: print(i) ...: a b c In [81]: for i in df: ...: print(i) ...: \u59d3\u540d \u8bed\u6587 \u6570\u5b66 \u7684\u786e\u5982\u6b64\u3002Series \u5bf9\u8c61\u548c DataFrame \u5bf9\u8c61\u7684 for \u5faa\u73af\u5dee\u522b\u5f88\u5927\u3002 \u5f53\u6211\u4eec\u9700\u8981\u8fed\u4ee3 Series \u5bf9\u8c61\u7684\u7d22\u5f15\u65f6\u53ef\u4ee5\u901a\u8fc7 index \u5c5e\u6027\u8bbf\u95ee\u3002 In [82]: for i in s.index: ...: print(i) ...: 0 1 2 \u8fed\u4ee3 DataFrame \u7684\u9700\u6c42\u5e38\u5e38\u4e0d\u53ea\u662f\u83b7\u53d6\u5217\u6807\u7b7e\uff0c\u8fd8\u6709\u5bf9\u5185\u5bb9\u8fdb\u884c\u8fed\u4ee3\u3002 \u53ef\u4ee5\u4f7f\u7528\u7684\u65b9\u6cd5\u6709\u4ee5\u4e0b 3 \u79cd\u3002 iteritems() - \u8fed\u4ee3\u952e\u503c\u5bf9\u3002 iterrows() - \u5c06\u884c\u8fed\u4ee3\u4e3a\u7d22\u5f15 Series \u5bf9\u3002 itertuples() - \u4ee5\u547d\u540d\u5143\u7ec4\u7684\u5f62\u5f0f\u8fed\u4ee3\u884c\u3002 \u5148\u770b\u770b\u7b2c\u4e00\u4e2a\u65b9\u6cd5\uff1a In [84]: for key, value in df.iteritems(): ...: print(key, value) ...: \u59d3\u540d 0 \u5c0f\u660e 1 \u5c0f\u738b 2 \u5c0f\u5f20 Name: \u59d3\u540d, dtype: object \u8bed\u6587 0 80 1 85 2 90 Name: \u8bed\u6587, dtype: int64 \u6570\u5b66 0 99 1 88 2 86 Name: \u6570\u5b66, dtype: int64 In [85]: for key, value in df.iteritems(): ...: print(type(value)) ...: <class 'pandas.core.series.Series'> <class 'pandas.core.series.Series'> <class 'pandas.core.series.Series'> iteritems() \u65b9\u6cd5\u4ee5 DataFrame \u7684\u5217\u6807\u7b7e\u4e3a\u952e\uff0c\u5217\u503c\u4e3a\u503c\u8fdb\u884c\u8fed\u4ee3\u3002 \u6bcf\u4e00\u4e2a\u503c\u90fd\u662f Series \u5bf9\u8c61\u3002 \u6211\u4eec\u518d\u6765\u770b\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\uff1a In [87]: for key, value in df.iterrows(): ...: print(key, value) ...: 0 \u59d3\u540d \u5c0f\u660e \u8bed\u6587 80 \u6570\u5b66 99 Name: 0, dtype: object 1 \u59d3\u540d \u5c0f\u738b \u8bed\u6587 85 \u6570\u5b66 88 Name: 1, dtype: object 2 \u59d3\u540d \u5c0f\u5f20 \u8bed\u6587 90 \u6570\u5b66 86 Name: 2, dtype: object In [88]: for row, value in df.iterrows(): ...: print(type(value)) ...: <class 'pandas.core.series.Series'> <class 'pandas.core.series.Series'> <class 'pandas.core.series.Series'> iterrows() \u65b9\u6cd5\u7684\u7ed3\u679c\u4e5f\u662f Series \u5bf9\u8c61\uff0c\u4ee5 DataFrame \u7684\u5217\u6807\u7b7e\u4f5c\u4e3a\u7d22\u5f15\u3002 \u8bfb\u8005\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u65f6\u7531\u4e8e\u6bcf\u4e00\u884c\u662f\u4e00\u4e2a Series \u5bf9\u8c61\uff0c\u4e4b\u524d DataFrame \u6bcf\u5217 \u7684\u6570\u636e\u7c7b\u578b\u4f1a\u81ea\u52a8\u5f3a\u5236\u8f6c\u6362\uff0c\u56e0\u6b64\u5f53\u524d\u6bcf\u4e00\u4e2a Series \u90fd\u662f\u5b57\u7b26\u5bf9\u8c61 object\u3002 \u6211\u4eec\u6700\u540e\u770b\u770b\u7b2c\u4e09\u4e2a\u65b9\u6cd5 itertuples()\uff1a In [89]: for key, value in df.itertuples(): ...: print(key, value) ...: --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-89-6b42ad46ae68> in <module> ----> 1 for key, value in df.itertuples(): 2 print(key, value) 3 ValueError: too many values to unpack (expected 2) In [90]: for value in df.itertuples(): ...: print(value) ...: Pandas(Index=0, \u59d3\u540d='\u5c0f\u660e', \u8bed\u6587=80, \u6570\u5b66=99) Pandas(Index=1, \u59d3\u540d='\u5c0f\u738b', \u8bed\u6587=85, \u6570\u5b66=88) Pandas(Index=2, \u59d3\u540d='\u5c0f\u5f20', \u8bed\u6587=90, \u6570\u5b66=86) In [91]: for value in df.itertuples(): ...: print(type(value)) ...: <class 'pandas.core.frame.Pandas'> <class 'pandas.core.frame.Pandas'> <class 'pandas.core.frame.Pandas'> \u5f53\u6211\u4eec\u4f7f\u7528\u4e0e\u524d\u4e24\u4e2a\u65b9\u6cd5\u7c7b\u4f3c\u7684\u64cd\u4f5c\u65f6\uff0c\u7a0b\u5e8f\u62a5\u9519\u4e86\uff0c\u539f\u56e0\u662f\u8be5\u65b9\u6cd5\u751f\u6210\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20 \u90fd\u662f\u4e00\u4e2a\u7c7b\u540d\u4e3a Pandas \u7684\u72ec\u7acb\u5143\u7ec4\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 tuple() \u5c06\u5176\u8f6c\u6362\u4e3a Python \u5185\u7f6e \u7684\u5143\u7ec4\u5bf9\u8c61\u3002 In [92]: for value in df.itertuples(): ...: print(tuple(value)) ...: (0, '\u5c0f\u660e', 80, 99) (1, '\u5c0f\u738b', 85, 88) (2, '\u5c0f\u5f20', 90, 86)","title":"12.2.1 \u8fed\u4ee3"},{"location":"12-advanced-pandas/#1222","text":"\u9488\u5bf9 DataFrame \u5bf9\u8c61\u4e00\u822c\u6709 3 \u4e2a\u4e0d\u540c\u5c42\u9762\u7684\u64cd\u4f5c\uff1a\u4e00\u662f\u6574\u4e2a DataFrame\uff0c \u4e8c\u662f\u6309\u884c\u6216\u6309\u5217\uff0c\u4e09\u662f\u6bcf\u4e00\u4e2a\u5143\u7d20\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u5c06\u5305/\u5e93\u63d0\u4f9b\u7684\u51fd\u6570 \u5e94\u7528\u5230 DataFrame \u4e0a\uff0c\u6709\u4e09\u4e2a\u76f8\u5e94\u7684\u91cd\u8981\u65b9\u6cd5\uff0c\u5b83\u4eec\u5206\u522b\u662f pipe()\u3001apply() \u548c applymap()\u3002 Series \u5bf9\u8c61\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff0c\u4e0d\u8fc7\u6b64\u5904\u5185\u5bb9\u805a\u7126\u4e8e DataFrame \u5bf9\u8c61\u7684\u64cd\u4f5c\u3002","title":"12.2.2 \u51fd\u6570\u5e94\u7528"},{"location":"12-advanced-pandas/#1223","text":"\u9664\u4e86\u6570\u503c\u8ba1\u7b97\uff0c\u6570\u636e\u5206\u6790\u5e38\u5e38\u4e5f\u5904\u7406\u6587\u672c\u6570\u636e\uff0c\u5b57\u7b26\u4e32\u51fd\u6570\u5728\u5176\u4e2d\u4f5c\u7528\u91cd\u5927\u3002 Pandas \u5e93\u4e3a\u6587\u672c\u6570\u636e\u63d0\u4f9b\u4e86\u5b57\u7b26\u5c5e\u6027\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u5229\u7528 Python \u5185\u7f6e\u5b57\u7b26\u4e32\u51fd\u6570 \u540c\u540d\u65b9\u6cd5\u8fdb\u884c\u64cd\u4f5c\u3002 \u672c\u5c0f\u8282\u5c06\u5bf9\u5e38\u89c1\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c\u51fd\u6570\u8fdb\u884c\u4e3e\u4f8b\uff0c\u6700\u540e\u8fdb\u884c\u8868\u683c\u6c47\u603b\u3002 \u6211\u4eec\u5148\u6784\u5efa\u4e00\u4e2a\u6837\u4f8b\u6570\u636e\u3002 In [127]: sample_data = pd.Series(['Mike', 'Shixiang', np.nan, '012345', 'HAPPY', 'hurry']) In [128]: sample_data Out[128]: 0 Mike 1 Shixiang 2 NaN 3 012345 4 HAPPY 5 hurry dtype: object \u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5\u524d\u9700\u8981\u8bbf\u95ee str \u5c5e\u6027\u3002","title":"12.2.3 \u5b57\u7b26\u4e32\u51fd\u6570"},{"location":"12-advanced-pandas/#1224","text":"\u5206\u7ec4\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e00\u79cd\u975e\u5e38\u5f3a\u5927\u7684\u6c47\u603b\u6280\u672f\uff0c\u5b83\u7684\u6838\u5fc3\u53ef\u4ee5\u5206\u4e3a 3 \u4e2a\u6b65\u9aa4\uff1a \u62c6\u5206\u3001\u5e94\u7528\u548c\u5408\u5e76\u3002 \u524d\u9762\u7684 apply() \u51fd\u6570\u53ef\u4ee5\u8ba9\u6211\u4eec\u5bf9\u67d0\u5217\u6216\u884c\u8fdb\u884c\u6570\u503c\u8ba1\u7b97\uff0c\u5728\u771f\u5b9e\u7684\u4e16\u754c\u4e2d\uff0c \u6211\u4eec\u53ef\u80fd\u9700\u8981\u6839\u636e\u8868\u683c\u7684\u67d0\u4e00\u5217\u5206\u7ec4\uff0c\u7136\u540e\u5206\u522b\u8ba1\u7b97\u6bcf\u4e2a\u7ec4\u522b\u4e2d\u5176\u4ed6\u5217\u7684\u6c47\u603b\u503c\uff0c\u5982\u548c\uff0c\u5747\u503c\u3002 Pandas \u63d0\u4f9b\u4e86 groupby() \u65b9\u6cd5\u5b8c\u6210\u4e0a\u9762\u7684\u9700\u6c42\u3002 \u6211\u4eec\u770b\u4e00\u4e2a\u6765\u81ea Pandas \u5b98\u65b9\u6587\u6863\u7684\u793a\u4f8b\uff0c\u8ba1\u7b97\u4e0d\u540c\u52a8\u7269\u6700\u5927\u901f\u5ea6\u7684\u5747\u503c\u3002 df = pd.DataFrame({'Animal': ['Falcon', 'Falcon', 'Parrot', 'Parrot'], 'Max Speed': [380., 370., 24., 26.]}) In [136]: df Out[136]: Animal Max Speed 0 Falcon 380.0 1 Falcon 370.0 2 Parrot 24.0 3 Parrot 26.0 In [137]: df.groupby(['Animal']).mean() Out[137]: Max Speed Animal Falcon 375.0 Parrot 25.0 \u867d\u7136\u6570\u636e\u5f88\u7b80\u5355\uff0c\u4f46\u5b83\u8db3\u4ee5\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u5b83\u7684\u64cd\u4f5c\u65b9\u6cd5\uff0c\u5176\u6838\u5fc3\u6b65\u9aa4\u63cf\u8ff0\u5982\u4e0b\uff1a \u62c6\u5206 - \u5c06 DataFrame \u6309\u7167 Animal \u5206\u4e3a\u4e24\u4e2a\u5b50 DataFrame\uff1b \u5e94\u7528 - \u5bf9\u4e24\u4e2a\u5b50 DataFrame \u7684\u901f\u5ea6\u5217\u8fdb\u884c\u5747\u503c\u51fd\u6570\u8ba1\u7b97\u5f97\u5230\u6c47\u603b\u503c\uff1b \u5408\u5e76 - \u5c06\u5206\u7ec4\u8ba1\u7b97\u7684\u7ed3\u679c\u5408\u5e76\u8d77\u6765\u3002","title":"12.2.4 \u5206\u7ec4\u8ba1\u7b97"},{"location":"12-advanced-pandas/#123","text":"\u4f5c\u4e3a\u4e00\u540d\u6570\u636e\u5de5\u4f5c\u8005\uff0c\u6211\u4eec 80% \u7684\u65f6\u95f4\u4e0d\u662f\u82b1\u5728\u6570\u636e\u7684\u8f6c\u6362\u548c\u8ba1\u7b97\u4e0a\uff0c\u800c\u662f\u82b1\u5728\u6570\u636e\u6e05\u6d17\u4e0a\u3002 \u7531\u4e8e\u539f\u59cb\u6570\u636e\u7684\u6765\u6e90\u4e0d\u4e00\u81f4\u3001\u6570\u636e\u8bb0\u5f55\u7684\u4eba\u529b\u7269\u529b\u6295\u5165\u4e0d\u5e73\u8861\u3001\u6570\u636e\u5b58\u50a8\u683c\u5f0f\u7684\u8bbe\u8ba1\u4e0d\u76f8\u540c\u7b49\u7b49 \u5404\u79cd\u539f\u56e0\uff0c\u6570\u636e\u7684\u7f3a\u5931\u3001\u4e0d\u89c4\u6574\u662f\u73b0\u5b9e\u751f\u6d3b\u4e2d\u4e0d\u53ef\u907f\u514d\u95ee\u9898\u3002\u7279\u522b\u662f\u5728\u5f53\u524d\u6d41\u884c\u7684\u673a\u5668\u5b66\u4e60 \u548c\u6570\u636e\u6316\u6398\u7b49\u9886\u57df\uff0c\u8d28\u91cf\u5c42\u6b21\u4e0d\u9f50\u7684\u6570\u636e\u5bfc\u81f4\u6a21\u578b\u9884\u6d4b\u9762\u4e34\u4e25\u91cd\u7684\u51c6\u786e\u6027\u548c\u53ef\u62d3\u5c55\u6027\u95ee\u9898\u3002","title":"12.3 \u6570\u636e\u6e05\u6d17"},{"location":"12-advanced-pandas/#1231","text":"\u5f53\u6570\u636e\u8bb0\u5f55\u7f3a\u5931\u65f6\uff0c\u4e00\u822c\u7528 NA\uff08Not Available\uff09\u503c\u4ee3\u8868\uff0cNA \u503c\u5904\u7406\u65f6\u6570\u636e\u6e05\u6d17\u7684\u91cd\u70b9\u3002 \u7531\u8ba1\u7b97\u5f15\u5165\u7684 NaN\uff08Not A Number\uff09\u4e5f\u53ef\u4ee5\u5f52\u5165\u7f3a\u5931\u503c\u3002 \u6211\u4eec\u5148\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u7f3a\u5931\u503c\u6570\u636e\u3002 In [138]: df = pd.DataFrame(np.random.randn(4, 4), index = ['user1', 'user2', 'user3', 'user4'], columns=['c ...: ol1', 'col2', 'col3', 'col4']) In [139]: df Out[139]: col1 col2 col3 col4 user1 0.368869 1.021476 -0.771651 -1.908077 user2 0.023887 0.799769 -0.230265 -0.800586 user3 -0.139025 -0.032772 1.078525 -1.453405 user4 -1.042709 1.022162 -0.686548 -1.497647 In [141]: df = df.reindex(['user0', 'user1', 'user2', 'user3', 'user4', 'user5']) In [142]: df Out[142]: col1 col2 col3 col4 user0 NaN NaN NaN NaN user1 0.368869 1.021476 -0.771651 -1.908077 user2 0.023887 0.799769 -0.230265 -0.800586 user3 -0.139025 -0.032772 1.078525 -1.453405 user4 -1.042709 1.022162 -0.686548 -1.497647 user5 NaN NaN NaN NaN","title":"12.3.1 \u7f3a\u5931\u503c\u503c\u5904\u7406"},{"location":"12-advanced-pandas/#1232","text":"\u6700\u540e\u7528\u4e8e\u6c47\u62a5\u6216\u8005\u7ed8\u56fe\u7684\u6570\u636e\u53ef\u80fd\u6765\u81ea\u591a\u4e2a\u6570\u636e\u8868\u683c\uff0c\u6211\u4eec\u6709\u65f6\u9700\u8981\u5c06\u5b83\u4eec\u5408\u5e76\u5230\u4e00\u8d77\uff0c \u79f0\u4e3a\u8fde\u63a5\u3002Pandas \u5e93\u63d0\u4f9b\u4e86 merge() \u51fd\u6570\u7528\u4e8e DataFrame \u7684\u8fde\u63a5\u3002 \u8fde\u63a5\u64cd\u4f5c\u4e00\u822c\u662f\u6839\u636e\u952e\u8fdb\u884c\u7684\uff0c\u952e\u662f\u4e24\u4e2a\u6570\u636e\u8868\u683c\u5171\u6709\u7684\u5217\u3002\u6309\u952e\u8fde\u63a5\u6839\u636e\u952e\u7684\u591a\u5c11 \u53ef\u4ee5\u5206\u4e3a\u5355\u952e\u8fde\u63a5\u548c\u591a\u952e\u8fde\u63a5\u3002\u8fde\u63a5\u64cd\u4f5c\u4e0e SQL \u64cd\u4f5c\u6781\u4e3a\u76f8\u4f3c\u3002 \u65e0\u8bba\u591a\u5c11\u4e2a\u952e\u7684\u8fde\u63a5\u3001\u4e0d\u540c\u7c7b\u578b\u7684\u8fde\u63a5\u90fd\u662f\u4f7f\u7528 merge() \u51fd\u6570\uff0c\u53ea\u662f\u53c2\u6570\u8bbe\u5b9a\u4e0d\u540c\u3002 merge() \u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u663e\u793a\u5982\u4e0b\uff1a pd.merge( left, right, how='inner', on=None, left_on=None, right_on=None, left_index=False, right_index=False, sort=False, suffixes=('_x', '_y'), copy=True, indicator=False, validate=None, ) \u6211\u4eec\u63a5\u7740\u6784\u5efa\u7528\u4e8e\u8fde\u63a5\u7684\u4e24\u4e2a\u6570\u636e\u6846\uff0c\u4e00\u4e2a DataFrame \u5b58\u50a8\u6545\u4e8b\u7684 id \u7684\u540d\u5b57\uff0c \u4e00\u4e2a DataFrame \u5b58\u50a8\u6545\u4e8b\u6240\u5c5e\u7684 subject \u548c\u6545\u4e8b\u8bc4\u5206\u3002 In [155]: stories = pd.DataFrame({'story_id':[1,2,3], 'title':['lions', 'tigers', 'bears']}) In [156]: data = pd.DataFrame({'subject':[1,2,1,2], 'story_id':[1,2,5,6], 'rating':[6.7, 7.8, 3.2, 9.0]}) In [157]: stories Out[157]: story_id title 0 1 lions 1 2 tigers 2 3 bears In [158]: data Out[158]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 \u63a5\u4e0b\u6765\u6839\u636e\u4e0d\u540c\u7684\u9700\u6c42\u5206\u522b\u4ecb\u7ecd\u8fde\u63a5\u64cd\u4f5c\u3002","title":"12.3.2 \u8fde\u63a5"},{"location":"12-advanced-pandas/#1233","text":"\u9664\u4e86\u901a\u8fc7\u952e\u5c06 DataFrame \u4ee5\u5217\u7684\u5f62\u5f0f\u8fde\u63a5\u5230\u4e00\u8d77\uff0c\u8fd8\u6709\u7ea7\u8054\u7684\u65b9\u5f0f\u53ef\u4ee5\u5408\u5e76 DataFrame\u3002 \u7ea7\u8054\u64cd\u4f5c\u4f7f\u7528 concat() \u51fd\u6570\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u5c06\u591a\u4e2a DataFrame \u6309\u884c\uff08\u9ed8\u8ba4\uff09\u6216\u6309\u5217\u7ec4\u5408\u3002 In [171]: data = pd.DataFrame({'subject':[1,2,1,2], 'story_id':[1,2,5,6], 'rating':[6.7, 7.8, 3.2, 9.0]}) In [172]: data2 = pd.DataFrame({'subject':[1,2], 'story_id':[3, 4], 'rating':[5, 9.7]}) In [173]: data Out[173]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 In [174]: data2 Out[174]: subject story_id rating 0 1 3 5.0 1 2 4 9.7 \u4e0a\u8ff0\u4ee3\u7801\u751f\u6210\u4e86\u4e24\u4e2a\u5217\u540d\u4e00\u81f4\u7684 DataFrame\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5b83\u4eec\u6309\u884c\u7ec4\u5408\u8d77\u6765\u3002 In [175]: pd.concat([data, data2]) Out[175]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 0 1 3 5.0 1 2 4 9.7 \u600e\u4e48\u6837\uff0c\u7b80\u5355\u5427\uff1f \u6709\u65f6\u6211\u4eec\u53ef\u80fd\u60f3\u8981\u6807\u5b9a\u884c\u7684\u6570\u636e\u6765\u6e90\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u7528\u952e\u5b9e\u73b0\u3002 In [176]: pd.concat([data, data2], keys=['data', 'data2']) Out[176]: subject story_id rating data 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 data2 0 1 3 5.0 1 2 4 9.7 \u4ed4\u7ec6\u89c2\u5bdf\u8bfb\u8005\u4e0d\u96be\u53d1\u73b0 index \u4e2d\u7684 0 \u548c 1 \u91cd\u590d\u4e86\uff0c\u6307\u5b9a ignore_index \u9009\u9879 \u53ef\u4ee5\u53d8\u6210\u8fde\u7eed\u7684 index\u3002\u4e0d\u8fc7\u6b64\u64cd\u4f5c\u540e keys \u7684\u8bbe\u5b9a\u5c06\u4e0d\u8d77\u4f5c\u7528\u4e86\u3002 In [177]: pd.concat([data, data2], keys=['data', 'data2'], ignore_index=True) Out[177]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 4 1 3 5.0 5 2 4 9.7 In [178]: pd.concat([data, data2], ignore_index=True) Out[178]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 4 1 3 5.0 5 2 4 9.7 \u6211\u4eec\u518d\u8bd5\u8bd5\u6309\u5217\u5408\u5e76\uff1a In [180]: pd.concat([data, data2], axis=1) Out[180]: subject story_id rating subject story_id rating 0 1 1 6.7 1.0 3.0 5.0 1 2 2 7.8 2.0 4.0 9.7 2 1 5 3.2 NaN NaN NaN 3 2 6 9.0 NaN NaN NaN \u7f3a\u5c11\u7684\u884c\u4f1a\u4f7f\u7528 NaN \u81ea\u52a8\u586b\u5145\u3002\u6307\u5b9a ignore_index \u540e\uff0c\u6240\u6709\u5217\u7d22\u5f15\u5c06\u91cd\u65b0\u751f\u6210\u3002 In [181]: pd.concat([data, data2], ignore_index=True, axis=1) Out[181]: 0 1 2 3 4 5 0 1 1 6.7 1.0 3.0 5.0 1 2 2 7.8 2.0 4.0 9.7 2 1 5 3.2 NaN NaN NaN 3 2 6 9.0 NaN NaN NaN \u9664\u4e86 concat() \u51fd\u6570\uff0cappend() \u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7528\u4e8e\u884c\u7684\u5408\u5e76\u3002 In [182]: data.append(data2) Out[182]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 0 1 3 5.0 1 2 4 9.7 \u4e0d\u8fc7\u5b83\u7684\u6700\u5927\u7528\u5904\u5728\u4e8e\u6dfb\u52a0\u65b0\u7684\u884c\uff0c\u5982\u7ed9 DataFrame \u6dfb\u52a0 Series \u5bf9\u8c61\u3002 In [185]: data.append(pd.Series({'subject':1, 'story_id':10, 'rating':7}, name=6)) Out[185]: subject story_id rating 0 1 1 6.7 1 2 2 7.8 2 1 5 3.2 3 2 6 9.0 6 1 10 7.0","title":"12.3.3 \u7ea7\u8054"},{"location":"12-advanced-pandas/#124-pandas","text":"Pandas \u4e3a Series \u548c DataFrame \u5bf9\u8c61\u63d0\u4f9b\u4e86 Matplotlib \u5e93 plot() \u51fd\u6570\u7684\u7b80\u5355\u5305\u88c5\u5b9e\u73b0\uff0c \u672c\u8282\u8fdb\u884c\u7b80\u5355\u7684\u4ecb\u7ecd\u3002 \u6211\u4eec\u5148\u5bfc\u5165\u793a\u4f8b\u6570\u636e\u96c6 mtcars\uff0c\u5b83\u662f\u7f8e\u56fd Motor Trend \u6536\u96c6 \u7684 1973 \u5230 1974 \u5e74\u671f\u95f4\u603b\u5171 32 \u8f86\u6c7d\u8f66\u7684 11 \u4e2a\u6307\u6807\uff0c \u5305\u542b\u6cb9\u8017\u3001\u8bbe\u8ba1\u3001\u6027\u80fd\u7b49\u65b9\u9762\u3002 In [187]: mtcars = pd.read_csv('files/chapter10/mtcars.csv') In [188]: mtcars.describe() Out[188]: mpg cyl disp ... am gear carb count 32.000000 32.000000 32.000000 ... 32.000000 32.000000 32.0000 mean 20.090625 6.187500 230.721875 ... 0.406250 3.687500 2.8125 std 6.026948 1.785922 123.938694 ... 0.498991 0.737804 1.6152 min 10.400000 4.000000 71.100000 ... 0.000000 3.000000 1.0000 25% 15.425000 4.000000 120.825000 ... 0.000000 3.000000 2.0000 50% 19.200000 6.000000 196.300000 ... 0.000000 4.000000 2.0000 75% 22.800000 8.000000 326.000000 ... 1.000000 4.000000 4.0000 max 33.900000 8.000000 472.000000 ... 1.000000 5.000000 8.0000 [8 rows x 11 columns] In [189]: mtcars.shape Out[189]: (32, 11) mtcars \u6240\u6709\u5217\u4e2d mpg \u662f\u6bcf\u767e\u516c\u91cc\u6cb9\u8017\uff0ccyl \u662f\u53d1\u52a8\u673a\u6c7d\u7f38\u6570\u3002\u4e0b\u9762\u6211\u4eec\u5c31\u4f7f\u7528\u8fd9\u4e24\u5217\u8fdb\u884c\u53ef\u89c6\u5316\u5206\u6790\u3002 In [193]: df = mtcars.loc[:, ['cyl', 'mpg']] In [194]: df.head() Out[194]: cyl mpg 0 6 21.0 1 6 21.0 2 4 22.8 3 6 21.4 4 8 18.7 In [195]: %matplotlib inline In [196]: df.plot() \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cplot() \u65b9\u6cd5\u4f7f\u7528\u7ebf\u56fe\u5f62\u5f0f\u8fdb\u884c\u7ed8\u5236\u3002\u5982\u679c\u60f3\u8981\u7ed8\u5236\u5176\u4ed6\u7684\u56fe\u5f62\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570 kind \u8fdb\u884c\u6307\u5b9a\u3002 bar - \u6761\u5f62\u56fe barh - \u6a2a\u6761\u5f62\u56fe hist - \u76f4\u65b9\u56fe box - \u7bb1\u7ebf\u56fe area - \u9762\u79ef\u56fe scatter \u6563\u70b9\u56fe","title":"12.4 Pandas \u53ef\u89c6\u5316"},{"location":"12-advanced-pandas/#1241","text":"\u6761\u5f62\u56fe\u5229\u7528\u6761\u5f62\u7684\u9ad8\u5ea6\u6765\u8868\u793a\u6570\u503c\uff0c\u6b64\u5904\u6211\u4eec\u6709 32 \u8f86\u6c7d\u8f66\u7684\u6570\u636e\uff0c\u6240\u4ee5\u4f1a\u6709 32 \u7ec4\u6761\u5f62\u3002 df.plot(kind='bar') \u4f7f\u7528 barh \u6765\u8c03\u6362 x \u548c y \u8f74\u3002 df.plot(kind='barh') \u6211\u4eec\u53ef\u80fd\u60f3\u5c06\u56fe\u5f62\u5806\u53e0\u8d77\u6765\uff0c\u53ef\u4ee5\u6307\u5b9a stacked \u4e3a True\u3002 df.plot(kind='bar', stacked=True) \u56fe\u4e2d x \u8f74\u663e\u793a\u7684\u662f\u6570\u503c\uff0c\u6ca1\u6709\u7279\u522b\u7684\u542b\u4e49\uff0c\u6211\u4eec\u7ed9\u6570\u636e\u52a0\u4e0a\u6807\u7b7e\uff0c\u8ba9\u5b83\u663e\u793a\u51fa\u6765\u3002 df2 = df.copy() df2.index = ['car '+str(i) for i in np.arange(32) + 1] df2.plot(kind='bar', stacked=True)","title":"12.4.1 \u6761\u5f62\u56fe"},{"location":"12-advanced-pandas/#1242","text":"\u76f4\u65b9\u56fe\u53ef\u4ee5\u6bd4\u8f83\u76f4\u89c2\u5c55\u793a\u6570\u636e\u5206\u5e03\uff0c\u662f\u521d\u6b65\u4e86\u89e3\u6570\u636e\u7684\u6700\u597d\u65b9\u5f0f\u4e4b\u4e00\u3002 df.plot(kind='hist') \u901a\u8fc7\u6307\u5b9a bins \u9009\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539 bin \u7684\u5bbd\u5ea6\u3002 df.plot(kind='hist', bins=20) \u4e0a\u9762\u5c06\u4e24\u4e2a\u53d8\u91cf\u7684\u5206\u5e03\u7ed8\u5236\u5728\u4e86\u4e00\u4e2a\u56fe\u4e2d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 hist() \u65b9\u6cd5\u4e3a\u6bcf\u4e00\u4e2a\u53d8\u91cf\u5355\u72ec\u7ed8\u5236\u76f4\u65b9\u56fe\u3002 df.hist(bins=20)","title":"12.4.2 \u76f4\u65b9\u56fe"},{"location":"12-advanced-pandas/#1243","text":"\u4e0a\u9762\u7684\u76f4\u65b9\u56fe\u663e\u793a\u4e86\u6c14\u7f38\u6570\u662f 3 \u4e2a\u79bb\u6563\u503c 4\u30016\u30018\u3002\u6211\u4eec\u53ef\u80fd\u66f4\u52a0\u60f3\u8981\u6bd4\u8f83\u4e0d\u540c\u7ec4\u522b\u4e4b\u95f4\u6cb9\u8017\u7684\u5dee\u5f02\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7bb1\u7ebf\u56fe\u662f\u5f88\u597d\u7684\u5c55\u793a\u65b9\u5f0f\u3002 \u4e0d\u8fc7 plot() \u65b9\u6cd5\u7ed8\u5236\u7bb1\u7ebf\u56fe\u65f6\u9ed8\u8ba4\u662f\u4e3a\u6bcf\u5217\u5355\u72ec\u7ed8\u5236\uff0c\u65e0\u6cd5\u8fdb\u884c\u5206\u7ec4\u3002 df.plot(kind='box') \u4e3a\u4e86\u5c06\u6cb9\u8017\u6309\u7167\u6c14\u7f38\u6570\u5206\u7ec4\u540e\u7ed8\u5236\u7bb1\u7ebf\u56fe\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 boxplot() \u65b9\u6cd5\uff0c\u5b83\u652f\u6301\u66f4\u591a\u7684\u7ed8\u56fe\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u901a\u8fc7 by \u53c2\u6570\u6307\u5b9a\u8fdb\u884c\u5206\u7ec4\u7684\u5217\u540d\u3002 # \u4e3a\u4e86\u4f18\u5316\u663e\u793a\u6548\u679c\uff0c\u6211\u4eec\u8fdb\u884c\u4e86 3 \u9879\u81ea\u5b9a\u4e49\uff1a # \u53bb\u6389\u7f51\u683c\u7ebf # \u65cb\u8f6c x \u8f74\u6807\u7b7e # \u589e\u5927\u5b57\u4f53 df.boxplot(by='cyl', grid=False, rot=45, fontsize=15)","title":"12.4.3 \u7bb1\u7ebf\u56fe"},{"location":"12-advanced-pandas/#1244","text":"\u9762\u79ef\u56fe\u7684\u6548\u679c\u6709\u70b9\u7c7b\u4f3c\u5806\u53e0\u6761\u5f62\u56fe\uff0c\u524d\u8005\u66f4\u9002\u7528\u4e8e\u8fde\u7eed\u53d8\u91cf\uff0c\u540e\u8005\u66f4\u9002\u7528\u4e8e\u79bb\u6563\u53d8\u91cf\u3002 df.plot(kind='area')","title":"12.4.4 \u9762\u79ef\u56fe"},{"location":"12-advanced-pandas/#1245","text":"\u6563\u70b9\u56fe\u53ef\u4ee5\u66f4\u52a0\u76f4\u89c2\u5730\u89c2\u6d4b\u5355\u4e2a\u6570\u636e\u70b9\u7684\u60c5\u51b5\u3002\u8fd9\u91cc\u53d8\u91cf cyl \u662f\u79bb\u6563\u503c\uff0c\u6240\u4ee5\u4e0b\u9762\u7ed8\u5236\u7684\u56fe\u5f62\u53ef\u80fd\u770b\u8d77\u6765\u6709\u70b9\u5947\u602a\u3002\u4e0d\u8fc7\uff0c\u6709\u65f6\u5019\u8fd9\u79cd\u8868\u73b0\u5f62\u5f0f\u53ef\u80fd\u5e26\u6765\u610f\u60f3\u4e0d\u5230\u7684\u6548\u679c\u3002 df.plot(kind='scatter', x='cyl', y='mpg')","title":"12.4.5 \u6563\u70b9\u56fe"},{"location":"12-advanced-pandas/#1246","text":"\u997c\u56fe\u53ef\u4ee5\u663e\u793a\u6570\u636e\u7684\u5360\u6bd4\u60c5\u51b5\uff0c\u4e00\u822c\u662f\u4f7f\u7528\u4e00\u5217\u7684\u6570\u636e\uff0c\u5373\u4e00\u4e2a Series \u5bf9\u8c61\u3002\u4e0b\u9762\u4ee3\u7801\u63d0\u53d6\u4e86 cyl \u53d8\u91cf\u5e76\u8fdb\u884c\u4e86\u53ef\u89c6\u5316\u3002 df.cyl.plot(kind='pie') \u5f53\u9700\u8981\u53ef\u89c6\u5316\u591a\u5217\uff0c\u5373\u4e00\u4e2a DataFrame \u5bf9\u8c61\u65f6\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a subplots \u4e3a True\u3002 \u4e0b\u9762\u4ee3\u7801\u63d0\u53d6\u4e86 df \u524d 5 \u884c\u7684\u6570\u636e\u7528\u4e8e\u53ef\u89c6\u5316\u3002 df.head(5).plot(kind='pie', subplots=True)","title":"12.4.6 \u997c\u56fe"},{"location":"12-advanced-pandas/#125","text":"Pandas \u5e93\u4f5c\u4e3a Python \u8fdb\u884c\u6570\u636e\u5206\u6790\u7684\u7075\u9b42\u5de5\u5177\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u6570\u636e\u7c7b\u578b\u3001\u7ed3\u6784\u3001\u51fd\u6570\u3001\u65b9\u6cd5 \u548c\u53ef\u89c6\u5316\u7279\u6027\u3002\u672c\u7ae0\u9996\u5148\u5728\u7b2c 8 \u7ae0\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u603b\u7ed3\u56de\u987e\uff0c\u5e76\u5bf9\u5176\u4ed6\u4e00\u4e9b\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u4e86\u62d3\u5c55\u3002 \u7136\u540e\u672c\u7ae0\u5bf9\u51fd\u6570\u5e94\u7528\u548c DataFrame \u7684\u8fed\u4ee3\u8ba1\u7b97\u8fdb\u884c\u4e86\u6bd4\u8f83\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u5305\u62ec\u6309\u884c\u548c\u6309\u5217\u7b49\u4e0d\u540c\u7684 \u65b9\u5f0f\u3002\u5206\u7ec4\u8ba1\u7b97\u662f\u975e\u5e38\u597d\u7684\u6280\u672f\uff0c\u63a8\u8350\u8bfb\u8005\u591a\u591a\u7ec3\u4e60\u548c\u4f7f\u7528\u3002\u540e\u9762\u4ecb\u7ecd\u7684\u7f3a\u5931\u503c\u5185\u5bb9\u8bfb\u8005\u6309\u7167\u81ea\u5df1\u7684 \u9700\u6c42\u8fdb\u884c\u638c\u63e1\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u901a\u8fc7 dropna() \u53bb\u6389\u7f3a\u5931\u503c\u6570\u636e\u5373\u53ef\u3002DataFrame \u7684\u8fde\u63a5\u548c\u7ea7\u8054\u5408\u5e76\u662f \u975e\u5e38\u6838\u5fc3\u7684\u77e5\u8bc6\uff0c\u5b83\u4e0e\u6570\u636e\u5e93\u64cd\u4f5c\u975e\u5e38\u7c7b\u4f3c\uff0c\u638c\u63e1\u5b83\u4eec\u4f1a\u5e2e\u52a9\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3\u548c\u64cd\u4f5c\u6570\u636e\u3002\u53ef\u89c6\u5316 \u662f\u67e5\u770b\u6570\u636e\u5206\u5e03\u3001\u8fdb\u884c\u6bd4\u8f83\u7684\u7edd\u4f73\u65b9\u6848\uff0cPandas \u5e93\u57fa\u4e8e Matplotlib \u5e93\u5c01\u88c5\u7684\u7ed8\u56fe\u51fd\u6570\u7b80\u5355\u6613\u7528\u3002 \u867d\u7136\u672c\u4e66\u4f7f\u7528\u4e86\u4e24\u4e2a\u7ae0\u8282\u7684\u5185\u5bb9\u4ecb\u7ecd Pandas \u5e93\uff0c\u4f46\u4ecd\u6709\u8bb8\u591a\u672a\u80fd\u6db5\u76d6\u7684\u77e5\u8bc6\u70b9\uff0c\u8bfb\u8005\u4e0d\u59a8\u53c2\u9605 Pandas \u6587\u6863\u548c\u76f8\u5173\u6280\u672f\u4e66\u7c4d\u8fdb\u884c\u8fdb\u4e00\u6b65\u5b66\u4e60\u3002","title":"12.5 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"13-advanced-vis/","text":"\u7b2c 13 \u7ae0 \u6570\u636e\u53ef\u89c6\u5316\u8fdb\u9636 \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : Seaborn Plotnine Bokeh \u524d\u9762\u7ae0\u8282\u4e2d\u6211\u4eec\u4f7f\u7528\u7684\u7ed8\u56fe\u65b9\u6cd5\u90fd\u6765\u81ea\u4e8e Matplotlib \u5e93\uff0c\u5b83\u662f Python \u53ef\u89c6\u5316\u7684\u57fa\u7840\u3002\u968f\u7740\u8fd1\u5e74\u6765\u6570\u636e\u5206\u6790\u7684\u6d41\u884c\uff0cPython \u793e\u533a\u51fa\u73b0\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u53ef\u89c6\u5316\u5e93\uff0c\u5305\u62ec\u57fa\u4e8e Matplotlib \u5e93\u7684 Seaborn \u548c\u652f\u6301\u4ea4\u4e92\u5f0f\u5c55\u793a\u7684 Bokeh\u3002\u5b83\u4eec\u63d0\u4f9b\u4e86\u66f4\u6613\u7528\u3001\u66f4\u7f8e\u89c2\u3001\u4ea4\u4e92\u6027\u66f4\u5f3a\u7684\u53ef\u89c6\u5316\u65b9\u5f0f\u3002\u672c\u7ae0\u5c06\u5bf9\u76ee\u524d\u6d41\u884c\u7684 Python \u9ad8\u7ea7\u53ef\u89c6\u5316\u5e93\u8fdb\u884c\u4ecb\u7ecd\uff0c\u5e76\u901a\u8fc7\u4e00\u4e9b\u4f8b\u5b50\u5c55\u793a\u5b83\u4eec\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u53ef\u89c6\u5316\u6548\u679c\u3002 13.1 Seaborn \u00b6 Seaborn \u5728 Matplotlib \u5e93\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u66f4\u9ad8\u7ea7\u7684\u5c01\u88c5\uff0c\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7ea7\u522b\u7684\u63a5\u53e3\u7528\u4e8e\u7ed8\u5236\u4f18\u96c5\u7f8e\u89c2\u3001\u5177\u6709\u5438\u5f15\u529b\u7684\u7edf\u8ba1\u56fe\u5f62\u3002 \u8bfb\u8005\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\u5b89\u88c5 Seaborn \u5e93\uff1a # \u5b89\u88c5\u65b9\u6cd5 1 conda install seaborn # \u5b89\u88c5\u65b9\u6cd5 2 pip install seaborn Seaborn \u7684\u9ed8\u8ba4\u522b\u540d\u662f sns\uff0c\u6240\u4ee5\u5bfc\u5165\u65f6\u4e00\u822c\u91c7\u7528\u4ee5\u4e0b\u7684\u7ea6\u5b9a\uff1a import seaborn as sns \u6211\u4eec\u63a5\u4e0b\u6765\u4f9d\u65e7\u4f7f\u7528\u4e4b\u524d\u63d0\u53ca\u7684\u6c7d\u8f66\u7edf\u8ba1\u6570\u636e\u7528\u4e8e\u53ef\u89c6\u5316\u3002 In [1]: import pandas as pd ...: import numpy as np ...: ...: mtcars = pd.read_csv('files/chapter10/mtcars.csv') \u6211\u4eec\u5148\u67e5\u770b\u6574\u4e2a\u6570\u636e\u96c6\u7684\u4fe1\u606f\uff0c\u7ed3\u679c\u663e\u793a\u4e00\u5171\u6709 11 \u4e2a\u53d8\u91cf\uff08\u5217\uff09\uff0c32 \u8f86\u8f66\u7684\u8bb0\u5f55\u3002 In [2]: mtcars.info() <class 'pandas.core.frame.DataFrame'> RangeIndex: 32 entries, 0 to 31 Data columns (total 11 columns): mpg 32 non-null float64 cyl 32 non-null int64 disp 32 non-null float64 hp 32 non-null int64drat 32 non-null float64 wt 32 non-null float64 qsec 32 non-null float64 vs 32 non-null int64 am 32 non-null int64 gear 32 non-null int64 carb 32 non-null int64 dtypes: float64(5), int64(6) memory usage: 2.9 KB \u4e3a\u4e86\u89c2\u5bdf\u53d8\u91cf\u7684\u6570\u503c\u5206\u5e03\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528 describe() \u65b9\u6cd5\u8fdb\u884c\u6570\u636e\u6c47\u603b\u3002 In [3]: mtcars.describe() Out[3]: mpg cyl disp ... am gear carb count 32.000000 32.000000 32.000000 ... 32.000000 32.000000 32.0000 mean 20.090625 6.187500 230.721875 ... 0.406250 3.687500 2.8125 std 6.026948 1.785922 123.938694 ... 0.498991 0.737804 1.6152 min 10.400000 4.000000 71.100000 ... 0.000000 3.000000 1.0000 25% 15.425000 4.000000 120.825000 ... 0.000000 3.000000 2.0000 50% 19.200000 6.000000 196.300000 ... 0.000000 4.000000 2.0000 75% 22.800000 8.000000 326.000000 ... 1.000000 4.000000 4.0000 max 33.900000 8.000000 472.000000 ... 1.000000 5.000000 8.0000 [8 rows x 11 columns] \u76f8\u6bd4\u4e8e\u6c47\u603b\u8868\u683c\uff0c\u56fe\u5f62\u66f4\u52a0\u76f4\u89c2\uff0c\u7279\u522b\u662f\u5728\u89c2\u5bdf\u6570\u636e\u7684\u53d8\u5316\u8d8b\u52bf\u65b9\u9762\u3002\u8fd9\u65f6\u5019\uff0cSeaborn \u5e93\u5c31\u6392\u4e0a\u7528\u573a\u4e86\u3002 13.1.1 \u6210\u5bf9\u56fe \u00b6 \u6211\u4eec\u63a5\u4e0b\u6765\u4f7f\u7528\u6210\u5bf9\u7684\u56fe\u5f62\u6765\u5c55\u793a\u4e24\u4e24\u53d8\u91cf\u4e4b\u95f4\u7684\u53d8\u5316\u8d8b\u52bf\u3002 In [4]: import seaborn as sns In [5]: # \u6ce8\u610f\u5728 Jupyter Notebook \u4e2d\u4f7f\u7528 %matplotlib inline ...: %matplotlib Using matplotlib backend: agg \u4e0a\u56fe\u5bf9\u89d2\u7ebf\u5c55\u793a\u7684\u662f\u5355\u4e2a\u53d8\u91cf\u7684\u6570\u636e\u5206\u5e03\uff0c\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u76f4\u89c2\u5730\u89c2\u6d4b\u5230\u54ea\u4e9b\u53d8\u91cf\u662f\u79bb\u6563\u7684\uff0c\u54ea\u4e9b\u662f\u8fde\u7eed\u7684\uff0c\u8fde\u7eed\u53d8\u91cf\u7684\u5206\u5e03\u8d8b\u52bf\u662f\u600e\u6837\u7684\u3002\u975e\u5bf9\u89d2\u7ebf\u5c55\u793a\u7684\u662f\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u53d8\u5316\u8d8b\u52bf\u3002 \u7b2c 3 \u5230 \u7b2c 7 \u4e2a\u53d8\u91cf\u770b\u8d77\u6765\u5b58\u5728\u7740\u6bd4\u8f83\u660e\u663e\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u6211\u4eec\u5355\u72ec\u5c55\u793a\u5b83\u4eec\u770b\u770b\u3002 In [6]: sns.pairplot(mtcars.iloc[:, 2:7]) \u7279\u522b\u5730\uff0c\u6211\u4eec\u67e5\u770b\u4e0b\u6c7d\u8f66\u91cd\u91cf\u548c\u6bcf\u52a0\u4ed1\u6cb9\u8017\u884c\u9a76\u7684\u82f1\u91cc\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 In [7]: sns.pairplot(mtcars.loc[:, ['wt', 'mpg']]) \u4e0d\u96be\u53d1\u73b0\u6c7d\u8f66\u8d8a\u91cd\uff0c\u8f66\u7a0b\u8d8a\u77ed\u3002\u8fd9\u79cd\u5173\u7cfb\u662f\u5426\u4f1a\u53d7\u5230\u5176\u4ed6\u56e0\u7d20\u7684\u5f71\u54cd\u5462\uff1f\u4f8b\u5982\uff0c\u6c7d\u8f66\u7684\u6c14\u7f38\u6570\u3002\u6211\u4eec\u5c06 cyl \u52a0\u5165\u7ed8\u56fe\u5e76\u6839\u636e\u5b83\u7684\u503c\u8d4b\u4e88\u989c\u8272\uff0c\u751f\u6210\u5e26\u5206\u7c7b\u6807\u7b7e\u7684\u56fe\u3002 In [8]: sns.pairplot(mtcars.loc[:, ['wt', 'mpg', 'cyl']], hue='cyl') \u7b2c 2 \u4e2a\u5b50\u56fe\u7684\u7ed3\u679c\u544a\u8bc9\u6211\u4eec\u4e0a\u8ff0\u7684\u5173\u7cfb\u4e0d\u53d7\u6c14\u7f38\u6570\u7684\u5f71\u54cd\uff0c\u53e6\u5916\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6c14\u7f38\u6570\u8d8a\u591a\u7684\u8f66\u8f86\u91cd\u91cf\u4e5f\u8d8a\u5927\u3002\u8fd9\u4e9b\u7ed3\u679c\u4e0e\u6211\u4eec\u7684\u5e38\u8bc6\u4e00\u81f4\u3002 \u9ed8\u8ba4 Seaborn \u4f7f\u7528\u7684\u662f\u767d\u8272\u7684\uff08\u80cc\u666f\uff09\u98ce\u683c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 set_style() \u51fd\u6570\u8fdb\u884c\u4fee\u6539\u3002 In [9]: sns.set_style('dark') In [10]: sns.pairplot(mtcars.loc[:, ['wt', 'mpg', 'cyl']], hue='cyl') \u53ef\u4ee5\u8bbe\u7f6e\u7684\u9009\u9879\u4e00\u5171\u6709 5 \u79cd\uff1adarkgrid\u3001whitegrid\u3001dark\u3001white \u548c ticks\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 set_palette() \u4fee\u6539\u8c03\u8272\u677f\uff0c\u4f8b\u5982\uff0c\u8ba9\u4e0a\u9762\u56fe\u5f62\u7684\u914d\u8272\u66f4\u9002\u5408\u8272\u76f2\u4eba\u89c2\u770b\u3002 In [11]: sns.set_style('dark') In [12]: sns.set_palette('colorblind') In [13]: sns.pairplot(mtcars.loc[:, ['wt', 'mpg', 'cyl']], ...: hue='cyl') Seaborn \u652f\u6301\u516d\u79cd\u8c03\u8272\u76d8\uff1adeep\u3001muted\u3001pastel\u3001bright\u3001dark \u548c colorblind\u3002 13.1.2 \u5b50\u96c6\u56fe \u00b6 \u4e0a\u9762\u6211\u4eec\u662f\u901a\u8fc7 Pandas \u7684\u6570\u636e\u7b5b\u9009\u64cd\u4f5c\u4ec5\u5c55\u793a\u6211\u4eec\u60f3\u8981\u89c2\u5bdf\u7684\u53d8\u91cf\uff0c\u5b9e\u9645\u4e0a Seaborn \u672c\u8eab\u5c31\u652f\u6301\u5b50\u96c6\u56fe\u7684\u5c55\u793a\uff0c\u53ea\u9700\u8981\u5c06\u5c55\u793a\u7684\u53d8\u91cf\u4f20\u5165 vars \u53c2\u6570\u3002 In [14]: sns.set_style('whitegrid') In [15]: sns.pairplot(mtcars, ...: hue='cyl', ...: vars=['wt', 'mpg', 'cyl']) \u4e0b\u9762\u4ee3\u7801\u5c06\u98ce\u683c\u8bbe\u4e3a\u767d\u8272\uff0c\u5e76\u7528\u6a2a\u8f74\u548c\u7eb5\u8f74\u5c55\u793a\u4e0d\u540c\u7684\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u7528 4 \u4e2a\u5b50\u56fe\u5c55\u793a 4 \u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u6570\u636e\u5206\u5e03\u8d8b\u52bf\u3002\u7136\u540e\u52a0\u4e0a\u989c\u8272\u4fe1\u606f\uff0c\u4e00\u5171\u53ef\u4ee5\u5c55\u793a 5 \u4e2a\u53d8\u91cf\u3002 In [16]: sns.set_style('white') In [17]: sns.pairplot(mtcars, ...: hue='cyl', ...: x_vars=['wt', 'mpg'], ...: y_vars=['hp', 'disp']) 13.1.3 \u56de\u5f52\u56fe \u00b6 \u4e0a\u4e00\u4e2a\u56fe\u6211\u4eec\u770b\u5230 4 \u4e2a\u53d8\u91cf\u4e4b\u95f4\u5b58\u5728\u660e\u663e\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u5f53\u6211\u4eec\u6dfb\u52a0\u9009\u9879 kind=\u2019reg\u2019 \u540e\uff0cSeaborn \u4f1a\u81ea\u52a8\u4e3a\u56fe\u5f62\u6dfb\u52a0\u4e0a\u56de\u5f52\u7ebf\u3002 In [18]: sns.set_style('ticks') In [19]: sns.set_palette('dark') In [20]: sns.pairplot(mtcars, ...: kind='reg', ...: x_vars=['wt', 'mpg'], ...: y_vars=['hp', 'disp']) 13.1.4 \u6838\u5bc6\u5ea6\u56fe \u00b6 \u6838\u5bc6\u5ea6\u56fe\u5728\u5c55\u793a\u6570\u636e\u7684\u5e73\u6ed1\u5206\u5e03\u65f6\u66f4\u4e3a\u6709\u6548\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 diag_kind=\u2019kde\u2019 \u8ba9\u5bf9\u89d2\u7ebf\u5c55\u793a\u6bcf\u4e2a\u53d8\u91cf\u5206\u5e03\u7684\u6838\u5bc6\u5ea6\u4f30\u8ba1\u3002 In [21]: sns.set_palette('bright') In [22]: sns.pairplot(mtcars.loc[:, ['wt', 'mpg', 'hp']], ...: kind='reg', diag_kind='kde') \u524d\u9762 pairplot() \u63d0\u4f9b\u7684\u4e30\u5bcc\u7279\u6027\u5df2\u7ecf\u8db3\u4ee5\u6ee1\u8db3\u5f88\u591a\u7684\u6570\u636e\u63a2\u7d22\u6027\u5206\u6790\u9700\u6c42\u3002\u63a5\u4e0b\u6765\u672c\u4e66\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u7edf\u8ba1\u5206\u6790\u5e38\u89c1\u56fe\u5f62\u7684 Seaborn \u5b9e\u73b0\uff0c\u5b83\u4eec\u7684\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u4e00\u822c\u901a\u8fc7\u6307\u5b9a\u7ed8\u56fe\u4f7f\u7528\u7684 DataFrame \u548c\u5750\u6807\u8f74\u9700\u8981\u5c55\u793a\u7684\u53d8\u91cf\u540d\u79f0\u5c31\u53ef\u4ee5\u5b8c\u6210\u7ed8\u56fe\u3002 13.1.5 \u6761\u5f62\u56fe \u00b6 barplot() \u51fd\u6570\u7528\u4e8e\u7ed8\u5236\u6761\u5f62\u56fe\uff0c\u4e0b\u9762\u7ed3\u679c\u5c55\u793a\u4e86\u6c7d\u8f66\u4e0d\u540c\u6c14\u7f38\u6570\u884c\u7a0b\u7684\u5dee\u522b\u3002\u6ce8\u610f\uff0c\u7ad6\u7ebf\u8868\u793a\u7f6e\u4fe1\u533a\u95f4\u3002 In [23]: sns.barplot(x='cyl', y='mpg', data=mtcars) \u6211\u4eec\u770b\u770b\u5f15\u64ce\u7c7b\u578b\u53d8\u91cf vs \u7684\u4e0d\u540c\u662f\u5426\u4f1a\u5f71\u54cd\u4e0a\u8ff0\u7684\u5dee\u5f02\u3002 In [24]: sns.barplot(x='cyl', y='mpg', hue='vs', ...: data=mtcars) \u7ed3\u679c\u8868\u660e\u6c7d\u8f66\u884c\u7a0b\u4e0d\u600e\u4e48\u53d7\u5f15\u64ce\u7c7b\u578b\u7684\u5f71\u54cd\u3002 13.1.6 \u8ba1\u6570\u56fe \u00b6 countplot() \u51fd\u6570\u7528\u4e8e\u7ed8\u5236\u8ba1\u6570\u56fe\uff0c\u8be5\u79cd\u56fe\u5f62\u7c7b\u578b\u9002\u5408\u5206\u7c7b\u6570\u636e\uff0c\u5982\u6c14\u7f38\u6570\u3002 In [25]: sns.countplot(x='cyl', data=mtcars) \u4e0d\u96be\u53d1\u73b0 32 \u79cd\u6c7d\u8f66\u6c14\u7f38\u6570\u4e3a 8 \u7684\u6700\u591a\uff0c\u4e3a 6 \u7684\u6700\u5c11\u3002 13.1.7 \u70b9\u56fe \u00b6 pointplot() \u51fd\u6570\u7528\u4e8e\u7ed8\u5236\u70b9\u56fe\u3002\u70b9\u56fe\u7684\u4f7f\u7528\u7387\u5f88\u9ad8\uff0c\u9002\u7528\u8303\u56f4\u4e5f\u5f88\u5e7f\u6cdb\u3002 In [26]: sns.pointplot(x='cyl', ...: y='wt', ...: hue='vs', ...: markers=['^', 'o'], ...: linestyles=['-', '--'], ...: data=mtcars) \u76f8\u6bd4\u4e8e\u6761\u5f62\u56fe\uff0c\u7ebf\u56fe\u66f4\u9002\u7528\u4e8e\u5c55\u793a\u4e0d\u540c\u5f15\u64ce\u7c7b\u578b\u4e0b\u6c7d\u8f66\u91cd\u91cf\u968f\u6c14\u7f38\u6570\u7684\u53d8\u5316\u3002 13.1.8 \u7bb1\u7ebf\u56fe \u00b6 boxplot() \u51fd\u6570\u7528\u4e8e\u7ed8\u5236\u7bb1\u7ebf\u56fe\u3002\u7bb1\u7ebf\u56fe\u5728\u7edf\u8ba1\u5206\u6790\u4e2d\u975e\u5e38\u5e38\u7528\uff0c\u76f8\u6bd4\u4e8e\u7ebf\u56fe\u548c\u6761\u5f62\u56fe\uff0c\u5b83\u53ef\u4ee5\u7b80\u5355\u76f4\u89c2\u7684\u89c2\u5bdf\u6570\u636e\u7684\u6837\u672c\u91cf\u3001\u5206\u5e03\u4ee5\u53ca\u5dee\u5f02\u3002 \u4f7f\u7528\u548c\u4e0a\u4e00\u4e2a\u56fe\u4e00\u6837\u7684\u6570\u636e\u548c\u53d8\u91cf\uff0c\u4e0b\u9762\u7684\u7bb1\u7ebf\u56fe\u663e\u793a\u6548\u679c\u5b8c\u5168\u4e0d\u540c\u4e8e\u7ebf\u56fe\u3002 In [27]: sns.boxplot(x='cyl', ...: y='wt', ...: hue='vs', ...: data=mtcars) 13.1.9 \u5c0f\u63d0\u7434\u56fe \u00b6 violinplot() \u51fd\u6570\u7528\u4e8e\u7ed8\u5236\u5c0f\u63d0\u7434\u56fe\u3002\u5c0f\u63d0\u7434\u56fe\u662f\u7bb1\u7ebf\u56fe\u7684\u62d3\u5c55\uff0c\u5b83\u589e\u52a0\u4e86\u5bf9\u6570\u636e\u5206\u5e03\u66f4\u4e3a\u76f4\u89c2\u7684\u89c6\u89c9\u611f\u53d7\u3002 \u4f7f\u7528\u4e0e\u7bb1\u7ebf\u56fe\u5b8c\u5168\u4e00\u81f4\u7684\u6570\u636e\uff0c\u6211\u4eec\u518d\u770b\u770b\u5c0f\u63d0\u7434\u56fe\u662f\u5982\u4f55\u7684\u3002 In [28]: sns.violinplot(x='cyl', ...: y='wt', ...: hue='vs', ...: data=mtcars) 13.1.10 \u53cc\u53d8\u91cf\u5206\u5e03\u56fe \u00b6 \u672c\u8282\u6700\u540e\u4ecb\u7ecd\u7684\u662f\u53cc\u53d8\u91cf\u5206\u5e03\u56fe\uff0c\u5b83\u7528\u4e8e\u5c55\u793a\u53cc\u53d8\u91cf\u7684\u5206\u5e03\u548c\u5173\u7cfb\uff0c\u901a\u8fc7 jointplot() \u51fd\u6570\u5b9e\u73b0\u3002 \u4e0b\u9762\u7ed8\u5236\u56fe\u5f62\u5c55\u793a\u884c\u7a0b\u548c\u6c7d\u8f66\u91cd\u91cf\u7684\u4e00\u7ef4\u5206\u5e03\u4e0e\u4e8c\u7ef4\u6838\u5bc6\u5ea6\u3002 In [29]: sns.jointplot(x='mpg', y='wt', ...: data=mtcars, ...: kind='kde') \u4e0b\u9762\u901a\u8fc7\u4fee\u6539 kind \u9009\u9879\u5c55\u793a\u4e0a\u8ff0\u4e24\u4e2a\u53d8\u91cf\u7684\u76f4\u65b9\u56fe\u548c\u7ebf\u6027\u56de\u5f52\u56fe\u3002 In [30]: sns.jointplot(x='mpg', y='wt', ...: data=mtcars, ...: kind='reg') 13.2 Plotnine \u00b6 ggplot2 \u662f\u57fa\u4e8e\u300a\u56fe\u5f62\u8bed\u6cd5\u300b\u7684 R \u8bed\u8a00\u5b9e\u73b0\uff0c\u5b83\u63d0\u4f9b\u4e86\u975e\u5e38\u7075\u6d3b\u7684\u56fe\u5f62\u751f\u6210\u548c\u7ec4\u5408\u65b9\u6cd5\uff0c\u76ee\u524d\u6709\u5927\u91cf\u7684\u62d3\u5c55\u5305\u3002\u7531\u4e8e ggplot2 \u7684\u6d41\u884c\u6027\uff0c\u6709\u5f00\u53d1\u8005\u5c06\u5b83\u7684\u529f\u80fd\u79fb\u690d\u5230\u4e86 Python \u793e\u533a\uff0c\u5e76\u547d\u540d\u4e3a plotnine\u3002 \u8bfb\u8005\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\u5b89\u88c5 plotnine \u5e93\uff1a # \u5b89\u88c5\u65b9\u6cd5 1 conda install -c conda-forge plotnine # \u5b89\u88c5\u65b9\u6cd5 2 pip install plotnine plotnine \u5e93\u7684\u8bed\u6cd5\u4e0e R \u8bed\u8a00\u7684 ggplot2 \u57fa\u672c\u4e00\u81f4\uff0c\u4e0d\u8fc7\u9700\u8981\u5728\u6267\u884c\u8bed\u53e5\u5916\u5c42\u4f7f\u7528\u62ec\u53f7\uff0c\u4ee5\u907f\u514d Python \u7684\u9519\u8bef\u8bed\u6cd5\u89e3\u6790\u3002 \u6211\u4eec\u5148\u5bfc\u5165 plotnine \u7684\u7ed8\u56fe\u51fd\u6570\u548c\u81ea\u5e26\u6570\u636e\u96c6 mtcars\uff0c\u5e76\u67e5\u770b\u4e00\u4e2a\u5b98\u65b9\u6587\u6863\u7684\u793a\u4f8b\u3002 In [31]: from plotnine import * In [32]: from plotnine.data import mtcars In [33]: (ggplot(mtcars, aes('wt', 'mpg', color='factor(gear)')) ...: + geom_point() ...: + stat_smooth(method='lm') ...: + facet_wrap('~gear')) \u521d\u6b21\u63a5\u89e6 ggplot \u7684\u8bfb\u8005\u53ef\u80fd\u4f1a\u770b\u4e0d\u61c2\u4e0a\u9762\u7684\u4ee3\u7801\u5e76\u4e14\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8fd9\u51e0\u53e5\u4ee3\u7801\u7684\u7ec4\u5408\u53ef\u4ee5\u5f62\u6210\u7f8e\u89c2\u7684\u7ed3\u679c\u56fe\u3002\u8fd9\u6b63\u662f ggplot \u7684\u5f3a\u5927\u4e4b\u5904\uff0c\u5b83\u6709\u7684\u81ea\u5df1\u7684\u8bed\u6cd5\u89c4\u5219\uff1aggplot \u7ed8\u5236\u56fe\u5f62\u4e0d\u662f\u901a\u8fc7\u5355\u4e2a\u51fd\u6570\u7684\u8c03\u7528\uff0c\u800c\u662f\u901a\u8fc7\u4e00\u7ec4\u51fd\u6570\u7684\u7ec4\u5408\u8fdb\u884c\u5b9e\u73b0\uff0c\u6bcf\u4e00\u4e2a\u51fd\u6570\u90fd\u6709\u72ec\u7279\u7684\u529f\u80fd\u3002\u5f53\u6211\u4eec\u4e86\u89e3\u5176\u57fa\u672c\u539f\u7406\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u8f7b\u677e\u9a7e\u9a6d\uff0c\u5e76\u4e14\u4ee5\u4e00\u63a8\u4e09\u3002 \u672c\u4e66\u63a5\u4e0b\u6765\u4f1a\u4ecb\u7ecd ggplot \u7684\u4e00\u4e9b\u672f\u8bed\u5e76\u5bf9\u5176\u57fa\u672c\u5de5\u4f5c\u6b65\u9aa4\u548c\u539f\u7406\u8fdb\u884c\u89e3\u6790\uff0c\u4ee5\u5e2e\u52a9\u8bfb\u8005\u4e86\u89e3\u548c\u57fa\u672c\u638c\u63e1 ggplot \u7684\u8bed\u6cd5\u3002\u5982\u679c\u8bfb\u8005\u540e\u7eed\u5bf9 ggplot \u975e\u5e38\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u901a\u8fc7 plotnine \u7684\u5b98\u65b9\u6587\u6863\u4ee5\u53ca R \u5305 ggplot2 \u8fdb\u884c\u8fdb\u4e00\u6b65\u5b66\u4e60\u3002 13.2.1 ggplot \u672f\u8bed \u00b6 \u7ed8\u56fe\u6700\u91cd\u8981\u7684\u6709\u4e24\u70b9\uff1a\u6570\u636e\u4e0e\u663e\u793a\u6548\u679c\u3002\u6570\u636e\u662f\u6211\u4eec\u60f3\u8981\u53ef\u89c6\u5316\u7684\u5bf9\u8c61\uff0c\u5b83\u5305\u542b\u4e86\u82e5\u5e72\u7684\u53d8\u91cf\uff0c\u53d8\u91cf\u5b58\u50a8\u5728 DataFrame \u7684\u6bcf\u4e00\u5217\u4e2d\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u5e38\u7528\u7684 mtcars \u6570\u636e\u96c6\u6bcf\u4e00\u5217\u5305\u542b\u6c7d\u8f66\u7684\u4e0d\u540c\u4fe1\u606f\u3002 In [34]: mtcars.head() Out[34]: mpg cyl disp hp drat wt qsec vs am gear carb 0 21.0 6 160.0 110 3.90 2.620 16.46 0 1 4 4 1 21.0 6 160.0 110 3.90 2.875 17.02 0 1 4 4 2 22.8 4 108.0 93 3.85 2.320 18.61 1 1 4 1 3 21.4 6 258.0 110 3.08 3.215 19.44 1 0 3 1 4 18.7 8 360.0 175 3.15 3.440 17.02 0 0 3 2 \u77e5\u9053\u6570\u636e\u7684\u4fe1\u606f\u6709\u54ea\u4e9b\u540e\uff0c\u53e6\u4e00\u4e2a\u8981\u70b9\u662f\u786e\u5b9a\u6211\u4eec\u60f3\u8981\u7ed8\u5236\u7684\u56fe\u5f62\u6548\u679c\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u56fe\u7684\u7c7b\u578b\uff0c\u5982\u70b9\u56fe\u3001\u7ebf\u56fe\u3001\u7bb1\u7ebf\u56fe\u3002\u66f4\u8be6\u7ec6\u5730\u8bf4\uff0c\u5982\u679c\u662f\u70b9\u56fe\uff0c\u9700\u8981\u5206\u7ec4\u5417\uff1f\u4e0d\u540c\u7ec4\u522b\u5e94\u8be5\u600e\u4e48\u4f53\u73b0\uff1f\u70b9\u7684\u5927\u5c0f\u5982\u4f55\uff1f \u524d\u9762\u6211\u4eec\u63a5\u89e6\u7684\u7ed8\u56fe\u5e93\u90fd\u662f\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u5c01\u88c5\u4e3a\u4e0d\u540c\u7684\u51fd\u6570\u6216\u65b9\u6cd5\uff0c\u6211\u4eec\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u9009\u62e9\u5176\u4e00\u4f7f\u7528\uff0c\u5982\u679c\u9700\u8981\u8fdb\u4e00\u6b65\u7ec6\u8c03\u5219\u9700\u8981\u67e5\u770b\u67d0\u4e2a\u51fd\u6570\u8be6\u7ec6\u7684\u6587\u6863\u6216\u8005\u901a\u8fc7\u7f51\u7edc\u641c\u7d22\u5bf9\u5e94\u7684\u89e3\u51b3\u529e\u6cd5\u3002 ggplot \u7684\u65b9\u6cd5\u5219\u4e0e\u4e0a\u8ff0\u4e0d\u76f8\u540c\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\uff0c\u6211\u4eec\u5c06\u7ed8\u56fe\u6bd4\u4f5c\u505a\u83dc\u3002Matplotlib \u7b49\u5e93\u5c31\u597d\u50cf\u662f\u8c03\u5236\u597d\u4e86\u67d0\u9053\u83dc\u7684\u914d\u65b9\uff0c\u6211\u4eec\u6839\u636e\u914d\u65b9\u51c6\u5907\u98df\u6750\u6309\u6b65\u9aa4\u64cd\u4f5c\uff1b\u800c ggplot \u63d0\u4f9b\u7684\u662f\u505a\u597d\u7f8e\u98df\u6240\u9700\u8981\u7684\u5de5\u5177\u96c6\u4ee5\u53ca\u64cd\u4f5c\u5de5\u5177\u7684\u65b9\u6cd5\u89c4\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u5fc3\u610f\u5229\u7528\u4e0d\u540c\u7684\u5de5\u5177\u548c\u98df\u6750\u7ec4\u5408\u70f9\u996a\u51fa\u4e0d\u540c\u7684\u83dc\u54c1\u3002 \u4ece\u5b66\u4e60\u66f2\u7ebf\u65b9\u9762\u6765\u8bf4\uff0cMatplotlib \u7b49\u5e93\u66f4\u4e3a\u7b80\u5355\uff0c\u4f46\u8bfb\u8005\u82b1\u8d39\u65f6\u95f4\u5b66\u4e60 ggplot \u4e0a\u662f\u503c\u5f97\u7684\uff0c\u56e0\u4e3a\u5b83\u6709\u66f4\u7075\u6d3b\u7684\u64cd\u4f5c\u548c\u66f4\u591a\u7684\u53ef\u80fd\u6027\u3002 \u5728\u5b66\u4e60\u7ed8\u56fe\u6b65\u9aa4\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4e86\u89e3\u4e0b ggplot \u7684\u4e00\u4e9b\u6838\u5fc3\u672f\u8bed\uff1a \u51e0\u4f55\u5bf9\u8c61\uff1a\u5b83\u662f\u7528\u4ee5\u5448\u73b0\u6570\u636e\u7684\u51e0\u4f55\u56fe\u5f62\u5bf9\u8c61\uff0c\u5982\u6761\u5f62\u3001\u7ebf\u6761\u548c\u70b9\u3002 \u56fe\u5f62\u5c5e\u6027\uff1a\u5b83\u662f\u51e0\u4f55\u5bf9\u8c61\u7684\u89c6\u89c9\u5c5e\u6027\uff0c\u5982 x \u5750\u6807\u548c y \u5750\u6807\u3001\u7ebf\u6761\u989c\u8272\u3001\u70b9\u7684\u5f62\u72b6\u7b49\u3002 \u6620\u5c04\uff1a\u6570\u503c\u7684\u503c\u548c\u56fe\u5f62\u5c5e\u6027\u4e4b\u95f4\u5b58\u5728\u7740\u67d0\u7c7b\u6620\u5c04\u3002 \u6807\u5ea6\uff1a\u5b83\u63a7\u5236\u7740\u6570\u636e\u7a7a\u95f4\u7684\u503c\u5230\u56fe\u5f62\u5c5e\u6027\u7a7a\u95f4\u7684\u503c\u7684\u6620\u5c04\u3002\u4e00\u4e2a\u8fde\u7eed\u578b\u7684 y \u6807\u5ea6\u4f1a\u5c06\u8f83\u5927\u7684\u6570\u503c\u6620\u5c04\u81f3\u7a7a\u95f4\u4e2d\u7eb5\u5411\u66f4\u9ad8\u7684\u4f4d\u7f6e\u3002 \u5f15\u5bfc\u5143\u7d20\uff1a\u5b83\u5411\u770b\u56fe\u8005\u5c55\u793a\u4e86\u5982\u4f55\u5c06\u89c6\u89c9\u5c5e\u6027\u6620\u5c04\u56de\u6570\u636e\u7a7a\u95f4\u3002\u6700\u5e38\u89c1\u7684\u5143\u7d20\u662f\u5750\u6807\u8f74\u4e0a\u7684\u523b\u5ea6\u7ebf\u3001\u6807\u7b7e\u3001\u4ee5\u53ca\u56fe\u4f8b\u3002 13.2.2 ggplot \u521d\u63a2 \u00b6 \u5728\u521d\u6b65\u4e86\u89e3\u4e00\u4e9b\u672f\u8bed\u540e\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u9010\u6b65\u5b66\u4e60\u7ed8\u56fe\u7684\u8bed\u6cd5\u548c\u6b65\u9aa4\u3002 \u5728 ggplot \u4e2d\uff0c\u56fe\u662f\u901a\u8fc7 + \u53f7\u4e32\u8054\u7684\u51fd\u6570\u521b\u5efa\u7684\u3002 In [35]: (ggplot(mtcars, aes(x='wt', y='mpg')) ...: + geom_point()) \u4e0a\u9762\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u70b9\u56fe\uff0c\u6574\u4e2a\u7ed8\u56fe\u6b65\u9aa4\u7531 3 \u4e2a\u51fd\u6570\u534f\u4f5c\u5b8c\u6210\u3002 ggplot() - \u521b\u5efa\u4e00\u4e2a ggplot \u5bf9\u8c61 aes() - \u521b\u5efa\u4e00\u4e2a\u7f8e\u5b66\u6620\u5c04\u5bf9\u8c61 geom_point() - \u521b\u5efa\u4e00\u4e2a\u70b9\u7684\u51e0\u4f55\u5bf9\u8c61 ggplot() \u521d\u59cb\u5316\u56fe\u5f62\u5e76\u6307\u5b9a\u8981\u7528\u5230\u7684\u6570\u636e\u6765\u6e90\u548c\u53d8\u91cf\u3002aes() \u51fd\u6570\u7684\u529f\u80fd\u662f\u6307\u5b9a\u6bcf\u4e2a\u53d8\u91cf\u626e\u6f14\u7684\u89d2\u8272\uff08aes \u4ee3\u8868 aesthetics\uff0c\u5373\u5982\u4f55\u7528\u89c6\u89c9\u5f62\u5f0f\u5448\u73b0\u4fe1\u606f)\u3002\u5728\u8fd9\u91cc\uff0c\u53d8\u91cf wt \u7684\u503c\u6620\u5c04\u5230 x \u8f74\uff0cmpg \u7684\u503c\u6620\u5c04\u5230 y \u8f74\u3002 ggplot() \u51fd\u6570\u4e00\u822c\u6709 2 \u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u753b\u56fe\u7684\u6570\u636e\uff0c\u7b2c\u4e8c\u4e2a\u662f\u6620\u5c04\u5bf9\u8c61\u3002\u4e00\u4e2a\u6620\u5c04\u5bf9\u8c61\u53ef\u4ee5\u6307\u5b9a\u56fe\u5f62\u7684\u5c5e\u6027\uff0c\u4e3b\u8981\u5305\u62ec x\u3001y\u3001color\u3001size \u7b49\u3002\u4e00\u822c\u6211\u4eec\u7ed8\u5236\u7684\u90fd\u662f\u4e8c\u7ef4\u56fe\uff0cx\u3001y \u662f\u6700\u5e38\u7528\u7684\uff0c\u6211\u4eec\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u5c06 x\u3001y \u8f74\u548c\u76f8\u5e94\u7684\u53d8\u91cf\u5bf9\u5e94\u8d77\u6765\uff0c\u5373\u6620\u5c04\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u8bbe\u5b9a x \u8f74\u5c55\u793a\u6c7d\u8f66\u91cd\u91cf\uff0cy \u8f74\u5c55\u793a\u91cc\u7a0b\u6570\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u751f\u6210\u4e00\u4e2a\u5e26\u6709\u5750\u6807\u6620\u5c04\u7684\u753b\u5e03\u3002 In [36]: ggplot(mtcars, aes(x='wt', y='mpg')) \u5f53\u6211\u4eec\u5efa\u7acb\u597d\u753b\u5e03\u548c\u5750\u6807\u6620\u5c04\u540e\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u601d\u8003\u8be5\u7528\u4ec0\u4e48\u51e0\u4f55\u5bf9\u8c61\u5c55\u793a\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\u662f\u70b9\u56fe\uff1f\u7ebf\u56fe\uff1f\u8fd8\u662f\u70b9\u7ebf\u7ed3\u5408\uff1f \u5982\u679c\u662f\u70b9\u56fe\uff0c\u6211\u4eec\u5728\u4e0a\u8ff0\u4ee3\u7801\u540e\u9762\u8854\u63a5\u70b9\u7684\u51e0\u4f55\u5bf9\u8c61\u3002 In [37]: ggplot(mtcars, aes(x='wt', y='mpg')) + geom_point() \u6211\u4eec\u4e0d\u96be\u731c\u60f3\u5230\u7ebf\u56fe\u7684\u505a\u6cd5\uff1a In [38]: ggplot(mtcars, aes(x='wt', y='mpg')) + geom_line() \u4e0d\u77e5\u9053\u8bfb\u8005\u73b0\u5728\u662f\u5426\u611f\u53d7\u5230\u4e86 ggplot \u7684\u795e\u5947\u4e4b\u5904\u3002\u6211\u4eec\u7528\u4eba\u53ef\u4ee5\u7406\u89e3\u7684\u8bed\u8a00\u6765\u63cf\u8ff0\u4e0a\u9762\u4e24\u5e45\u56fe\u7684\u751f\u6210\u4ee3\u7801\uff1a \u4ee5 mtcars \u4f5c\u4e3a\u8f93\u5165\uff0c\u5c06 wt \u5217\u6620\u5c04\u5230 x \u8f74\u3001 mpg \u5217\u6620\u5c04\u5230 y \u8f74\uff0c\u7136\u540e\u7528\u70b9\u7ed8\u5236\u4e00\u5e45\u56fe \u4ee5 mtcars \u4f5c\u4e3a\u8f93\u5165\uff0c\u5c06 wt \u5217\u6620\u5c04\u5230 x \u8f74\u3001 mpg \u5217\u6620\u5c04\u5230 y \u8f74\uff0c\u7136\u540e\u7528\u7ebf\u7ed8\u5236\u4e00\u5e45\u56fe ggplot \u6839\u636e\u8fd9\u4e9b\u6307\u4ee4\u7684\u7ec4\u5408\u81ea\u52a8\u751f\u6210\u6211\u4eec\u60f3\u8981\u7684\u56fe\u5f62\u3002 \u53e6\u5916\uff0c\u51e0\u4f55\u5bf9\u8c61\u662f\u53ef\u4ee5\u5c42\u5c42\u53e0\u52a0\u7684\u3002\u4e0a\u9762\u7684\u7ebf\u56fe\u5e76\u6ca1\u6709\u5c55\u793a\u51fa\u7ebf\u6027\u56de\u5f52\u7684\u6548\u679c\uff0c\u7ebf\u6027\u56de\u5f52\u662f\u4e00\u79cd\u5e73\u6ed1\u51e0\u4f55\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5730\u4fee\u6539\u4e3a\u4e0b\u9762\u4ee3\u7801\u3002\u6ce8\u610f\uff0c\u5f53 ggplot \u8bed\u53e5\u5199\u4e3a\u591a\u884c\u6587\u672c\u65f6\uff0c\u5916\u90e8\u9700\u8981\u4e00\u4e2a\u5c0f\u62ec\u53f7\u3002 In [39]: (ggplot(mtcars, aes(x='wt', y='mpg')) ...: + geom_smooth(method=\"lm\")) \u6211\u4eec\u4e0d\u59a8\u5728\u540e\u9762\u8854\u63a5\u70b9\u7684\u51e0\u4f55\u5bf9\u8c61\uff0c\u5c55\u793a\u539f\u59cb\u7684\u6570\u636e\u70b9\u4fe1\u606f\u3002 In [40]: (ggplot(mtcars, aes(x='wt', y='mpg')) ...: + geom_smooth(method=\"lm\") ...: + geom_point()) \u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u4fee\u6539\u70b9\u548c\u7ebf\u6761\u7684\u989c\u8272\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u51e0\u4f55\u51fd\u6570\u7684\u9009\u9879\u5b9e\u73b0\u3002 In [41]: (ggplot(mtcars, aes(x='wt', y='mpg')) ...: + geom_smooth(method=\"lm\", color='red') ...: + geom_point(color='blue')) \u5f15\u5bfc\u5143\u7d20\u5305\u62ec\u6807\u7b7e\u3001\u6807\u9898\u3001\u56fe\u4f8b\u7b49\u90fd\u53ef\u4ee5\u901a\u8fc7 labs() \u51fd\u6570\u8fdb\u884c\u8bbe\u5b9a\u6216\u4fee\u6539\u3002\u4e0b\u9762\u4ee3\u7801\u4e3a\u4e0a\u56fe\u6dfb\u52a0\u4e86 x\u3001y \u8f74\u6807\u7b7e\u548c\u6807\u9898\uff0c\u4ee5\u5e2e\u52a9\u9605\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3\u8be5\u56fe\u7684\u542b\u4e49\u3002 In [42]: (ggplot(mtcars, aes(x='wt', y='mpg')) ...: + geom_smooth(method=\"lm\", color=\"red\") ...: + geom_point(color=\"blue\") ...: + labs(title=\"Automobie Data\", x=\"Weight\", y=\"Miles Per Gallon\")) ggplot \u63d0\u4f9b\u4e86\u5206\u7ec4\u548c\u5206\u9762\u7684\u65b9\u6cd5\u3002\u5206\u7ec4\u6307\u7684\u662f\u5728\u4e00\u4e2a\u56fe\u5f62\u4e2d\u663e\u793a\u4e24\u7ec4\u6216\u591a\u7ec4\u89c2\u5bdf\u7ed3\u679c\u3002\u5206\u9762\u6307\u7684\u662f\u5728\u5355\u72ec\u3001\u5e76\u6392\u7684\u56fe\u5f62\u4e0a\u663e\u793a\u89c2\u5bdf\u7ec4\u3002\u9700\u8981\u6ce8\u610f\uff0cggplot \u5305\u5728\u5b9a\u4e49\u7ec4\u6216\u9762\u65f6\u4f7f\u7528\u56e0\u5b50\u3002 \u56e0\u5b50\u9488\u5bf9\u7684\u662f\u5206\u7c7b\u6570\u636e\uff0c\u4f8b\u5982 cyl \u662f\u4e2a\u5206\u7c7b\u6570\u636e\uff0c\u7ed8\u56fe\u65f6\u6211\u4eec\u4f7f\u7528 factor(cyl)\uff0c\u5426\u5219\u5b83\u4f1a\u662f\u4e00\u4e2a\u8fde\u7eed\u503c\u6807\u5ea6\u3002 In [43]: (ggplot(mtcars, aes(x='hp', y='mpg', ...: shape='factor(cyl)', color='factor(cyl)')) + ...: geom_point(size=3) + ...: facet_grid('am~vs') + ...: labs(title=\"Automobile Data by Engine Type\", ...: x=\"Horsepower\", y=\"Miles Per Gallon\")) \u5bf9\u6bd4\u4e0b\u9762\u4e0d\u4f7f\u7528\u56e0\u5b50\u7684\u9519\u8bef\u7ed3\u679c\u56fe\u3002 In [44]: (ggplot(mtcars, aes(x='hp', y='mpg', ...: shape='factor(cyl)', color='cyl')) + ...: geom_point(size=3) + ...: facet_grid('am~vs') + ...: labs(title=\"Automobile Data by Engine Type\", ...: x=\"Horsepower\", y=\"Miles Per Gallon\")) \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 facet_grid() \u51fd\u6570\u8fdb\u884c\u5206\u9762\uff0c\u5b83\u53ef\u4ee5\u5f62\u6210\u7f51\u683c\u72b6\uff0c\u8f93\u5165\u7684\u53c2\u6570 \u2018am~vs\u2019 \u8868\u793a\u4ee5 am \u4f5c\u4e3a\u884c\uff0cvs \u4f5c\u4e3a\u5217\u3002 13.2.3 \u5e38\u89c1\u51e0\u4f55\u51fd\u6570\u548c\u9009\u9879 \u00b6 ggplot() \u51fd\u6570\u6307\u5b9a\u8981\u7ed8\u5236\u7684\u6570\u636e\u6e90\u548c\u53d8\u91cf\uff0c\u51e0\u4f55\u51fd\u6570\u5219\u6307\u5b9a\u8fd9\u4e9b\u53d8\u91cf\u5982\u4f55\u5728\u89c6\u89c9\u4e0a\u8fdb\u884c\u8868\u793a\u3002\u4ee5\u4e0b\u5217\u51fa\u5e38\u7528\u7684\u51fd\u6570\u3002 \u51fd\u6570 \u6dfb\u52a0 \u9009\u9879 geom_bar() \u6761\u5f62\u56fe color, fill, alpha geom_boxplot() \u7bb1\u7ebf\u56fe color, fill, alpha, notch, width geom_density() \u5bc6\u5ea6\u56fe color, fill, alpha, linetype geom_histogram() \u76f4\u65b9\u56fe color, fill, alpha, linetype, binwidth geom_hline() \u6c34\u5e73\u7ebf color, aplha, linetype, size geom_jitter() \u6296\u52a8\u70b9 color, size, alpha, shape geom_line() \u7ebf\u56fe colorvalpha, linetype, size geom_point() \u6563\u70b9\u56fe color, alpha, shape, size geom_rug() \u5730\u6bef\u56fe color, sides geom_smooth() \u62df\u5408\u66f2\u7ebf method, formula, color, fill, linetype, size geom_text() \u6587\u5b57\u6ce8\u89e3 \u8fd9\u4e2a\u975e\u5e38\u591a,\u53c2\u8003\u76f8\u5e94\u6587\u6863 geom_violin() \u5c0f\u63d0\u7434\u56fe color, fill, alpha, linetype geom_vline() \u5782\u7ebf color, alpha, linetype, size \u51e0\u4f55\u51fd\u6570\u6709\u5f88\u591a\u901a\u7528\u6216\u5e38\u89c1\u7684\u9009\u9879\uff0c\u6c47\u603b\u5982\u4e0b\u3002 \u9009\u9879 \u8be6\u8ff0 color \u5bf9\u70b9\u3001\u7ebf\u548c\u586b\u5145\u533a\u57df\u7684\u8fb9\u754c\u8fdb\u884c\u7740\u8272 fill \u5bf9\u586b\u5145\u533a\u57df\u7740\u8272\uff0c\u5982\u6761\u5f62\u548c\u5bc6\u5ea6\u533a\u57df alpha \u989c\u8272\u7684\u900f\u660e\u5ea6\uff0c\u4ece0\uff08\u5b8c\u5168\u900f\u660e\uff09\u52301\uff08\u4e0d\u900f\u660e\uff09 linetype \u56fe\u6848\u7684\u7ebf\u6761\uff081=\u5b9e\u7ebf\uff0c2=\u865a\u7ebf\uff0c3=\u70b9\uff0c4=\u70b9\u7834\u6298\u53f7\uff0c5=\u957f\u7834\u6298\u53f7\uff0c6=\u53cc\u7834\u6298\u53f7\uff09 size \u70b9\u7684\u5c3a\u5bf8\u548c\u7ebf\u7684\u5bbd\u5ea6 shape \u70b9\u7684\u5f62\u72b6\uff08\u548cpch\u4e00\u6837\uff0c0=\u5f00\u653e\u7684\u65b9\u5f62\uff0c1=\u5f00\u653e\u7684\u5706\u5f62\uff0c2=\u5f00\u653e\u7684\u4e09\u89d2\u5f62\uff0c\u7b49\u7b49\uff09 position \u7ed8\u5236\u8bf8\u5982\u6761\u5f62\u56fe\u548c\u70b9\u7b49\u5bf9\u8c61\u7684\u4f4d\u7f6e\u3002\u5bf9\u6761\u5f62\u56fe\u6765\u8bf4\uff0c\u2019dodge\u2019\u5c06\u5206\u7ec4\u6761\u5f62\u56fe\u5e76\u6392\uff0c\u2019stacked\u2019\u5806\u53e0\u5206\u7ec4\u6761\u5f62\u56fe\uff0c\u2019fill\u2019\u5782\u76f4\u5730\u5806\u53e0\u5206\u7ec4\u6761\u5f62\u56fe\u5e76\u89c4\u8303\u5176\u9ad8\u5ea6\u76f8\u7b49\u3002\u5bf9\u4e8e\u70b9\u6765\u8bf4\uff0c\u2019jitter\u2019\u51cf\u5c11\u70b9\u91cd\u53e0\u3002 binwidth \u76f4\u65b9\u56fe\u7684\u5bbd\u5ea6 notch \u8868\u793a\u65b9\u5757\u56fe\u662f\u5426\u5e94\u4e3a\u7f3a\u53e3\uff08TRUE/FALSE) sides \u5730\u6bef\u56fe\u7684\u5b89\u7f6e\uff08\u201db\u201d=\u5e95\u90e8\uff0c \u201cl\u201d=\u5de6\u90e8\uff0c\u201dt\u201d=\u9876\u90e8\uff0c\u201dr\u201d=\u53f3\u90e8\uff0c\u201dbl\u201d=\u5de6\u4e0b\u90e8\uff0c\u7b49\u7b49\uff09 width \u7bb1\u7ebf\u56fe\u7684\u5bbd\u5ea6 \u4e0b\u9762\u4e3e\u4e2a\u4f8b\u5b50\u6765\u9a8c\u8bc1\u4e00\u4e0b\u4ee5\u4e0a\u53c2\u6570\u7684\u4f7f\u7528: In [45]: (ggplot(mtcars, aes(x='factor(cyl)', y='mpg')) ...: + geom_boxplot(fill='cornflowerblue', color='black', notch=True) ...: + geom_point(position='jitter', color='blue', alpha=0.5) ...: + geom_rug(sides='l', color='black')) 13.3 Bokeh \u00b6 Bokeh \u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u5e93\uff0c\u652f\u6301 Web \u6d4f\u89c8\u5668\uff0c\u5b83\u7684\u76ee\u6807\u662f\u540c\u65f6\u63d0\u4f9b\u4f18\u96c5\u7b80\u6d01\u7684\u56fe\u5f62\u98ce\u683c\u548c\u5927\u578b\u6570\u636e\u96c6\u7684\u9ad8\u6027\u80fd\u4ea4\u4e92\u529f\u80fd\u7279\u6027\u3002Bokeh \u53ef\u4ee5\u7528\u4e8e\u5feb\u901f\u5730\u521b\u5efa\u4ea4\u4e92\u5f0f\u4eea\u8868\u76d8\u548c\u6570\u636e\u5206\u6790\u5e94\u7528\u3002 \u8bfb\u8005\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\u5b89\u88c5 Bokeh \u5e93\uff1a # \u5b89\u88c5\u65b9\u6cd5 1 conda install bokeh # \u5b89\u88c5\u65b9\u6cd5 2 pip install bokeh \u63a5\u4e0b\u6765\u672c\u4e66\u5c06\u901a\u8fc7 Bokeh \u5b98\u65b9\u6587\u6863\u7684\u4e00\u4e9b\u793a\u4f8b\u6765\u4ecb\u7ecd Bokeh \u7684\u57fa\u7840\u7406\u5ff5\u548c\u64cd\u4f5c\u3002 13.3.1 Bokeh \u57fa\u7840 \u00b6 Bokeh \u7684\u8bbe\u8ba1\u7406\u5ff5\u4e0e ggplot \u7c7b\u4f3c\uff0c\u5b83\u91c7\u7528\u521b\u5efa\u753b\u5e03\u5e76\u9010\u4e00\u6dfb\u52a0\u56fe\u5f62\u5143\u7d20\uff08\u70b9\u3001\u7ebf\u3001\u5f27\u5f62\u7b49\uff09\u7684\u65b9\u6cd5\u6765\u6784\u5efa\u56fe\u5f62\u3002\u56fe\u5f62\u5143\u7d20\u5728 Bokeh \u4e2d\u88ab\u79f0\u4e3a glyphs\uff0c\u5b83\u5bf9\u5e94 ggplot \u4e2d\u7684\u51e0\u4f55\u5bf9\u8c61\uff08\u7531 geom_ \u7cfb\u5217\u51fd\u6570\u751f\u6210\uff09\u3002 \u5728\u4f7f\u7528 Bokeh \u7ed8\u56fe\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5bfc\u5165\u4e00\u4e9b\u5e38\u7528\u51fd\u6570\u3002 figure() - \u8be5\u51fd\u6570\u7528\u4e8e\u521b\u5efa\u56fe\u5f62\u5bf9\u8c61\u3002 output_ \u7cfb\u5217\u51fd\u6570 - \u5305\u62ec output_file()\u3001output_notebook()\u548c output_server()\uff0c\u5b83\u544a\u8bc9 Bokeh \u5982\u4f55\u663e\u793a\u548c\u4fdd\u5b58\u56fe\u5f62\u3002 \u4f7f\u7528 show() \u7acb\u5373\u663e\u793a\u56fe\u5f62\u6216 save() \u8fdb\u884c\u56fe\u5f62\u4fdd\u5b58\u3002 \u4e0a\u8ff0\u7b2c 2 \u70b9\u548c\u7b2c 3 \u70b9\u5e94\u5f53\u7ed3\u5408\u4f7f\u7528\u3002 \u5728 Jupyter Notebook \u4e2d\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528\u4e0b\u9762\u7684\u5bfc\u5165\u65b9\u5f0f\uff1a In [46]: from bokeh.io import output_notebook, show In [47]: from bokeh.plotting import figure \u7136\u540e\u6211\u4eec\u8c03\u7528 output_notebook() \u51fd\u6570\u6307\u5b9a\u56fe\u5f62\u8f93\u51fa\u65b9\u5f0f\u662f notebook\uff0c\u540e\u9762\u56fe\u5f62\u7ed8\u5236\u5b8c\u6210\u540e\u4f7f\u7528 show() \u51fd\u6570\u5373\u53ef\u8fdb\u884c\u663e\u793a\u3002 In [48]: output_notebook() Loading BokehJS ... \u63a5\u4e0b\u6765\u6211\u4eec\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 Bokeh \u5e93\u6784\u5efa\u57fa\u672c\u56fe\u5f62\uff0c\u8bf7\u8bfb\u8005\u89c2\u5bdf\u5b83\u7684\u64cd\u4f5c\u65b9\u6cd5\u548c\u6548\u679c\u4e0e\u524d\u9762\u4ecb\u7ecd\u7684\u56fe\u5f62\u5e93\u7684\u4e0d\u540c\u4e4b\u5904\u3002 \u6563\u70b9\u56fe \u00b6 In [49]: # \u6b65\u9aa41\uff1a\u4f7f\u7528 figure() \u521b\u5efa\u56fe\u5f62\u5bf9\u8c61 ...: # \u5e76\u6307\u5b9a\u56fe\u5f62\u7684\u5bbd\u9ad8 ...: p = figure(plot_width=400, plot_height=400) ...: # \u6b65\u9aa42\uff1a\u6dfb\u52a0\u56fe\u5f62\u5143\u7d20 ...: # \u8fd9\u91cc\u7ed8\u5236\u70b9\u5e76\u6307\u5b9a\u70b9\u7684\u4e00\u4e9b\u5c5e\u6027 ...: # \u5305\u62ec\u5927\u5c0f\u3001\u989c\u8272\u548c\u900f\u660e\u5ea6 ...: p.circle([1, 2, 3, 4, 5], [6, 7, 2, 4, 5], ...: size=15, line_color=\"navy\", ...: fill_color=\"orange\", fill_alpha=0.5) ...: # \u6b65\u9aa43\uff1a\u5c55\u793a\u56fe\u5f62 ...: show(p) \u8f93\u51fa\u7684\u56fe\u5f62\u9664\u4e86\u6bd4\u57fa\u7840\u7684 Matplotlib \u5e93\u6784\u5efa\u7684\u56fe\u5f62\u66f4\u7f8e\u89c2\uff0c\u53f3\u4fa7\u51fa\u73b0\u4e86\u4e00\u4e9b\u4ea4\u4e92\u64cd\u4f5c\u9009\u9879\uff0c\u5305\u62ec\u67e5\u770b Bokeh \u5b98\u65b9\u5730\u5740\u3001\u653e\u5927\u56fe\u5f62\u5c40\u90e8\u3001\u4fdd\u5b58\u548c\u91cd\u7f6e\u7b49\u3002\u53e6\u5916\u56fe\u5f62\u53ef\u4ee5\u901a\u8fc7\u9f20\u6807\u6eda\u8f6e\u653e\u5927\u7f29\u5c0f\u3002 \u9664\u4e86\u70b9\u56fe\uff0cBokeh \u652f\u6301\u5f88\u591a\u5176\u4ed6\u7684\u5f62\u72b6\uff0c\u5982\u4e0b\u9762\u5c55\u793a\u7684\u65b9\u5757\u3002 In [50]: p = figure(plot_width=400, plot_height=400) ...: p.square([1, 2, 3, 4, 5], [6, 7, 2, 4, 5], ...: size=15, color=\"firebrick\", fill_alpha=0.5) ...: show(p) \u7ebf\u56fe \u00b6 \u7ebf\u56fe\u53ea\u9700\u8981\u8c03\u7528 line() \u65b9\u6cd5\u7ed8\u5236\u5373\u53ef\uff0c\u6b65\u9aa4\u4e0d\u9700\u8981\u6539\u53d8\u3002 In [51]: p = figure(plot_width=400, plot_height=400) ...: p.line([1, 2, 3, 4, 5], [6, 7, 2, 4, 5], ...: line_width=2) ...: show(p) \u7ec4\u5408\u56fe \u00b6 \u5982\u679c\u6211\u4eec\u60f3\u8981\u540c\u65f6\u7ed8\u5236\u70b9\u56fe\u548c\u7ebf\u56fe\uff0c\u5728\u8fdb\u884c\u6b65\u9aa4 2 \u65f6\u53ef\u4ee5\u591a\u6b21\u7ed8\u5236\u56fe\u5f62\u5143\u7d20\u3002\u4e0b\u9762\u5c55\u793a\u4e86\u70b9\u4e0e\u7ebf\u7684\u7ed3\u5408\u3002 In [52]: # \u6784\u5efa\u6570\u636e ...: x = [1, 2, 3, 4, 5] ...: y = [6, 7, 8, 7, 3] ...: # \u6b65\u9aa41\uff1a ...: p = figure(plot_width=400, plot_height=400) ...: # \u6b65\u9aa42\uff1a ...: p.line(x, y, line_width=2) ...: p.circle(x, y, fill_color=\"white\", size=8) ...: # \u6b65\u9aa43\uff1a ...: show(p) \u5982\u679c\u60f3\u8981\u7ed8\u5236\u5176\u4ed6\u7684\u56fe\u5f62\u5143\u7d20\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u67e5\u770b\u5b98\u65b9\u6587\u6863\u3002 13.3.2 \u56fe\u5f62\u6392\u5217 \u00b6 \u5982\u679c\u9700\u8981\u540c\u65f6\u5c55\u793a\u591a\u4e2a\u56fe\u5f62\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u6392\u5217\uff0cBokeh \u63d0\u4f9b\u4e86\u4e24\u79cd\u56fe\u5f62\u6392\u5217\u65b9\u6cd5\u3002 \u6c34\u5e73\u4e0e\u5782\u76f4\u6392\u5217 \u00b6 bokeh.layouts \u6a21\u5757\u63d0\u4f9b\u4e86 row() \u548c column() \u51fd\u6570\u7528\u4e8e\u6c34\u5e73\u548c\u5782\u76f4\u6392\u5217\u56fe\u5f62\u3002 \u6211\u4eec\u5148\u6784\u5efa\u51e0\u4e2a\u56fe\u5f62\uff1a In [53]: # \u6784\u5efa\u6570\u636e ...: x = [1, 2, 3, 4, 5] ...: y = [6, 7, 8, 7, 3] ...: # \u7ed8\u5236\u56fe\u5f62 1 ...: p1 = figure(plot_width=150, plot_height=150) ...: p1.circle(x, y, ...: size=5, line_color=\"navy\", ...: fill_color=\"orange\", fill_alpha=0.5) ...: # \u7ed8\u5236\u56fe\u5f62 2 ...: p2 = figure(plot_width=150, plot_height=150) ...: p2.square(x, y, ...: size=5, color=\"firebrick\", fill_alpha=0.5) ...: # \u7ed8\u5236\u56fe\u5f62 3 ...: p3 = figure(plot_width=150, plot_height=150) ...: p3.line(x, y, line_width=2) \u5206\u522b\u4f7f\u7528\u6c34\u5e73\u6392\u5217\u548c\u5782\u76f4\u6392\u5217\u67e5\u770b\u6548\u679c\u3002 In [54]: from bokeh.layouts import row, column ...: # \u6c34\u5e73\u6392\u5217 ...: show(row(p1, p2, p3)) In [55]: # \u5782\u76f4\u6392\u5217 ...: show(column(p1, p2, p3)) \u7f51\u683c\u6392\u5217 \u00b6 Bokeh \u5e93\u8fd8\u63d0\u4f9b\u4e86\u7f51\u683c\u6392\u5217\u51fd\u6570 gridplot()\uff0c\u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528\u524d\u9762\u7684\u56fe\u5f62\u5bf9\u8c61\u8fdb\u884c\u64cd\u4f5c\u3002 In [56]: from bokeh.layouts import gridplot ...: p = gridplot([[p1, p2], [p3, None]], toolbar_location=None) ...: show(p) gridplot() \u9700\u8981\u4f20\u5165\u56fe\u5f62\u5bf9\u8c61\u5217\u8868\uff0c\u5217\u8868\u7b2c 1 \u4e2a\u5143\u7d20\u8868\u793a\u7b2c 1 \u884c\uff0c\u5217\u8868\u7b2c 2 \u4e2a\u5143\u7d20\u8868\u793a\u7b2c 2 \u884c\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002None \u53ef\u4ee5\u7528\u4e8e\u586b\u5145\u6216\u8005\u5360\u4f4d\u3002 13.4 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 \u672c\u7ae0\u4ecb\u7ecd\u4e86 3 \u4e2a\u9ad8\u7ea7\u7ed8\u56fe\u5e93 Seaborn\u3001Plotnine \u548c Bokeh \u7684\u57fa\u672c\u64cd\u4f5c\u65b9\u6cd5\uff0c\u76f8\u6bd4\u4e8e Matplotlib \u5e93\uff0c\u5b83\u4eec\u4ee3\u7801\u66f4\u52a0\u7b80\u5355\u3001\u56fe\u5f62\u66f4\u4e3a\u7f8e\u89c2\u3001\u80fd\u591f\u66f4\u5bb9\u6613\u5730\u5904\u7406\u590d\u6742\u7684\u6570\u636e\u548c\u9700\u6c42\u3002 Seaborn \u5e93\u662f Matplotlib \u7684\u5347\u7ea7\u7248\uff0c\u5c01\u88c5\u4e86\u5e95\u5c42\u7ed8\u56fe\u903b\u8f91\uff0c\u8bfb\u8005\u6839\u636e\u4e0d\u540c\u7684\u7ed8\u56fe\u9700\u6c42\u9009\u62e9\u4e0d\u540c\u7684\u7ed8\u56fe\u51fd\u6570\u8fdb\u884c\u4f7f\u7528\uff0c\u4e00\u4e9b\u7684\u7ec6\u8282\u5219\u901a\u8fc7\u51fd\u6570\u7684\u9009\u9879\u8fdb\u884c\u63a7\u5236\u3002 Plotnine \u5e93\u662f ggplot \u5728 Python \u4e2d\u7684\u5b9e\u73b0\uff0c\u5b83\u6709\u5f3a\u5927\u7684\u56fe\u5f62\u7406\u8bba\u652f\u6491\uff0c\u7ed8\u56fe\u64cd\u4f5c\u7075\u6d3b\u591a\u53d8\u3002\u867d\u7136\u5b83\u6ca1\u6709 Seaborn \u5e93\u5bb9\u6613\u4e0a\u624b\uff0c\u4f46\u5b83\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\u56fe\u5f62\u7684\u6784\u6210\uff0c\u63a8\u8350\u8bfb\u8005\u7ed3\u5408 R \u4e2d\u7684 ggplot2 \u8fdb\u884c\u7cfb\u7edf\u5b66\u4e60\u3002 Bokeh \u5e93\u7684\u6700\u5927\u7279\u70b9\u662f\u56fe\u5f62\u4f18\u96c5\u7b80\u6d01\u548c\u652f\u6301\u4ea4\u4e92\u3002\u672c\u7ae0\u53ea\u662f\u5bf9\u8be5\u5e93\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u4ecb\u7ecd\uff0c\u4e00\u4e9b\u66f4\u590d\u6742\u7684\u64cd\u4f5c\u548c\u4ea4\u4e92\u7279\u6027\u5e76\u6ca1\u6709\u63d0\u53ca\u3002\u5bf9\u4ea4\u4e92\u5f0f\u7ed8\u56fe\u611f\u5174\u8da3\u7684\u8bfb\u8005\u4e0d\u59a8\u9605\u8bfb\u66f4\u591a\u7684\u8d44\u6599\u8fdb\u884c\u5b66\u4e60\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u7ed8\u56fe\u662f\u6570\u636e\u5206\u6790\u7684\u91cd\u8981\u4e00\u73af\uff0c\u5b83\u662f\u63d0\u793a\u6570\u636e\u89c4\u5f8b\u3001\u4e0e\u4ed6\u4eba\u4ea4\u6d41\u60f3\u6cd5\u3001\u6c47\u603b\u8d44\u6599\u751f\u6210\u7ed3\u8bba\u7684\u5de5\u5177\uff0c\u6570\u636e\u5206\u6790\u4eba\u5458\u5e94\u5f53\u719f\u7ec3\u638c\u63e1\u57fa\u7840\u56fe\u5f62\u7684\u7ed8\u5236\u65b9\u6cd5\u3002\u6ce8\u610f\uff0c\u672c\u4e66\u4ecb\u7ecd\u5f88\u591a\u7684\u7ed8\u56fe\u5e93\u5e76\u4e0d\u662f\u8981\u6c42\u8bfb\u8005\u5168\u90e8\u638c\u63e1\u5b83\u4eec\uff0c\u800c\u662f\u4e3a\u8bfb\u8005\u63d0\u4f9b\u4e0d\u540c\u7684\u89e3\u51b3\u601d\u8def\u548c\u65b9\u6cd5\uff0c\u5b83\u4eec\u5f88\u591a\u7684\u529f\u80fd\u8d77\u5176\u5b9e\u662f\u91cd\u53e0\u7684\uff0c\u5165\u95e8\u7684\u8bfb\u8005\u5e94\u5f53\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u548c\u5174\u8da3\u9009\u62e9\u5176\u4e00\u8fdb\u884c\u6df1\u5165\u7684\u5b66\u4e60\u548c\u5e94\u7528\u3002","title":"\u7b2c 13 \u7ae0 \u6570\u636e\u53ef\u89c6\u5316\u8fdb\u9636"},{"location":"13-advanced-vis/#13","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : Seaborn Plotnine Bokeh \u524d\u9762\u7ae0\u8282\u4e2d\u6211\u4eec\u4f7f\u7528\u7684\u7ed8\u56fe\u65b9\u6cd5\u90fd\u6765\u81ea\u4e8e Matplotlib \u5e93\uff0c\u5b83\u662f Python \u53ef\u89c6\u5316\u7684\u57fa\u7840\u3002\u968f\u7740\u8fd1\u5e74\u6765\u6570\u636e\u5206\u6790\u7684\u6d41\u884c\uff0cPython \u793e\u533a\u51fa\u73b0\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u53ef\u89c6\u5316\u5e93\uff0c\u5305\u62ec\u57fa\u4e8e Matplotlib \u5e93\u7684 Seaborn \u548c\u652f\u6301\u4ea4\u4e92\u5f0f\u5c55\u793a\u7684 Bokeh\u3002\u5b83\u4eec\u63d0\u4f9b\u4e86\u66f4\u6613\u7528\u3001\u66f4\u7f8e\u89c2\u3001\u4ea4\u4e92\u6027\u66f4\u5f3a\u7684\u53ef\u89c6\u5316\u65b9\u5f0f\u3002\u672c\u7ae0\u5c06\u5bf9\u76ee\u524d\u6d41\u884c\u7684 Python \u9ad8\u7ea7\u53ef\u89c6\u5316\u5e93\u8fdb\u884c\u4ecb\u7ecd\uff0c\u5e76\u901a\u8fc7\u4e00\u4e9b\u4f8b\u5b50\u5c55\u793a\u5b83\u4eec\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u53ef\u89c6\u5316\u6548\u679c\u3002","title":"\u7b2c 13 \u7ae0 \u6570\u636e\u53ef\u89c6\u5316\u8fdb\u9636"},{"location":"13-advanced-vis/#131-seaborn","text":"Seaborn \u5728 Matplotlib \u5e93\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u66f4\u9ad8\u7ea7\u7684\u5c01\u88c5\uff0c\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7ea7\u522b\u7684\u63a5\u53e3\u7528\u4e8e\u7ed8\u5236\u4f18\u96c5\u7f8e\u89c2\u3001\u5177\u6709\u5438\u5f15\u529b\u7684\u7edf\u8ba1\u56fe\u5f62\u3002 \u8bfb\u8005\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\u5b89\u88c5 Seaborn \u5e93\uff1a # \u5b89\u88c5\u65b9\u6cd5 1 conda install seaborn # \u5b89\u88c5\u65b9\u6cd5 2 pip install seaborn Seaborn \u7684\u9ed8\u8ba4\u522b\u540d\u662f sns\uff0c\u6240\u4ee5\u5bfc\u5165\u65f6\u4e00\u822c\u91c7\u7528\u4ee5\u4e0b\u7684\u7ea6\u5b9a\uff1a import seaborn as sns \u6211\u4eec\u63a5\u4e0b\u6765\u4f9d\u65e7\u4f7f\u7528\u4e4b\u524d\u63d0\u53ca\u7684\u6c7d\u8f66\u7edf\u8ba1\u6570\u636e\u7528\u4e8e\u53ef\u89c6\u5316\u3002 In [1]: import pandas as pd ...: import numpy as np ...: ...: mtcars = pd.read_csv('files/chapter10/mtcars.csv') \u6211\u4eec\u5148\u67e5\u770b\u6574\u4e2a\u6570\u636e\u96c6\u7684\u4fe1\u606f\uff0c\u7ed3\u679c\u663e\u793a\u4e00\u5171\u6709 11 \u4e2a\u53d8\u91cf\uff08\u5217\uff09\uff0c32 \u8f86\u8f66\u7684\u8bb0\u5f55\u3002 In [2]: mtcars.info() <class 'pandas.core.frame.DataFrame'> RangeIndex: 32 entries, 0 to 31 Data columns (total 11 columns): mpg 32 non-null float64 cyl 32 non-null int64 disp 32 non-null float64 hp 32 non-null int64drat 32 non-null float64 wt 32 non-null float64 qsec 32 non-null float64 vs 32 non-null int64 am 32 non-null int64 gear 32 non-null int64 carb 32 non-null int64 dtypes: float64(5), int64(6) memory usage: 2.9 KB \u4e3a\u4e86\u89c2\u5bdf\u53d8\u91cf\u7684\u6570\u503c\u5206\u5e03\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528 describe() \u65b9\u6cd5\u8fdb\u884c\u6570\u636e\u6c47\u603b\u3002 In [3]: mtcars.describe() Out[3]: mpg cyl disp ... am gear carb count 32.000000 32.000000 32.000000 ... 32.000000 32.000000 32.0000 mean 20.090625 6.187500 230.721875 ... 0.406250 3.687500 2.8125 std 6.026948 1.785922 123.938694 ... 0.498991 0.737804 1.6152 min 10.400000 4.000000 71.100000 ... 0.000000 3.000000 1.0000 25% 15.425000 4.000000 120.825000 ... 0.000000 3.000000 2.0000 50% 19.200000 6.000000 196.300000 ... 0.000000 4.000000 2.0000 75% 22.800000 8.000000 326.000000 ... 1.000000 4.000000 4.0000 max 33.900000 8.000000 472.000000 ... 1.000000 5.000000 8.0000 [8 rows x 11 columns] \u76f8\u6bd4\u4e8e\u6c47\u603b\u8868\u683c\uff0c\u56fe\u5f62\u66f4\u52a0\u76f4\u89c2\uff0c\u7279\u522b\u662f\u5728\u89c2\u5bdf\u6570\u636e\u7684\u53d8\u5316\u8d8b\u52bf\u65b9\u9762\u3002\u8fd9\u65f6\u5019\uff0cSeaborn \u5e93\u5c31\u6392\u4e0a\u7528\u573a\u4e86\u3002","title":"13.1 Seaborn"},{"location":"13-advanced-vis/#1311","text":"\u6211\u4eec\u63a5\u4e0b\u6765\u4f7f\u7528\u6210\u5bf9\u7684\u56fe\u5f62\u6765\u5c55\u793a\u4e24\u4e24\u53d8\u91cf\u4e4b\u95f4\u7684\u53d8\u5316\u8d8b\u52bf\u3002 In [4]: import seaborn as sns In [5]: # \u6ce8\u610f\u5728 Jupyter Notebook \u4e2d\u4f7f\u7528 %matplotlib inline ...: %matplotlib Using matplotlib backend: agg \u4e0a\u56fe\u5bf9\u89d2\u7ebf\u5c55\u793a\u7684\u662f\u5355\u4e2a\u53d8\u91cf\u7684\u6570\u636e\u5206\u5e03\uff0c\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u76f4\u89c2\u5730\u89c2\u6d4b\u5230\u54ea\u4e9b\u53d8\u91cf\u662f\u79bb\u6563\u7684\uff0c\u54ea\u4e9b\u662f\u8fde\u7eed\u7684\uff0c\u8fde\u7eed\u53d8\u91cf\u7684\u5206\u5e03\u8d8b\u52bf\u662f\u600e\u6837\u7684\u3002\u975e\u5bf9\u89d2\u7ebf\u5c55\u793a\u7684\u662f\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u53d8\u5316\u8d8b\u52bf\u3002 \u7b2c 3 \u5230 \u7b2c 7 \u4e2a\u53d8\u91cf\u770b\u8d77\u6765\u5b58\u5728\u7740\u6bd4\u8f83\u660e\u663e\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u6211\u4eec\u5355\u72ec\u5c55\u793a\u5b83\u4eec\u770b\u770b\u3002 In [6]: sns.pairplot(mtcars.iloc[:, 2:7]) \u7279\u522b\u5730\uff0c\u6211\u4eec\u67e5\u770b\u4e0b\u6c7d\u8f66\u91cd\u91cf\u548c\u6bcf\u52a0\u4ed1\u6cb9\u8017\u884c\u9a76\u7684\u82f1\u91cc\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 In [7]: sns.pairplot(mtcars.loc[:, ['wt', 'mpg']]) \u4e0d\u96be\u53d1\u73b0\u6c7d\u8f66\u8d8a\u91cd\uff0c\u8f66\u7a0b\u8d8a\u77ed\u3002\u8fd9\u79cd\u5173\u7cfb\u662f\u5426\u4f1a\u53d7\u5230\u5176\u4ed6\u56e0\u7d20\u7684\u5f71\u54cd\u5462\uff1f\u4f8b\u5982\uff0c\u6c7d\u8f66\u7684\u6c14\u7f38\u6570\u3002\u6211\u4eec\u5c06 cyl \u52a0\u5165\u7ed8\u56fe\u5e76\u6839\u636e\u5b83\u7684\u503c\u8d4b\u4e88\u989c\u8272\uff0c\u751f\u6210\u5e26\u5206\u7c7b\u6807\u7b7e\u7684\u56fe\u3002 In [8]: sns.pairplot(mtcars.loc[:, ['wt', 'mpg', 'cyl']], hue='cyl') \u7b2c 2 \u4e2a\u5b50\u56fe\u7684\u7ed3\u679c\u544a\u8bc9\u6211\u4eec\u4e0a\u8ff0\u7684\u5173\u7cfb\u4e0d\u53d7\u6c14\u7f38\u6570\u7684\u5f71\u54cd\uff0c\u53e6\u5916\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6c14\u7f38\u6570\u8d8a\u591a\u7684\u8f66\u8f86\u91cd\u91cf\u4e5f\u8d8a\u5927\u3002\u8fd9\u4e9b\u7ed3\u679c\u4e0e\u6211\u4eec\u7684\u5e38\u8bc6\u4e00\u81f4\u3002 \u9ed8\u8ba4 Seaborn \u4f7f\u7528\u7684\u662f\u767d\u8272\u7684\uff08\u80cc\u666f\uff09\u98ce\u683c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 set_style() \u51fd\u6570\u8fdb\u884c\u4fee\u6539\u3002 In [9]: sns.set_style('dark') In [10]: sns.pairplot(mtcars.loc[:, ['wt', 'mpg', 'cyl']], hue='cyl') \u53ef\u4ee5\u8bbe\u7f6e\u7684\u9009\u9879\u4e00\u5171\u6709 5 \u79cd\uff1adarkgrid\u3001whitegrid\u3001dark\u3001white \u548c ticks\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 set_palette() \u4fee\u6539\u8c03\u8272\u677f\uff0c\u4f8b\u5982\uff0c\u8ba9\u4e0a\u9762\u56fe\u5f62\u7684\u914d\u8272\u66f4\u9002\u5408\u8272\u76f2\u4eba\u89c2\u770b\u3002 In [11]: sns.set_style('dark') In [12]: sns.set_palette('colorblind') In [13]: sns.pairplot(mtcars.loc[:, ['wt', 'mpg', 'cyl']], ...: hue='cyl') Seaborn \u652f\u6301\u516d\u79cd\u8c03\u8272\u76d8\uff1adeep\u3001muted\u3001pastel\u3001bright\u3001dark \u548c colorblind\u3002","title":"13.1.1 \u6210\u5bf9\u56fe"},{"location":"13-advanced-vis/#1312","text":"\u4e0a\u9762\u6211\u4eec\u662f\u901a\u8fc7 Pandas \u7684\u6570\u636e\u7b5b\u9009\u64cd\u4f5c\u4ec5\u5c55\u793a\u6211\u4eec\u60f3\u8981\u89c2\u5bdf\u7684\u53d8\u91cf\uff0c\u5b9e\u9645\u4e0a Seaborn \u672c\u8eab\u5c31\u652f\u6301\u5b50\u96c6\u56fe\u7684\u5c55\u793a\uff0c\u53ea\u9700\u8981\u5c06\u5c55\u793a\u7684\u53d8\u91cf\u4f20\u5165 vars \u53c2\u6570\u3002 In [14]: sns.set_style('whitegrid') In [15]: sns.pairplot(mtcars, ...: hue='cyl', ...: vars=['wt', 'mpg', 'cyl']) \u4e0b\u9762\u4ee3\u7801\u5c06\u98ce\u683c\u8bbe\u4e3a\u767d\u8272\uff0c\u5e76\u7528\u6a2a\u8f74\u548c\u7eb5\u8f74\u5c55\u793a\u4e0d\u540c\u7684\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u7528 4 \u4e2a\u5b50\u56fe\u5c55\u793a 4 \u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u6570\u636e\u5206\u5e03\u8d8b\u52bf\u3002\u7136\u540e\u52a0\u4e0a\u989c\u8272\u4fe1\u606f\uff0c\u4e00\u5171\u53ef\u4ee5\u5c55\u793a 5 \u4e2a\u53d8\u91cf\u3002 In [16]: sns.set_style('white') In [17]: sns.pairplot(mtcars, ...: hue='cyl', ...: x_vars=['wt', 'mpg'], ...: y_vars=['hp', 'disp'])","title":"13.1.2 \u5b50\u96c6\u56fe"},{"location":"13-advanced-vis/#1313","text":"\u4e0a\u4e00\u4e2a\u56fe\u6211\u4eec\u770b\u5230 4 \u4e2a\u53d8\u91cf\u4e4b\u95f4\u5b58\u5728\u660e\u663e\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u5f53\u6211\u4eec\u6dfb\u52a0\u9009\u9879 kind=\u2019reg\u2019 \u540e\uff0cSeaborn \u4f1a\u81ea\u52a8\u4e3a\u56fe\u5f62\u6dfb\u52a0\u4e0a\u56de\u5f52\u7ebf\u3002 In [18]: sns.set_style('ticks') In [19]: sns.set_palette('dark') In [20]: sns.pairplot(mtcars, ...: kind='reg', ...: x_vars=['wt', 'mpg'], ...: y_vars=['hp', 'disp'])","title":"13.1.3 \u56de\u5f52\u56fe"},{"location":"13-advanced-vis/#1314","text":"\u6838\u5bc6\u5ea6\u56fe\u5728\u5c55\u793a\u6570\u636e\u7684\u5e73\u6ed1\u5206\u5e03\u65f6\u66f4\u4e3a\u6709\u6548\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 diag_kind=\u2019kde\u2019 \u8ba9\u5bf9\u89d2\u7ebf\u5c55\u793a\u6bcf\u4e2a\u53d8\u91cf\u5206\u5e03\u7684\u6838\u5bc6\u5ea6\u4f30\u8ba1\u3002 In [21]: sns.set_palette('bright') In [22]: sns.pairplot(mtcars.loc[:, ['wt', 'mpg', 'hp']], ...: kind='reg', diag_kind='kde') \u524d\u9762 pairplot() \u63d0\u4f9b\u7684\u4e30\u5bcc\u7279\u6027\u5df2\u7ecf\u8db3\u4ee5\u6ee1\u8db3\u5f88\u591a\u7684\u6570\u636e\u63a2\u7d22\u6027\u5206\u6790\u9700\u6c42\u3002\u63a5\u4e0b\u6765\u672c\u4e66\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u7edf\u8ba1\u5206\u6790\u5e38\u89c1\u56fe\u5f62\u7684 Seaborn \u5b9e\u73b0\uff0c\u5b83\u4eec\u7684\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u4e00\u822c\u901a\u8fc7\u6307\u5b9a\u7ed8\u56fe\u4f7f\u7528\u7684 DataFrame \u548c\u5750\u6807\u8f74\u9700\u8981\u5c55\u793a\u7684\u53d8\u91cf\u540d\u79f0\u5c31\u53ef\u4ee5\u5b8c\u6210\u7ed8\u56fe\u3002","title":"13.1.4 \u6838\u5bc6\u5ea6\u56fe"},{"location":"13-advanced-vis/#1315","text":"barplot() \u51fd\u6570\u7528\u4e8e\u7ed8\u5236\u6761\u5f62\u56fe\uff0c\u4e0b\u9762\u7ed3\u679c\u5c55\u793a\u4e86\u6c7d\u8f66\u4e0d\u540c\u6c14\u7f38\u6570\u884c\u7a0b\u7684\u5dee\u522b\u3002\u6ce8\u610f\uff0c\u7ad6\u7ebf\u8868\u793a\u7f6e\u4fe1\u533a\u95f4\u3002 In [23]: sns.barplot(x='cyl', y='mpg', data=mtcars) \u6211\u4eec\u770b\u770b\u5f15\u64ce\u7c7b\u578b\u53d8\u91cf vs \u7684\u4e0d\u540c\u662f\u5426\u4f1a\u5f71\u54cd\u4e0a\u8ff0\u7684\u5dee\u5f02\u3002 In [24]: sns.barplot(x='cyl', y='mpg', hue='vs', ...: data=mtcars) \u7ed3\u679c\u8868\u660e\u6c7d\u8f66\u884c\u7a0b\u4e0d\u600e\u4e48\u53d7\u5f15\u64ce\u7c7b\u578b\u7684\u5f71\u54cd\u3002","title":"13.1.5 \u6761\u5f62\u56fe"},{"location":"13-advanced-vis/#1316","text":"countplot() \u51fd\u6570\u7528\u4e8e\u7ed8\u5236\u8ba1\u6570\u56fe\uff0c\u8be5\u79cd\u56fe\u5f62\u7c7b\u578b\u9002\u5408\u5206\u7c7b\u6570\u636e\uff0c\u5982\u6c14\u7f38\u6570\u3002 In [25]: sns.countplot(x='cyl', data=mtcars) \u4e0d\u96be\u53d1\u73b0 32 \u79cd\u6c7d\u8f66\u6c14\u7f38\u6570\u4e3a 8 \u7684\u6700\u591a\uff0c\u4e3a 6 \u7684\u6700\u5c11\u3002","title":"13.1.6 \u8ba1\u6570\u56fe"},{"location":"13-advanced-vis/#1317","text":"pointplot() \u51fd\u6570\u7528\u4e8e\u7ed8\u5236\u70b9\u56fe\u3002\u70b9\u56fe\u7684\u4f7f\u7528\u7387\u5f88\u9ad8\uff0c\u9002\u7528\u8303\u56f4\u4e5f\u5f88\u5e7f\u6cdb\u3002 In [26]: sns.pointplot(x='cyl', ...: y='wt', ...: hue='vs', ...: markers=['^', 'o'], ...: linestyles=['-', '--'], ...: data=mtcars) \u76f8\u6bd4\u4e8e\u6761\u5f62\u56fe\uff0c\u7ebf\u56fe\u66f4\u9002\u7528\u4e8e\u5c55\u793a\u4e0d\u540c\u5f15\u64ce\u7c7b\u578b\u4e0b\u6c7d\u8f66\u91cd\u91cf\u968f\u6c14\u7f38\u6570\u7684\u53d8\u5316\u3002","title":"13.1.7 \u70b9\u56fe"},{"location":"13-advanced-vis/#1318","text":"boxplot() \u51fd\u6570\u7528\u4e8e\u7ed8\u5236\u7bb1\u7ebf\u56fe\u3002\u7bb1\u7ebf\u56fe\u5728\u7edf\u8ba1\u5206\u6790\u4e2d\u975e\u5e38\u5e38\u7528\uff0c\u76f8\u6bd4\u4e8e\u7ebf\u56fe\u548c\u6761\u5f62\u56fe\uff0c\u5b83\u53ef\u4ee5\u7b80\u5355\u76f4\u89c2\u7684\u89c2\u5bdf\u6570\u636e\u7684\u6837\u672c\u91cf\u3001\u5206\u5e03\u4ee5\u53ca\u5dee\u5f02\u3002 \u4f7f\u7528\u548c\u4e0a\u4e00\u4e2a\u56fe\u4e00\u6837\u7684\u6570\u636e\u548c\u53d8\u91cf\uff0c\u4e0b\u9762\u7684\u7bb1\u7ebf\u56fe\u663e\u793a\u6548\u679c\u5b8c\u5168\u4e0d\u540c\u4e8e\u7ebf\u56fe\u3002 In [27]: sns.boxplot(x='cyl', ...: y='wt', ...: hue='vs', ...: data=mtcars)","title":"13.1.8 \u7bb1\u7ebf\u56fe"},{"location":"13-advanced-vis/#1319","text":"violinplot() \u51fd\u6570\u7528\u4e8e\u7ed8\u5236\u5c0f\u63d0\u7434\u56fe\u3002\u5c0f\u63d0\u7434\u56fe\u662f\u7bb1\u7ebf\u56fe\u7684\u62d3\u5c55\uff0c\u5b83\u589e\u52a0\u4e86\u5bf9\u6570\u636e\u5206\u5e03\u66f4\u4e3a\u76f4\u89c2\u7684\u89c6\u89c9\u611f\u53d7\u3002 \u4f7f\u7528\u4e0e\u7bb1\u7ebf\u56fe\u5b8c\u5168\u4e00\u81f4\u7684\u6570\u636e\uff0c\u6211\u4eec\u518d\u770b\u770b\u5c0f\u63d0\u7434\u56fe\u662f\u5982\u4f55\u7684\u3002 In [28]: sns.violinplot(x='cyl', ...: y='wt', ...: hue='vs', ...: data=mtcars)","title":"13.1.9 \u5c0f\u63d0\u7434\u56fe"},{"location":"13-advanced-vis/#13110","text":"\u672c\u8282\u6700\u540e\u4ecb\u7ecd\u7684\u662f\u53cc\u53d8\u91cf\u5206\u5e03\u56fe\uff0c\u5b83\u7528\u4e8e\u5c55\u793a\u53cc\u53d8\u91cf\u7684\u5206\u5e03\u548c\u5173\u7cfb\uff0c\u901a\u8fc7 jointplot() \u51fd\u6570\u5b9e\u73b0\u3002 \u4e0b\u9762\u7ed8\u5236\u56fe\u5f62\u5c55\u793a\u884c\u7a0b\u548c\u6c7d\u8f66\u91cd\u91cf\u7684\u4e00\u7ef4\u5206\u5e03\u4e0e\u4e8c\u7ef4\u6838\u5bc6\u5ea6\u3002 In [29]: sns.jointplot(x='mpg', y='wt', ...: data=mtcars, ...: kind='kde') \u4e0b\u9762\u901a\u8fc7\u4fee\u6539 kind \u9009\u9879\u5c55\u793a\u4e0a\u8ff0\u4e24\u4e2a\u53d8\u91cf\u7684\u76f4\u65b9\u56fe\u548c\u7ebf\u6027\u56de\u5f52\u56fe\u3002 In [30]: sns.jointplot(x='mpg', y='wt', ...: data=mtcars, ...: kind='reg')","title":"13.1.10 \u53cc\u53d8\u91cf\u5206\u5e03\u56fe"},{"location":"13-advanced-vis/#132-plotnine","text":"ggplot2 \u662f\u57fa\u4e8e\u300a\u56fe\u5f62\u8bed\u6cd5\u300b\u7684 R \u8bed\u8a00\u5b9e\u73b0\uff0c\u5b83\u63d0\u4f9b\u4e86\u975e\u5e38\u7075\u6d3b\u7684\u56fe\u5f62\u751f\u6210\u548c\u7ec4\u5408\u65b9\u6cd5\uff0c\u76ee\u524d\u6709\u5927\u91cf\u7684\u62d3\u5c55\u5305\u3002\u7531\u4e8e ggplot2 \u7684\u6d41\u884c\u6027\uff0c\u6709\u5f00\u53d1\u8005\u5c06\u5b83\u7684\u529f\u80fd\u79fb\u690d\u5230\u4e86 Python \u793e\u533a\uff0c\u5e76\u547d\u540d\u4e3a plotnine\u3002 \u8bfb\u8005\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\u5b89\u88c5 plotnine \u5e93\uff1a # \u5b89\u88c5\u65b9\u6cd5 1 conda install -c conda-forge plotnine # \u5b89\u88c5\u65b9\u6cd5 2 pip install plotnine plotnine \u5e93\u7684\u8bed\u6cd5\u4e0e R \u8bed\u8a00\u7684 ggplot2 \u57fa\u672c\u4e00\u81f4\uff0c\u4e0d\u8fc7\u9700\u8981\u5728\u6267\u884c\u8bed\u53e5\u5916\u5c42\u4f7f\u7528\u62ec\u53f7\uff0c\u4ee5\u907f\u514d Python \u7684\u9519\u8bef\u8bed\u6cd5\u89e3\u6790\u3002 \u6211\u4eec\u5148\u5bfc\u5165 plotnine \u7684\u7ed8\u56fe\u51fd\u6570\u548c\u81ea\u5e26\u6570\u636e\u96c6 mtcars\uff0c\u5e76\u67e5\u770b\u4e00\u4e2a\u5b98\u65b9\u6587\u6863\u7684\u793a\u4f8b\u3002 In [31]: from plotnine import * In [32]: from plotnine.data import mtcars In [33]: (ggplot(mtcars, aes('wt', 'mpg', color='factor(gear)')) ...: + geom_point() ...: + stat_smooth(method='lm') ...: + facet_wrap('~gear')) \u521d\u6b21\u63a5\u89e6 ggplot \u7684\u8bfb\u8005\u53ef\u80fd\u4f1a\u770b\u4e0d\u61c2\u4e0a\u9762\u7684\u4ee3\u7801\u5e76\u4e14\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8fd9\u51e0\u53e5\u4ee3\u7801\u7684\u7ec4\u5408\u53ef\u4ee5\u5f62\u6210\u7f8e\u89c2\u7684\u7ed3\u679c\u56fe\u3002\u8fd9\u6b63\u662f ggplot \u7684\u5f3a\u5927\u4e4b\u5904\uff0c\u5b83\u6709\u7684\u81ea\u5df1\u7684\u8bed\u6cd5\u89c4\u5219\uff1aggplot \u7ed8\u5236\u56fe\u5f62\u4e0d\u662f\u901a\u8fc7\u5355\u4e2a\u51fd\u6570\u7684\u8c03\u7528\uff0c\u800c\u662f\u901a\u8fc7\u4e00\u7ec4\u51fd\u6570\u7684\u7ec4\u5408\u8fdb\u884c\u5b9e\u73b0\uff0c\u6bcf\u4e00\u4e2a\u51fd\u6570\u90fd\u6709\u72ec\u7279\u7684\u529f\u80fd\u3002\u5f53\u6211\u4eec\u4e86\u89e3\u5176\u57fa\u672c\u539f\u7406\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u8f7b\u677e\u9a7e\u9a6d\uff0c\u5e76\u4e14\u4ee5\u4e00\u63a8\u4e09\u3002 \u672c\u4e66\u63a5\u4e0b\u6765\u4f1a\u4ecb\u7ecd ggplot \u7684\u4e00\u4e9b\u672f\u8bed\u5e76\u5bf9\u5176\u57fa\u672c\u5de5\u4f5c\u6b65\u9aa4\u548c\u539f\u7406\u8fdb\u884c\u89e3\u6790\uff0c\u4ee5\u5e2e\u52a9\u8bfb\u8005\u4e86\u89e3\u548c\u57fa\u672c\u638c\u63e1 ggplot \u7684\u8bed\u6cd5\u3002\u5982\u679c\u8bfb\u8005\u540e\u7eed\u5bf9 ggplot \u975e\u5e38\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u901a\u8fc7 plotnine \u7684\u5b98\u65b9\u6587\u6863\u4ee5\u53ca R \u5305 ggplot2 \u8fdb\u884c\u8fdb\u4e00\u6b65\u5b66\u4e60\u3002","title":"13.2 Plotnine"},{"location":"13-advanced-vis/#1321-ggplot","text":"\u7ed8\u56fe\u6700\u91cd\u8981\u7684\u6709\u4e24\u70b9\uff1a\u6570\u636e\u4e0e\u663e\u793a\u6548\u679c\u3002\u6570\u636e\u662f\u6211\u4eec\u60f3\u8981\u53ef\u89c6\u5316\u7684\u5bf9\u8c61\uff0c\u5b83\u5305\u542b\u4e86\u82e5\u5e72\u7684\u53d8\u91cf\uff0c\u53d8\u91cf\u5b58\u50a8\u5728 DataFrame \u7684\u6bcf\u4e00\u5217\u4e2d\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u5e38\u7528\u7684 mtcars \u6570\u636e\u96c6\u6bcf\u4e00\u5217\u5305\u542b\u6c7d\u8f66\u7684\u4e0d\u540c\u4fe1\u606f\u3002 In [34]: mtcars.head() Out[34]: mpg cyl disp hp drat wt qsec vs am gear carb 0 21.0 6 160.0 110 3.90 2.620 16.46 0 1 4 4 1 21.0 6 160.0 110 3.90 2.875 17.02 0 1 4 4 2 22.8 4 108.0 93 3.85 2.320 18.61 1 1 4 1 3 21.4 6 258.0 110 3.08 3.215 19.44 1 0 3 1 4 18.7 8 360.0 175 3.15 3.440 17.02 0 0 3 2 \u77e5\u9053\u6570\u636e\u7684\u4fe1\u606f\u6709\u54ea\u4e9b\u540e\uff0c\u53e6\u4e00\u4e2a\u8981\u70b9\u662f\u786e\u5b9a\u6211\u4eec\u60f3\u8981\u7ed8\u5236\u7684\u56fe\u5f62\u6548\u679c\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u56fe\u7684\u7c7b\u578b\uff0c\u5982\u70b9\u56fe\u3001\u7ebf\u56fe\u3001\u7bb1\u7ebf\u56fe\u3002\u66f4\u8be6\u7ec6\u5730\u8bf4\uff0c\u5982\u679c\u662f\u70b9\u56fe\uff0c\u9700\u8981\u5206\u7ec4\u5417\uff1f\u4e0d\u540c\u7ec4\u522b\u5e94\u8be5\u600e\u4e48\u4f53\u73b0\uff1f\u70b9\u7684\u5927\u5c0f\u5982\u4f55\uff1f \u524d\u9762\u6211\u4eec\u63a5\u89e6\u7684\u7ed8\u56fe\u5e93\u90fd\u662f\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u5c01\u88c5\u4e3a\u4e0d\u540c\u7684\u51fd\u6570\u6216\u65b9\u6cd5\uff0c\u6211\u4eec\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u9009\u62e9\u5176\u4e00\u4f7f\u7528\uff0c\u5982\u679c\u9700\u8981\u8fdb\u4e00\u6b65\u7ec6\u8c03\u5219\u9700\u8981\u67e5\u770b\u67d0\u4e2a\u51fd\u6570\u8be6\u7ec6\u7684\u6587\u6863\u6216\u8005\u901a\u8fc7\u7f51\u7edc\u641c\u7d22\u5bf9\u5e94\u7684\u89e3\u51b3\u529e\u6cd5\u3002 ggplot \u7684\u65b9\u6cd5\u5219\u4e0e\u4e0a\u8ff0\u4e0d\u76f8\u540c\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\uff0c\u6211\u4eec\u5c06\u7ed8\u56fe\u6bd4\u4f5c\u505a\u83dc\u3002Matplotlib \u7b49\u5e93\u5c31\u597d\u50cf\u662f\u8c03\u5236\u597d\u4e86\u67d0\u9053\u83dc\u7684\u914d\u65b9\uff0c\u6211\u4eec\u6839\u636e\u914d\u65b9\u51c6\u5907\u98df\u6750\u6309\u6b65\u9aa4\u64cd\u4f5c\uff1b\u800c ggplot \u63d0\u4f9b\u7684\u662f\u505a\u597d\u7f8e\u98df\u6240\u9700\u8981\u7684\u5de5\u5177\u96c6\u4ee5\u53ca\u64cd\u4f5c\u5de5\u5177\u7684\u65b9\u6cd5\u89c4\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u5fc3\u610f\u5229\u7528\u4e0d\u540c\u7684\u5de5\u5177\u548c\u98df\u6750\u7ec4\u5408\u70f9\u996a\u51fa\u4e0d\u540c\u7684\u83dc\u54c1\u3002 \u4ece\u5b66\u4e60\u66f2\u7ebf\u65b9\u9762\u6765\u8bf4\uff0cMatplotlib \u7b49\u5e93\u66f4\u4e3a\u7b80\u5355\uff0c\u4f46\u8bfb\u8005\u82b1\u8d39\u65f6\u95f4\u5b66\u4e60 ggplot \u4e0a\u662f\u503c\u5f97\u7684\uff0c\u56e0\u4e3a\u5b83\u6709\u66f4\u7075\u6d3b\u7684\u64cd\u4f5c\u548c\u66f4\u591a\u7684\u53ef\u80fd\u6027\u3002 \u5728\u5b66\u4e60\u7ed8\u56fe\u6b65\u9aa4\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4e86\u89e3\u4e0b ggplot \u7684\u4e00\u4e9b\u6838\u5fc3\u672f\u8bed\uff1a \u51e0\u4f55\u5bf9\u8c61\uff1a\u5b83\u662f\u7528\u4ee5\u5448\u73b0\u6570\u636e\u7684\u51e0\u4f55\u56fe\u5f62\u5bf9\u8c61\uff0c\u5982\u6761\u5f62\u3001\u7ebf\u6761\u548c\u70b9\u3002 \u56fe\u5f62\u5c5e\u6027\uff1a\u5b83\u662f\u51e0\u4f55\u5bf9\u8c61\u7684\u89c6\u89c9\u5c5e\u6027\uff0c\u5982 x \u5750\u6807\u548c y \u5750\u6807\u3001\u7ebf\u6761\u989c\u8272\u3001\u70b9\u7684\u5f62\u72b6\u7b49\u3002 \u6620\u5c04\uff1a\u6570\u503c\u7684\u503c\u548c\u56fe\u5f62\u5c5e\u6027\u4e4b\u95f4\u5b58\u5728\u7740\u67d0\u7c7b\u6620\u5c04\u3002 \u6807\u5ea6\uff1a\u5b83\u63a7\u5236\u7740\u6570\u636e\u7a7a\u95f4\u7684\u503c\u5230\u56fe\u5f62\u5c5e\u6027\u7a7a\u95f4\u7684\u503c\u7684\u6620\u5c04\u3002\u4e00\u4e2a\u8fde\u7eed\u578b\u7684 y \u6807\u5ea6\u4f1a\u5c06\u8f83\u5927\u7684\u6570\u503c\u6620\u5c04\u81f3\u7a7a\u95f4\u4e2d\u7eb5\u5411\u66f4\u9ad8\u7684\u4f4d\u7f6e\u3002 \u5f15\u5bfc\u5143\u7d20\uff1a\u5b83\u5411\u770b\u56fe\u8005\u5c55\u793a\u4e86\u5982\u4f55\u5c06\u89c6\u89c9\u5c5e\u6027\u6620\u5c04\u56de\u6570\u636e\u7a7a\u95f4\u3002\u6700\u5e38\u89c1\u7684\u5143\u7d20\u662f\u5750\u6807\u8f74\u4e0a\u7684\u523b\u5ea6\u7ebf\u3001\u6807\u7b7e\u3001\u4ee5\u53ca\u56fe\u4f8b\u3002","title":"13.2.1 ggplot \u672f\u8bed"},{"location":"13-advanced-vis/#1322-ggplot","text":"\u5728\u521d\u6b65\u4e86\u89e3\u4e00\u4e9b\u672f\u8bed\u540e\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u9010\u6b65\u5b66\u4e60\u7ed8\u56fe\u7684\u8bed\u6cd5\u548c\u6b65\u9aa4\u3002 \u5728 ggplot \u4e2d\uff0c\u56fe\u662f\u901a\u8fc7 + \u53f7\u4e32\u8054\u7684\u51fd\u6570\u521b\u5efa\u7684\u3002 In [35]: (ggplot(mtcars, aes(x='wt', y='mpg')) ...: + geom_point()) \u4e0a\u9762\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u70b9\u56fe\uff0c\u6574\u4e2a\u7ed8\u56fe\u6b65\u9aa4\u7531 3 \u4e2a\u51fd\u6570\u534f\u4f5c\u5b8c\u6210\u3002 ggplot() - \u521b\u5efa\u4e00\u4e2a ggplot \u5bf9\u8c61 aes() - \u521b\u5efa\u4e00\u4e2a\u7f8e\u5b66\u6620\u5c04\u5bf9\u8c61 geom_point() - \u521b\u5efa\u4e00\u4e2a\u70b9\u7684\u51e0\u4f55\u5bf9\u8c61 ggplot() \u521d\u59cb\u5316\u56fe\u5f62\u5e76\u6307\u5b9a\u8981\u7528\u5230\u7684\u6570\u636e\u6765\u6e90\u548c\u53d8\u91cf\u3002aes() \u51fd\u6570\u7684\u529f\u80fd\u662f\u6307\u5b9a\u6bcf\u4e2a\u53d8\u91cf\u626e\u6f14\u7684\u89d2\u8272\uff08aes \u4ee3\u8868 aesthetics\uff0c\u5373\u5982\u4f55\u7528\u89c6\u89c9\u5f62\u5f0f\u5448\u73b0\u4fe1\u606f)\u3002\u5728\u8fd9\u91cc\uff0c\u53d8\u91cf wt \u7684\u503c\u6620\u5c04\u5230 x \u8f74\uff0cmpg \u7684\u503c\u6620\u5c04\u5230 y \u8f74\u3002 ggplot() \u51fd\u6570\u4e00\u822c\u6709 2 \u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u753b\u56fe\u7684\u6570\u636e\uff0c\u7b2c\u4e8c\u4e2a\u662f\u6620\u5c04\u5bf9\u8c61\u3002\u4e00\u4e2a\u6620\u5c04\u5bf9\u8c61\u53ef\u4ee5\u6307\u5b9a\u56fe\u5f62\u7684\u5c5e\u6027\uff0c\u4e3b\u8981\u5305\u62ec x\u3001y\u3001color\u3001size \u7b49\u3002\u4e00\u822c\u6211\u4eec\u7ed8\u5236\u7684\u90fd\u662f\u4e8c\u7ef4\u56fe\uff0cx\u3001y \u662f\u6700\u5e38\u7528\u7684\uff0c\u6211\u4eec\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u5c06 x\u3001y \u8f74\u548c\u76f8\u5e94\u7684\u53d8\u91cf\u5bf9\u5e94\u8d77\u6765\uff0c\u5373\u6620\u5c04\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u8bbe\u5b9a x \u8f74\u5c55\u793a\u6c7d\u8f66\u91cd\u91cf\uff0cy \u8f74\u5c55\u793a\u91cc\u7a0b\u6570\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u751f\u6210\u4e00\u4e2a\u5e26\u6709\u5750\u6807\u6620\u5c04\u7684\u753b\u5e03\u3002 In [36]: ggplot(mtcars, aes(x='wt', y='mpg')) \u5f53\u6211\u4eec\u5efa\u7acb\u597d\u753b\u5e03\u548c\u5750\u6807\u6620\u5c04\u540e\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u601d\u8003\u8be5\u7528\u4ec0\u4e48\u51e0\u4f55\u5bf9\u8c61\u5c55\u793a\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\u662f\u70b9\u56fe\uff1f\u7ebf\u56fe\uff1f\u8fd8\u662f\u70b9\u7ebf\u7ed3\u5408\uff1f \u5982\u679c\u662f\u70b9\u56fe\uff0c\u6211\u4eec\u5728\u4e0a\u8ff0\u4ee3\u7801\u540e\u9762\u8854\u63a5\u70b9\u7684\u51e0\u4f55\u5bf9\u8c61\u3002 In [37]: ggplot(mtcars, aes(x='wt', y='mpg')) + geom_point() \u6211\u4eec\u4e0d\u96be\u731c\u60f3\u5230\u7ebf\u56fe\u7684\u505a\u6cd5\uff1a In [38]: ggplot(mtcars, aes(x='wt', y='mpg')) + geom_line() \u4e0d\u77e5\u9053\u8bfb\u8005\u73b0\u5728\u662f\u5426\u611f\u53d7\u5230\u4e86 ggplot \u7684\u795e\u5947\u4e4b\u5904\u3002\u6211\u4eec\u7528\u4eba\u53ef\u4ee5\u7406\u89e3\u7684\u8bed\u8a00\u6765\u63cf\u8ff0\u4e0a\u9762\u4e24\u5e45\u56fe\u7684\u751f\u6210\u4ee3\u7801\uff1a \u4ee5 mtcars \u4f5c\u4e3a\u8f93\u5165\uff0c\u5c06 wt \u5217\u6620\u5c04\u5230 x \u8f74\u3001 mpg \u5217\u6620\u5c04\u5230 y \u8f74\uff0c\u7136\u540e\u7528\u70b9\u7ed8\u5236\u4e00\u5e45\u56fe \u4ee5 mtcars \u4f5c\u4e3a\u8f93\u5165\uff0c\u5c06 wt \u5217\u6620\u5c04\u5230 x \u8f74\u3001 mpg \u5217\u6620\u5c04\u5230 y \u8f74\uff0c\u7136\u540e\u7528\u7ebf\u7ed8\u5236\u4e00\u5e45\u56fe ggplot \u6839\u636e\u8fd9\u4e9b\u6307\u4ee4\u7684\u7ec4\u5408\u81ea\u52a8\u751f\u6210\u6211\u4eec\u60f3\u8981\u7684\u56fe\u5f62\u3002 \u53e6\u5916\uff0c\u51e0\u4f55\u5bf9\u8c61\u662f\u53ef\u4ee5\u5c42\u5c42\u53e0\u52a0\u7684\u3002\u4e0a\u9762\u7684\u7ebf\u56fe\u5e76\u6ca1\u6709\u5c55\u793a\u51fa\u7ebf\u6027\u56de\u5f52\u7684\u6548\u679c\uff0c\u7ebf\u6027\u56de\u5f52\u662f\u4e00\u79cd\u5e73\u6ed1\u51e0\u4f55\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5730\u4fee\u6539\u4e3a\u4e0b\u9762\u4ee3\u7801\u3002\u6ce8\u610f\uff0c\u5f53 ggplot \u8bed\u53e5\u5199\u4e3a\u591a\u884c\u6587\u672c\u65f6\uff0c\u5916\u90e8\u9700\u8981\u4e00\u4e2a\u5c0f\u62ec\u53f7\u3002 In [39]: (ggplot(mtcars, aes(x='wt', y='mpg')) ...: + geom_smooth(method=\"lm\")) \u6211\u4eec\u4e0d\u59a8\u5728\u540e\u9762\u8854\u63a5\u70b9\u7684\u51e0\u4f55\u5bf9\u8c61\uff0c\u5c55\u793a\u539f\u59cb\u7684\u6570\u636e\u70b9\u4fe1\u606f\u3002 In [40]: (ggplot(mtcars, aes(x='wt', y='mpg')) ...: + geom_smooth(method=\"lm\") ...: + geom_point()) \u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u4fee\u6539\u70b9\u548c\u7ebf\u6761\u7684\u989c\u8272\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u51e0\u4f55\u51fd\u6570\u7684\u9009\u9879\u5b9e\u73b0\u3002 In [41]: (ggplot(mtcars, aes(x='wt', y='mpg')) ...: + geom_smooth(method=\"lm\", color='red') ...: + geom_point(color='blue')) \u5f15\u5bfc\u5143\u7d20\u5305\u62ec\u6807\u7b7e\u3001\u6807\u9898\u3001\u56fe\u4f8b\u7b49\u90fd\u53ef\u4ee5\u901a\u8fc7 labs() \u51fd\u6570\u8fdb\u884c\u8bbe\u5b9a\u6216\u4fee\u6539\u3002\u4e0b\u9762\u4ee3\u7801\u4e3a\u4e0a\u56fe\u6dfb\u52a0\u4e86 x\u3001y \u8f74\u6807\u7b7e\u548c\u6807\u9898\uff0c\u4ee5\u5e2e\u52a9\u9605\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3\u8be5\u56fe\u7684\u542b\u4e49\u3002 In [42]: (ggplot(mtcars, aes(x='wt', y='mpg')) ...: + geom_smooth(method=\"lm\", color=\"red\") ...: + geom_point(color=\"blue\") ...: + labs(title=\"Automobie Data\", x=\"Weight\", y=\"Miles Per Gallon\")) ggplot \u63d0\u4f9b\u4e86\u5206\u7ec4\u548c\u5206\u9762\u7684\u65b9\u6cd5\u3002\u5206\u7ec4\u6307\u7684\u662f\u5728\u4e00\u4e2a\u56fe\u5f62\u4e2d\u663e\u793a\u4e24\u7ec4\u6216\u591a\u7ec4\u89c2\u5bdf\u7ed3\u679c\u3002\u5206\u9762\u6307\u7684\u662f\u5728\u5355\u72ec\u3001\u5e76\u6392\u7684\u56fe\u5f62\u4e0a\u663e\u793a\u89c2\u5bdf\u7ec4\u3002\u9700\u8981\u6ce8\u610f\uff0cggplot \u5305\u5728\u5b9a\u4e49\u7ec4\u6216\u9762\u65f6\u4f7f\u7528\u56e0\u5b50\u3002 \u56e0\u5b50\u9488\u5bf9\u7684\u662f\u5206\u7c7b\u6570\u636e\uff0c\u4f8b\u5982 cyl \u662f\u4e2a\u5206\u7c7b\u6570\u636e\uff0c\u7ed8\u56fe\u65f6\u6211\u4eec\u4f7f\u7528 factor(cyl)\uff0c\u5426\u5219\u5b83\u4f1a\u662f\u4e00\u4e2a\u8fde\u7eed\u503c\u6807\u5ea6\u3002 In [43]: (ggplot(mtcars, aes(x='hp', y='mpg', ...: shape='factor(cyl)', color='factor(cyl)')) + ...: geom_point(size=3) + ...: facet_grid('am~vs') + ...: labs(title=\"Automobile Data by Engine Type\", ...: x=\"Horsepower\", y=\"Miles Per Gallon\")) \u5bf9\u6bd4\u4e0b\u9762\u4e0d\u4f7f\u7528\u56e0\u5b50\u7684\u9519\u8bef\u7ed3\u679c\u56fe\u3002 In [44]: (ggplot(mtcars, aes(x='hp', y='mpg', ...: shape='factor(cyl)', color='cyl')) + ...: geom_point(size=3) + ...: facet_grid('am~vs') + ...: labs(title=\"Automobile Data by Engine Type\", ...: x=\"Horsepower\", y=\"Miles Per Gallon\")) \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 facet_grid() \u51fd\u6570\u8fdb\u884c\u5206\u9762\uff0c\u5b83\u53ef\u4ee5\u5f62\u6210\u7f51\u683c\u72b6\uff0c\u8f93\u5165\u7684\u53c2\u6570 \u2018am~vs\u2019 \u8868\u793a\u4ee5 am \u4f5c\u4e3a\u884c\uff0cvs \u4f5c\u4e3a\u5217\u3002","title":"13.2.2 ggplot \u521d\u63a2"},{"location":"13-advanced-vis/#1323","text":"ggplot() \u51fd\u6570\u6307\u5b9a\u8981\u7ed8\u5236\u7684\u6570\u636e\u6e90\u548c\u53d8\u91cf\uff0c\u51e0\u4f55\u51fd\u6570\u5219\u6307\u5b9a\u8fd9\u4e9b\u53d8\u91cf\u5982\u4f55\u5728\u89c6\u89c9\u4e0a\u8fdb\u884c\u8868\u793a\u3002\u4ee5\u4e0b\u5217\u51fa\u5e38\u7528\u7684\u51fd\u6570\u3002 \u51fd\u6570 \u6dfb\u52a0 \u9009\u9879 geom_bar() \u6761\u5f62\u56fe color, fill, alpha geom_boxplot() \u7bb1\u7ebf\u56fe color, fill, alpha, notch, width geom_density() \u5bc6\u5ea6\u56fe color, fill, alpha, linetype geom_histogram() \u76f4\u65b9\u56fe color, fill, alpha, linetype, binwidth geom_hline() \u6c34\u5e73\u7ebf color, aplha, linetype, size geom_jitter() \u6296\u52a8\u70b9 color, size, alpha, shape geom_line() \u7ebf\u56fe colorvalpha, linetype, size geom_point() \u6563\u70b9\u56fe color, alpha, shape, size geom_rug() \u5730\u6bef\u56fe color, sides geom_smooth() \u62df\u5408\u66f2\u7ebf method, formula, color, fill, linetype, size geom_text() \u6587\u5b57\u6ce8\u89e3 \u8fd9\u4e2a\u975e\u5e38\u591a,\u53c2\u8003\u76f8\u5e94\u6587\u6863 geom_violin() \u5c0f\u63d0\u7434\u56fe color, fill, alpha, linetype geom_vline() \u5782\u7ebf color, alpha, linetype, size \u51e0\u4f55\u51fd\u6570\u6709\u5f88\u591a\u901a\u7528\u6216\u5e38\u89c1\u7684\u9009\u9879\uff0c\u6c47\u603b\u5982\u4e0b\u3002 \u9009\u9879 \u8be6\u8ff0 color \u5bf9\u70b9\u3001\u7ebf\u548c\u586b\u5145\u533a\u57df\u7684\u8fb9\u754c\u8fdb\u884c\u7740\u8272 fill \u5bf9\u586b\u5145\u533a\u57df\u7740\u8272\uff0c\u5982\u6761\u5f62\u548c\u5bc6\u5ea6\u533a\u57df alpha \u989c\u8272\u7684\u900f\u660e\u5ea6\uff0c\u4ece0\uff08\u5b8c\u5168\u900f\u660e\uff09\u52301\uff08\u4e0d\u900f\u660e\uff09 linetype \u56fe\u6848\u7684\u7ebf\u6761\uff081=\u5b9e\u7ebf\uff0c2=\u865a\u7ebf\uff0c3=\u70b9\uff0c4=\u70b9\u7834\u6298\u53f7\uff0c5=\u957f\u7834\u6298\u53f7\uff0c6=\u53cc\u7834\u6298\u53f7\uff09 size \u70b9\u7684\u5c3a\u5bf8\u548c\u7ebf\u7684\u5bbd\u5ea6 shape \u70b9\u7684\u5f62\u72b6\uff08\u548cpch\u4e00\u6837\uff0c0=\u5f00\u653e\u7684\u65b9\u5f62\uff0c1=\u5f00\u653e\u7684\u5706\u5f62\uff0c2=\u5f00\u653e\u7684\u4e09\u89d2\u5f62\uff0c\u7b49\u7b49\uff09 position \u7ed8\u5236\u8bf8\u5982\u6761\u5f62\u56fe\u548c\u70b9\u7b49\u5bf9\u8c61\u7684\u4f4d\u7f6e\u3002\u5bf9\u6761\u5f62\u56fe\u6765\u8bf4\uff0c\u2019dodge\u2019\u5c06\u5206\u7ec4\u6761\u5f62\u56fe\u5e76\u6392\uff0c\u2019stacked\u2019\u5806\u53e0\u5206\u7ec4\u6761\u5f62\u56fe\uff0c\u2019fill\u2019\u5782\u76f4\u5730\u5806\u53e0\u5206\u7ec4\u6761\u5f62\u56fe\u5e76\u89c4\u8303\u5176\u9ad8\u5ea6\u76f8\u7b49\u3002\u5bf9\u4e8e\u70b9\u6765\u8bf4\uff0c\u2019jitter\u2019\u51cf\u5c11\u70b9\u91cd\u53e0\u3002 binwidth \u76f4\u65b9\u56fe\u7684\u5bbd\u5ea6 notch \u8868\u793a\u65b9\u5757\u56fe\u662f\u5426\u5e94\u4e3a\u7f3a\u53e3\uff08TRUE/FALSE) sides \u5730\u6bef\u56fe\u7684\u5b89\u7f6e\uff08\u201db\u201d=\u5e95\u90e8\uff0c \u201cl\u201d=\u5de6\u90e8\uff0c\u201dt\u201d=\u9876\u90e8\uff0c\u201dr\u201d=\u53f3\u90e8\uff0c\u201dbl\u201d=\u5de6\u4e0b\u90e8\uff0c\u7b49\u7b49\uff09 width \u7bb1\u7ebf\u56fe\u7684\u5bbd\u5ea6 \u4e0b\u9762\u4e3e\u4e2a\u4f8b\u5b50\u6765\u9a8c\u8bc1\u4e00\u4e0b\u4ee5\u4e0a\u53c2\u6570\u7684\u4f7f\u7528: In [45]: (ggplot(mtcars, aes(x='factor(cyl)', y='mpg')) ...: + geom_boxplot(fill='cornflowerblue', color='black', notch=True) ...: + geom_point(position='jitter', color='blue', alpha=0.5) ...: + geom_rug(sides='l', color='black'))","title":"13.2.3 \u5e38\u89c1\u51e0\u4f55\u51fd\u6570\u548c\u9009\u9879"},{"location":"13-advanced-vis/#133-bokeh","text":"Bokeh \u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u5e93\uff0c\u652f\u6301 Web \u6d4f\u89c8\u5668\uff0c\u5b83\u7684\u76ee\u6807\u662f\u540c\u65f6\u63d0\u4f9b\u4f18\u96c5\u7b80\u6d01\u7684\u56fe\u5f62\u98ce\u683c\u548c\u5927\u578b\u6570\u636e\u96c6\u7684\u9ad8\u6027\u80fd\u4ea4\u4e92\u529f\u80fd\u7279\u6027\u3002Bokeh \u53ef\u4ee5\u7528\u4e8e\u5feb\u901f\u5730\u521b\u5efa\u4ea4\u4e92\u5f0f\u4eea\u8868\u76d8\u548c\u6570\u636e\u5206\u6790\u5e94\u7528\u3002 \u8bfb\u8005\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\u5b89\u88c5 Bokeh \u5e93\uff1a # \u5b89\u88c5\u65b9\u6cd5 1 conda install bokeh # \u5b89\u88c5\u65b9\u6cd5 2 pip install bokeh \u63a5\u4e0b\u6765\u672c\u4e66\u5c06\u901a\u8fc7 Bokeh \u5b98\u65b9\u6587\u6863\u7684\u4e00\u4e9b\u793a\u4f8b\u6765\u4ecb\u7ecd Bokeh \u7684\u57fa\u7840\u7406\u5ff5\u548c\u64cd\u4f5c\u3002","title":"13.3 Bokeh"},{"location":"13-advanced-vis/#1331-bokeh","text":"Bokeh \u7684\u8bbe\u8ba1\u7406\u5ff5\u4e0e ggplot \u7c7b\u4f3c\uff0c\u5b83\u91c7\u7528\u521b\u5efa\u753b\u5e03\u5e76\u9010\u4e00\u6dfb\u52a0\u56fe\u5f62\u5143\u7d20\uff08\u70b9\u3001\u7ebf\u3001\u5f27\u5f62\u7b49\uff09\u7684\u65b9\u6cd5\u6765\u6784\u5efa\u56fe\u5f62\u3002\u56fe\u5f62\u5143\u7d20\u5728 Bokeh \u4e2d\u88ab\u79f0\u4e3a glyphs\uff0c\u5b83\u5bf9\u5e94 ggplot \u4e2d\u7684\u51e0\u4f55\u5bf9\u8c61\uff08\u7531 geom_ \u7cfb\u5217\u51fd\u6570\u751f\u6210\uff09\u3002 \u5728\u4f7f\u7528 Bokeh \u7ed8\u56fe\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5bfc\u5165\u4e00\u4e9b\u5e38\u7528\u51fd\u6570\u3002 figure() - \u8be5\u51fd\u6570\u7528\u4e8e\u521b\u5efa\u56fe\u5f62\u5bf9\u8c61\u3002 output_ \u7cfb\u5217\u51fd\u6570 - \u5305\u62ec output_file()\u3001output_notebook()\u548c output_server()\uff0c\u5b83\u544a\u8bc9 Bokeh \u5982\u4f55\u663e\u793a\u548c\u4fdd\u5b58\u56fe\u5f62\u3002 \u4f7f\u7528 show() \u7acb\u5373\u663e\u793a\u56fe\u5f62\u6216 save() \u8fdb\u884c\u56fe\u5f62\u4fdd\u5b58\u3002 \u4e0a\u8ff0\u7b2c 2 \u70b9\u548c\u7b2c 3 \u70b9\u5e94\u5f53\u7ed3\u5408\u4f7f\u7528\u3002 \u5728 Jupyter Notebook \u4e2d\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528\u4e0b\u9762\u7684\u5bfc\u5165\u65b9\u5f0f\uff1a In [46]: from bokeh.io import output_notebook, show In [47]: from bokeh.plotting import figure \u7136\u540e\u6211\u4eec\u8c03\u7528 output_notebook() \u51fd\u6570\u6307\u5b9a\u56fe\u5f62\u8f93\u51fa\u65b9\u5f0f\u662f notebook\uff0c\u540e\u9762\u56fe\u5f62\u7ed8\u5236\u5b8c\u6210\u540e\u4f7f\u7528 show() \u51fd\u6570\u5373\u53ef\u8fdb\u884c\u663e\u793a\u3002 In [48]: output_notebook() Loading BokehJS ... \u63a5\u4e0b\u6765\u6211\u4eec\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 Bokeh \u5e93\u6784\u5efa\u57fa\u672c\u56fe\u5f62\uff0c\u8bf7\u8bfb\u8005\u89c2\u5bdf\u5b83\u7684\u64cd\u4f5c\u65b9\u6cd5\u548c\u6548\u679c\u4e0e\u524d\u9762\u4ecb\u7ecd\u7684\u56fe\u5f62\u5e93\u7684\u4e0d\u540c\u4e4b\u5904\u3002","title":"13.3.1 Bokeh \u57fa\u7840"},{"location":"13-advanced-vis/#1332","text":"\u5982\u679c\u9700\u8981\u540c\u65f6\u5c55\u793a\u591a\u4e2a\u56fe\u5f62\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u6392\u5217\uff0cBokeh \u63d0\u4f9b\u4e86\u4e24\u79cd\u56fe\u5f62\u6392\u5217\u65b9\u6cd5\u3002","title":"13.3.2 \u56fe\u5f62\u6392\u5217"},{"location":"13-advanced-vis/#134","text":"\u672c\u7ae0\u4ecb\u7ecd\u4e86 3 \u4e2a\u9ad8\u7ea7\u7ed8\u56fe\u5e93 Seaborn\u3001Plotnine \u548c Bokeh \u7684\u57fa\u672c\u64cd\u4f5c\u65b9\u6cd5\uff0c\u76f8\u6bd4\u4e8e Matplotlib \u5e93\uff0c\u5b83\u4eec\u4ee3\u7801\u66f4\u52a0\u7b80\u5355\u3001\u56fe\u5f62\u66f4\u4e3a\u7f8e\u89c2\u3001\u80fd\u591f\u66f4\u5bb9\u6613\u5730\u5904\u7406\u590d\u6742\u7684\u6570\u636e\u548c\u9700\u6c42\u3002 Seaborn \u5e93\u662f Matplotlib \u7684\u5347\u7ea7\u7248\uff0c\u5c01\u88c5\u4e86\u5e95\u5c42\u7ed8\u56fe\u903b\u8f91\uff0c\u8bfb\u8005\u6839\u636e\u4e0d\u540c\u7684\u7ed8\u56fe\u9700\u6c42\u9009\u62e9\u4e0d\u540c\u7684\u7ed8\u56fe\u51fd\u6570\u8fdb\u884c\u4f7f\u7528\uff0c\u4e00\u4e9b\u7684\u7ec6\u8282\u5219\u901a\u8fc7\u51fd\u6570\u7684\u9009\u9879\u8fdb\u884c\u63a7\u5236\u3002 Plotnine \u5e93\u662f ggplot \u5728 Python \u4e2d\u7684\u5b9e\u73b0\uff0c\u5b83\u6709\u5f3a\u5927\u7684\u56fe\u5f62\u7406\u8bba\u652f\u6491\uff0c\u7ed8\u56fe\u64cd\u4f5c\u7075\u6d3b\u591a\u53d8\u3002\u867d\u7136\u5b83\u6ca1\u6709 Seaborn \u5e93\u5bb9\u6613\u4e0a\u624b\uff0c\u4f46\u5b83\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\u56fe\u5f62\u7684\u6784\u6210\uff0c\u63a8\u8350\u8bfb\u8005\u7ed3\u5408 R \u4e2d\u7684 ggplot2 \u8fdb\u884c\u7cfb\u7edf\u5b66\u4e60\u3002 Bokeh \u5e93\u7684\u6700\u5927\u7279\u70b9\u662f\u56fe\u5f62\u4f18\u96c5\u7b80\u6d01\u548c\u652f\u6301\u4ea4\u4e92\u3002\u672c\u7ae0\u53ea\u662f\u5bf9\u8be5\u5e93\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u4ecb\u7ecd\uff0c\u4e00\u4e9b\u66f4\u590d\u6742\u7684\u64cd\u4f5c\u548c\u4ea4\u4e92\u7279\u6027\u5e76\u6ca1\u6709\u63d0\u53ca\u3002\u5bf9\u4ea4\u4e92\u5f0f\u7ed8\u56fe\u611f\u5174\u8da3\u7684\u8bfb\u8005\u4e0d\u59a8\u9605\u8bfb\u66f4\u591a\u7684\u8d44\u6599\u8fdb\u884c\u5b66\u4e60\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u7ed8\u56fe\u662f\u6570\u636e\u5206\u6790\u7684\u91cd\u8981\u4e00\u73af\uff0c\u5b83\u662f\u63d0\u793a\u6570\u636e\u89c4\u5f8b\u3001\u4e0e\u4ed6\u4eba\u4ea4\u6d41\u60f3\u6cd5\u3001\u6c47\u603b\u8d44\u6599\u751f\u6210\u7ed3\u8bba\u7684\u5de5\u5177\uff0c\u6570\u636e\u5206\u6790\u4eba\u5458\u5e94\u5f53\u719f\u7ec3\u638c\u63e1\u57fa\u7840\u56fe\u5f62\u7684\u7ed8\u5236\u65b9\u6cd5\u3002\u6ce8\u610f\uff0c\u672c\u4e66\u4ecb\u7ecd\u5f88\u591a\u7684\u7ed8\u56fe\u5e93\u5e76\u4e0d\u662f\u8981\u6c42\u8bfb\u8005\u5168\u90e8\u638c\u63e1\u5b83\u4eec\uff0c\u800c\u662f\u4e3a\u8bfb\u8005\u63d0\u4f9b\u4e0d\u540c\u7684\u89e3\u51b3\u601d\u8def\u548c\u65b9\u6cd5\uff0c\u5b83\u4eec\u5f88\u591a\u7684\u529f\u80fd\u8d77\u5176\u5b9e\u662f\u91cd\u53e0\u7684\uff0c\u5165\u95e8\u7684\u8bfb\u8005\u5e94\u5f53\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u548c\u5174\u8da3\u9009\u62e9\u5176\u4e00\u8fdb\u884c\u6df1\u5165\u7684\u5b66\u4e60\u548c\u5e94\u7528\u3002","title":"13.4 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"14-stats/","text":"\u7b2c 14 \u7ae0 \u7edf\u8ba1\u5206\u6790 \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : \u6570\u636e\u7684\u6982\u62ec\u6027\u5ea6\u91cf \u7edf\u8ba1\u5206\u5e03 \u5047\u8bbe\u68c0\u9a8c \u7edf\u8ba1\u5b66\u662f\u5173\u4e8e\u8ba4\u8bc6\u5ba2\u89c2\u73b0\u8c61\u603b\u4f53\u6570\u91cf\u7279\u5f81\u548c\u6570\u91cf\u5173\u7cfb\u7684\u79d1\u5b66\u3002\u4e00\u4e9b\u5e38\u89c1\u7684\u6982\u5ff5\u65e9\u5df2\u6df1\u5165\u5230\u751f\u6d3b\u7684\u5404\u4e2a\u65b9\u9762\uff0c\u5982\u6c42\u548c\u3001\u6c42\u5747\u503c\u3001\u76f8\u5173\u6027\u7b49\u3002\u4e0d\u540c\u7684\u9886\u57df\u4e2d\u7edf\u8ba1\u5206\u6790\u7684\u91cd\u8981\u6027\u4e0d\u592a\u4e00\u6837\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u638c\u63e1\u57fa\u7840\u7684\u7edf\u8ba1\u5206\u6790\u65b9\u6cd5\u662f\u6709\u5fc5\u8981\u7684\u3002\u672c\u7ae0\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u63cf\u8ff0\u6027\u7edf\u8ba1\u3001\u7edf\u8ba1\u5206\u5e03\u548c\u5047\u8bbe\u68c0\u9a8c\u7684\u57fa\u672c\u7406\u8bba\u548c\u5728 Python \u4e2d\u7684\u5b9e\u73b0\u3002 14.1 \u6982\u62ec\u6027\u5ea6\u91cf \u00b6 \u5bf9\u4e8e\u4e24\u7ec4\u6570\u636e\uff0c\u6211\u4eec\u5e38\u5e38\u65e0\u6cd5\u901a\u8fc7\u4e00\u5bf9\u4e00\u7684\u6bd4\u8f83\u6765\u5f97\u51fa\u5b83\u4eec\u7684\u5173\u7cfb\uff08\u5982\u5927\u6216\u5c0f\uff09\u3002\u4e3a\u4e86\u4e86\u89e3\u548c\u6bd4\u8f83\u6570\u636e\u7684\u5206\u5e03\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u63d0\u53d6\u6570\u636e\u5206\u5e03\u7684\u7279\u5f81\u3002\u6211\u4eec\u4e00\u822c\u4ece\u4e09\u4e2a\u65b9\u9762\u5bf9\u6570\u636e\u5206\u5e03\u7684\u7279\u5f81\u8fdb\u884c\u63cf\u8ff0\uff1a \u5206\u5e03\u7684\u96c6\u4e2d\u8d8b\u52bf\uff1a\u53cd\u6620\u4e86\u6570\u636e\u70b9\u5411\u5176\u4e2d\u5fc3\u503c\u805a\u96c6\u7684\u7a0b\u5ea6\u3002 \u5206\u5e03\u7684\u79bb\u6563\u7a0b\u5ea6\uff1a\u53cd\u6620\u4e86\u6570\u636e\u70b9\u8fdc\u79bb\u4e2d\u5fc3\u503c\u7684\u7a0b\u5ea6\u3002 \u5206\u5e03\u7684\u5f62\u72b6\uff1a\u53cd\u6620\u6570\u636e\u5206\u5e03\u504f\u659c\u7684\u7a0b\u5ea6\u548c\u5cf0\u5ea6\u3002 \u63a5\u4e0b\u6765\u9010\u4e00\u4ecb\u7ecd\u5b83\u4eec\uff0c\u6211\u4eec\u4f9d\u65e7\u4f7f\u7528 mtcars \u6570\u636e\u96c6\u8fdb\u884c\u63a2\u7a76\uff0c\u5148\u5bfc\u5165\u9700\u8981\u7684\u5e93\u548c\u6570\u636e\u3002 In [1]: import statistics as st # \u6807\u51c6\u5e93 ...: import numpy as np ...: import pandas as pd ...: mtcars = pd.read_csv('files/chapter10/mtcars.csv') 14.1.1 \u96c6\u4e2d\u8d8b\u52bf\u7684\u5ea6\u91cf \u00b6 \u96c6\u4e2d\u8d8b\u52bf\u53cd\u6620\u4e86\u4e00\u7ec4\u6570\u636e\u4e2d\u5fc3\u70b9\u7684\u6240\u5728\u4f4d\u7f6e\u3002\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u4f7f\u7528\u7684\u96c6\u4e2d\u8d8b\u52bf\u5ea6\u91cf\u4e0d\u540c\u3002 \u5206\u7c7b\u6570\u636e\uff1a\u4f17\u6570 \u987a\u5e8f\u6570\u636e\uff1a\u4e2d\u4f4d\u6570\u3001\u4f17\u6570 \u6570\u503c\u6570\u636e\uff1a\u5747\u503c\uff08\u5e73\u5747\u6570\uff09\u3001\u4e2d\u4f4d\u6570\u3001\u4f17\u6570 Python \u6807\u51c6\u5e93\u3001NumPy \u5e93\u548c Pandas \u5e93\u90fd\u6709\u8ba1\u7b97\u5b9e\u73b0\u3002 \u5747\u503c \u00b6 \u5747\u503c\u53cd\u6620\u603b\u4f53\u7684\u4e00\u822c\u6c34\u5e73\uff0c\u6709\u7b97\u6570\u5e73\u5747\u6570\u3001\u51e0\u4f55\u5e73\u5747\u6570\u7b49\u51e0\u79cd\u7c7b\u578b\u3002 \u7b97\u6570\u5e73\u5747\u6570\u6700\u4e3a\u5e38\u7528\uff0c\u5b83\u662f\u4e00\u7ec4\u6570\u636e\u603b\u548c\u4e0e\u6570\u91cf\u7684\u6bd4\u503c\u3002 In [2]: st.mean([1, 2, 3]) # \u6807\u51c6\u5e93\u8ba1\u7b97 Out[2]: 2 In [3]: np.mean([1, 2, 3]) # NumPy \u5e93\u8ba1\u7b97Out[3]: 2.0 In [4]: pd.Series([1, 2, 3]).mean() # Pandas \u5e93\u8ba1\u7b97 Out[4]: 2.0 \u51e0\u4f55\u5e73\u5747\u6570\u53c8\u79f0\u4e3a\u5bf9\u6570\u5e73\u5747\u6570\uff0c\u5b83\u662f\u82e5\u5e72\u9879\u503c\u8fde\u4e58\u79ef\u5f00\u5176\u9879\u6570\u6b21\u65b9\u7684\u7b97\u672f\u6839\uff0c\u5e38\u7528\u4e8e\u8ba1\u7b97\u5f53\u5404\u6570\u636e\u503c\u7684\u8fde\u4e58\u79ef\u7b49\u4e8e\u603b\u6bd4\u7387\u6216\u603b\u901f\u5ea6\u65f6\u7684\u5e73\u5747\u6bd4\u7387\u6216\u5e73\u5747\u901f\u5ea6\uff0c\u5982\u8ba1\u7b97\u6295\u8d44\u7684\u5e74\u5229\u7387\u3002\u5982\u679c\u6570\u636e\u5b58\u5728 0 \u503c\uff0c\u51e0\u4f55\u5e73\u5747\u6570\u65e0\u6548\u3002 Python \u6807\u51c6\u5e93\u9700\u8981 3.8 \u7248\u672c\u540e\u624d\u6709\u51e0\u4f55\u5e73\u5747\u6570\u8ba1\u7b97\u51fd\u6570\u3002NumPy \u5e93\u6ca1\u6709\u8be5\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5b9a\u4e49\u81ea\u5df1\u5199\u4e2a\u51fd\u6570\u3002 In [5]: def geo_mean(iterable): ...: a = np.log(iterable) ...: return np.exp(a.sum()/len(a)) In [6]: geo_mean([1, 2, 3]) Out[6]: 1.8171205928321397 \u6211\u4eec\u53ef\u4ee5\u5bfc\u5165 SciPy \u5e93\u4e2d\u7684\u8ba1\u7b97\u51fd\u6570\u8fdb\u884c\u9a8c\u8bc1\u3002SciPy \u662f\u8457\u540d\u7684\u79d1\u5b66\u8ba1\u7b97\u5e93\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u7edf\u8ba1\u5206\u6790\u529f\u80fd\u3002 \u8bfb\u8005\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\u5b89\u88c5 SciPy \u5e93\uff1a # \u5b89\u88c5\u65b9\u6cd5 1 conda install scipy # \u5b89\u88c5\u65b9\u6cd5 2 pip install scipy \u7136\u540e\u5bfc\u5165\u51fd\u6570\u8fdb\u884c\u8ba1\u7b97\u3002 In [7]: from scipy.stats.mstats import gmean ...: gmean([1, 2, 3]) Out[7]: 1.8171205928321397 \u4e2d\u4f4d\u6570 \u00b6 \u4e2d\u4f4d\u6570\u662f\u4e00\u7ec4\u6570\u636e\u4e2d\u95f4\u4f4d\u7f6e\u7684\u503c\uff0c\u5b83\u4e0d\u53d7\u6781\u7aef\u503c\u7684\u5f71\u54cd\u3002 In [8]: st.median([1, 2, 1000]) Out[8]: 2 In [9]: np.median([1, 2, 1000]) Out[9]: 2.0 \u6ce8\u610f\uff0c\u5f53\u6570\u636e\u6709\u5076\u6570\u9879\u65f6\uff0c\u4e2d\u4f4d\u6570\u662f\u6700\u4e2d\u95f4\u4e24\u4e2a\u6570\u7684\u5e73\u5747\u503c\u3002 In [10]: pd.Series([1, 2, 3, 1000]).median() Out[10]: 2.5 \u4f17\u6570 \u00b6 \u4f17\u6570\u662f\u4e00\u7ec4\u6570\u636e\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u503c\uff0c\u4e0d\u53d7\u6781\u7aef\u503c\u5f71\u54cd\u3002\u5b83\u7684\u65ad\u70b9\u662f\u4e0d\u5bb9\u6613\u786e\u5b9a\uff0c\u53ef\u80fd\u6709\u4e00\u4e2a\u4f17\u6570\uff0c\u4e5f\u53ef\u80fd\u6709\u591a\u4e2a\u4f17\u6570\u3002\u5982\u679c\u6570\u636e\u662f\u5747\u5300\u5206\u5e03\uff0c\u90a3\u4e48\u6ca1\u6709\u4f17\u6570\u3002 \u68c0\u6d4b\u4f17\u6570\u63a8\u8350\u4f7f\u7528 Pandas \u7684 mode() \u65b9\u6cd5\uff0cPython \u6807\u51c6\u5e93\u4e2d\u7684 mode() \u51fd\u6570\u65e0\u6cd5\u68c0\u6d4b\u6709\u591a\u4e2a\u4f17\u6570\u7684\u60c5\u51b5\u3002 In [11]: pd.Series([1, 2, 2, 3, 3, 5]).mode() Out[11]: 0 2 1 3 dtype: int64 \u5e73\u5747\u6570\u3001\u4e2d\u4f4d\u6570\u4e0e\u4f17\u6570\u4e09\u8005\u7684\u5173\u7cfb\u4e0e\u603b\u4f53\u5206\u5e03\u7684\u7279\u5f81\u6709\u5173\uff0c\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u6807\u51c6\u8fdb\u884c\u9009\u62e9\u3002 \u5f53\u6570\u636e\u5448\u5bf9\u79f0\u5206\u5e03\u65f6\uff0c\u4e09\u4e2a\u4ee3\u8868\u503c\u76f8\u7b49\u6216\u8005\u63a5\u8fd1\u76f8\u7b49\uff0c\u8fd9\u65f6\u5219\u5e94\u9009\u62e9\u5747\u503c\u4f5c\u4e3a\u96c6\u4e2d\u8d8b\u52bf\u7684\u4ee3\u8868\u503c\u3002 \u5f53\u6570\u636e\u4e2d\u5b58\u5728\u6781\u7aef\u503c\u65f6\uff0c\u5e73\u5747\u6570\u6613\u53d7\u6781\u7aef\u503c\u7684\u5f71\u54cd\u4f7f\u5f97\u6570\u636e\u53d1\u751f\u504f\u659c\uff0c\u5bf9\u4e8e\u504f\u6001\u5206\u5e03\u7684\u6570\u636e\uff0c\u5e73\u5747\u6570\u4ee3\u8868\u6027\u8f83\u5dee\u3002\u56e0\u6b64\u5f53\u6570\u636e\u4e3a\u504f\u6001\u5206\u5e03\uff0c\u7279\u522b\u662f\u504f\u659c\u7a0b\u5ea6\u8f83\u5927\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4e2d\u4f4d\u6570\u6216\u8005\u4f17\u6570\uff0c\u8fd9\u65f6\u4ed6\u4eec\u7684\u4ee3\u8868\u6027\u90fd\u6bd4\u5e73\u5747\u6570\u597d\u3002 14.1. 2 \u79bb\u6563\u7a0b\u5ea6\u7684\u5ea6\u91cf \u00b6 \u96c6\u4e2d\u8d8b\u52bf\u53cd\u6620\u7684\u662f\u6570\u636e\u7684\u5e73\u5747\u6c34\u5e73\uff0c\u63a2\u7a76\u7684\u662f\u5171\u6027\uff0c\u770b\u4e0d\u51fa\u4e00\u7ec4\u6570\u636e\u5185\u90e8\u7684\u5dee\u5f02\u3002\u7814\u7a76\u7ec4\u5185\u7684\u5dee\u5f02\u9700\u8981\u901a\u8fc7\u79bb\u6563\u7a0b\u5ea6\u8fdb\u884c\u6d4b\u91cf\u3002\u6d4b\u91cf\u79bb\u6563\u7a0b\u5ea6\u7684\u65b9\u6cd5\u6709\u6781\u5dee\u3001\u65b9\u5dee\u548c\u6807\u51c6\u5dee\u7b49\u3002 \u6781\u5dee \u00b6 \u6781\u5dee\u5c31\u662f\u4e00\u7ec4\u6570\u636e\u5185\u6700\u5927\u503c\u51cf\u53bb\u6700\u5c0f\u503c\uff0c\u8fd9\u4e2a\u8ba1\u7b97\u5f88\u5bb9\u6613\uff0c\u4f7f\u7528\u4e0d\u591a\u3002 In [12]: a = [1, 2, 3, 1000] ...: max(a) - min(a) Out[12]: 999 \u65b9\u5dee \u00b6 \u65b9\u5dee\u662f\u4e00\u7ec4\u6570\u636e\u4e0e\u5176\u5e73\u5747\u6570\u7684\u79bb\u5dee\u5e73\u65b9\u548c\u9664\u4ee5\u81ea\u7531\u5ea6\uff0c\u5176\u4e2d\u6570\u636e\u91cf\u51cf 1 \u79f0\u4e3a\u81ea\u7531\u5ea6\u3002\u81ea\u7531\u5ea6\u662f\u6307\u9644\u52a0\u7ed9\u72ec\u7acb\u7684\u89c2\u6d4b\u503c\u7684\u7ea6\u675f\u6216\u8005\u9650\u5236\u3002\u6bd4\u5982\u4e00\u7ec4\u6570\u636e a\u3001b\u3001c\uff0c\u4e00\u65e6\u5747\u503c\u786e\u5b9a\uff0c\u90a3\u4e48 3 \u4e2a\u6570\u636e\u4e2d\u53ea\u6709\u4e24\u4e2a\u503c\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u3002 In [13]: pd.Series([1, 2, 3, 1]).var() Out[13]: 0.9166666666666666 In [14]: pd.Series([1, 2, 3, 1000]).var() Out[14]: 249001.66666666666 \u867d\u7136\u53ea\u6539\u53d8\u4e86\u4e00\u4e2a\u6570\u636e\uff0c\u4f46\u4e0a\u9762\u7684\u65b9\u5dee\u53d1\u751f\u4e86\u6781\u5927\u7684\u53d8\u5316\u3002 \u6807\u51c6\u5dee \u00b6 \u6807\u51c6\u5dee\u662f\u65b9\u5dee\u7684\u5e73\u65b9\u6839\uff0c\u4e0e\u65b9\u5dee\u76f8\u6bd4\uff0c\u6807\u51c6\u5dee\u7684\u5355\u4f4d\u8ddf\u6570\u636e\u7684\u8ba1\u91cf\u5355\u4f4d\u76f8\u540c\u3002\u56e0\u6b64\u6807\u51c6\u5dee\u662f\u6d4b\u91cf\u6570\u503c\u578b\u6570\u636e\u79bb\u6563\u7a0b\u5ea6\u6700\u91cd\u8981\u4e5f\u662f\u6700\u5e38\u7528\u7684\u6307\u6807\u3002 In [15]: pd.Series([1, 2, 3, 1]).std() Out[15]: 0.9574271077563381 \u6570\u636e\u5206\u6790\u4e4b\u524d\u63a2\u7a76\u6570\u636e\u7684\u5206\u5e03\u662f\u6bd4\u8f83\u91cd\u8981\u7684\uff0cPandas \u5e93\u63d0\u4f9b\u4e86 describe() \u65b9\u6cd5\u76f4\u63a5\u5bf9\u6574\u4e2a DataFrame \u5bf9\u8c61\u63cf\u8ff0\u6027\u7edf\u8ba1\u91cf\u8ba1\u7b97\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u6307\u6807\u4fbf\u662f\u5747\u503c\uff08\u7b97\u6570\u5e73\u5747\u6570\uff09\u548c\u65b9\u5dee\u3002 In [16]: mtcars.describe() Out[16]: mpg cyl disp ... am gear carb count 32.000000 32.000000 32.000000 ... 32.000000 32.000000 32.0000 mean 20.090625 6.187500 230.721875 ... 0.406250 3.687500 2.8125 std 6.026948 1.785922 123.938694 ... 0.498991 0.737804 1.6152 min 10.400000 4.000000 71.100000 ... 0.000000 3.000000 1.0000 25% 15.425000 4.000000 120.825000 ... 0.000000 3.000000 2.0000 50% 19.200000 6.000000 196.300000 ... 0.000000 4.000000 2.0000 75% 22.800000 8.000000 326.000000 ... 1.000000 4.000000 4.0000 max 33.900000 8.000000 472.000000 ... 1.000000 5.000000 8.0000 [8 rows x 11 columns] 14.1.3 \u504f\u6001\u4e0e\u5cf0\u6001\u7684\u5ea6\u91cf \u00b6 \u524d\u9762\u4ecb\u7ecd\u4e86\u96c6\u4e2d\u8d8b\u52bf\u548c\u79bb\u6563\u7a0b\u5ea6\u8fd9\u4e24\u4e2a\u6570\u636e\u5206\u5e03\u7684\u91cd\u8981\u7279\u5f81\uff0c\u8bfb\u8005\u5982\u679c\u60f3\u8981\u5168\u9762\u4e86\u89e3\u6570\u636e\u7684\u7279\u70b9\uff0c\u8fd8\u8981\u77e5\u9053\u6570\u636e\u5206\u5e03\u7684\u5f62\u6001\u662f\u5426\u5bf9\u79f0\u3001\u504f\u659c\u7684\u7a0b\u5ea6\u7b49\u3002 \u504f\u6001 \u00b6 \u504f\u6001\u662f\u5bf9\u6570\u636e\u5206\u5e03\u5bf9\u79f0\u6027\u7684\u5ea6\u91cf\u3002\u5982\u679c\u6570\u636e\u5206\u5e03\u662f\u5bf9\u79f0\u7684\uff0c\u90a3\u4e48\u504f\u6001\u7cfb\u6570\u4e3a\u5728 -1 \u548c 1 \u4e4b\u95f4\uff0c\u5b8c\u5168\u5bf9\u79f0\u65f6\u4e3a 0\uff1b\u504f\u6001\u7cfb\u6570\u4e3a\u6b63\u503c\u65f6\u4e3a\u53f3\u504f\u5206\u5e03\uff0c\u4e3a\u8d1f\u503c\u65f6\u4e3a\u5de6\u504f\u5206\u5e03\u3002 \u6211\u4eec\u770b\u4e0b mtcars \u6570\u636e\u96c6\u4e2d\u5c55\u793a\u7684\u6c7d\u8f66\u91cd\u91cf\u7684\u504f\u6001\u5982\u4f55\u3002 In [17]: mtcars.wt.skew() Out[17]: 0.4659161067929868 \u4e0d\u96be\u63a8\u65ad\u51fa\u8be5\u91cd\u91cf\u5206\u5e03\u5927\u81f4\u662f\u5bf9\u79f0\u7684\uff0c\u4e0d\u8fc7\u6709\u7a0d\u5fae\u7684\u53f3\u504f\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528\u6838\u5bc6\u5ea6\u56fe\u9a8c\u8bc1\u4e00\u4e0b\u3002 In [18]: %matplotlib # Notebook \u4f7f\u7528 %matplotlib inline ...: mtcars.wt.plot(kind='kde') \u5cf0\u6001 \u00b6 \u5cf0\u6001\u662f\u5bf9\u6570\u636e\u5206\u5e03\u5e73\u5cf0\u6216\u8005\u5c16\u5cf0\u7a0b\u5ea6\u7684\u6d4b\u91cf\u3002\u901a\u5e38\u4e0e\u6807\u51c6\u6b63\u6001\u5206\u5e03\u76f8\u6bd4\u8f83\uff0c\u5373\u5747\u503c\u4e3a 0\uff0c\u6807\u51c6\u5dee\u4e3a 1 \u7684\u5206\u5e03\u3002\u5982\u679c\u4e00\u7ec4\u6570\u636e\u670d\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u90a3\u4e48\u5cf0\u6001\u7cfb\u6570\u4e3a 0\uff1b\u82e5\u5cf0\u6001\u7cfb\u6570\u5927\u4e8e 0\uff0c\u5219\u5206\u5e03\u66f4\u5c16\uff0c\u4e5f\u610f\u5473\u7740\u6570\u636e\u66f4\u4e3a\u96c6\u4e2d\uff1b\u82e5\u5cf0\u6001\u7cfb\u6570\u5c0f\u4e8e 0\uff0c\u5219\u5206\u5e03\u66f4\u5e73\uff0c\u6570\u636e\u5206\u5e03\u66f4\u5206\u6563\u3002 \u7531\u6b64\u53ef\u4ee5\u63a8\u65ad\uff0c\u6c7d\u8f66\u91cd\u91cf\u7684\u5206\u5e03\u5cf0\u6001\u5e94\u8be5\u4e0e 0 \u63a5\u8fd1\uff0c\u53ef\u80fd\u5927\u4e8e 0\uff0c\u6211\u4eec\u8ba1\u7b97\u770b\u770b\u3002 In [19]: mtcars.wt.kurtosis() Out[19]: 0.41659466963492564 \u90a3\u4e48\u5206\u6563\u7684\u5206\u5e03\u7684\u5cf0\u6001\u662f\u600e\u4e48\u6837\u7684\u5462\uff1f\u6211\u4eec\u9009\u62e9 cyl \u53d8\u91cf\u8fdb\u884c\u8ba1\u7b97\u548c\u53ef\u89c6\u5316\u3002 In [20]: mtcars.cyl.kurtosis() Out[20]: -1.7627938970111958 In [21]: mtcars.cyl.plot(kind='kde') 14.2 \u7edf\u8ba1\u5206\u5e03 \u00b6 \u4eba\u4eec\u5728\u751f\u6d3b\u5b9e\u8df5\u4e2d\u53d1\u73b0\uff0c\u4e0d\u540c\u53d8\u91cf\u6570\u636e\u5206\u5e03\u7684\u5f62\u72b6\u548c\u53d8\u5316\u662f\u6709\u89c4\u5f8b\u7684\uff0c\u4f8b\u5982\u4eba\u7684\u5e74\u9f84\u3001\u8eab\u9ad8\u5206\u5e03\uff0c\u90fd\u662f\u4e24\u5934\u4f4e\uff0c\u4e2d\u95f4\u9ad8\u3002\u5386\u53f2\u4e0a\u6570\u5b66\u5bb6\u4eec\u5bf9\u4e8e\u6570\u636e\u5206\u5e03\u7684\u516c\u5f0f\u5316\u63cf\u8ff0\u5f62\u6210\u4e86\u4e0d\u540c\u7684\u7edf\u8ba1\u5206\u5e03\u3002\u6839\u636e\u5206\u5e03\u662f\u5426\u8fde\u7eed\u5c06\u5206\u5e03\u5206\u4e3a\u4e86\u8fde\u7eed\u5206\u5e03\u548c\u79bb\u6563\u5206\u5e03\uff0c\u5bf9\u5e94\u7684\u53d8\u91cf\u79f0\u4e3a\u8fde\u7eed\u578b\u53d8\u91cf\u548c\u79bb\u6563\u53d8\u91cf\u3002\u63a5\u4e0b\u6765\u672c\u4e66\u5bf9\u5e38\u89c1\u7684\u7edf\u8ba1\u5b66\u5206\u5e03\u8fdb\u884c\u4ecb\u7ecd\u548c\u53ef\u89c6\u5316\u3002 14.2.1 \u6b63\u6001\u5206\u5e03 \u00b6 \u6b63\u6001\u5206\u5e03\uff0c\u4e5f\u79f0\u9ad8\u65af\u5206\u5e03\uff0c\u5b83\u662f\u6700\u91cd\u8981\u7684\u8fde\u7eed\u5206\u5e03\u3002\u4e16\u754c\u4e0a\u7edd\u5927\u90e8\u5206\u7684\u5206\u5e03\u90fd\u5c5e\u4e8e\u6b63\u6001\u5206\u5e03\uff0c\u4f8b\u5982\u4eba\u7684\u8eab\u9ad8\u3001\u4f53\u91cd\u3001\u8003\u8bd5\u6210\u7ee9\u3001\u964d\u96e8\u91cf\u7b49\u7b49\u3002\u539f\u56e0\u5728\u4e8e\u6839\u636e\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff0c\u5982\u679c\u4e00\u4e2a\u4e8b\u7269\u53d7\u5230\u591a\u79cd\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u4e0d\u7ba1\u6bcf\u4e2a\u56e0\u7d20\u672c\u8eab\u662f\u4ec0\u4e48\u5206\u5e03\uff0c\u5b83\u4eec\u76f8\u52a0\u540e\uff0c\u7ed3\u679c\u7684\u5e73\u5747\u503c\u5c31\u662f\u6b63\u6001\u5206\u5e03\u3002\u800c\u4e16\u754c\u4e0a\u8bb8\u591a\u4e8b\u7269\u90fd\u53d7\u5230\u591a\u79cd\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u8fd9\u5bfc\u81f4\u4e86\u6b63\u6001\u5206\u5e03\u7684\u5e38\u89c1\u3002\u5177\u4f53\u7684\u516c\u5f0f\u63a8\u5bfc\u548c\u76f8\u5173\u77e5\u8bc6\u8bf7\u8bfb\u8005\u67e5\u9605\u4e13\u4e1a\u7684\u7edf\u8ba1\u5b66\u6559\u6750\u3002 \u6b63\u6001\u5206\u5e03\u5982\u540c\u4e00\u6761\u949f\u5f62\u66f2\u7ebf\uff08\u4e5f\u6709\u8fd9\u4e2a\u53eb\u6cd5\uff09\uff0c\u4e2d\u95f4\u9ad8\u3001\u4e24\u8fb9\u4f4e\u3001\u5de6\u53f3\u5bf9\u79f0\u3002\u5b83\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u53c2\u6570\uff1a\u5747\u503c\u548c\u6807\u51c6\u5dee\u3002 \u4e0b\u9762\u4ee3\u7801\u7ed8\u5236\u4e86\u4e00\u6761\u6807\u51c6\u7684\u6b63\u6001\u5206\u5e03\u66f2\u7ebf\uff0c\u5747\u503c\u4e3a 0\uff0c\u6807\u51c6\u5dee\u4e3a 1\u3002 In [22]: from scipy import stats ...: import matplotlib.pyplot as plt ...: mu = 0 # \u5747\u503c ...: sigma = 1 # \u6807\u51c6\u5dee ...: x = np.arange(-5,5,0.1) ...: y = stats.norm.pdf(x,mu,sigma) # \u751f\u6210\u6b63\u6001\u5206\u5e03\u6982\u7387\u51fd\u6570\u503c ...: plt.plot(x, y) ...: plt.title('Normal: $\\mu$=%.1f, $\\sigma^2$=%.1f' % (mu,sigma)) ...: plt.xlabel('x') ...: plt.ylabel('Probability density', fontsize=15) ...: plt.show() 14.2.2 \u4e8c\u9879\u5206\u5e03 \u00b6 \u4e8c\u9879\u5206\u5e03\u662f\u4e00\u79cd\u79bb\u6563\u5206\u5e03\uff0c\u4e8c\u9879\u662f\u6307\u67d0\u4e8b\u4ef6\u6709\u4e24\u79cd\u53ef\u80fd\u7ed3\u679c\uff0c\u79f0\u4e00\u79cd\u4e3a\u6210\u529f\uff0c\u53e6\u4e00\u79cd\u4e3a\u5931\u8d25\uff0c\u5982\u629b\u63b7\u786c\u5e01\u3002\u4e00\u822c\u5c06\u6210\u529f\u7684\u6982\u7387\u8bb0\u4e3a p\uff0c\u6240\u4ee5\u5931\u8d25\u7684\u6982\u7387\u4e3a 1-p\u3002 \u629b\u63b7\u786c\u5e01\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4e8c\u9879\u5206\u5e03\uff0c\u5f53\u6211\u4eec\u8ba1\u7b97\u629b\u63b7\u786c\u5e01 n \u6b21\uff0c\u6709 k \u6b21\u6b63\u9762\u671d\u4e0a\u7684\u6982\u7387\u65f6\uff0c\u53ef\u4ee5\u7528\u4e8c\u9879\u5206\u5e03\u8868\u793a\uff0c\u5b83\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a $$ P(X=k) = C_n^kp^k(1-p)^{n-k} $$ \u7edf\u8ba1\u5b66\u4e2d\u79f0\u629b\u63b7\u4e00\u6b21\u786c\u5e01\u4e3a\u8bd5\u9a8c\uff0c\u4e8c\u9879\u5206\u5e03\u8981\u6c42\u6bcf\u6b21\u8bd5\u9a8c\u5f7c\u6b64\u72ec\u7acb\uff0c\u663e\u7136\u629b\u63b7\u786c\u5e01\u8fd9\u4e2a\u4e8b\u60c5\u662f\u7b26\u5408\u7684\u3002 \u4e8c\u9879\u5206\u5e03\u662f\u6c42\u5728\u4e8b\u4ef6\u53d1\u751f\u6b21\u6570\u56fa\u5b9a\u60c5\u51b5\u4e0b\uff0c\u4e8b\u4ef6\u6210\u529f\u4e0d\u540c\u6b21\u6570\u4e0b\u7684\u5206\u5e03\u60c5\u51b5\u3002 \u73b0\u5728\u5047\u8bbe\u629b\u63b7\u786c\u5e01 10 \u6b21\uff0c\u6b63\u9762\u671d\u4e0a\u7684\u6982\u7387\u662f 0.5\uff0c\u6b63\u9762\u671d\u4e0a\u7684\u6b21\u6570\u7684\u5206\u5e03\u5982\u4f55\uff1f\u6211\u4eec\u91cd\u590d 10 \u6b21\u753b\u56fe\u770b\u770b\u3002 In [23]: # \u4f7f\u7528rvs()\u51fd\u6570\u6a21\u62df\u4e00\u4e2a\u4e8c\u9879\u968f\u673a\u53d8\u91cf ...: data = stats.binom.rvs(n=10,p=0.5,size=10) ...: ...: plt.hist(data, density=True) ...: plt.xlabel('x') ...: plt.ylabel('Probability density', fontsize=15) ...: plt.title('Binormal: n=10,$p$=0.5') ...: plt.show() \u53ef\u4ee5\u770b\u5230\u5206\u5e03\u975e\u5e38\u79bb\u6563\uff0c\u5982\u679c\u6211\u4eec\u589e\u52a0\u91cd\u590d\u6b21\u6570\uff0c\u5982 1000 \u6b21\uff0c\u5206\u5e03\u5c06\u63a5\u8fd1\u6b63\u6001\u5206\u5e03\u3002 In [24]: data = stats.binom.rvs(n=10,p=0.5,size=1000) ...: plt.hist(data, density=True) ...: plt.xlabel('x') ...: plt.ylabel('Probability density', fontsize=15) ...: plt.title('Binormal: n=10,$p$=0.5') ...: plt.show() 14.2.3 \u4f2f\u52aa\u5229\u5206\u5e03 \u00b6 \u4f2f\u52aa\u5229\u5206\u5e03\u662f\u4e8c\u9879\u5206\u5e03\u7684\u7279\u4f8b\uff0c\u5b83\u662f\u53ea\u8fdb\u884c\u4e86\u4e00\u6b21\u8bd5\u9a8c\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u4f2f\u52aa\u5229\u5206\u5e03\u63cf\u8ff0\u4e86\u5177\u6709\u4e24\u4e2a\u7ed3\u679c\u7684\u4e8b\u4ef6\u3002 In [25]: data = stats.bernoulli.rvs(p=0.6, size=10) ...: plt.hist(data) ...: plt.xlabel('x') ...: plt.ylabel('Frequency', fontsize=15) ...: plt.title('Bernouli: $p$=0.5') ...: plt.show() 14.2.4 \u6307\u6570\u5206\u5e03 \u00b6 \u6307\u6570\u5206\u5e03\u662f\u4e00\u79cd\u8fde\u7eed\u5206\u5e03\uff0c\u7528\u4e8e\u8868\u793a\u72ec\u7acb\u968f\u673a\u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u95f4\u95f4\u9694\u3002\u5982\u65c5\u5ba2\u8fdb\u5165\u673a\u573a\u7684\u65f6\u95f4\u95f4\u9694\u3001\u6253\u8fdb\u5ba2\u670d\u4e2d\u5fc3\u7535\u8bdd\u7684\u65f6\u95f4\u95f4\u9694\u3002\u5b83\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a $$ f(x) = \\lambda e^{-\\lambda x} $$ \u5176\u4e2d \u03bb \u662f\u5206\u5e03\u7684\u6838\u5fc3\u53c2\u6570\uff0c\u8868\u793a\u6bcf\u5355\u4f4d\u4e8b\u4ef6\u5185\u53d1\u751f\u67d0\u4e8b\u4ef6\u7684\u6b21\u6570\u3002 In [26]: data = stats.expon.rvs(scale=2,size=1000) # scale\u53c2\u6570\u8868\u793a\u03bb\u7684\u5012\u6570 ...: plt.hist(data, density=True, bins=20) ...: plt.xlabel('x') ...: plt.ylabel('Probability density', fontsize=15) ...: plt.title('Exponential: 1/$\\lambda$=2') ...: plt.show() scale \u662f \u03bb \u7684\u5012\u6570\uff0c\u4e5f\u662f\u6307\u6570\u5206\u5e03\u7684\u6570\u5b66\u671f\u671b\uff0c\u5373\u4e8b\u4ef6\u53d1\u751f\u7684\u4e8b\u4ef6\u95f4\u9694\u3002 14.2.5 \u6cca\u677e\u5206\u5e03 \u00b6 \u6cca\u677e\u5206\u5e03\u662f\u79bb\u6563\u5206\u5e03\uff0c\u63cf\u8ff0\u4e86\u5355\u4f4d\u65f6\u95f4\u5185\u4e8b\u4ef6\u53d1\u751f\u7684\u6b21\u6570\uff0c\u5b83\u7684\u6838\u5fc3\u53c2\u6570\u4e5f\u662f \u03bb \u3002\u5176\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a $$ P(X=k)=\\frac{\\lambda^k}{k!}e^{-\\lambda} $$ \u6cca\u677e\u5206\u5e03\u7684\u5747\u503c\u548c\u65b9\u5dee\u5747\u4e3a \u03bb \u3002 In [27]: data = stats.poisson.rvs(mu=2,size=1000) # scale\u53c2\u6570\u8868\u793a\u03bb\u7684\u5012\u6570 ...: plt.hist(data, density=True, bins=20) ...: plt.xlabel('x') ...: plt.ylabel('Probability density', fontsize=15) ...: plt.title('Poisson: $\\lambda$=2') ...: plt.show() 14.3 \u5047\u8bbe\u68c0\u9a8c \u00b6 \u5047\u8bbe\u68c0\u9a8c\u662f\u5bf9\u603b\u4f53\u53c2\u6570\u505a\u4e00\u4e2a\u5c1d\u8bd5\u6027\u5047\u8bbe\uff0c\u8be5\u5047\u8bbe\u79f0\u4e3a\u539f\u5047\u8bbe\uff0c\u7136\u540e\u5b9a\u4e49\u4e00\u4e2a\u548c\u539f\u5047\u8bbe\u5b8c\u5168\u5bf9\u7acb\u7684\u5047\u8bbe\u53eb\u5907\u62e9\u5047\u8bbe\u3002\u5176\u4e2d\u5907\u62e9\u5047\u8bbe\u662f\u6211\u4eec\u5e0c\u671b\u6210\u7acb\u7684\uff0c\u800c\u539f\u5047\u8bbe\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u6210\u7acb\u7684\u3002\u901a\u8fc7\u5047\u8bbe\u68c0\u9a8c\uff0c\u5982\u679c\u6211\u4eec\u53d1\u73b0\u539f\u5047\u8bbe\u4e0d\u6210\u7acb\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5f97\u51fa\u5907\u62e9\u5047\u8bbe\u7684\u7ed3\u679c\u3002 \u4e0a\u9762\u7684\u672f\u8bed\u5bf9\u4e8e\u6ca1\u6709\u5b66\u8fc7\u7edf\u8ba1\u7684\u8bfb\u8005\u4f1a\u5f88\u56f0\u60d1\uff0c\u6240\u4ee5\u7b80\u5355\u4e3e\u4f8b\u8bf4\u660e\u3002\u73b0\u5728\u5047\u8bbe\u5b58\u5728 A \u548c B \u4e24\u4e2a\u516c\u53f8\uff0cA \u516c\u53f8\u7684\u4ea7\u54c1\u8d28\u91cf\u68c0\u6d4b\u6709\u4e00\u7ec4\u6570\u636e\uff0cB \u516c\u53f8\u540c\u6837\u7684\u4ea7\u54c1\u8d28\u91cf\u68c0\u6d4b\u4e5f\u6709\u4e00\u7ec4\u6570\u636e\uff0c\u6211\u4eec\u60f3\u8981\u6bd4\u8f83 A \u516c\u53f8\u7684\u4ea7\u54c1\u662f\u5426\u4e0e B \u516c\u53f8\u7684\u4ea7\u54c1\u6709\u5dee\u5f02\u3002\u8bfb\u8005\u53ef\u80fd\u4f1a\u95ee\uff0c\u76f4\u63a5\u6bd4\u8f83\u4e24\u7ec4\u6570\u636e\u7684\u5747\u503c\u4e0d\u5c31\u597d\u4e86\u5417\uff1f\u8fd9\u7684\u786e\u662f\u4e00\u4e2a\u7b80\u5355\u6613\u884c\u7684\u529e\u6cd5\uff0c\u4f46\u5b83\u5e76\u4e0d\u53ef\u9760\uff0c\u5bb9\u6613\u53d7\u5230\u4ea7\u54c1\u62bd\u6837\u6216\u6279\u6b21\u7b49\u56e0\u7d20\u7684\u5f71\u54cd\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5047\u8bbe\u68c0\u9a8c\u8fdb\u884c\u4ee5\u4e0b\u7684\u6b65\u9aa4\uff1a \u5efa\u7acb\u539f\u5047\u8bbe\uff1aA \u516c\u53f8\u548c B \u516c\u53f8\u7684\u4ea7\u54c1\u8d28\u91cf\u6ca1\u6709\u5dee\u5f02\u3002 \u8ba1\u7b97\u7edf\u8ba1\u91cf\u548c\u5bf9\u5e94\u7684\u6982\u7387\u503c p\u3002 \u8fdb\u884c\u5224\u65ad\uff0c\u4e00\u822c\u800c\u8a00\uff0cp \u503c\u5c0f\u4e8e 0.05 \u65f6\u6211\u4eec\u8ba4\u4e3a\u539f\u5047\u8bbe\u4e0d\u6210\u7acb\uff0c\u63a5\u53d7\u5907\u62e9\u5047\u8bbe\u3002 \u4e0b\u7ed3\u8bba\uff1aA \u516c\u53f8\u548c B \u516c\u53f8\u7684\u4ea7\u54c1\u8d28\u91cf\u6709\u5dee\u5f02\u3002 \u5728\u7b2c 2 \u6b65\u4e2d\uff0c\u6211\u4eec\u5e38\u8ba1\u7b97 t \u7edf\u8ba1\u91cf\u3002t \u7edf\u8ba1\u91cf\u6765\u81ea\u4e8e t \u5206\u5e03\uff0ct \u5206\u5e03\u662f\u4e00\u79cd\u4e0e\u6b63\u6001\u5206\u5e03\u8fd1\u4f3c\u7684\u5206\u5e03\u3002\u5728\u4ecb\u7ecd\u4f7f\u7528 t \u5206\u5e03\u8fdb\u884c\u5047\u8bbe\u68c0\u9a8c\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e0b u \u7edf\u8ba1\u91cf\u548c t \u7edf\u8ba1\u91cf\u3002 14.3.1 u \u4e0e t \u7edf\u8ba1\u91cf \u00b6 \u4e0a\u4e00\u8282\u6211\u4eec\u5df2\u7ecf\u7ed8\u5236\u8fc7\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u5b83\u6709\u4e00\u4e2a\u7ecf\u9a8c\u6cd5\u5219\uff1a\u6b63\u6001\u5206\u5e03\u6709 \u6709 69.3%\u7684\u503c\u5728\u5747\u503c\u52a0\u51cf\u4e00\u4e2a\u6807\u51c6\u5dee\u7684\u8303\u56f4\u5185\uff0c95.4%\u7684\u503c\u5728\u4e24\u4e2a\u6807\u51c6\u5dee\u5185\uff0c99.7%\u7684\u503c\u5728\u4e09\u4e2a\u6807\u51c6\u5dee\u5185\u3002 \u4eba\u4eec\u7528\u8868\u683c\u7684\u5f62\u5f0f\u5c06\u6b63\u6001\u5206\u5e03\u4e00\u4e9b\u91cd\u8981\u4f4d\u7f6e\u7684\u6982\u7387\u503c\u8bb0\u5f55\u4e86\u4e0b\u6765\uff0c\u7136\u540e\u63d0\u51fa\u4e86 u \u53d8\u6362\u5c06\u975e\u6807\u51c6\u6b63\u6001\u5206\u5e03\u8f6c\u6362\u4e3a\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u8fd9\u6837\u5c31\u80fd\u7167\u7740\u524d\u9762\u8868\u683c\u7684\u8bb0\u5f55\u67e5\u627e\u5bf9\u5e94\u7684\u6982\u7387\u4e86\u3002 u \u53d8\u6362\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1a $$ u = \\frac{X - \\mu}{\\sigma} $$ u \u503c\u7684\u5206\u5e03\u4e5f\u53eb u \u5206\u5e03\u3002\u8be5\u53d8\u6362\u9002\u7528\u4e8e\u6570\u636e\u603b\u4f53\u5747\u503c\u548c\u65b9\u5dee\u5df2\u77e5\u7684\u60c5\u51b5\u3002\u8fd9\u91cc \ud835\udf0e \u662f\u603b\u4f53\u65b9\u5dee\uff0c\ud835\udf07 \u662f\u603b\u4f53\u5747\u503c\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u6536\u96c6\u7684\u6570\u636e\u90fd\u662f\u6837\u672c\u6570\u636e\uff0c\u4f8b\u5982\u6211\u4eec\u8c03\u67e5\u5168\u56fd\u4eba\u6c11\u7684\u5e73\u5747\u8eab\u9ad8\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u5168\u90e8\u8c03\u67e5\u548c\u8bb0\u5f55\uff0c\u800c\u662f\u8fdb\u884c\u62bd\u6837\u8c03\u67e5\u7528\u6765\u8868\u793a\u603b\u4f53\u3002\u56e0\u800c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u603b\u4f53\u65b9\u5dee\u662f\u672a\u77e5\u7684\uff0c\u6240\u4ee5 t \u53d8\u6362\u51fa\u73b0\u4e86\uff0c\u5b83\u4f7f\u7528\u6837\u672c\u65b9\u5dee\u66ff\u6362\u603b\u4f53\u65b9\u5dee\u3002 t \u53d8\u6362\u7684\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1a $$ t = \\frac{x - \\mu}{s/\\sqrt{n}} $$ t \u503c\u7684\u5206\u5e03\u4e5f\u53eb t \u5206\u5e03\uff0ct \u5206\u5e03\u5f15\u5165\u4e86\u81ea\u7531\u5ea6\u7684\u6982\u5ff5\uff0c\u5f53\u6837\u672c\u91cf\u4e3a n \u503c\uff0c\u81ea\u7531\u5ea6\u4e3a n-1\u3002\u5982\u679c n \u5927\u4e8e 30\uff0ct \u5206\u5e03\u903c\u8fd1\u6b63\u6001\u5206\u5e03\u3002\u8fd9\u91cc s \u662f\u6837\u672c\u65b9\u5dee\uff0c\ud835\udf07 \u662f\u603b\u4f53\u5747\u503c\u3002 14.3.2 \u4e00\u4e2a t \u68c0\u9a8c\u5b9e\u4f8b \u00b6 \u5047\u8bbe\u6211\u56fd\u5973\u6027\u5e73\u5747\u8eab\u9ad8\u4e3a 1.60 cm\uff0c\u73b0\u5728\u4ece\u67d0\u5730\u533a\u968f\u673a\u62bd\u53d6 10 \u540d\u5973\u6027\u8c03\u67e5\u8eab\u9ad8\uff1a1.75\u30011.58\u30011.71\u30011.64\u30011.55\u30011.72\u30011.62\u30011.83\u30011.63\u30011.65\uff0c\u8bf7\u95ee\u8be5\u5730\u533a\u8eab\u9ad8\u4e0e\u5168\u56fd\u5973\u6027\u5e73\u5747\u8eab\u9ad8\u662f\u5426\u6709\u5dee\u5f02\uff1f \u8fd9\u91cc\u539f\u5047\u8bbe\u4e3a\u65e0\u5dee\u5f02\uff0c\u5907\u62e9\u5047\u8bbe\u4e3a\u6709\u5dee\u5f02\u3002\u6211\u4eec\u4f7f\u7528 SciPy \u63d0\u4f9b\u7684\u5355\u6837\u672c t \u68c0\u9a8c\u51fd\u6570\u8fdb\u884c\u68c0\u9a8c\u3002 In [28]: from scipy import stats ...: height = [1.75, 1.58, 1.71, 1.64, 1.55, 1.72, 1.62, 1.83, 1.63, 1.65] ...: print(stats.ttest_1samp(height, 1.60)) Ttest_1sampResult(statistic=2.550797248729806, pvalue=0.03115396848888224) \u7ed3\u679c\u663e\u793a t \u7edf\u8ba1\u91cf\u4e3a 2.55\uff0cp \u503c\u4e3a 0.03\u3002p \u503c\u5c0f\u4e8e 0.05\uff0c\u8bf4\u660e\u67d0\u5730\u533a\u8eab\u9ad8\u4e0e\u5168\u56fd\u5e73\u5747\u8eab\u9ad8\u6ca1\u6709\u5dee\u5f02\u7684\u6982\u7387\u5f88\u5c0f\uff0c\u6240\u4ee5\u63a8\u7ffb\u539f\u5047\u8bbe\uff0c\u63a5\u53d7\u5907\u62e9\u5047\u8bbe\uff0c\u4e0b\u7ed3\u8bba\uff1a\u8be5\u5730\u533a\u8eab\u9ad8\u4e0e\u5168\u56fd\u5973\u6027\u5e73\u5747\u8eab\u9ad8\u662f\u6709\u5dee\u5f02\u3002 14.3.3 \u4e24\u6837\u672c t \u68c0\u9a8c \u00b6 t \u68c0\u9a8c\u66f4\u5e38\u7528\u4e8e\u4e24\u6837\u672c\u7684\u6bd4\u8f83\uff0c\u5982\u524d\u9762\u5f15\u5165\u7684 A \u516c\u53f8\u548c B \u516c\u53f8\u7684\u4ea7\u54c1\u8d28\u91cf\u5dee\u5f02\u3002\u6211\u4eec\u6784\u9020\u6570\u636e\uff0c\u8bbe\u5b9a A \u516c\u53f8\u8d28\u91cf\u8bc4\u5206\u5e73\u5747\u4e3a 9\uff0c\u65b9\u5dee\u4e3a 10\uff1bB \u516c\u53f8\u8d28\u91cf\u8bc4\u5206\u5e73\u5747\u4e3a 7\uff0c\u65b9\u5dee\u4e3a 10\u3002\u5b83\u4eec\u5b58\u5728\u7edf\u8ba1\u5b66\u663e\u8457\u7684\u5dee\u5f02\u5417\uff1f In [29]: quality_A = stats.norm.rvs(loc = 9,scale = 10,size = 500) ...: quality_B = stats.norm.rvs(loc = 7,scale = 10,size = 500) ...: ...: _ = plt.hist(quality_A, density=True, alpha=0.5) ...: _ = plt.hist(quality_B, density=True, color=\"red\", alpha=0.5) p \u5c0f\u4e8e 0.05\uff0c\u6211\u4eec\u4e0b\u7ed3\u8bba\uff0cA \u548c B \u516c\u53f8\u4ea7\u54c1\u8d28\u91cf\u5b58\u5728\u5dee\u5f02\u3002 14.4 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 \u672c\u7ae0\u4ece\u63cf\u8ff0\u7edf\u8ba1\u91cf\u3001\u7edf\u8ba1\u5206\u5e03\u548c\u7edf\u8ba1\u68c0\u9a8c 3 \u4e2a\u65b9\u9762\u7684\u5185\u5bb9\u5411\u8bfb\u8005\u4ecb\u7ecd\u4e86\u7edf\u8ba1\u5206\u6790\u7684\u57fa\u672c\u77e5\u8bc6\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 Python \u8fdb\u884c\u8ba1\u7b97\u6216\u53ef\u89c6\u5316\u5b83\u4eec\u3002\u638c\u63e1\u63cf\u8ff0\u6027\u7edf\u8ba1\u91cf\u548c\u7edf\u8ba1\u5206\u5e03\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u5728\u5206\u6790\u65f6\u638c\u63e1\u6570\u636e\u5206\u5e03\u7684\u6838\u5fc3\u7279\u6027\u3002\u638c\u63e1\u7edf\u8ba1\u68c0\u9a8c\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u4ece\u79d1\u5b66\u7684\u89d2\u5ea6\u5bf9\u6570\u636e\u8fdb\u884c\u6bd4\u8f83\u3001\u5224\u65ad\u5e76\u4ea7\u751f\u53ef\u9760\u7ed3\u8bba\u3002\u9664\u4e86\u5e38\u7528\u7684 t \u68c0\u9a8c\uff0c\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u68c0\u9a8c\u65b9\u6cd5\uff0c\u5305\u62ec\u5361\u65b9\u68c0\u9a8c\u3001\u975e\u53c2\u6570\u68c0\u9a8c\u7b49\u7b49\uff0c\u8bfb\u8005\u5982\u679c\u611f\u5174\u8da3\u53ef\u4ee5\u901a\u8fc7\u4e13\u4e1a\u7684\u7edf\u8ba1\u5b66\u4e66\u7c4d\u6216\u5176\u4ed6\u7f51\u7edc\u8d44\u6599\u8fdb\u884c\u5b66\u4e60\u3002","title":"\u7b2c 14 \u7ae0 \u7edf\u8ba1\u5206\u6790"},{"location":"14-stats/#14","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : \u6570\u636e\u7684\u6982\u62ec\u6027\u5ea6\u91cf \u7edf\u8ba1\u5206\u5e03 \u5047\u8bbe\u68c0\u9a8c \u7edf\u8ba1\u5b66\u662f\u5173\u4e8e\u8ba4\u8bc6\u5ba2\u89c2\u73b0\u8c61\u603b\u4f53\u6570\u91cf\u7279\u5f81\u548c\u6570\u91cf\u5173\u7cfb\u7684\u79d1\u5b66\u3002\u4e00\u4e9b\u5e38\u89c1\u7684\u6982\u5ff5\u65e9\u5df2\u6df1\u5165\u5230\u751f\u6d3b\u7684\u5404\u4e2a\u65b9\u9762\uff0c\u5982\u6c42\u548c\u3001\u6c42\u5747\u503c\u3001\u76f8\u5173\u6027\u7b49\u3002\u4e0d\u540c\u7684\u9886\u57df\u4e2d\u7edf\u8ba1\u5206\u6790\u7684\u91cd\u8981\u6027\u4e0d\u592a\u4e00\u6837\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u638c\u63e1\u57fa\u7840\u7684\u7edf\u8ba1\u5206\u6790\u65b9\u6cd5\u662f\u6709\u5fc5\u8981\u7684\u3002\u672c\u7ae0\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u63cf\u8ff0\u6027\u7edf\u8ba1\u3001\u7edf\u8ba1\u5206\u5e03\u548c\u5047\u8bbe\u68c0\u9a8c\u7684\u57fa\u672c\u7406\u8bba\u548c\u5728 Python \u4e2d\u7684\u5b9e\u73b0\u3002","title":"\u7b2c 14 \u7ae0 \u7edf\u8ba1\u5206\u6790"},{"location":"14-stats/#141","text":"\u5bf9\u4e8e\u4e24\u7ec4\u6570\u636e\uff0c\u6211\u4eec\u5e38\u5e38\u65e0\u6cd5\u901a\u8fc7\u4e00\u5bf9\u4e00\u7684\u6bd4\u8f83\u6765\u5f97\u51fa\u5b83\u4eec\u7684\u5173\u7cfb\uff08\u5982\u5927\u6216\u5c0f\uff09\u3002\u4e3a\u4e86\u4e86\u89e3\u548c\u6bd4\u8f83\u6570\u636e\u7684\u5206\u5e03\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u63d0\u53d6\u6570\u636e\u5206\u5e03\u7684\u7279\u5f81\u3002\u6211\u4eec\u4e00\u822c\u4ece\u4e09\u4e2a\u65b9\u9762\u5bf9\u6570\u636e\u5206\u5e03\u7684\u7279\u5f81\u8fdb\u884c\u63cf\u8ff0\uff1a \u5206\u5e03\u7684\u96c6\u4e2d\u8d8b\u52bf\uff1a\u53cd\u6620\u4e86\u6570\u636e\u70b9\u5411\u5176\u4e2d\u5fc3\u503c\u805a\u96c6\u7684\u7a0b\u5ea6\u3002 \u5206\u5e03\u7684\u79bb\u6563\u7a0b\u5ea6\uff1a\u53cd\u6620\u4e86\u6570\u636e\u70b9\u8fdc\u79bb\u4e2d\u5fc3\u503c\u7684\u7a0b\u5ea6\u3002 \u5206\u5e03\u7684\u5f62\u72b6\uff1a\u53cd\u6620\u6570\u636e\u5206\u5e03\u504f\u659c\u7684\u7a0b\u5ea6\u548c\u5cf0\u5ea6\u3002 \u63a5\u4e0b\u6765\u9010\u4e00\u4ecb\u7ecd\u5b83\u4eec\uff0c\u6211\u4eec\u4f9d\u65e7\u4f7f\u7528 mtcars \u6570\u636e\u96c6\u8fdb\u884c\u63a2\u7a76\uff0c\u5148\u5bfc\u5165\u9700\u8981\u7684\u5e93\u548c\u6570\u636e\u3002 In [1]: import statistics as st # \u6807\u51c6\u5e93 ...: import numpy as np ...: import pandas as pd ...: mtcars = pd.read_csv('files/chapter10/mtcars.csv')","title":"14.1 \u6982\u62ec\u6027\u5ea6\u91cf"},{"location":"14-stats/#1411","text":"\u96c6\u4e2d\u8d8b\u52bf\u53cd\u6620\u4e86\u4e00\u7ec4\u6570\u636e\u4e2d\u5fc3\u70b9\u7684\u6240\u5728\u4f4d\u7f6e\u3002\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u4f7f\u7528\u7684\u96c6\u4e2d\u8d8b\u52bf\u5ea6\u91cf\u4e0d\u540c\u3002 \u5206\u7c7b\u6570\u636e\uff1a\u4f17\u6570 \u987a\u5e8f\u6570\u636e\uff1a\u4e2d\u4f4d\u6570\u3001\u4f17\u6570 \u6570\u503c\u6570\u636e\uff1a\u5747\u503c\uff08\u5e73\u5747\u6570\uff09\u3001\u4e2d\u4f4d\u6570\u3001\u4f17\u6570 Python \u6807\u51c6\u5e93\u3001NumPy \u5e93\u548c Pandas \u5e93\u90fd\u6709\u8ba1\u7b97\u5b9e\u73b0\u3002","title":"14.1.1 \u96c6\u4e2d\u8d8b\u52bf\u7684\u5ea6\u91cf"},{"location":"14-stats/#141-2","text":"\u96c6\u4e2d\u8d8b\u52bf\u53cd\u6620\u7684\u662f\u6570\u636e\u7684\u5e73\u5747\u6c34\u5e73\uff0c\u63a2\u7a76\u7684\u662f\u5171\u6027\uff0c\u770b\u4e0d\u51fa\u4e00\u7ec4\u6570\u636e\u5185\u90e8\u7684\u5dee\u5f02\u3002\u7814\u7a76\u7ec4\u5185\u7684\u5dee\u5f02\u9700\u8981\u901a\u8fc7\u79bb\u6563\u7a0b\u5ea6\u8fdb\u884c\u6d4b\u91cf\u3002\u6d4b\u91cf\u79bb\u6563\u7a0b\u5ea6\u7684\u65b9\u6cd5\u6709\u6781\u5dee\u3001\u65b9\u5dee\u548c\u6807\u51c6\u5dee\u7b49\u3002","title":"14.1. 2 \u79bb\u6563\u7a0b\u5ea6\u7684\u5ea6\u91cf"},{"location":"14-stats/#1413","text":"\u524d\u9762\u4ecb\u7ecd\u4e86\u96c6\u4e2d\u8d8b\u52bf\u548c\u79bb\u6563\u7a0b\u5ea6\u8fd9\u4e24\u4e2a\u6570\u636e\u5206\u5e03\u7684\u91cd\u8981\u7279\u5f81\uff0c\u8bfb\u8005\u5982\u679c\u60f3\u8981\u5168\u9762\u4e86\u89e3\u6570\u636e\u7684\u7279\u70b9\uff0c\u8fd8\u8981\u77e5\u9053\u6570\u636e\u5206\u5e03\u7684\u5f62\u6001\u662f\u5426\u5bf9\u79f0\u3001\u504f\u659c\u7684\u7a0b\u5ea6\u7b49\u3002","title":"14.1.3 \u504f\u6001\u4e0e\u5cf0\u6001\u7684\u5ea6\u91cf"},{"location":"14-stats/#142","text":"\u4eba\u4eec\u5728\u751f\u6d3b\u5b9e\u8df5\u4e2d\u53d1\u73b0\uff0c\u4e0d\u540c\u53d8\u91cf\u6570\u636e\u5206\u5e03\u7684\u5f62\u72b6\u548c\u53d8\u5316\u662f\u6709\u89c4\u5f8b\u7684\uff0c\u4f8b\u5982\u4eba\u7684\u5e74\u9f84\u3001\u8eab\u9ad8\u5206\u5e03\uff0c\u90fd\u662f\u4e24\u5934\u4f4e\uff0c\u4e2d\u95f4\u9ad8\u3002\u5386\u53f2\u4e0a\u6570\u5b66\u5bb6\u4eec\u5bf9\u4e8e\u6570\u636e\u5206\u5e03\u7684\u516c\u5f0f\u5316\u63cf\u8ff0\u5f62\u6210\u4e86\u4e0d\u540c\u7684\u7edf\u8ba1\u5206\u5e03\u3002\u6839\u636e\u5206\u5e03\u662f\u5426\u8fde\u7eed\u5c06\u5206\u5e03\u5206\u4e3a\u4e86\u8fde\u7eed\u5206\u5e03\u548c\u79bb\u6563\u5206\u5e03\uff0c\u5bf9\u5e94\u7684\u53d8\u91cf\u79f0\u4e3a\u8fde\u7eed\u578b\u53d8\u91cf\u548c\u79bb\u6563\u53d8\u91cf\u3002\u63a5\u4e0b\u6765\u672c\u4e66\u5bf9\u5e38\u89c1\u7684\u7edf\u8ba1\u5b66\u5206\u5e03\u8fdb\u884c\u4ecb\u7ecd\u548c\u53ef\u89c6\u5316\u3002","title":"14.2 \u7edf\u8ba1\u5206\u5e03"},{"location":"14-stats/#1421","text":"\u6b63\u6001\u5206\u5e03\uff0c\u4e5f\u79f0\u9ad8\u65af\u5206\u5e03\uff0c\u5b83\u662f\u6700\u91cd\u8981\u7684\u8fde\u7eed\u5206\u5e03\u3002\u4e16\u754c\u4e0a\u7edd\u5927\u90e8\u5206\u7684\u5206\u5e03\u90fd\u5c5e\u4e8e\u6b63\u6001\u5206\u5e03\uff0c\u4f8b\u5982\u4eba\u7684\u8eab\u9ad8\u3001\u4f53\u91cd\u3001\u8003\u8bd5\u6210\u7ee9\u3001\u964d\u96e8\u91cf\u7b49\u7b49\u3002\u539f\u56e0\u5728\u4e8e\u6839\u636e\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff0c\u5982\u679c\u4e00\u4e2a\u4e8b\u7269\u53d7\u5230\u591a\u79cd\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u4e0d\u7ba1\u6bcf\u4e2a\u56e0\u7d20\u672c\u8eab\u662f\u4ec0\u4e48\u5206\u5e03\uff0c\u5b83\u4eec\u76f8\u52a0\u540e\uff0c\u7ed3\u679c\u7684\u5e73\u5747\u503c\u5c31\u662f\u6b63\u6001\u5206\u5e03\u3002\u800c\u4e16\u754c\u4e0a\u8bb8\u591a\u4e8b\u7269\u90fd\u53d7\u5230\u591a\u79cd\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u8fd9\u5bfc\u81f4\u4e86\u6b63\u6001\u5206\u5e03\u7684\u5e38\u89c1\u3002\u5177\u4f53\u7684\u516c\u5f0f\u63a8\u5bfc\u548c\u76f8\u5173\u77e5\u8bc6\u8bf7\u8bfb\u8005\u67e5\u9605\u4e13\u4e1a\u7684\u7edf\u8ba1\u5b66\u6559\u6750\u3002 \u6b63\u6001\u5206\u5e03\u5982\u540c\u4e00\u6761\u949f\u5f62\u66f2\u7ebf\uff08\u4e5f\u6709\u8fd9\u4e2a\u53eb\u6cd5\uff09\uff0c\u4e2d\u95f4\u9ad8\u3001\u4e24\u8fb9\u4f4e\u3001\u5de6\u53f3\u5bf9\u79f0\u3002\u5b83\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u53c2\u6570\uff1a\u5747\u503c\u548c\u6807\u51c6\u5dee\u3002 \u4e0b\u9762\u4ee3\u7801\u7ed8\u5236\u4e86\u4e00\u6761\u6807\u51c6\u7684\u6b63\u6001\u5206\u5e03\u66f2\u7ebf\uff0c\u5747\u503c\u4e3a 0\uff0c\u6807\u51c6\u5dee\u4e3a 1\u3002 In [22]: from scipy import stats ...: import matplotlib.pyplot as plt ...: mu = 0 # \u5747\u503c ...: sigma = 1 # \u6807\u51c6\u5dee ...: x = np.arange(-5,5,0.1) ...: y = stats.norm.pdf(x,mu,sigma) # \u751f\u6210\u6b63\u6001\u5206\u5e03\u6982\u7387\u51fd\u6570\u503c ...: plt.plot(x, y) ...: plt.title('Normal: $\\mu$=%.1f, $\\sigma^2$=%.1f' % (mu,sigma)) ...: plt.xlabel('x') ...: plt.ylabel('Probability density', fontsize=15) ...: plt.show()","title":"14.2.1 \u6b63\u6001\u5206\u5e03"},{"location":"14-stats/#1422","text":"\u4e8c\u9879\u5206\u5e03\u662f\u4e00\u79cd\u79bb\u6563\u5206\u5e03\uff0c\u4e8c\u9879\u662f\u6307\u67d0\u4e8b\u4ef6\u6709\u4e24\u79cd\u53ef\u80fd\u7ed3\u679c\uff0c\u79f0\u4e00\u79cd\u4e3a\u6210\u529f\uff0c\u53e6\u4e00\u79cd\u4e3a\u5931\u8d25\uff0c\u5982\u629b\u63b7\u786c\u5e01\u3002\u4e00\u822c\u5c06\u6210\u529f\u7684\u6982\u7387\u8bb0\u4e3a p\uff0c\u6240\u4ee5\u5931\u8d25\u7684\u6982\u7387\u4e3a 1-p\u3002 \u629b\u63b7\u786c\u5e01\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4e8c\u9879\u5206\u5e03\uff0c\u5f53\u6211\u4eec\u8ba1\u7b97\u629b\u63b7\u786c\u5e01 n \u6b21\uff0c\u6709 k \u6b21\u6b63\u9762\u671d\u4e0a\u7684\u6982\u7387\u65f6\uff0c\u53ef\u4ee5\u7528\u4e8c\u9879\u5206\u5e03\u8868\u793a\uff0c\u5b83\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a $$ P(X=k) = C_n^kp^k(1-p)^{n-k} $$ \u7edf\u8ba1\u5b66\u4e2d\u79f0\u629b\u63b7\u4e00\u6b21\u786c\u5e01\u4e3a\u8bd5\u9a8c\uff0c\u4e8c\u9879\u5206\u5e03\u8981\u6c42\u6bcf\u6b21\u8bd5\u9a8c\u5f7c\u6b64\u72ec\u7acb\uff0c\u663e\u7136\u629b\u63b7\u786c\u5e01\u8fd9\u4e2a\u4e8b\u60c5\u662f\u7b26\u5408\u7684\u3002 \u4e8c\u9879\u5206\u5e03\u662f\u6c42\u5728\u4e8b\u4ef6\u53d1\u751f\u6b21\u6570\u56fa\u5b9a\u60c5\u51b5\u4e0b\uff0c\u4e8b\u4ef6\u6210\u529f\u4e0d\u540c\u6b21\u6570\u4e0b\u7684\u5206\u5e03\u60c5\u51b5\u3002 \u73b0\u5728\u5047\u8bbe\u629b\u63b7\u786c\u5e01 10 \u6b21\uff0c\u6b63\u9762\u671d\u4e0a\u7684\u6982\u7387\u662f 0.5\uff0c\u6b63\u9762\u671d\u4e0a\u7684\u6b21\u6570\u7684\u5206\u5e03\u5982\u4f55\uff1f\u6211\u4eec\u91cd\u590d 10 \u6b21\u753b\u56fe\u770b\u770b\u3002 In [23]: # \u4f7f\u7528rvs()\u51fd\u6570\u6a21\u62df\u4e00\u4e2a\u4e8c\u9879\u968f\u673a\u53d8\u91cf ...: data = stats.binom.rvs(n=10,p=0.5,size=10) ...: ...: plt.hist(data, density=True) ...: plt.xlabel('x') ...: plt.ylabel('Probability density', fontsize=15) ...: plt.title('Binormal: n=10,$p$=0.5') ...: plt.show() \u53ef\u4ee5\u770b\u5230\u5206\u5e03\u975e\u5e38\u79bb\u6563\uff0c\u5982\u679c\u6211\u4eec\u589e\u52a0\u91cd\u590d\u6b21\u6570\uff0c\u5982 1000 \u6b21\uff0c\u5206\u5e03\u5c06\u63a5\u8fd1\u6b63\u6001\u5206\u5e03\u3002 In [24]: data = stats.binom.rvs(n=10,p=0.5,size=1000) ...: plt.hist(data, density=True) ...: plt.xlabel('x') ...: plt.ylabel('Probability density', fontsize=15) ...: plt.title('Binormal: n=10,$p$=0.5') ...: plt.show()","title":"14.2.2 \u4e8c\u9879\u5206\u5e03"},{"location":"14-stats/#1423","text":"\u4f2f\u52aa\u5229\u5206\u5e03\u662f\u4e8c\u9879\u5206\u5e03\u7684\u7279\u4f8b\uff0c\u5b83\u662f\u53ea\u8fdb\u884c\u4e86\u4e00\u6b21\u8bd5\u9a8c\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u4f2f\u52aa\u5229\u5206\u5e03\u63cf\u8ff0\u4e86\u5177\u6709\u4e24\u4e2a\u7ed3\u679c\u7684\u4e8b\u4ef6\u3002 In [25]: data = stats.bernoulli.rvs(p=0.6, size=10) ...: plt.hist(data) ...: plt.xlabel('x') ...: plt.ylabel('Frequency', fontsize=15) ...: plt.title('Bernouli: $p$=0.5') ...: plt.show()","title":"14.2.3 \u4f2f\u52aa\u5229\u5206\u5e03"},{"location":"14-stats/#1424","text":"\u6307\u6570\u5206\u5e03\u662f\u4e00\u79cd\u8fde\u7eed\u5206\u5e03\uff0c\u7528\u4e8e\u8868\u793a\u72ec\u7acb\u968f\u673a\u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u95f4\u95f4\u9694\u3002\u5982\u65c5\u5ba2\u8fdb\u5165\u673a\u573a\u7684\u65f6\u95f4\u95f4\u9694\u3001\u6253\u8fdb\u5ba2\u670d\u4e2d\u5fc3\u7535\u8bdd\u7684\u65f6\u95f4\u95f4\u9694\u3002\u5b83\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a $$ f(x) = \\lambda e^{-\\lambda x} $$ \u5176\u4e2d \u03bb \u662f\u5206\u5e03\u7684\u6838\u5fc3\u53c2\u6570\uff0c\u8868\u793a\u6bcf\u5355\u4f4d\u4e8b\u4ef6\u5185\u53d1\u751f\u67d0\u4e8b\u4ef6\u7684\u6b21\u6570\u3002 In [26]: data = stats.expon.rvs(scale=2,size=1000) # scale\u53c2\u6570\u8868\u793a\u03bb\u7684\u5012\u6570 ...: plt.hist(data, density=True, bins=20) ...: plt.xlabel('x') ...: plt.ylabel('Probability density', fontsize=15) ...: plt.title('Exponential: 1/$\\lambda$=2') ...: plt.show() scale \u662f \u03bb \u7684\u5012\u6570\uff0c\u4e5f\u662f\u6307\u6570\u5206\u5e03\u7684\u6570\u5b66\u671f\u671b\uff0c\u5373\u4e8b\u4ef6\u53d1\u751f\u7684\u4e8b\u4ef6\u95f4\u9694\u3002","title":"14.2.4 \u6307\u6570\u5206\u5e03"},{"location":"14-stats/#1425","text":"\u6cca\u677e\u5206\u5e03\u662f\u79bb\u6563\u5206\u5e03\uff0c\u63cf\u8ff0\u4e86\u5355\u4f4d\u65f6\u95f4\u5185\u4e8b\u4ef6\u53d1\u751f\u7684\u6b21\u6570\uff0c\u5b83\u7684\u6838\u5fc3\u53c2\u6570\u4e5f\u662f \u03bb \u3002\u5176\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a $$ P(X=k)=\\frac{\\lambda^k}{k!}e^{-\\lambda} $$ \u6cca\u677e\u5206\u5e03\u7684\u5747\u503c\u548c\u65b9\u5dee\u5747\u4e3a \u03bb \u3002 In [27]: data = stats.poisson.rvs(mu=2,size=1000) # scale\u53c2\u6570\u8868\u793a\u03bb\u7684\u5012\u6570 ...: plt.hist(data, density=True, bins=20) ...: plt.xlabel('x') ...: plt.ylabel('Probability density', fontsize=15) ...: plt.title('Poisson: $\\lambda$=2') ...: plt.show()","title":"14.2.5 \u6cca\u677e\u5206\u5e03"},{"location":"14-stats/#143","text":"\u5047\u8bbe\u68c0\u9a8c\u662f\u5bf9\u603b\u4f53\u53c2\u6570\u505a\u4e00\u4e2a\u5c1d\u8bd5\u6027\u5047\u8bbe\uff0c\u8be5\u5047\u8bbe\u79f0\u4e3a\u539f\u5047\u8bbe\uff0c\u7136\u540e\u5b9a\u4e49\u4e00\u4e2a\u548c\u539f\u5047\u8bbe\u5b8c\u5168\u5bf9\u7acb\u7684\u5047\u8bbe\u53eb\u5907\u62e9\u5047\u8bbe\u3002\u5176\u4e2d\u5907\u62e9\u5047\u8bbe\u662f\u6211\u4eec\u5e0c\u671b\u6210\u7acb\u7684\uff0c\u800c\u539f\u5047\u8bbe\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u6210\u7acb\u7684\u3002\u901a\u8fc7\u5047\u8bbe\u68c0\u9a8c\uff0c\u5982\u679c\u6211\u4eec\u53d1\u73b0\u539f\u5047\u8bbe\u4e0d\u6210\u7acb\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5f97\u51fa\u5907\u62e9\u5047\u8bbe\u7684\u7ed3\u679c\u3002 \u4e0a\u9762\u7684\u672f\u8bed\u5bf9\u4e8e\u6ca1\u6709\u5b66\u8fc7\u7edf\u8ba1\u7684\u8bfb\u8005\u4f1a\u5f88\u56f0\u60d1\uff0c\u6240\u4ee5\u7b80\u5355\u4e3e\u4f8b\u8bf4\u660e\u3002\u73b0\u5728\u5047\u8bbe\u5b58\u5728 A \u548c B \u4e24\u4e2a\u516c\u53f8\uff0cA \u516c\u53f8\u7684\u4ea7\u54c1\u8d28\u91cf\u68c0\u6d4b\u6709\u4e00\u7ec4\u6570\u636e\uff0cB \u516c\u53f8\u540c\u6837\u7684\u4ea7\u54c1\u8d28\u91cf\u68c0\u6d4b\u4e5f\u6709\u4e00\u7ec4\u6570\u636e\uff0c\u6211\u4eec\u60f3\u8981\u6bd4\u8f83 A \u516c\u53f8\u7684\u4ea7\u54c1\u662f\u5426\u4e0e B \u516c\u53f8\u7684\u4ea7\u54c1\u6709\u5dee\u5f02\u3002\u8bfb\u8005\u53ef\u80fd\u4f1a\u95ee\uff0c\u76f4\u63a5\u6bd4\u8f83\u4e24\u7ec4\u6570\u636e\u7684\u5747\u503c\u4e0d\u5c31\u597d\u4e86\u5417\uff1f\u8fd9\u7684\u786e\u662f\u4e00\u4e2a\u7b80\u5355\u6613\u884c\u7684\u529e\u6cd5\uff0c\u4f46\u5b83\u5e76\u4e0d\u53ef\u9760\uff0c\u5bb9\u6613\u53d7\u5230\u4ea7\u54c1\u62bd\u6837\u6216\u6279\u6b21\u7b49\u56e0\u7d20\u7684\u5f71\u54cd\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5047\u8bbe\u68c0\u9a8c\u8fdb\u884c\u4ee5\u4e0b\u7684\u6b65\u9aa4\uff1a \u5efa\u7acb\u539f\u5047\u8bbe\uff1aA \u516c\u53f8\u548c B \u516c\u53f8\u7684\u4ea7\u54c1\u8d28\u91cf\u6ca1\u6709\u5dee\u5f02\u3002 \u8ba1\u7b97\u7edf\u8ba1\u91cf\u548c\u5bf9\u5e94\u7684\u6982\u7387\u503c p\u3002 \u8fdb\u884c\u5224\u65ad\uff0c\u4e00\u822c\u800c\u8a00\uff0cp \u503c\u5c0f\u4e8e 0.05 \u65f6\u6211\u4eec\u8ba4\u4e3a\u539f\u5047\u8bbe\u4e0d\u6210\u7acb\uff0c\u63a5\u53d7\u5907\u62e9\u5047\u8bbe\u3002 \u4e0b\u7ed3\u8bba\uff1aA \u516c\u53f8\u548c B \u516c\u53f8\u7684\u4ea7\u54c1\u8d28\u91cf\u6709\u5dee\u5f02\u3002 \u5728\u7b2c 2 \u6b65\u4e2d\uff0c\u6211\u4eec\u5e38\u8ba1\u7b97 t \u7edf\u8ba1\u91cf\u3002t \u7edf\u8ba1\u91cf\u6765\u81ea\u4e8e t \u5206\u5e03\uff0ct \u5206\u5e03\u662f\u4e00\u79cd\u4e0e\u6b63\u6001\u5206\u5e03\u8fd1\u4f3c\u7684\u5206\u5e03\u3002\u5728\u4ecb\u7ecd\u4f7f\u7528 t \u5206\u5e03\u8fdb\u884c\u5047\u8bbe\u68c0\u9a8c\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e0b u \u7edf\u8ba1\u91cf\u548c t \u7edf\u8ba1\u91cf\u3002","title":"14.3 \u5047\u8bbe\u68c0\u9a8c"},{"location":"14-stats/#1431-u-t","text":"\u4e0a\u4e00\u8282\u6211\u4eec\u5df2\u7ecf\u7ed8\u5236\u8fc7\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u5b83\u6709\u4e00\u4e2a\u7ecf\u9a8c\u6cd5\u5219\uff1a\u6b63\u6001\u5206\u5e03\u6709 \u6709 69.3%\u7684\u503c\u5728\u5747\u503c\u52a0\u51cf\u4e00\u4e2a\u6807\u51c6\u5dee\u7684\u8303\u56f4\u5185\uff0c95.4%\u7684\u503c\u5728\u4e24\u4e2a\u6807\u51c6\u5dee\u5185\uff0c99.7%\u7684\u503c\u5728\u4e09\u4e2a\u6807\u51c6\u5dee\u5185\u3002 \u4eba\u4eec\u7528\u8868\u683c\u7684\u5f62\u5f0f\u5c06\u6b63\u6001\u5206\u5e03\u4e00\u4e9b\u91cd\u8981\u4f4d\u7f6e\u7684\u6982\u7387\u503c\u8bb0\u5f55\u4e86\u4e0b\u6765\uff0c\u7136\u540e\u63d0\u51fa\u4e86 u \u53d8\u6362\u5c06\u975e\u6807\u51c6\u6b63\u6001\u5206\u5e03\u8f6c\u6362\u4e3a\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u8fd9\u6837\u5c31\u80fd\u7167\u7740\u524d\u9762\u8868\u683c\u7684\u8bb0\u5f55\u67e5\u627e\u5bf9\u5e94\u7684\u6982\u7387\u4e86\u3002 u \u53d8\u6362\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1a $$ u = \\frac{X - \\mu}{\\sigma} $$ u \u503c\u7684\u5206\u5e03\u4e5f\u53eb u \u5206\u5e03\u3002\u8be5\u53d8\u6362\u9002\u7528\u4e8e\u6570\u636e\u603b\u4f53\u5747\u503c\u548c\u65b9\u5dee\u5df2\u77e5\u7684\u60c5\u51b5\u3002\u8fd9\u91cc \ud835\udf0e \u662f\u603b\u4f53\u65b9\u5dee\uff0c\ud835\udf07 \u662f\u603b\u4f53\u5747\u503c\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u6536\u96c6\u7684\u6570\u636e\u90fd\u662f\u6837\u672c\u6570\u636e\uff0c\u4f8b\u5982\u6211\u4eec\u8c03\u67e5\u5168\u56fd\u4eba\u6c11\u7684\u5e73\u5747\u8eab\u9ad8\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u5168\u90e8\u8c03\u67e5\u548c\u8bb0\u5f55\uff0c\u800c\u662f\u8fdb\u884c\u62bd\u6837\u8c03\u67e5\u7528\u6765\u8868\u793a\u603b\u4f53\u3002\u56e0\u800c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u603b\u4f53\u65b9\u5dee\u662f\u672a\u77e5\u7684\uff0c\u6240\u4ee5 t \u53d8\u6362\u51fa\u73b0\u4e86\uff0c\u5b83\u4f7f\u7528\u6837\u672c\u65b9\u5dee\u66ff\u6362\u603b\u4f53\u65b9\u5dee\u3002 t \u53d8\u6362\u7684\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1a $$ t = \\frac{x - \\mu}{s/\\sqrt{n}} $$ t \u503c\u7684\u5206\u5e03\u4e5f\u53eb t \u5206\u5e03\uff0ct \u5206\u5e03\u5f15\u5165\u4e86\u81ea\u7531\u5ea6\u7684\u6982\u5ff5\uff0c\u5f53\u6837\u672c\u91cf\u4e3a n \u503c\uff0c\u81ea\u7531\u5ea6\u4e3a n-1\u3002\u5982\u679c n \u5927\u4e8e 30\uff0ct \u5206\u5e03\u903c\u8fd1\u6b63\u6001\u5206\u5e03\u3002\u8fd9\u91cc s \u662f\u6837\u672c\u65b9\u5dee\uff0c\ud835\udf07 \u662f\u603b\u4f53\u5747\u503c\u3002","title":"14.3.1 u \u4e0e t \u7edf\u8ba1\u91cf"},{"location":"14-stats/#1432-t","text":"\u5047\u8bbe\u6211\u56fd\u5973\u6027\u5e73\u5747\u8eab\u9ad8\u4e3a 1.60 cm\uff0c\u73b0\u5728\u4ece\u67d0\u5730\u533a\u968f\u673a\u62bd\u53d6 10 \u540d\u5973\u6027\u8c03\u67e5\u8eab\u9ad8\uff1a1.75\u30011.58\u30011.71\u30011.64\u30011.55\u30011.72\u30011.62\u30011.83\u30011.63\u30011.65\uff0c\u8bf7\u95ee\u8be5\u5730\u533a\u8eab\u9ad8\u4e0e\u5168\u56fd\u5973\u6027\u5e73\u5747\u8eab\u9ad8\u662f\u5426\u6709\u5dee\u5f02\uff1f \u8fd9\u91cc\u539f\u5047\u8bbe\u4e3a\u65e0\u5dee\u5f02\uff0c\u5907\u62e9\u5047\u8bbe\u4e3a\u6709\u5dee\u5f02\u3002\u6211\u4eec\u4f7f\u7528 SciPy \u63d0\u4f9b\u7684\u5355\u6837\u672c t \u68c0\u9a8c\u51fd\u6570\u8fdb\u884c\u68c0\u9a8c\u3002 In [28]: from scipy import stats ...: height = [1.75, 1.58, 1.71, 1.64, 1.55, 1.72, 1.62, 1.83, 1.63, 1.65] ...: print(stats.ttest_1samp(height, 1.60)) Ttest_1sampResult(statistic=2.550797248729806, pvalue=0.03115396848888224) \u7ed3\u679c\u663e\u793a t \u7edf\u8ba1\u91cf\u4e3a 2.55\uff0cp \u503c\u4e3a 0.03\u3002p \u503c\u5c0f\u4e8e 0.05\uff0c\u8bf4\u660e\u67d0\u5730\u533a\u8eab\u9ad8\u4e0e\u5168\u56fd\u5e73\u5747\u8eab\u9ad8\u6ca1\u6709\u5dee\u5f02\u7684\u6982\u7387\u5f88\u5c0f\uff0c\u6240\u4ee5\u63a8\u7ffb\u539f\u5047\u8bbe\uff0c\u63a5\u53d7\u5907\u62e9\u5047\u8bbe\uff0c\u4e0b\u7ed3\u8bba\uff1a\u8be5\u5730\u533a\u8eab\u9ad8\u4e0e\u5168\u56fd\u5973\u6027\u5e73\u5747\u8eab\u9ad8\u662f\u6709\u5dee\u5f02\u3002","title":"14.3.2 \u4e00\u4e2a t \u68c0\u9a8c\u5b9e\u4f8b"},{"location":"14-stats/#1433-t","text":"t \u68c0\u9a8c\u66f4\u5e38\u7528\u4e8e\u4e24\u6837\u672c\u7684\u6bd4\u8f83\uff0c\u5982\u524d\u9762\u5f15\u5165\u7684 A \u516c\u53f8\u548c B \u516c\u53f8\u7684\u4ea7\u54c1\u8d28\u91cf\u5dee\u5f02\u3002\u6211\u4eec\u6784\u9020\u6570\u636e\uff0c\u8bbe\u5b9a A \u516c\u53f8\u8d28\u91cf\u8bc4\u5206\u5e73\u5747\u4e3a 9\uff0c\u65b9\u5dee\u4e3a 10\uff1bB \u516c\u53f8\u8d28\u91cf\u8bc4\u5206\u5e73\u5747\u4e3a 7\uff0c\u65b9\u5dee\u4e3a 10\u3002\u5b83\u4eec\u5b58\u5728\u7edf\u8ba1\u5b66\u663e\u8457\u7684\u5dee\u5f02\u5417\uff1f In [29]: quality_A = stats.norm.rvs(loc = 9,scale = 10,size = 500) ...: quality_B = stats.norm.rvs(loc = 7,scale = 10,size = 500) ...: ...: _ = plt.hist(quality_A, density=True, alpha=0.5) ...: _ = plt.hist(quality_B, density=True, color=\"red\", alpha=0.5) p \u5c0f\u4e8e 0.05\uff0c\u6211\u4eec\u4e0b\u7ed3\u8bba\uff0cA \u548c B \u516c\u53f8\u4ea7\u54c1\u8d28\u91cf\u5b58\u5728\u5dee\u5f02\u3002","title":"14.3.3 \u4e24\u6837\u672c t \u68c0\u9a8c"},{"location":"14-stats/#144","text":"\u672c\u7ae0\u4ece\u63cf\u8ff0\u7edf\u8ba1\u91cf\u3001\u7edf\u8ba1\u5206\u5e03\u548c\u7edf\u8ba1\u68c0\u9a8c 3 \u4e2a\u65b9\u9762\u7684\u5185\u5bb9\u5411\u8bfb\u8005\u4ecb\u7ecd\u4e86\u7edf\u8ba1\u5206\u6790\u7684\u57fa\u672c\u77e5\u8bc6\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 Python \u8fdb\u884c\u8ba1\u7b97\u6216\u53ef\u89c6\u5316\u5b83\u4eec\u3002\u638c\u63e1\u63cf\u8ff0\u6027\u7edf\u8ba1\u91cf\u548c\u7edf\u8ba1\u5206\u5e03\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u5728\u5206\u6790\u65f6\u638c\u63e1\u6570\u636e\u5206\u5e03\u7684\u6838\u5fc3\u7279\u6027\u3002\u638c\u63e1\u7edf\u8ba1\u68c0\u9a8c\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u4ece\u79d1\u5b66\u7684\u89d2\u5ea6\u5bf9\u6570\u636e\u8fdb\u884c\u6bd4\u8f83\u3001\u5224\u65ad\u5e76\u4ea7\u751f\u53ef\u9760\u7ed3\u8bba\u3002\u9664\u4e86\u5e38\u7528\u7684 t \u68c0\u9a8c\uff0c\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u68c0\u9a8c\u65b9\u6cd5\uff0c\u5305\u62ec\u5361\u65b9\u68c0\u9a8c\u3001\u975e\u53c2\u6570\u68c0\u9a8c\u7b49\u7b49\uff0c\u8bfb\u8005\u5982\u679c\u611f\u5174\u8da3\u53ef\u4ee5\u901a\u8fc7\u4e13\u4e1a\u7684\u7edf\u8ba1\u5b66\u4e66\u7c4d\u6216\u5176\u4ed6\u7f51\u7edc\u8d44\u6599\u8fdb\u884c\u5b66\u4e60\u3002","title":"14.4 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"15-append/","text":"\u7b2c 15 \u7ae0 \u672a\u8a00\u53ca\u7684\u5185\u5bb9 \u00b6 \u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : \u9b54\u672f\u547d\u4ee4 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b \u672c\u7ae0\u4f5c\u4e3a\u5168\u4e66\u7684\u6700\u540e\u4e00\u4e2a\u7ae0\u8282\uff0c\u9644\u52a0\u4ecb\u7ecd\u4e24\u4e2a\u672a\u8a00\u53ca\u4f46\u53ef\u80fd\u6709\u7528\u7684\u5185\u5bb9\uff1a\u7b2c\u4e00\u4e2a\u662f IPython \u7684\u9b54\u672f\u547d\u4ee4\uff0c\u7b2c\u4e8c\u4e2a\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u77e5\u8bc6\u3002 15.1 \u9b54\u672f\u547d\u4ee4 \u00b6 \u9b54\u672f\u547d\u4ee4\u662f IPython \u5728 Python \u8bed\u6cd5\u57fa\u7840\u4e0a\u589e\u5f3a\u7684\u529f\u80fd\uff0c\u4e00\u822c\u4ee5 % \u4f5c\u4e3a\u524d\u7f00\uff0c\u9b54\u672f\u547d\u4ee4\u7528\u4e8e\u7b80\u6d01\u5730\u89e3\u51b3\u6807\u51c6\u6570\u636e\u5206\u6790\u4e2d\u7684\u5404\u79cd\u5e38\u89c1\u95ee\u9898\uff0c\u5982\u5217\u51fa\u5f53\u524d\u76ee\u5f55\u6587\u4ef6\uff0c\u8fd0\u884c\u811a\u672c\u3002 \u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u9b54\u672f\u547d\u4ee4\u548c\u5b83\u7684\u63cf\u8ff0\u3002 %paste # \u7c98\u8d34\u4ee3\u7801 %run # \u6267\u884c\u5916\u90e8\u811a\u672c %timeit # \u8ba1\u7b97\u4ee3\u7801\u8fd0\u884c\u65f6\u95f4 %magic # \u83b7\u53d6\u53ef\u7528\u9b54\u672f\u547d\u4ee4\u63cf\u8ff0\u4e0e\u793a\u4f8b %lsmagic # \u83b7\u53d6\u53ef\u7528\u9b54\u672f\u547d\u4ee4\u5217\u8868 %ls # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u5217\u8868 %pwd # \u83b7\u53d6\u5f53\u524d\u6240\u5728\uff08\u5de5\u4f5c\uff09\u76ee\u5f55 %cd # \u5207\u6362\u5de5\u4f5c\u76ee\u5f55 %mkdir # \u521b\u5efa\u6587\u4ef6\u5939 %cp # \u62f7\u8d1d\u6587\u4ef6 %rm # \u5220\u9664\u6587\u4ef6 \u9b54\u672f\u547d\u4ee4\u76f8\u5f53\u6709\u7528\uff0c\u5b83\u89e3\u51b3\u4e86\u6570\u636e\u5206\u6790\u65f6\u60f3\u8981\u5b9e\u65f6\u4e0e\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u5e76\u6d4b\u8bd5\u4ee3\u7801\u7684\u75db\u70b9\u3002 \u5728 IPython Shell \u6216 Jupyter Notebook \u4e2d\u8f93\u5165 %lsmagic \u5373\u53ef\u67e5\u770b\u6240\u6709\u7684\u9b54\u672f\u547d\u4ee4\u3002 In [4]: %lsmagic Out[4]: Available line magics: %alias %alias_magic %autoawait %autocall %autoindent %automagic %bookmark %cat %cd %clear %colors %conda %config %cp %cpaste %debug %dhist %dirs %doctest_mode %ed %edit %env %gui %hist %history %killbgscripts %ldir %less %lf %lk %ll %load %load_ext %loadpy %logoff %logon %logstart %logstate %logstop %ls %lsmagic %lx %macro %magic %m an %matplotlib %mkdir %more %mv %notebook %page %paste %pastebin %pdb %pdef %pdoc %pfile %pinfo %pinfo2 %pip %popd %pprint %precision %prun %psearch %psource %pushd % pwd %pycat %pylab %quickref %recall %rehashx %reload_ext %rep %rerun %reset %reset_selective %rm %rmdir %run %save %sc %set_env %store %sx %system %tb %time %timeit % unalias %unload_ext %who %who_ls %whos %xdel %xmode Available cell magics: %%! %%HTML %%SVG %%bash %%capture %%debug %%file %%html %%javascript %%js %%latex %%markdown %%perl %%prun %%pypy %%python %%python2 %%python3 %%ruby %%script %%sh %%sv g %%sx %%system %%time %%timeit %%writefile Automagic is ON, % prefix IS NOT needed for line magics. \u4e00\u822c\u800c\u8a00\uff0c\u9b54\u672f\u547d\u4ee4\u7684\u4f5c\u7528\u53ef\u4ee5\u901a\u8fc7\u540d\u5b57\u8fdb\u884c\u731c\u6d4b\u3002\u5982\u679c\u6211\u4eec\u4e0d\u786e\u5b9a\uff0c\u53ef\u4ee5\u5728\u540e\u9762\u8ddf\u4e00\u4e2a\u95ee\u53f7\u67e5\u770b\u5bf9\u5e94\u7684\u6587\u6863\u3002 In [5]: %ls? Repr: <alias ls for 'ls -F --color'> \u7ed3\u679c\u663e\u793a %ls \u547d\u4ee4\u662f ls -F \u547d\u4ee4\u7684\u7f29\u5199\uff0cls \u547d\u4ee4\u662f Unix \u7cfb\u7edf\u8fdb\u884c\u6587\u4ef6\u7ba1\u7406\u7684\u547d\u4ee4\u4e4b\u4e00\uff0c\u7528\u4e8e\u67e5\u770b\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5217\u8868\u3002\u5176\u4ed6\u7684 Unix \u547d\u4ee4\u90fd\u6709\u9b54\u672f\u547d\u4ee4\u7684\u76f8\u5e94\u5b9e\u73b0\uff0c\u5305\u62ec mkdir\u3001cp\u3001pwd \u7b49\u3002 \u8fd0\u884c %ls \u547d\u4ee4\uff0c\u53d1\u73b0\u5f53\u524d\u76ee\u5f55\u4e0b\u6ca1\u6709\u4efb\u4f55\u6587\u4ef6\u6216\u76ee\u5f55\u3002 In [6]: %ls \u6211\u4eec\u4f7f\u7528 %mkdir \u521b\u5efa\u4e00\u4e2a\u76ee\u5f55 new \u518d\u6b21\u8fdb\u884c\u68c0\u67e5\u3002 In [7]: %mkdir new In [8]: %ls new/ \u4f7f\u7528 %pwd \u67e5\u770b\u6211\u4eec\u5de5\u4f5c\u76ee\u5f55\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4f4d\u7f6e\u3002 In [9]: %pwd Out[9]: '/home/shixiang/Proj/pybook/test_ipython_shell' \u4f7f\u7528 %cd \u5207\u6362\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55\uff0c\u5982\u4e0a\u9762\u65b0\u5efa\u7684 new \u76ee\u5f55\u3002 In [10]: %cd new /home/shixiang/Proj/pybook/test_ipython_shell/new In [11]: %pwd Out[11]: '/home/shixiang/Proj/pybook/test_ipython_shell/new' %timeit \u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u9b54\u672f\u547d\u4ee4\uff0c\u5b83\u53ef\u4ee5\u8ba1\u7b97 Python \u4ee3\u7801\u7684\u6267\u884c\u65f6\u95f4\u3002 In [12]: %timeit Result = [i ** 2 for i in range(100)] 47.6 \u00b5s \u00b1 386 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000 loops each) \u8be5\u547d\u4ee4\u4f1a\u81ea\u52a8\u591a\u6b21\u6267\u884c\u547d\u4ee4\uff0810000 \u6b21\uff09\u4ee5\u83b7\u5f97\u7a33\u5b9a\u7684\u7ed3\u679c\uff0c\u5f53\u4f7f\u7528\u591a\u884c\u8f93\u5165\u65f6\u6211\u4eec\u9700\u8981\u5bf9\u547d\u4ee4\u591a\u52a0\u4e00\u4e2a\u767e\u5206\u53f7\u3002 In [13]: %%timeit ...: Result = [] ...: for i in range(100): ...: Result.append(i * i) ...: 16.7 \u00b5s \u00b1 178 ns per loop (mean \u00b1 std. dev. of 7 runs, 100000 loops each) 15.2 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b \u00b6 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08object-oriented programming\uff0cOOP\uff09\u662f\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u6709\u7684\u7279\u6027\uff0cPython \u4e5f\u4e0d\u4f8b\u5916\u3002 \u4e0d\u8fc7\uff0c\u6570\u636e\u5904\u7406\u548c\u5206\u6790\u65f6\u6211\u4eec\u4e00\u822c\u5f88\u5c11\u81ea\u5df1\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u7c7b\uff0c\u9664\u975e\u662f\u5f00\u53d1\u4e00\u4e9b\u6570\u636e\u5904\u7406\u5de5\u5177\u8f6f\u4ef6\uff0c\u7528\u7c7b\u6765\u8868\u793a\u4e00\u4e9b\u6838\u5fc3\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5982 Pandas \u5e93\u7684 DataFrame\u3002 \u672c\u8282\u5411\u8bfb\u8005\u7b80\u5355\u4ecb\u7ecd\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5\u548c\u64cd\u4f5c\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u4e8e\u8bfb\u8005\u80fd\u591f\u4e86\u89e3\u8fd9\u4e00\u524d\u9762\u9057\u6f0f\u7684 Python \u57fa\u7840\u77e5\u8bc6\u3002 \u9762\u5411\u5bf9\u8c61\u7684\u6838\u5fc3\u6982\u5ff5\u662f\u7c7b\uff08Class\uff09\u548c\u5b9e\u4f8b\u6216\u5bf9\u8c61\uff08Object\uff09\uff0c\u7c7b\u662f\u5bf9\u8c61\u7684\u84dd\u56fe\uff0c\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\u5316\u3002\u5982\u5b66\u751f\u662f\u4e00\u4e2a\u7c7b\uff0c\u67d0\u5b66\u751f\u5c0f\u5468\u5c31\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002 \u6211\u4eec\u5047\u8bbe\u5b66\u751f\u6709\u540d\u5b57\u3001\u5e74\u9f84\u3001\u8eab\u9ad8\u548c\u6210\u7ee9 4 \u4e2a\u5c5e\u6027\uff0c\u4f7f\u7528 Python \u521b\u5efa\u4e00\u4e2a Student \u7c7b\u5982\u4e0b\uff1a In [1]: class Student: ...: def __init__(self, name, age, height, score): ...: self.name = name ...: self.age = age ...: self.height = height ...: self.score = score \u6709\u4e86\u7c7b\u4ee5\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e0d\u540c\u7684\u5b66\u751f\u5b9e\u4f8b\uff0c\u5982\u5c0f\u5468\u3001\u5c0f\u5f20\u3001\u5c0f\u674e\u7b49\u7b49\u3002 \u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u79f0\u4e3a\u65b9\u6cd5\uff0c\u6bcf\u4e2a\u7c7b\u90fd\u9700\u8981\u4e00\u4e2a __init__() \u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\u3002\u7c7b\u7684\u65b9\u6cd5\u7b2c\u4e00\u4e2a\u53c2\u6570\u6c38\u8fdc\u662f self\uff0c\u6307\u5411\u5176\u672c\u8eab\u3002 \u540e\u7eed\u7684\u53c2\u6570\u5c31\u662f\u7528\u6237\u53ef\u4ee5\u5b9e\u9645\u8f93\u5165\u7684\u53c2\u6570\uff0c\u6211\u4eec\u6309\u7167\u683c\u5f0f\u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u3002 In [2]: Student('\u5c0f\u5468', 20, 180, 98) Out[2]: <__main__.Student at 0x7fe95c4eeb50> \u5728\u65b9\u6cd5\u4e2d\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u8ba1\u7b97\u6216\u8005\u5c06\u4e00\u4e9b\u6570\u636e\u5b58\u50a8\u8d77\u6765\uff0c\u5b58\u50a8\u6570\u636e\u7684\u53d8\u91cf\u79f0\u4e3a\u7c7b\u7684\u5c5e\u6027\u3002\u5982\u521d\u59cb\u5316\u51fd\u6570\u4e2d\u7684 self.name\u3001self.age \u7b49\u3002 \u5f53\u6211\u4eec\u521b\u5efa\u597d\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6210\u5458\u64cd\u4f5c\u7b26\u83b7\u53d6\u5bf9\u8c61\u7684\u5c5e\u6027\u503c\u3002 In [3]: zhou = Student('\u5c0f\u5468', 20, 180, 98) In [4]: zhou.score Out[4]: 98 In [5]: zhou.height Out[5]: 180 In [6]: zhou.age Out[6]: 20 \u9664\u4e86\u521d\u59cb\u5316\u65b9\u6cd5\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u5176\u4ed6\u65b9\u6cd5\u8fdb\u884c\u8ba1\u7b97\u3002\u4f8b\u5982\u67d0\u73ed\u7ea7\u7684\u5e73\u5747\u5206\u4e3a 70 \u5206\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5\u8ba1\u7b97 \u5c0f\u5468\u6210\u7ee9\u4e0e\u73ed\u7ea7\u5e73\u5747\u5206\u7684\u5dee\u503c\u3002 \u6211\u4eec\u5148\u4e3a Student \u7c7b\u52a0\u4e0a\u8ba1\u7b97\u5dee\u503c\u7684\u65b9\u6cd5\uff1a In [7]: class Student: ...: def __init__(self, name, age, height, score): ...: self.name = name ...: self.age = age ...: self.height = height ...: self.score = score ...: def diff(self, average_score): ...: print(self.score - average_score) ...: \u91cd\u65b0\u521b\u5efa\u5bf9\u8c61 zhou\uff1a zhou = Student('\u5c0f\u5468', 20, 180, 98) \u8ba1\u7b97\u5dee\u503c\uff1a In [9]: zhou.diff(70) 28 \u57fa\u4e8e\u4e0a\u9762\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u521b\u5efa\u7c7b\u5e76\u6dfb\u52a0\u4efb\u610f\u591a\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8fd8\u6709\u4e00\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u6982\u5ff5\u662f\u7ee7\u627f\uff08Inheritance\uff09\uff0c\u5b83\u53ef\u4ee5\u6709\u6548\u5730\u4ee3\u8868\u4e0d\u540c\u7c7b\u7684\u5c42\u7ea7 \u5173\u7cfb\u548c\u91cd\u7528\u4ee3\u7801\u3002 \u4f8b\u5982\uff0c\u4e0a\u9762\u6211\u4eec\u4ee5\u53ca\u521b\u5efa\u4e86\u4e00\u4e2a Student \u7c7b\uff0c\u73b0\u5728\u6211\u4eec\u60f3\u8981\u521b\u5efa\u4e00\u4e2a Studnet2 \u7c7b\uff0c\u8be5\u7c7b\u5728 Student \u7c7b\u7684\u57fa\u7840\u4e0a\u591a\u4e86\u4e24\u4e2a\u5c5e\u6027 class_name \u548c teacher_name \u7528\u6765\u8868\u793a\u73ed\u7ea7\u540d\u548c\u73ed\u4e3b\u4efb\u540d\u5b57\u3002 \u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\uff1a In [15]: class Student2(Student): ...: def __init__(self, name, age, height, score, class_name, teacher_name): ...: Student.__init__(self, name, age, height, score) ...: self.class_name = class_name ...: self.teacher_name = teacher_name ...: \u6ce8\u610f\uff0c\u5728\u65b0\u7684\u7c7b\u521d\u59cb\u5316\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 Student \u7c7b\u7684\u521d\u59cb\u5316\u3002\u63a5\u7740\u6211\u4eec\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61 zhou\u3002 In [16]: zhou = Student2('\u5c0f\u5468', 20, 180, 98, \"Class A\", \"Mr. Zhang\") \u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528 Student \u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 In [17]: zhou.name Out[17]: '\u5c0f\u5468' In [18]: zhou.diff(70) 28 15.3 \u7ae0\u672b\u5c0f\u7ed3 \u00b6 \u672c\u7ae0\u4ecb\u7ecd\u4e86 IPython \u9b54\u672f\u547d\u4ee4\u548c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e24\u4e2a\u8865\u5145\u5185\u5bb9\u3002\u4e86\u89e3\u548c\u638c\u63e1\u5e38\u89c1\u7684\u9b54\u672f\u547d\u4ee4\u662f\u975e\u5e38\u6709\u7528\u7684\uff0c \u5b83\u53ef\u4ee5\u8f85\u52a9\u8bfb\u8005\u5feb\u901f\u5730\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u3001\u5b8c\u6210\u4e00\u4e9b\u5e38\u89c1\u4efb\u52a1\u3002\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5219\u63d0\u4f9b\u4e86\u65b0\u7684\u7f16\u7a0b\u89c6\u89d2\uff0c \u867d\u7136\u81ea\u5b9a\u4e49\u7c7b\u5728\u6570\u636e\u5206\u6790\u4e2d\u4e0d\u5e38\u7528\uff0c\u4f46\u5b83\u4f9d\u7136\u9002\u7528\u4e8e\u89e3\u51b3\u4e00\u4e9b\u7279\u5b9a\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u8f85\u52a9\u8bfb\u8005\u4e86\u89e3\u5e38\u89c1\u5206\u6790\u5e93\u4e2d \u4e00\u4e9b\u7c7b\u7684\u4f7f\u7528\uff0c\u5982 NumPy \u4e2d\u7684 ndarray \u548c Pandas \u4e2d\u7684 DataFrame\u3002","title":"\u7b2c 15 \u7ae0 \u672a\u8a00\u53ca\u7684\u5185\u5bb9"},{"location":"15-append/#15","text":"\u672c\u7ae0\u5185\u5bb9\u63d0\u8981 : \u9b54\u672f\u547d\u4ee4 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b \u672c\u7ae0\u4f5c\u4e3a\u5168\u4e66\u7684\u6700\u540e\u4e00\u4e2a\u7ae0\u8282\uff0c\u9644\u52a0\u4ecb\u7ecd\u4e24\u4e2a\u672a\u8a00\u53ca\u4f46\u53ef\u80fd\u6709\u7528\u7684\u5185\u5bb9\uff1a\u7b2c\u4e00\u4e2a\u662f IPython \u7684\u9b54\u672f\u547d\u4ee4\uff0c\u7b2c\u4e8c\u4e2a\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u77e5\u8bc6\u3002","title":"\u7b2c 15 \u7ae0 \u672a\u8a00\u53ca\u7684\u5185\u5bb9"},{"location":"15-append/#151","text":"\u9b54\u672f\u547d\u4ee4\u662f IPython \u5728 Python \u8bed\u6cd5\u57fa\u7840\u4e0a\u589e\u5f3a\u7684\u529f\u80fd\uff0c\u4e00\u822c\u4ee5 % \u4f5c\u4e3a\u524d\u7f00\uff0c\u9b54\u672f\u547d\u4ee4\u7528\u4e8e\u7b80\u6d01\u5730\u89e3\u51b3\u6807\u51c6\u6570\u636e\u5206\u6790\u4e2d\u7684\u5404\u79cd\u5e38\u89c1\u95ee\u9898\uff0c\u5982\u5217\u51fa\u5f53\u524d\u76ee\u5f55\u6587\u4ef6\uff0c\u8fd0\u884c\u811a\u672c\u3002 \u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u9b54\u672f\u547d\u4ee4\u548c\u5b83\u7684\u63cf\u8ff0\u3002 %paste # \u7c98\u8d34\u4ee3\u7801 %run # \u6267\u884c\u5916\u90e8\u811a\u672c %timeit # \u8ba1\u7b97\u4ee3\u7801\u8fd0\u884c\u65f6\u95f4 %magic # \u83b7\u53d6\u53ef\u7528\u9b54\u672f\u547d\u4ee4\u63cf\u8ff0\u4e0e\u793a\u4f8b %lsmagic # \u83b7\u53d6\u53ef\u7528\u9b54\u672f\u547d\u4ee4\u5217\u8868 %ls # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u5217\u8868 %pwd # \u83b7\u53d6\u5f53\u524d\u6240\u5728\uff08\u5de5\u4f5c\uff09\u76ee\u5f55 %cd # \u5207\u6362\u5de5\u4f5c\u76ee\u5f55 %mkdir # \u521b\u5efa\u6587\u4ef6\u5939 %cp # \u62f7\u8d1d\u6587\u4ef6 %rm # \u5220\u9664\u6587\u4ef6 \u9b54\u672f\u547d\u4ee4\u76f8\u5f53\u6709\u7528\uff0c\u5b83\u89e3\u51b3\u4e86\u6570\u636e\u5206\u6790\u65f6\u60f3\u8981\u5b9e\u65f6\u4e0e\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u5e76\u6d4b\u8bd5\u4ee3\u7801\u7684\u75db\u70b9\u3002 \u5728 IPython Shell \u6216 Jupyter Notebook \u4e2d\u8f93\u5165 %lsmagic \u5373\u53ef\u67e5\u770b\u6240\u6709\u7684\u9b54\u672f\u547d\u4ee4\u3002 In [4]: %lsmagic Out[4]: Available line magics: %alias %alias_magic %autoawait %autocall %autoindent %automagic %bookmark %cat %cd %clear %colors %conda %config %cp %cpaste %debug %dhist %dirs %doctest_mode %ed %edit %env %gui %hist %history %killbgscripts %ldir %less %lf %lk %ll %load %load_ext %loadpy %logoff %logon %logstart %logstate %logstop %ls %lsmagic %lx %macro %magic %m an %matplotlib %mkdir %more %mv %notebook %page %paste %pastebin %pdb %pdef %pdoc %pfile %pinfo %pinfo2 %pip %popd %pprint %precision %prun %psearch %psource %pushd % pwd %pycat %pylab %quickref %recall %rehashx %reload_ext %rep %rerun %reset %reset_selective %rm %rmdir %run %save %sc %set_env %store %sx %system %tb %time %timeit % unalias %unload_ext %who %who_ls %whos %xdel %xmode Available cell magics: %%! %%HTML %%SVG %%bash %%capture %%debug %%file %%html %%javascript %%js %%latex %%markdown %%perl %%prun %%pypy %%python %%python2 %%python3 %%ruby %%script %%sh %%sv g %%sx %%system %%time %%timeit %%writefile Automagic is ON, % prefix IS NOT needed for line magics. \u4e00\u822c\u800c\u8a00\uff0c\u9b54\u672f\u547d\u4ee4\u7684\u4f5c\u7528\u53ef\u4ee5\u901a\u8fc7\u540d\u5b57\u8fdb\u884c\u731c\u6d4b\u3002\u5982\u679c\u6211\u4eec\u4e0d\u786e\u5b9a\uff0c\u53ef\u4ee5\u5728\u540e\u9762\u8ddf\u4e00\u4e2a\u95ee\u53f7\u67e5\u770b\u5bf9\u5e94\u7684\u6587\u6863\u3002 In [5]: %ls? Repr: <alias ls for 'ls -F --color'> \u7ed3\u679c\u663e\u793a %ls \u547d\u4ee4\u662f ls -F \u547d\u4ee4\u7684\u7f29\u5199\uff0cls \u547d\u4ee4\u662f Unix \u7cfb\u7edf\u8fdb\u884c\u6587\u4ef6\u7ba1\u7406\u7684\u547d\u4ee4\u4e4b\u4e00\uff0c\u7528\u4e8e\u67e5\u770b\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5217\u8868\u3002\u5176\u4ed6\u7684 Unix \u547d\u4ee4\u90fd\u6709\u9b54\u672f\u547d\u4ee4\u7684\u76f8\u5e94\u5b9e\u73b0\uff0c\u5305\u62ec mkdir\u3001cp\u3001pwd \u7b49\u3002 \u8fd0\u884c %ls \u547d\u4ee4\uff0c\u53d1\u73b0\u5f53\u524d\u76ee\u5f55\u4e0b\u6ca1\u6709\u4efb\u4f55\u6587\u4ef6\u6216\u76ee\u5f55\u3002 In [6]: %ls \u6211\u4eec\u4f7f\u7528 %mkdir \u521b\u5efa\u4e00\u4e2a\u76ee\u5f55 new \u518d\u6b21\u8fdb\u884c\u68c0\u67e5\u3002 In [7]: %mkdir new In [8]: %ls new/ \u4f7f\u7528 %pwd \u67e5\u770b\u6211\u4eec\u5de5\u4f5c\u76ee\u5f55\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4f4d\u7f6e\u3002 In [9]: %pwd Out[9]: '/home/shixiang/Proj/pybook/test_ipython_shell' \u4f7f\u7528 %cd \u5207\u6362\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55\uff0c\u5982\u4e0a\u9762\u65b0\u5efa\u7684 new \u76ee\u5f55\u3002 In [10]: %cd new /home/shixiang/Proj/pybook/test_ipython_shell/new In [11]: %pwd Out[11]: '/home/shixiang/Proj/pybook/test_ipython_shell/new' %timeit \u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u9b54\u672f\u547d\u4ee4\uff0c\u5b83\u53ef\u4ee5\u8ba1\u7b97 Python \u4ee3\u7801\u7684\u6267\u884c\u65f6\u95f4\u3002 In [12]: %timeit Result = [i ** 2 for i in range(100)] 47.6 \u00b5s \u00b1 386 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000 loops each) \u8be5\u547d\u4ee4\u4f1a\u81ea\u52a8\u591a\u6b21\u6267\u884c\u547d\u4ee4\uff0810000 \u6b21\uff09\u4ee5\u83b7\u5f97\u7a33\u5b9a\u7684\u7ed3\u679c\uff0c\u5f53\u4f7f\u7528\u591a\u884c\u8f93\u5165\u65f6\u6211\u4eec\u9700\u8981\u5bf9\u547d\u4ee4\u591a\u52a0\u4e00\u4e2a\u767e\u5206\u53f7\u3002 In [13]: %%timeit ...: Result = [] ...: for i in range(100): ...: Result.append(i * i) ...: 16.7 \u00b5s \u00b1 178 ns per loop (mean \u00b1 std. dev. of 7 runs, 100000 loops each)","title":"15.1 \u9b54\u672f\u547d\u4ee4"},{"location":"15-append/#152","text":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08object-oriented programming\uff0cOOP\uff09\u662f\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u6709\u7684\u7279\u6027\uff0cPython \u4e5f\u4e0d\u4f8b\u5916\u3002 \u4e0d\u8fc7\uff0c\u6570\u636e\u5904\u7406\u548c\u5206\u6790\u65f6\u6211\u4eec\u4e00\u822c\u5f88\u5c11\u81ea\u5df1\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u7c7b\uff0c\u9664\u975e\u662f\u5f00\u53d1\u4e00\u4e9b\u6570\u636e\u5904\u7406\u5de5\u5177\u8f6f\u4ef6\uff0c\u7528\u7c7b\u6765\u8868\u793a\u4e00\u4e9b\u6838\u5fc3\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5982 Pandas \u5e93\u7684 DataFrame\u3002 \u672c\u8282\u5411\u8bfb\u8005\u7b80\u5355\u4ecb\u7ecd\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5\u548c\u64cd\u4f5c\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u4e8e\u8bfb\u8005\u80fd\u591f\u4e86\u89e3\u8fd9\u4e00\u524d\u9762\u9057\u6f0f\u7684 Python \u57fa\u7840\u77e5\u8bc6\u3002 \u9762\u5411\u5bf9\u8c61\u7684\u6838\u5fc3\u6982\u5ff5\u662f\u7c7b\uff08Class\uff09\u548c\u5b9e\u4f8b\u6216\u5bf9\u8c61\uff08Object\uff09\uff0c\u7c7b\u662f\u5bf9\u8c61\u7684\u84dd\u56fe\uff0c\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\u5316\u3002\u5982\u5b66\u751f\u662f\u4e00\u4e2a\u7c7b\uff0c\u67d0\u5b66\u751f\u5c0f\u5468\u5c31\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002 \u6211\u4eec\u5047\u8bbe\u5b66\u751f\u6709\u540d\u5b57\u3001\u5e74\u9f84\u3001\u8eab\u9ad8\u548c\u6210\u7ee9 4 \u4e2a\u5c5e\u6027\uff0c\u4f7f\u7528 Python \u521b\u5efa\u4e00\u4e2a Student \u7c7b\u5982\u4e0b\uff1a In [1]: class Student: ...: def __init__(self, name, age, height, score): ...: self.name = name ...: self.age = age ...: self.height = height ...: self.score = score \u6709\u4e86\u7c7b\u4ee5\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e0d\u540c\u7684\u5b66\u751f\u5b9e\u4f8b\uff0c\u5982\u5c0f\u5468\u3001\u5c0f\u5f20\u3001\u5c0f\u674e\u7b49\u7b49\u3002 \u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u79f0\u4e3a\u65b9\u6cd5\uff0c\u6bcf\u4e2a\u7c7b\u90fd\u9700\u8981\u4e00\u4e2a __init__() \u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\u3002\u7c7b\u7684\u65b9\u6cd5\u7b2c\u4e00\u4e2a\u53c2\u6570\u6c38\u8fdc\u662f self\uff0c\u6307\u5411\u5176\u672c\u8eab\u3002 \u540e\u7eed\u7684\u53c2\u6570\u5c31\u662f\u7528\u6237\u53ef\u4ee5\u5b9e\u9645\u8f93\u5165\u7684\u53c2\u6570\uff0c\u6211\u4eec\u6309\u7167\u683c\u5f0f\u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u3002 In [2]: Student('\u5c0f\u5468', 20, 180, 98) Out[2]: <__main__.Student at 0x7fe95c4eeb50> \u5728\u65b9\u6cd5\u4e2d\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u8ba1\u7b97\u6216\u8005\u5c06\u4e00\u4e9b\u6570\u636e\u5b58\u50a8\u8d77\u6765\uff0c\u5b58\u50a8\u6570\u636e\u7684\u53d8\u91cf\u79f0\u4e3a\u7c7b\u7684\u5c5e\u6027\u3002\u5982\u521d\u59cb\u5316\u51fd\u6570\u4e2d\u7684 self.name\u3001self.age \u7b49\u3002 \u5f53\u6211\u4eec\u521b\u5efa\u597d\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6210\u5458\u64cd\u4f5c\u7b26\u83b7\u53d6\u5bf9\u8c61\u7684\u5c5e\u6027\u503c\u3002 In [3]: zhou = Student('\u5c0f\u5468', 20, 180, 98) In [4]: zhou.score Out[4]: 98 In [5]: zhou.height Out[5]: 180 In [6]: zhou.age Out[6]: 20 \u9664\u4e86\u521d\u59cb\u5316\u65b9\u6cd5\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u5176\u4ed6\u65b9\u6cd5\u8fdb\u884c\u8ba1\u7b97\u3002\u4f8b\u5982\u67d0\u73ed\u7ea7\u7684\u5e73\u5747\u5206\u4e3a 70 \u5206\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5\u8ba1\u7b97 \u5c0f\u5468\u6210\u7ee9\u4e0e\u73ed\u7ea7\u5e73\u5747\u5206\u7684\u5dee\u503c\u3002 \u6211\u4eec\u5148\u4e3a Student \u7c7b\u52a0\u4e0a\u8ba1\u7b97\u5dee\u503c\u7684\u65b9\u6cd5\uff1a In [7]: class Student: ...: def __init__(self, name, age, height, score): ...: self.name = name ...: self.age = age ...: self.height = height ...: self.score = score ...: def diff(self, average_score): ...: print(self.score - average_score) ...: \u91cd\u65b0\u521b\u5efa\u5bf9\u8c61 zhou\uff1a zhou = Student('\u5c0f\u5468', 20, 180, 98) \u8ba1\u7b97\u5dee\u503c\uff1a In [9]: zhou.diff(70) 28 \u57fa\u4e8e\u4e0a\u9762\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u521b\u5efa\u7c7b\u5e76\u6dfb\u52a0\u4efb\u610f\u591a\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8fd8\u6709\u4e00\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u6982\u5ff5\u662f\u7ee7\u627f\uff08Inheritance\uff09\uff0c\u5b83\u53ef\u4ee5\u6709\u6548\u5730\u4ee3\u8868\u4e0d\u540c\u7c7b\u7684\u5c42\u7ea7 \u5173\u7cfb\u548c\u91cd\u7528\u4ee3\u7801\u3002 \u4f8b\u5982\uff0c\u4e0a\u9762\u6211\u4eec\u4ee5\u53ca\u521b\u5efa\u4e86\u4e00\u4e2a Student \u7c7b\uff0c\u73b0\u5728\u6211\u4eec\u60f3\u8981\u521b\u5efa\u4e00\u4e2a Studnet2 \u7c7b\uff0c\u8be5\u7c7b\u5728 Student \u7c7b\u7684\u57fa\u7840\u4e0a\u591a\u4e86\u4e24\u4e2a\u5c5e\u6027 class_name \u548c teacher_name \u7528\u6765\u8868\u793a\u73ed\u7ea7\u540d\u548c\u73ed\u4e3b\u4efb\u540d\u5b57\u3002 \u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\uff1a In [15]: class Student2(Student): ...: def __init__(self, name, age, height, score, class_name, teacher_name): ...: Student.__init__(self, name, age, height, score) ...: self.class_name = class_name ...: self.teacher_name = teacher_name ...: \u6ce8\u610f\uff0c\u5728\u65b0\u7684\u7c7b\u521d\u59cb\u5316\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 Student \u7c7b\u7684\u521d\u59cb\u5316\u3002\u63a5\u7740\u6211\u4eec\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61 zhou\u3002 In [16]: zhou = Student2('\u5c0f\u5468', 20, 180, 98, \"Class A\", \"Mr. Zhang\") \u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528 Student \u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 In [17]: zhou.name Out[17]: '\u5c0f\u5468' In [18]: zhou.diff(70) 28","title":"15.2 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b"},{"location":"15-append/#153","text":"\u672c\u7ae0\u4ecb\u7ecd\u4e86 IPython \u9b54\u672f\u547d\u4ee4\u548c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e24\u4e2a\u8865\u5145\u5185\u5bb9\u3002\u4e86\u89e3\u548c\u638c\u63e1\u5e38\u89c1\u7684\u9b54\u672f\u547d\u4ee4\u662f\u975e\u5e38\u6709\u7528\u7684\uff0c \u5b83\u53ef\u4ee5\u8f85\u52a9\u8bfb\u8005\u5feb\u901f\u5730\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u3001\u5b8c\u6210\u4e00\u4e9b\u5e38\u89c1\u4efb\u52a1\u3002\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5219\u63d0\u4f9b\u4e86\u65b0\u7684\u7f16\u7a0b\u89c6\u89d2\uff0c \u867d\u7136\u81ea\u5b9a\u4e49\u7c7b\u5728\u6570\u636e\u5206\u6790\u4e2d\u4e0d\u5e38\u7528\uff0c\u4f46\u5b83\u4f9d\u7136\u9002\u7528\u4e8e\u89e3\u51b3\u4e00\u4e9b\u7279\u5b9a\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u8f85\u52a9\u8bfb\u8005\u4e86\u89e3\u5e38\u89c1\u5206\u6790\u5e93\u4e2d \u4e00\u4e9b\u7c7b\u7684\u4f7f\u7528\uff0c\u5982 NumPy \u4e2d\u7684 ndarray \u548c Pandas \u4e2d\u7684 DataFrame\u3002","title":"15.3 \u7ae0\u672b\u5c0f\u7ed3"},{"location":"16-end/","text":"\u7ed3\u8bed\uff1a\u63a5\u4e0b\u6765\u5b66\u4ec0\u4e48 \u00b6 \u6570\u636e\u5206\u6790\u5728\u5546\u4e1a\u51b3\u7b56\uff0c\u4e91\u8ba1\u7b97\u3001\u751f\u7269\u533b\u5b66\u79d1\u7814\u7b49\u9886\u57df\u6b63\u626e\u6f14\u8d8a\u6765\u8d8a\u91cd\u8981\u7684\u89d2\u8272\u3002\u672c\u4e66\u5305\u542b\u4e86\u9700\u8981\u5229\u7528 Python \u8fdb\u884c\u6570\u636e\u5904\u7406\u7684\u57fa\u672c\u77e5\u8bc6\uff0c\u6709 Python \u57fa\u7840\u7f16\u7a0b\u77e5\u8bc6\u3001Python \u6570\u636e\u5bfc\u5165\u4e0e\u64cd\u4f5c\u3001Python \u53ef\u89c6\u5316\u4ee5\u53ca\u57fa\u672c\u7684\u7edf\u8ba1\u77e5\u8bc6\u7b49 \u3002\u672c\u4e66\u867d\u7136\u7528\u4e86\u5341\u51e0\u7ae0\u7684\u7bc7\u5e45\u5bf9\u8fd9\u4e9b\u77e5\u8bc6\u70b9\u8fdb\u884c\u4ecb\u7ecd\uff0c\u4f46\u4ecd\u6709\u4f17\u591a\u77e5\u8bc6\u70b9\u672a\u80fd\u6db5\u76d6\u6216\u6df1\u5165\u3002\u5728\u5b66\u4e60\u4e86\u672c\u4e66\uff0c\u6709\u4e86 Python \u7f16\u7a0b\u548c\u6570\u636e\u5206\u6790\u7684\u57fa\u7840\u540e\uff0c\u672c\u4e66\u63a8\u8350\u8bfb\u8005\u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u66f4\u52a0\u6df1\u5165\u5730\u53bb\u5b66\u4e60\u548c\u5e94\u7528 Python \u6570\u636e\u5206\u6790\u6280\u80fd\uff0c\u8ba9\u77e5\u8bc6\u53d8\u5f97\u6709\u7528\uff0c\u624d\u80fd\u66f4\u597d\u5730\u7406\u89e3\u548c\u638c\u63e1\u77e5\u8bc6\u3002 \u4e0b\u9762\u6309\u5206\u7c7b\u7f57\u5217\u4e86\u4e00\u4e9b\u80fd\u591f\u5e2e\u52a9\u8bfb\u8005\u8fdb\u9636\u7684\u6280\u672f\u4e66\u7c4d\u3002 Python \u7f16\u7a0b \u00b6 \u5ed6\u96ea\u5cf0\u7684\u300aPython 3 \u57fa\u7840\u6559\u7a0b\u300b \u300aPython \u5b66\u4e60\u624b\u518c\u300b \u300a\u6d41\u7545\u7684 Python\u300b Python \u6570\u636e\u5206\u6790 \u00b6 \u300a\u5229\u7528 Python \u8fdb\u884c\u6570\u636e\u5904\u7406\u300b \u300aPython \u6570\u636e\u79d1\u5b66\u624b\u518c\u300b \u300aPython \u6570\u636e\u5206\u6790\u5b9e\u6218\u300b \u7edf\u8ba1\u5b66 \u00b6 \u300a\u7edf\u8ba1\u5b66\u4e03\u652f\u67f1\u300b \u300a\u7edf\u8ba1\u6570\u5b57\u4f1a\u6492\u8c0e\u300b \u300aPython \u7edf\u8ba1\u5206\u6790\u300b \u53ef\u89c6\u5316 \u00b6 \u300aPython \u6570\u636e\u53ef\u89c6\u5316\u7f16\u7a0b\u5b9e\u6218\u300b \u300aPython \u6570\u636e\u53ef\u89c6\u5316\u300b \u300aggplot2\uff1a\u6570\u636e\u5206\u6790\u4e0e\u56fe\u5f62\u827a\u672f\u300b","title":"\u7ed3\u8bed\uff1a\u63a5\u4e0b\u6765\u5b66\u4ec0\u4e48"},{"location":"16-end/#_1","text":"\u6570\u636e\u5206\u6790\u5728\u5546\u4e1a\u51b3\u7b56\uff0c\u4e91\u8ba1\u7b97\u3001\u751f\u7269\u533b\u5b66\u79d1\u7814\u7b49\u9886\u57df\u6b63\u626e\u6f14\u8d8a\u6765\u8d8a\u91cd\u8981\u7684\u89d2\u8272\u3002\u672c\u4e66\u5305\u542b\u4e86\u9700\u8981\u5229\u7528 Python \u8fdb\u884c\u6570\u636e\u5904\u7406\u7684\u57fa\u672c\u77e5\u8bc6\uff0c\u6709 Python \u57fa\u7840\u7f16\u7a0b\u77e5\u8bc6\u3001Python \u6570\u636e\u5bfc\u5165\u4e0e\u64cd\u4f5c\u3001Python \u53ef\u89c6\u5316\u4ee5\u53ca\u57fa\u672c\u7684\u7edf\u8ba1\u77e5\u8bc6\u7b49 \u3002\u672c\u4e66\u867d\u7136\u7528\u4e86\u5341\u51e0\u7ae0\u7684\u7bc7\u5e45\u5bf9\u8fd9\u4e9b\u77e5\u8bc6\u70b9\u8fdb\u884c\u4ecb\u7ecd\uff0c\u4f46\u4ecd\u6709\u4f17\u591a\u77e5\u8bc6\u70b9\u672a\u80fd\u6db5\u76d6\u6216\u6df1\u5165\u3002\u5728\u5b66\u4e60\u4e86\u672c\u4e66\uff0c\u6709\u4e86 Python \u7f16\u7a0b\u548c\u6570\u636e\u5206\u6790\u7684\u57fa\u7840\u540e\uff0c\u672c\u4e66\u63a8\u8350\u8bfb\u8005\u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u66f4\u52a0\u6df1\u5165\u5730\u53bb\u5b66\u4e60\u548c\u5e94\u7528 Python \u6570\u636e\u5206\u6790\u6280\u80fd\uff0c\u8ba9\u77e5\u8bc6\u53d8\u5f97\u6709\u7528\uff0c\u624d\u80fd\u66f4\u597d\u5730\u7406\u89e3\u548c\u638c\u63e1\u77e5\u8bc6\u3002 \u4e0b\u9762\u6309\u5206\u7c7b\u7f57\u5217\u4e86\u4e00\u4e9b\u80fd\u591f\u5e2e\u52a9\u8bfb\u8005\u8fdb\u9636\u7684\u6280\u672f\u4e66\u7c4d\u3002","title":"\u7ed3\u8bed\uff1a\u63a5\u4e0b\u6765\u5b66\u4ec0\u4e48"},{"location":"QA/","text":"2020-01-13 \u00b6 1 \u00b6 \u8fd9\u91cc\u53bb\u6389\u4e0b\u9762\u4e00\u6bb5\u8bdd\u540e\u9762\u7684\u5185\u5bb9 \u8fd9\u79cd\u7279\u6027\u53eb\u505a\u5e8f\u5217\u89e3\u5305\uff0c\u5c06\u591a\u4e2a\u503c\u7684\u5e8f\u5217\u89e3\u5f00\uff0c\u7136\u540e\u653e\u5230\u5de6\u4fa7\u7684\u53d8\u91cf\u5e8f\u5217\u4e2d\u3002\u5f53\u51fd\u6570\u6216\u8005\u65b9\u6cd5\u8fd4\u56de\u5143\u7ec4\uff08\u6216\u5176\u4ed6\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff09\u65f6\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5c24\u4e3a\u6709\u7528\u3002 \u5e76\u66f4\u6539\u4e3a\uff1a def func(): a = 1 b = 2 c = 3 return a, b, c # \u5e8f\u5217\u89e3\u5305\u64cd\u4f5c\uff1a # \u5c06\u51fd\u6570\u7ed3\u679c\u76f4\u63a5\u8d4b\u503c\u5230\u591a\u4e2a\u53d8\u91cf\u4e2d # \u6309\u987a\u5e8f\u4e00\u4e00\u5bf9\u5e94 # d <- a # e <- b # f <- c d, e, f = func() \u7b49\u53f7\u4e24\u4fa7\u5143\u7d20\u6570\u91cf\u8981\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002\u4e0a\u8ff0\u5e8f\u5217\u89e3\u5305\u64cd\u4f5c\u7cbe\u7b80\u4e86\u4e0b\u9762\u7684\u4ee3\u7801\u5e76\u63d0\u5347\u4e86\u8ba1\u7b97\u6548\u7387\uff1a # \u83b7\u53d6\u4e00\u4e2a\u5143\u7ec4\u7ed3\u679c tup_res = func() # \u5206\u522b\u8d4b\u503c d = tup_res[0] e = tup_res[1] f = tup_res[2] 2 11.7 \u8282\u7ae0\u672b\u5c0f\u7ed3\u548c\u8fd9\u4e00\u7ae0\u5f00\u59cb\u7684\u4ecb\u7ecd\u8bed\u5b8c\u5168\u91cd\u590d\uff0c\u8bf7\u91cd\u65b0\u5199\u4e00\u4e0b\u3002 \u00b6 \u672c\u7ae0\u7684\u5185\u5bb9\u8f83\u4e3a\u9a73\u6742\uff0c\u4ee5\u5de5\u5177\u7bb1\u7684\u65b9\u5f0f\u63d0\u4f9b\u4e86\u4e00\u4e9b Python \u7f16\u7a0b\u7684\u4fbf\u5229\u51fd\u6570\u548c\u64cd\u4f5c\u6280\u5de7\uff0c\u5305\u62ec\u5f02\u5e38\u6355\u83b7\u3001\u51fd\u6570\u5f0f\u7f16\u7a0b\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u7b49\u3002\u7406\u89e3\u548c\u638c\u63e1\u8fd9\u4e9b\u77e5\u8bc6\u6709\u52a9\u4e8e\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3 Python\uff0c\u7f16\u5199\u5b89\u5168\u9ad8\u6548\u7684\u4ee3\u7801\u3002 3 13.3.1\u8282\uff0c\u201c\u6b65\u9aa42\u201d\u6307\u4ee3\u4ec0\u4e48\uff1f \u00b6 \u6307\u4ee3\u7801\u903b\u8f91\u6b65\u9aa4\uff0c\u5728\u4ee3\u7801\u6ce8\u91ca\u4e2d\u6709\u6807\u6ce8 4 14.1.1 \u6a2a\u7ebf\u5904\u201c\u90fd\u6709\u8ba1\u7b97\u5b9e\u73b0\u201d\uff0c\u770b\u4e0d\u61c2\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u8bf7\u91cd\u65b0\u6574\u7406\u8bed\u8a00 \u00b6 \u4fee\u6539\u5982\u4e0b\uff1a Python \u6807\u51c6\u5e93\u3001NumPy \u5e93 \u548c Pandas \u5e93\u90fd\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u8ba1\u7b97\u51fd\u6570\u3002 5 \u51e0\u4f55\u5e73\u5747\u6570 \u00b6 \u51e0\u4f55\u5e73\u5747\u6570\u662f n \u4e2a\u6570\u503c\u4e58\u79ef\u7684 n \u6b21\u6839\u3002","title":"2020-01-13"},{"location":"QA/#2020-01-13","text":"","title":"2020-01-13"},{"location":"QA/#1","text":"\u8fd9\u91cc\u53bb\u6389\u4e0b\u9762\u4e00\u6bb5\u8bdd\u540e\u9762\u7684\u5185\u5bb9 \u8fd9\u79cd\u7279\u6027\u53eb\u505a\u5e8f\u5217\u89e3\u5305\uff0c\u5c06\u591a\u4e2a\u503c\u7684\u5e8f\u5217\u89e3\u5f00\uff0c\u7136\u540e\u653e\u5230\u5de6\u4fa7\u7684\u53d8\u91cf\u5e8f\u5217\u4e2d\u3002\u5f53\u51fd\u6570\u6216\u8005\u65b9\u6cd5\u8fd4\u56de\u5143\u7ec4\uff08\u6216\u5176\u4ed6\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff09\u65f6\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5c24\u4e3a\u6709\u7528\u3002 \u5e76\u66f4\u6539\u4e3a\uff1a def func(): a = 1 b = 2 c = 3 return a, b, c # \u5e8f\u5217\u89e3\u5305\u64cd\u4f5c\uff1a # \u5c06\u51fd\u6570\u7ed3\u679c\u76f4\u63a5\u8d4b\u503c\u5230\u591a\u4e2a\u53d8\u91cf\u4e2d # \u6309\u987a\u5e8f\u4e00\u4e00\u5bf9\u5e94 # d <- a # e <- b # f <- c d, e, f = func() \u7b49\u53f7\u4e24\u4fa7\u5143\u7d20\u6570\u91cf\u8981\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002\u4e0a\u8ff0\u5e8f\u5217\u89e3\u5305\u64cd\u4f5c\u7cbe\u7b80\u4e86\u4e0b\u9762\u7684\u4ee3\u7801\u5e76\u63d0\u5347\u4e86\u8ba1\u7b97\u6548\u7387\uff1a # \u83b7\u53d6\u4e00\u4e2a\u5143\u7ec4\u7ed3\u679c tup_res = func() # \u5206\u522b\u8d4b\u503c d = tup_res[0] e = tup_res[1] f = tup_res[2]","title":"1"},{"location":"QA/#2-117","text":"\u672c\u7ae0\u7684\u5185\u5bb9\u8f83\u4e3a\u9a73\u6742\uff0c\u4ee5\u5de5\u5177\u7bb1\u7684\u65b9\u5f0f\u63d0\u4f9b\u4e86\u4e00\u4e9b Python \u7f16\u7a0b\u7684\u4fbf\u5229\u51fd\u6570\u548c\u64cd\u4f5c\u6280\u5de7\uff0c\u5305\u62ec\u5f02\u5e38\u6355\u83b7\u3001\u51fd\u6570\u5f0f\u7f16\u7a0b\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u7b49\u3002\u7406\u89e3\u548c\u638c\u63e1\u8fd9\u4e9b\u77e5\u8bc6\u6709\u52a9\u4e8e\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3 Python\uff0c\u7f16\u5199\u5b89\u5168\u9ad8\u6548\u7684\u4ee3\u7801\u3002","title":"2 11.7 \u8282\u7ae0\u672b\u5c0f\u7ed3\u548c\u8fd9\u4e00\u7ae0\u5f00\u59cb\u7684\u4ecb\u7ecd\u8bed\u5b8c\u5168\u91cd\u590d\uff0c\u8bf7\u91cd\u65b0\u5199\u4e00\u4e0b\u3002"},{"location":"QA/#3-13312","text":"\u6307\u4ee3\u7801\u903b\u8f91\u6b65\u9aa4\uff0c\u5728\u4ee3\u7801\u6ce8\u91ca\u4e2d\u6709\u6807\u6ce8","title":"3 13.3.1\u8282\uff0c\u201c\u6b65\u9aa42\u201d\u6307\u4ee3\u4ec0\u4e48\uff1f"},{"location":"QA/#4-1411","text":"\u4fee\u6539\u5982\u4e0b\uff1a Python \u6807\u51c6\u5e93\u3001NumPy \u5e93 \u548c Pandas \u5e93\u90fd\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u8ba1\u7b97\u51fd\u6570\u3002","title":"4 14.1.1 \u6a2a\u7ebf\u5904\u201c\u90fd\u6709\u8ba1\u7b97\u5b9e\u73b0\u201d\uff0c\u770b\u4e0d\u61c2\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u8bf7\u91cd\u65b0\u6574\u7406\u8bed\u8a00"},{"location":"QA/#5","text":"\u51e0\u4f55\u5e73\u5747\u6570\u662f n \u4e2a\u6570\u503c\u4e58\u79ef\u7684 n \u6b21\u6839\u3002","title":"5 \u51e0\u4f55\u5e73\u5747\u6570"},{"location":"author/","text":"\u4f5c\u8005 \u00b6 \u738b\u8bd7\u7fd4\uff08GitHub@ShixiangWang\uff09\uff0c2016 \u5e74\u6210\u90fd\u7535\u5b50\u79d1\u6280\u5927\u5b66\u672c\u79d1\u6bd5\u4e1a\uff0c\u5f00\u6e90\u7231\u597d\u8005\u4e0e\u5f00\u53d1\u8005\uff0c\u7b80\u4e66\u4e92\u8054\u7f51\u4f18\u79c0\u4f5c\u8005\u3002\u4ed6\u76ee\u524d\u4ece\u4e8b\u751f\u7269\u4fe1\u606f\u5b66\u5728\u80bf\u7624\u7cbe\u51c6\u533b\u7597\u65b9\u5411\u7684\u7814\u7a76\u5de5\u4f5c\uff0c\u5e76\u5728\u6570\u4e2a\u56fd\u9645\u77e5\u540d\u671f\u520a\u4e0a\u53d1\u8868 SCI \u8bba\u6587\u3002\u4ed6\u638c\u63e1 Python\u3001R\u3001Shell \u7b49\u591a\u95e8\u4e0e\u6570\u636e\u5904\u7406\u76f8\u5173\u7684\u7f16\u7a0b\u8bed\u8a00\u4ee5\u53ca\u5404\u7c7b\u6570\u636e\u5206\u6790\u548c\u7edf\u8ba1\u6280\u672f\uff0c\u5bf9\u6280\u672f\u77e5\u8bc6\u7684\u5206\u4eab\u548c\u4f20\u64ad\u5145\u6ee1\u70ed\u60c5\u3002","title":"\u4f5c\u8005\u7b80\u4ecb"},{"location":"author/#_1","text":"\u738b\u8bd7\u7fd4\uff08GitHub@ShixiangWang\uff09\uff0c2016 \u5e74\u6210\u90fd\u7535\u5b50\u79d1\u6280\u5927\u5b66\u672c\u79d1\u6bd5\u4e1a\uff0c\u5f00\u6e90\u7231\u597d\u8005\u4e0e\u5f00\u53d1\u8005\uff0c\u7b80\u4e66\u4e92\u8054\u7f51\u4f18\u79c0\u4f5c\u8005\u3002\u4ed6\u76ee\u524d\u4ece\u4e8b\u751f\u7269\u4fe1\u606f\u5b66\u5728\u80bf\u7624\u7cbe\u51c6\u533b\u7597\u65b9\u5411\u7684\u7814\u7a76\u5de5\u4f5c\uff0c\u5e76\u5728\u6570\u4e2a\u56fd\u9645\u77e5\u540d\u671f\u520a\u4e0a\u53d1\u8868 SCI \u8bba\u6587\u3002\u4ed6\u638c\u63e1 Python\u3001R\u3001Shell \u7b49\u591a\u95e8\u4e0e\u6570\u636e\u5904\u7406\u76f8\u5173\u7684\u7f16\u7a0b\u8bed\u8a00\u4ee5\u53ca\u5404\u7c7b\u6570\u636e\u5206\u6790\u548c\u7edf\u8ba1\u6280\u672f\uff0c\u5bf9\u6280\u672f\u77e5\u8bc6\u7684\u5206\u4eab\u548c\u4f20\u64ad\u5145\u6ee1\u70ed\u60c5\u3002","title":"\u4f5c\u8005"},{"location":"to-readers/","text":"\u5bf9\u8bfb\u8005\u8bf4\u7684\u8bdd \u00b6 \u4f5c\u4e3a 21 \u4e16\u7eaa\u6700\u6027\u611f\u7684\u804c\u4e1a\uff0c\u6570\u636e\u79d1\u5b66\u5bb6\u7684\u80cc\u540e\u9700\u8981\u8d85\u4e4e\u5e38\u4eba\u7684\u4ed8\u51fa\uff0c\u4ed6\u8981\u6784\u5efa\u4e1a\u52a1\u903b\u8f91\u601d\u7ef4\u3001\u4fee\u70bc\u6570\u7406\u7edf\u8ba1\u5185\u529f\u3001\u6253\u9020\u7f16\u7a0b\u5229\u5668\uff0c\u7136\u540e\u4e0d\u65ad\u5b9e\u8df5\u548c\u66f4\u65b0\u6280\u80fd\u3002\u6211\u5728\u672c\u4e66\u4e2d\u4ee5\u7c97\u6d45\u7684\u5185\u5bb9\u5c1d\u8bd5\u5f15\u5bfc\u5404\u4f4d\u521d\u5b66\u8005\u53bb\u63a5\u89e6\u3001\u4e86\u89e3\u3001\u5b66\u4e60\u548c\u638c\u63e1\u8fd9\u4e2a\u804c\u4e1a\u4e2d\u4e00\u4e9b\u57fa\u7840\u7684\u6982\u5ff5\u548c\u6280\u80fd\u3002\u5728\u5b66\u4e60\u672c\u4e66\u5185\u5bb9\u4e4b\u540e\uff0c\u6211\u5e0c\u671b\u5404\u4f4d\u8bfb\u8005\u4e0d\u8981\u754f\u60e7\u63a5\u4e0b\u6765\u8fce\u95e8\u800c\u4e0a\u7684\u6311\u6218\uff0c\u80fd\u591f\u6562\u4e8e\u548c\u52c7\u4e8e\u5728\u81ea\u5df1\u5b9e\u9645\u7684\u5de5\u4f5c\u573a\u666f\u4e2d\u601d\u8003\u548c\u5e94\u7528\u6240\u5b66\uff0c\u4e0d\u65ad\u5730\u5b66\u4e60\u548c\u8fdb\u9636\u3002\u5728\u9047\u5230\u56f0\u96be\u65f6\uff0c\u8bfb\u8005\u5e94\u5f53\u5e38\u5e38\u901a\u8fc7\u641c\u7d22\u5f15\u64ce\u52a8\u624b\u67e5\u627e\u548c\u89e3\u51b3\u95ee\u9898\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u4e13\u4e1a\u95ee\u7b54\u793e\u533a\u548c\u8bba\u575b\u4e0e\u4ed6\u4eba\u8fdb\u884c\u4ea4\u6d41\u8ba8\u8bba\u3002\u5b66\u4e60\u4e4b\u8def\u662f\u5feb\u4e50\u7684\uff0c\u4e5f\u662f\u75db\u82e6\u7684\uff0c\u795d\u613f\u5404\u4f4d\u8bfb\u8005\u80fd\u5728\u8fd9\u4e2a\u6027\u611f\u7684\u804c\u4e1a\u4e2d\u5c3d\u7528\u6240\u5b66\uff0c\u5e76\u4e50\u5728\u5176\u4e2d\u3002","title":"\u5bf9\u8bfb\u8005\u8bf4\u7684\u8bdd"},{"location":"to-readers/#_1","text":"\u4f5c\u4e3a 21 \u4e16\u7eaa\u6700\u6027\u611f\u7684\u804c\u4e1a\uff0c\u6570\u636e\u79d1\u5b66\u5bb6\u7684\u80cc\u540e\u9700\u8981\u8d85\u4e4e\u5e38\u4eba\u7684\u4ed8\u51fa\uff0c\u4ed6\u8981\u6784\u5efa\u4e1a\u52a1\u903b\u8f91\u601d\u7ef4\u3001\u4fee\u70bc\u6570\u7406\u7edf\u8ba1\u5185\u529f\u3001\u6253\u9020\u7f16\u7a0b\u5229\u5668\uff0c\u7136\u540e\u4e0d\u65ad\u5b9e\u8df5\u548c\u66f4\u65b0\u6280\u80fd\u3002\u6211\u5728\u672c\u4e66\u4e2d\u4ee5\u7c97\u6d45\u7684\u5185\u5bb9\u5c1d\u8bd5\u5f15\u5bfc\u5404\u4f4d\u521d\u5b66\u8005\u53bb\u63a5\u89e6\u3001\u4e86\u89e3\u3001\u5b66\u4e60\u548c\u638c\u63e1\u8fd9\u4e2a\u804c\u4e1a\u4e2d\u4e00\u4e9b\u57fa\u7840\u7684\u6982\u5ff5\u548c\u6280\u80fd\u3002\u5728\u5b66\u4e60\u672c\u4e66\u5185\u5bb9\u4e4b\u540e\uff0c\u6211\u5e0c\u671b\u5404\u4f4d\u8bfb\u8005\u4e0d\u8981\u754f\u60e7\u63a5\u4e0b\u6765\u8fce\u95e8\u800c\u4e0a\u7684\u6311\u6218\uff0c\u80fd\u591f\u6562\u4e8e\u548c\u52c7\u4e8e\u5728\u81ea\u5df1\u5b9e\u9645\u7684\u5de5\u4f5c\u573a\u666f\u4e2d\u601d\u8003\u548c\u5e94\u7528\u6240\u5b66\uff0c\u4e0d\u65ad\u5730\u5b66\u4e60\u548c\u8fdb\u9636\u3002\u5728\u9047\u5230\u56f0\u96be\u65f6\uff0c\u8bfb\u8005\u5e94\u5f53\u5e38\u5e38\u901a\u8fc7\u641c\u7d22\u5f15\u64ce\u52a8\u624b\u67e5\u627e\u548c\u89e3\u51b3\u95ee\u9898\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u4e13\u4e1a\u95ee\u7b54\u793e\u533a\u548c\u8bba\u575b\u4e0e\u4ed6\u4eba\u8fdb\u884c\u4ea4\u6d41\u8ba8\u8bba\u3002\u5b66\u4e60\u4e4b\u8def\u662f\u5feb\u4e50\u7684\uff0c\u4e5f\u662f\u75db\u82e6\u7684\uff0c\u795d\u613f\u5404\u4f4d\u8bfb\u8005\u80fd\u5728\u8fd9\u4e2a\u6027\u611f\u7684\u804c\u4e1a\u4e2d\u5c3d\u7528\u6240\u5b66\uff0c\u5e76\u4e50\u5728\u5176\u4e2d\u3002","title":"\u5bf9\u8bfb\u8005\u8bf4\u7684\u8bdd"},{"location":"%E5%A4%A7%E7%BA%B2/","text":"\u5927\u7eb2 \u00b6 \u4e2d\u6587\u540d\uff1a\u300a\u4ea4\u4e92\u7684Python\uff1a\u6570\u636e\u5206\u6790\u5165\u95e8\u300b \u82f1\u6587\u540d\uff1a\u300aInteractive Python: An Introduction to Data Science\u300b \u9762\u5411\u8bfb\u8005 \u00b6 \u672c\u4e66\u4e3b\u8981\u9762\u5411\u7684\u662f \u6ca1\u6709\u7f16\u7a0b\u57fa\u7840\u548c\u6570\u636e\u5904\u7406\u5206\u6790\u7ecf\u9a8c\u7684\u8bfb\u8005 \uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u6570\u636e\u5206\u6790\u76f8\u5173\u65b9\u5411\u804c\u4e1a\u6280\u672f\u4eba\u5458/\u5b66\u751f\u4f5c\u4e3a\u53c2\u8003\u548c\u5b66\u4e60\u4f7f\u7528\u3002 \u672c\u4e66\u76ee\u7684\u4e0e\u7279\u70b9 \u00b6 \u5df2\u6709\u7684\u7f16\u7a0b\u4e66\u7c4d\u5e38\u5e38\u5806\u79ef\u7740\u67af\u71e5\u4e4f\u5473\u7684\u672f\u8bed\uff0c\u800c\u4e14\u5927\u90fd\u4e0d\u9488\u5bf9\u6570\u636e\u5206\u6790\u9886\u57df\u3002\u53e6\u5916\uff0c \u5f53\u524d\u5404\u7c7b\u7f16\u7a0b\u8bed\u8a00\u7684\u6a21\u5f0f\u57fa\u672c\u90fd\u662f\u201c\u7f16\u8f91-\u7f16\u8bd1-\u8fd0\u884c\u201d\uff0c\u8fd9\u975e\u5e38\u9002\u7528\u4e8e\u7f16\u5199\u529f\u80fd\u660e\u786e\u7684\u4ee3\u7801\uff0c\u50cf\u5404\u7c7b\u6e38\u620f\u3001\u7f51\u7ad9\u7b49\uff1b\u800c\u6570\u636e\u5206\u6790\u91cd\u201c\u63a2\u7d22\u201d\uff0c\u65e8\u5728\u5728\u7406\u89e3\u6570\u636e\u7684\u57fa\u7840\u4e0a\u52a0\u4ee5\u5229\u7528\uff0c\u5177\u6709\u6781\u5f3a\u7684\u4ea4\u4e92\u6027\uff0c\u9700\u8981\u4e0d\u65ad\u5730\u5c1d\u8bd5\u5404\u79cd\u4ee3\u7801\u8fdb\u884c\u5206\u6790\uff0c\u6839\u636e\u5bf9\u5206\u6790\u7ed3\u679c\u7684\u7406\u89e3\u5bfb\u627e\u6570\u636e\u80cc\u540e\u9690\u85cf\u7684\u6a21\u5f0f\uff0c\u56e0\u6b64\u66f4\u9700\u8981\u4e00\u79cd\u201c\u8fd0\u884c-\u63a2\u7d22\u201d\u7684\u65b0\u5de5\u4f5c\u6a21\u5f0f\u3002\u5728\u5185\u5bb9\u7684\u8bb2\u89e3\u4e0a\uff0c\u6570\u636e\u5206\u6790\u4e66\u7c4d\u5e94\u5f3a\u8c03\u63a2\u7d22\uff0c\u6ce8\u91cd\u601d\u8003\uff0c\u800c\u975e\u7b80\u5355\u6982\u5ff5\u7684\u68b3\u7406\u548c\u4ee3\u7801\u5b9e\u73b0\u3002\u9057\u61be\u7684\u662f\uff0c\u5e02\u9762\u4e0a\u5927\u591a\u6570\u4e66\u7c4d\u90fd\u5c5e\u4e8e\u540e\u8005\uff0c\u5bf9\u4e8e\u6570\u636e\u5206\u6790\u4eba\u5458\u4ec5\u80fd\u505a\u53c2\u8003\u800c\u975e\u5b66\u4e60\u4f7f\u7528\u3002 \u6b63\u662f\u6839\u636e\u8fd9\u4e00\u7406\u89e3\uff0c\u672c\u4e66\u7684\u5185\u5bb9\u4ece\u5934\u5230\u5c3e\u90fd\u5728\u9610\u8ff0\u5bf9\u6982\u5ff5\u4e0e\u95ee\u9898\u7684\u601d\u8003\u3001\u63a2\u7d22\u4e0e\u89e3\u51b3\uff0c\u4e00\u4e9b\u6982\u5ff5\u7684\u8bb2\u8ff0\u53ea\u662f\u4e3a\u8fd9\u4e00\u6838\u5fc3\u63d0\u4f9b\u7406\u8bba\u57fa\u7840\u3002\u5982\u679c\u8bf4\u7406\u8bba\u77e5\u8bc6\u662f\u786c\u4ef6\uff0c\u90a3\u4e48\u7406\u8bba\u77e5\u8bc6\u5b9e\u73b0\u7684\u63a2\u7d22\u5206\u6790\u5c31\u662f\u8f6f\u4ef6\uff0c\u672c\u4e66\u6b63\u662f\u4e3a\u9700\u8981\u5b83\u7684\u8bfb\u8005\u63d0\u4f9b\u8f6f\u786c\u4ef6\u652f\u6301\u3002 \u672c\u4e66\u5185\u5bb9\u5927\u7eb2 \u00b6 \u672c\u4e66\u5185\u5bb9\u4e3b\u8981\u6d89\u53ca3\u4e2a\u65b9\u9762\uff0c\u4e00\u662fPython\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u8fd9\u90e8\u5206\u662f\u4efb\u4f55\u4f7f\u7528Python\u5de5\u4f5c\u7684\u4eba\u90fd\u5fc5\u987b\u5b66\u4e60\u548c\u638c\u63e1\u7684\uff1b\u4e8c\u662f\u6570\u636e\u5206\u6790\u6838\u5fc3\u6a21\u5757\u7684\u5b66\u4e60\u548c\u4f7f\u7528\uff0c\u8fd9\u90e8\u5206\u662f\u4efb\u4f55\u4f7f\u7528Python\u8fdb\u884c\u6570\u636e\u5904\u7406\u5de5\u4f5c\u90fd\u5e94\u5f53\u5b66\u4e60\u7684\uff1b\u4e09\u662f\u6269\u5c55\u5185\u5bb9\uff0c\u8fd9\u91cc\u5305\u62ecMarkdown\uff0c\u4e00\u79cd\u6d41\u884c\u7684\u6587\u672c\u4e66\u5199\u8bed\u8a00\uff0c\u4f46\u6211\u628a\u5b83\u653e\u5728\u524d\u9762\u7ae0\u8282\u8bb2\u89e3\uff0c\u56e0\u4e3a\u4e2a\u4eba\u8ba4\u4e3a\u4e66\u5199\u6587\u6863\u5bf9\u4e8e\u6570\u636e\u5206\u6790\u4ece\u4e1a\u8005\u6765\u8bf4\u4e0e\u4ee3\u7801\u63a2\u7d22\u3001\u5b9e\u73b0\u540c\u7b49\u91cd\u8981\uff0c\u6709\u5fc5\u8981\u638c\u63e1Markdown\u8fd9\u4e00\u95e8\u7b80\u5355\u9ad8\u6548\u7684\u5de5\u5177\u3002\u53e6\u5916\u662f\u4e00\u4e9bPython\u4e2d\u6bd4\u8f83\u9ad8\u7ea7\u7684\u7528\u6cd5\uff08\u4e0d\u5e38\u7528\uff09\uff0c\u5728\u6570\u636e\u5206\u6790\u65f6\u4e5f\u6781\u5c11\u7528\u5230\uff0c\u5305\u62ec\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u3001\u5f02\u5e38\u5904\u7406\u7b49\uff0c\u5bf9\u4e8e\u60f3\u8981\u5165\u95e8\u5206\u6790\u7684\u8bfb\u8005\u6765\u8bf4\u53ea\u662f\u589e\u52a0\u969c\u788d\uff0c\u5728\u8bfb\u8005\u5b66\u4f1a\u57fa\u7840\u540e\u518d\u5b66\u4e60\u548c\u5229\u7528\u8fd9\u4e00\u4e9b\u6bd4\u8f83\u9ad8\u7ea7\u7684\u7406\u8bba\u65b9\u6cd5\u66f4\u4e3a\u59a5\u5f53\u3002 \u5728\u5185\u5bb9\u7684\u64b0\u5199\u4e0a\uff0c\u4f8b\u5b50\u548c\u4ee3\u7801\u4e2d\u82f1\u6587\u53c2\u6742\u3002\u8003\u8651\u8bfb\u8005\u672c\u8eab\u7684\u5de5\u4f5c\u8bed\u5883\u662f\u4e2d\u6587\uff0c\u6240\u4ee5\u672c\u4e66\u4e0d\u5c11\u5b9e\u4f8b\u90fd\u4f7f\u7528\u4e86\u4e2d\u6587\uff0c\u4ee5\u4fbf\u4e8e\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3\u548c\u4e0e\u5de5\u4f5c\u5bf9\u63a5\u3002\u4f46\u82f1\u6587\u7684\u5b66\u4e60\u662f\u6709\u5fc5\u8981\u7684\uff0c\u5f53\u524dPython\u5e76\u6ca1\u6709\u5b98\u65b9\u4e2d\u6587\u6587\u6863\uff0c\u53e6\u5916\uff0c\u5728\u5b9e\u9645\u5de5\u4f5c\u65f6\u9047\u5230\u7684\u5927\u591a\u6570\u95ee\u9898\u90fd\u8981\u5b66\u4e60\u548c\u5229\u7528\u82f1\u6587\u641c\u7d22\u548c\u63d0\u95ee\u7b49\u3002 \u672c\u4e66\u7684\u5b66\u4e60\u5e73\u53f0\u662fAnaconda\uff0c\u8be5\u5e73\u53f0\u51e0\u4e4e\u96c6\u6210\u4e86\u5e38\u7528\u7684Python\u8ba1\u7b97\u5305\uff0c\u8bfb\u8005\u5c06\u66f4\u591a\u5730\u53ef\u4ee5\u5c06\u7cbe\u529b\u653e\u5728\u5b66\u4e60\u3001\u53ca\u65f6\u5c06\u6240\u5b66\u5e94\u7528\u4e8e\u5de5\u4f5c\u73af\u5883\u800c\u975e\u5728\u4e0e\u5b66\u4e60\u65e0\u5173\u7684\u8f6f\u4ef6\u5b89\u88c5\u3001\u811a\u672c\u8fd0\u884c\u7b49\u5404\u79cd\u95ee\u9898\u4e2d\u6d6a\u8d39\u65f6\u95f4\u3002 0-\u524d\u8a00-\u672c\u4e66\u4ecb\u7ecd 1-\u4ecb\u7ecd\u4e0e\u51c6\u5907\u5de5\u4f5c 2-python\u57fa\u7840 3-\u57fa\u672c\u6570\u636e\u7ed3\u6784 4-\u63a7\u5236\u6d41\u4e0e\u6587\u4ef6\u64cd\u4f5c 5-\u51fd\u6570\u548c\u6a21\u5757 6-Numpy 7-Matplotlib 8-Pandas\u5165\u95e8 9-Markdown\u57fa\u7840 10-\u6570\u636e\u5bfc\u5165 11-\u6570\u636e\u5206\u6790\u5de5\u5177\u7bb1 12-Pandas\u8fdb\u9636 13-\u6570\u636e\u53ef\u89c6\u5316\u8fdb\u9636 14-\u7edf\u8ba1\u5206\u6790 15-\u62d3\u5c55-\u672a\u8a00\u53ca\u7684\u5185\u5bb9 16-\u7ed3\u8bed-\u63a5\u4e0b\u6765\u5b66\u4ec0\u4e48","title":"\u5927\u7eb2"},{"location":"%E5%A4%A7%E7%BA%B2/#_1","text":"\u4e2d\u6587\u540d\uff1a\u300a\u4ea4\u4e92\u7684Python\uff1a\u6570\u636e\u5206\u6790\u5165\u95e8\u300b \u82f1\u6587\u540d\uff1a\u300aInteractive Python: An Introduction to Data Science\u300b","title":"\u5927\u7eb2"},{"location":"%E5%A4%A7%E7%BA%B2/#_2","text":"\u672c\u4e66\u4e3b\u8981\u9762\u5411\u7684\u662f \u6ca1\u6709\u7f16\u7a0b\u57fa\u7840\u548c\u6570\u636e\u5904\u7406\u5206\u6790\u7ecf\u9a8c\u7684\u8bfb\u8005 \uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u6570\u636e\u5206\u6790\u76f8\u5173\u65b9\u5411\u804c\u4e1a\u6280\u672f\u4eba\u5458/\u5b66\u751f\u4f5c\u4e3a\u53c2\u8003\u548c\u5b66\u4e60\u4f7f\u7528\u3002","title":"\u9762\u5411\u8bfb\u8005"},{"location":"%E5%A4%A7%E7%BA%B2/#_3","text":"\u5df2\u6709\u7684\u7f16\u7a0b\u4e66\u7c4d\u5e38\u5e38\u5806\u79ef\u7740\u67af\u71e5\u4e4f\u5473\u7684\u672f\u8bed\uff0c\u800c\u4e14\u5927\u90fd\u4e0d\u9488\u5bf9\u6570\u636e\u5206\u6790\u9886\u57df\u3002\u53e6\u5916\uff0c \u5f53\u524d\u5404\u7c7b\u7f16\u7a0b\u8bed\u8a00\u7684\u6a21\u5f0f\u57fa\u672c\u90fd\u662f\u201c\u7f16\u8f91-\u7f16\u8bd1-\u8fd0\u884c\u201d\uff0c\u8fd9\u975e\u5e38\u9002\u7528\u4e8e\u7f16\u5199\u529f\u80fd\u660e\u786e\u7684\u4ee3\u7801\uff0c\u50cf\u5404\u7c7b\u6e38\u620f\u3001\u7f51\u7ad9\u7b49\uff1b\u800c\u6570\u636e\u5206\u6790\u91cd\u201c\u63a2\u7d22\u201d\uff0c\u65e8\u5728\u5728\u7406\u89e3\u6570\u636e\u7684\u57fa\u7840\u4e0a\u52a0\u4ee5\u5229\u7528\uff0c\u5177\u6709\u6781\u5f3a\u7684\u4ea4\u4e92\u6027\uff0c\u9700\u8981\u4e0d\u65ad\u5730\u5c1d\u8bd5\u5404\u79cd\u4ee3\u7801\u8fdb\u884c\u5206\u6790\uff0c\u6839\u636e\u5bf9\u5206\u6790\u7ed3\u679c\u7684\u7406\u89e3\u5bfb\u627e\u6570\u636e\u80cc\u540e\u9690\u85cf\u7684\u6a21\u5f0f\uff0c\u56e0\u6b64\u66f4\u9700\u8981\u4e00\u79cd\u201c\u8fd0\u884c-\u63a2\u7d22\u201d\u7684\u65b0\u5de5\u4f5c\u6a21\u5f0f\u3002\u5728\u5185\u5bb9\u7684\u8bb2\u89e3\u4e0a\uff0c\u6570\u636e\u5206\u6790\u4e66\u7c4d\u5e94\u5f3a\u8c03\u63a2\u7d22\uff0c\u6ce8\u91cd\u601d\u8003\uff0c\u800c\u975e\u7b80\u5355\u6982\u5ff5\u7684\u68b3\u7406\u548c\u4ee3\u7801\u5b9e\u73b0\u3002\u9057\u61be\u7684\u662f\uff0c\u5e02\u9762\u4e0a\u5927\u591a\u6570\u4e66\u7c4d\u90fd\u5c5e\u4e8e\u540e\u8005\uff0c\u5bf9\u4e8e\u6570\u636e\u5206\u6790\u4eba\u5458\u4ec5\u80fd\u505a\u53c2\u8003\u800c\u975e\u5b66\u4e60\u4f7f\u7528\u3002 \u6b63\u662f\u6839\u636e\u8fd9\u4e00\u7406\u89e3\uff0c\u672c\u4e66\u7684\u5185\u5bb9\u4ece\u5934\u5230\u5c3e\u90fd\u5728\u9610\u8ff0\u5bf9\u6982\u5ff5\u4e0e\u95ee\u9898\u7684\u601d\u8003\u3001\u63a2\u7d22\u4e0e\u89e3\u51b3\uff0c\u4e00\u4e9b\u6982\u5ff5\u7684\u8bb2\u8ff0\u53ea\u662f\u4e3a\u8fd9\u4e00\u6838\u5fc3\u63d0\u4f9b\u7406\u8bba\u57fa\u7840\u3002\u5982\u679c\u8bf4\u7406\u8bba\u77e5\u8bc6\u662f\u786c\u4ef6\uff0c\u90a3\u4e48\u7406\u8bba\u77e5\u8bc6\u5b9e\u73b0\u7684\u63a2\u7d22\u5206\u6790\u5c31\u662f\u8f6f\u4ef6\uff0c\u672c\u4e66\u6b63\u662f\u4e3a\u9700\u8981\u5b83\u7684\u8bfb\u8005\u63d0\u4f9b\u8f6f\u786c\u4ef6\u652f\u6301\u3002","title":"\u672c\u4e66\u76ee\u7684\u4e0e\u7279\u70b9"},{"location":"%E5%A4%A7%E7%BA%B2/#_4","text":"\u672c\u4e66\u5185\u5bb9\u4e3b\u8981\u6d89\u53ca3\u4e2a\u65b9\u9762\uff0c\u4e00\u662fPython\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u8fd9\u90e8\u5206\u662f\u4efb\u4f55\u4f7f\u7528Python\u5de5\u4f5c\u7684\u4eba\u90fd\u5fc5\u987b\u5b66\u4e60\u548c\u638c\u63e1\u7684\uff1b\u4e8c\u662f\u6570\u636e\u5206\u6790\u6838\u5fc3\u6a21\u5757\u7684\u5b66\u4e60\u548c\u4f7f\u7528\uff0c\u8fd9\u90e8\u5206\u662f\u4efb\u4f55\u4f7f\u7528Python\u8fdb\u884c\u6570\u636e\u5904\u7406\u5de5\u4f5c\u90fd\u5e94\u5f53\u5b66\u4e60\u7684\uff1b\u4e09\u662f\u6269\u5c55\u5185\u5bb9\uff0c\u8fd9\u91cc\u5305\u62ecMarkdown\uff0c\u4e00\u79cd\u6d41\u884c\u7684\u6587\u672c\u4e66\u5199\u8bed\u8a00\uff0c\u4f46\u6211\u628a\u5b83\u653e\u5728\u524d\u9762\u7ae0\u8282\u8bb2\u89e3\uff0c\u56e0\u4e3a\u4e2a\u4eba\u8ba4\u4e3a\u4e66\u5199\u6587\u6863\u5bf9\u4e8e\u6570\u636e\u5206\u6790\u4ece\u4e1a\u8005\u6765\u8bf4\u4e0e\u4ee3\u7801\u63a2\u7d22\u3001\u5b9e\u73b0\u540c\u7b49\u91cd\u8981\uff0c\u6709\u5fc5\u8981\u638c\u63e1Markdown\u8fd9\u4e00\u95e8\u7b80\u5355\u9ad8\u6548\u7684\u5de5\u5177\u3002\u53e6\u5916\u662f\u4e00\u4e9bPython\u4e2d\u6bd4\u8f83\u9ad8\u7ea7\u7684\u7528\u6cd5\uff08\u4e0d\u5e38\u7528\uff09\uff0c\u5728\u6570\u636e\u5206\u6790\u65f6\u4e5f\u6781\u5c11\u7528\u5230\uff0c\u5305\u62ec\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u3001\u5f02\u5e38\u5904\u7406\u7b49\uff0c\u5bf9\u4e8e\u60f3\u8981\u5165\u95e8\u5206\u6790\u7684\u8bfb\u8005\u6765\u8bf4\u53ea\u662f\u589e\u52a0\u969c\u788d\uff0c\u5728\u8bfb\u8005\u5b66\u4f1a\u57fa\u7840\u540e\u518d\u5b66\u4e60\u548c\u5229\u7528\u8fd9\u4e00\u4e9b\u6bd4\u8f83\u9ad8\u7ea7\u7684\u7406\u8bba\u65b9\u6cd5\u66f4\u4e3a\u59a5\u5f53\u3002 \u5728\u5185\u5bb9\u7684\u64b0\u5199\u4e0a\uff0c\u4f8b\u5b50\u548c\u4ee3\u7801\u4e2d\u82f1\u6587\u53c2\u6742\u3002\u8003\u8651\u8bfb\u8005\u672c\u8eab\u7684\u5de5\u4f5c\u8bed\u5883\u662f\u4e2d\u6587\uff0c\u6240\u4ee5\u672c\u4e66\u4e0d\u5c11\u5b9e\u4f8b\u90fd\u4f7f\u7528\u4e86\u4e2d\u6587\uff0c\u4ee5\u4fbf\u4e8e\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3\u548c\u4e0e\u5de5\u4f5c\u5bf9\u63a5\u3002\u4f46\u82f1\u6587\u7684\u5b66\u4e60\u662f\u6709\u5fc5\u8981\u7684\uff0c\u5f53\u524dPython\u5e76\u6ca1\u6709\u5b98\u65b9\u4e2d\u6587\u6587\u6863\uff0c\u53e6\u5916\uff0c\u5728\u5b9e\u9645\u5de5\u4f5c\u65f6\u9047\u5230\u7684\u5927\u591a\u6570\u95ee\u9898\u90fd\u8981\u5b66\u4e60\u548c\u5229\u7528\u82f1\u6587\u641c\u7d22\u548c\u63d0\u95ee\u7b49\u3002 \u672c\u4e66\u7684\u5b66\u4e60\u5e73\u53f0\u662fAnaconda\uff0c\u8be5\u5e73\u53f0\u51e0\u4e4e\u96c6\u6210\u4e86\u5e38\u7528\u7684Python\u8ba1\u7b97\u5305\uff0c\u8bfb\u8005\u5c06\u66f4\u591a\u5730\u53ef\u4ee5\u5c06\u7cbe\u529b\u653e\u5728\u5b66\u4e60\u3001\u53ca\u65f6\u5c06\u6240\u5b66\u5e94\u7528\u4e8e\u5de5\u4f5c\u73af\u5883\u800c\u975e\u5728\u4e0e\u5b66\u4e60\u65e0\u5173\u7684\u8f6f\u4ef6\u5b89\u88c5\u3001\u811a\u672c\u8fd0\u884c\u7b49\u5404\u79cd\u95ee\u9898\u4e2d\u6d6a\u8d39\u65f6\u95f4\u3002 0-\u524d\u8a00-\u672c\u4e66\u4ecb\u7ecd 1-\u4ecb\u7ecd\u4e0e\u51c6\u5907\u5de5\u4f5c 2-python\u57fa\u7840 3-\u57fa\u672c\u6570\u636e\u7ed3\u6784 4-\u63a7\u5236\u6d41\u4e0e\u6587\u4ef6\u64cd\u4f5c 5-\u51fd\u6570\u548c\u6a21\u5757 6-Numpy 7-Matplotlib 8-Pandas\u5165\u95e8 9-Markdown\u57fa\u7840 10-\u6570\u636e\u5bfc\u5165 11-\u6570\u636e\u5206\u6790\u5de5\u5177\u7bb1 12-Pandas\u8fdb\u9636 13-\u6570\u636e\u53ef\u89c6\u5316\u8fdb\u9636 14-\u7edf\u8ba1\u5206\u6790 15-\u62d3\u5c55-\u672a\u8a00\u53ca\u7684\u5185\u5bb9 16-\u7ed3\u8bed-\u63a5\u4e0b\u6765\u5b66\u4ec0\u4e48","title":"\u672c\u4e66\u5185\u5bb9\u5927\u7eb2"},{"location":"author-and-recommendation/todo/","text":"1\uff09\u5168\u4e66\u8981\u70b9\u601d\u7ef4\u8111\u56fe 2\uff09\u4f5c\u8005\u7b80\u4ecb+\u7167\u7247 3\uff09\u540e\u52d2\u53e3\u6587\u6848 \u5426\u603b\u7ed3\u4e00\u4e0b\u672c\u4e66\u7684\u8981\u70b9\uff0c\u7528\u7c7b\u4f3c\u601d\u7ef4\u8111\u56fe\u7684\u90a3\u79cd\u5f62\u5f0f \u524d\u52d2\u53e3\u9700\u8981\u653e\u4f5c\u8005\u7b80\u4ecb\uff08100-200\u5b57\uff09\u3001\u4f5c\u8005\u7167\u7247\uff08\u975e\u5fc5\u987b\uff0c\u6700\u597d\u662f\u6709\uff09 \u540e\u52d2\u53e3\u53ef\u4ee5\u653e\u4f5c\u8005\u60f3\u5bf9\u8bfb\u8005\u8bf4\u7684\u8bdd\uff0c\u6216\u8005\u8bfb\u8005\u770b\u5b8c\u672c\u4e66\u540e\u8be5\u600e\u4e48\u7ee7\u7eed\u5b66\u4e60 1 \u601d\u7ef4\u5bfc\u56fe \u00b6 \u89c1\u56fe 2 \u4f5c\u8005\u7b80\u4ecb \u00b6 \u738b\u8bd7\u7fd4\uff08GitHub@ShixiangWang\uff09\uff0c2016 \u5e74\u6210\u90fd\u7535\u5b50\u79d1\u6280\u5927\u5b66\u672c\u79d1\u6bd5\u4e1a\uff0c\u5f00\u6e90\u7231\u597d\u8005\u4e0e\u5f00\u53d1\u8005\uff0c\u7b80\u4e66\u4e92\u8054\u7f51\u4f18\u79c0\u4f5c\u8005\u3002\u4ed6\u76ee\u524d\u4ece\u4e8b\u751f\u7269\u4fe1\u606f\u5b66\u5728\u80bf\u7624\u7cbe\u51c6\u533b\u7597\u65b9\u5411\u7684\u7814\u7a76\u5de5\u4f5c\uff0c\u5e76\u5728\u6570\u4e2a\u56fd\u9645\u77e5\u540d\u671f\u520a\u4e0a\u53d1\u8868 SCI \u8bba\u6587\u3002\u4ed6\u638c\u63e1 Python\u3001R\u3001Shell \u7b49\u591a\u95e8\u4e0e\u6570\u636e\u5904\u7406\u76f8\u5173\u7684\u7f16\u7a0b\u8bed\u8a00\u4ee5\u53ca\u5404\u7c7b\u6570\u636e\u5206\u6790\u548c\u7edf\u8ba1\u6280\u672f\uff0c\u5bf9\u6280\u672f\u77e5\u8bc6\u7684\u5206\u4eab\u548c\u4f20\u64ad\u5145\u6ee1\u70ed\u60c5\u3002 3 \u5bf9\u8bfb\u8005\u8bf4\u7684\u8bdd \u00b6 \u4f5c\u4e3a 21 \u4e16\u7eaa\u6700\u6027\u611f\u7684\u804c\u4e1a\uff0c\u6570\u636e\u79d1\u5b66\u5bb6\u7684\u80cc\u540e\u9700\u8981\u8d85\u4e4e\u5e38\u4eba\u7684\u4ed8\u51fa\uff0c\u4ed6\u8981\u6784\u5efa\u4e1a\u52a1\u903b\u8f91\u601d\u7ef4\u3001\u4fee\u70bc\u6570\u7406\u7edf\u8ba1\u5185\u529f\u3001\u6253\u9020\u7f16\u7a0b\u5229\u5668\uff0c\u7136\u540e\u4e0d\u65ad\u5b9e\u8df5\u548c\u66f4\u65b0\u6280\u80fd\u3002\u6211\u5728\u672c\u4e66\u4e2d\u4ee5\u7c97\u6d45\u7684\u5185\u5bb9\u5c1d\u8bd5\u5f15\u5bfc\u5404\u4f4d\u521d\u5b66\u8005\u53bb\u63a5\u89e6\u3001\u4e86\u89e3\u3001\u5b66\u4e60\u548c\u638c\u63e1\u8fd9\u4e2a\u804c\u4e1a\u4e2d\u4e00\u4e9b\u57fa\u7840\u7684\u6982\u5ff5\u548c\u6280\u80fd\u3002\u5728\u5b66\u4e60\u672c\u4e66\u5185\u5bb9\u4e4b\u540e\uff0c\u6211\u5e0c\u671b\u5404\u4f4d\u8bfb\u8005\u4e0d\u8981\u754f\u60e7\u63a5\u4e0b\u6765\u8fce\u95e8\u800c\u4e0a\u7684\u6311\u6218\uff0c\u80fd\u591f\u6562\u4e8e\u548c\u52c7\u4e8e\u5728\u81ea\u5df1\u5b9e\u9645\u7684\u5de5\u4f5c\u573a\u666f\u4e2d\u601d\u8003\u548c\u5e94\u7528\u6240\u5b66\uff0c\u4e0d\u65ad\u5730\u5b66\u4e60\u548c\u8fdb\u9636\u3002\u5728\u9047\u5230\u56f0\u96be\u65f6\uff0c\u8bfb\u8005\u5e94\u5f53\u5e38\u5e38\u901a\u8fc7\u641c\u7d22\u5f15\u64ce\u52a8\u624b\u67e5\u627e\u548c\u89e3\u51b3\u95ee\u9898\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u4e13\u4e1a\u95ee\u7b54\u793e\u533a\u548c\u8bba\u575b\u4e0e\u4ed6\u4eba\u8fdb\u884c\u4ea4\u6d41\u8ba8\u8bba\u3002\u5b66\u4e60\u4e4b\u8def\u662f\u5feb\u4e50\u7684\uff0c\u4e5f\u662f\u75db\u82e6\u7684\uff0c\u795d\u613f\u5404\u4f4d\u8bfb\u8005\u80fd\u5728\u8fd9\u4e2a\u6027\u611f\u7684\u804c\u4e1a\u4e2d\u5c3d\u7528\u6240\u5b66\uff0c\u5e76\u4e50\u5728\u5176\u4e2d\u3002","title":"Todo"},{"location":"author-and-recommendation/todo/#1","text":"\u89c1\u56fe","title":"1 \u601d\u7ef4\u5bfc\u56fe"},{"location":"author-and-recommendation/todo/#2","text":"\u738b\u8bd7\u7fd4\uff08GitHub@ShixiangWang\uff09\uff0c2016 \u5e74\u6210\u90fd\u7535\u5b50\u79d1\u6280\u5927\u5b66\u672c\u79d1\u6bd5\u4e1a\uff0c\u5f00\u6e90\u7231\u597d\u8005\u4e0e\u5f00\u53d1\u8005\uff0c\u7b80\u4e66\u4e92\u8054\u7f51\u4f18\u79c0\u4f5c\u8005\u3002\u4ed6\u76ee\u524d\u4ece\u4e8b\u751f\u7269\u4fe1\u606f\u5b66\u5728\u80bf\u7624\u7cbe\u51c6\u533b\u7597\u65b9\u5411\u7684\u7814\u7a76\u5de5\u4f5c\uff0c\u5e76\u5728\u6570\u4e2a\u56fd\u9645\u77e5\u540d\u671f\u520a\u4e0a\u53d1\u8868 SCI \u8bba\u6587\u3002\u4ed6\u638c\u63e1 Python\u3001R\u3001Shell \u7b49\u591a\u95e8\u4e0e\u6570\u636e\u5904\u7406\u76f8\u5173\u7684\u7f16\u7a0b\u8bed\u8a00\u4ee5\u53ca\u5404\u7c7b\u6570\u636e\u5206\u6790\u548c\u7edf\u8ba1\u6280\u672f\uff0c\u5bf9\u6280\u672f\u77e5\u8bc6\u7684\u5206\u4eab\u548c\u4f20\u64ad\u5145\u6ee1\u70ed\u60c5\u3002","title":"2 \u4f5c\u8005\u7b80\u4ecb"},{"location":"author-and-recommendation/todo/#3","text":"\u4f5c\u4e3a 21 \u4e16\u7eaa\u6700\u6027\u611f\u7684\u804c\u4e1a\uff0c\u6570\u636e\u79d1\u5b66\u5bb6\u7684\u80cc\u540e\u9700\u8981\u8d85\u4e4e\u5e38\u4eba\u7684\u4ed8\u51fa\uff0c\u4ed6\u8981\u6784\u5efa\u4e1a\u52a1\u903b\u8f91\u601d\u7ef4\u3001\u4fee\u70bc\u6570\u7406\u7edf\u8ba1\u5185\u529f\u3001\u6253\u9020\u7f16\u7a0b\u5229\u5668\uff0c\u7136\u540e\u4e0d\u65ad\u5b9e\u8df5\u548c\u66f4\u65b0\u6280\u80fd\u3002\u6211\u5728\u672c\u4e66\u4e2d\u4ee5\u7c97\u6d45\u7684\u5185\u5bb9\u5c1d\u8bd5\u5f15\u5bfc\u5404\u4f4d\u521d\u5b66\u8005\u53bb\u63a5\u89e6\u3001\u4e86\u89e3\u3001\u5b66\u4e60\u548c\u638c\u63e1\u8fd9\u4e2a\u804c\u4e1a\u4e2d\u4e00\u4e9b\u57fa\u7840\u7684\u6982\u5ff5\u548c\u6280\u80fd\u3002\u5728\u5b66\u4e60\u672c\u4e66\u5185\u5bb9\u4e4b\u540e\uff0c\u6211\u5e0c\u671b\u5404\u4f4d\u8bfb\u8005\u4e0d\u8981\u754f\u60e7\u63a5\u4e0b\u6765\u8fce\u95e8\u800c\u4e0a\u7684\u6311\u6218\uff0c\u80fd\u591f\u6562\u4e8e\u548c\u52c7\u4e8e\u5728\u81ea\u5df1\u5b9e\u9645\u7684\u5de5\u4f5c\u573a\u666f\u4e2d\u601d\u8003\u548c\u5e94\u7528\u6240\u5b66\uff0c\u4e0d\u65ad\u5730\u5b66\u4e60\u548c\u8fdb\u9636\u3002\u5728\u9047\u5230\u56f0\u96be\u65f6\uff0c\u8bfb\u8005\u5e94\u5f53\u5e38\u5e38\u901a\u8fc7\u641c\u7d22\u5f15\u64ce\u52a8\u624b\u67e5\u627e\u548c\u89e3\u51b3\u95ee\u9898\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u4e13\u4e1a\u95ee\u7b54\u793e\u533a\u548c\u8bba\u575b\u4e0e\u4ed6\u4eba\u8fdb\u884c\u4ea4\u6d41\u8ba8\u8bba\u3002\u5b66\u4e60\u4e4b\u8def\u662f\u5feb\u4e50\u7684\uff0c\u4e5f\u662f\u75db\u82e6\u7684\uff0c\u795d\u613f\u5404\u4f4d\u8bfb\u8005\u80fd\u5728\u8fd9\u4e2a\u6027\u611f\u7684\u804c\u4e1a\u4e2d\u5c3d\u7528\u6240\u5b66\uff0c\u5e76\u4e50\u5728\u5176\u4e2d\u3002","title":"3 \u5bf9\u8bfb\u8005\u8bf4\u7684\u8bdd"}]}