```
这是第一段话

这是第二段话
```
```
这是第一句话。
这是第二句话。
```
```
# 这是一级标题

## 这是二级标题

### 这是三级标题

#### 这是四级标题

##### 这是五级标题

###### 这是六级标题
```
```
> 这里有3段引用，前面2段引用是在一起的，最后一段引用是独立的。
>
> 这是第2段引用。


> 这是第3段引用。
```
```
## 无序列表

* 石头
* 剪刀
* 布

## 有序列表

1. 石头
2. 剪刀
3. 布
```
```
## 作业完成情况

- [ ] 语文
- [x] 数学
- [ ] 物理
- [ ] 英语
- [x] 化学
```
```
def test():
    print("Hello World!")
```
```python
def test():
    print("语法高亮")
```
```
$$
\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}
\mathbf{i} & \mathbf{j} & \mathbf{k} \\
\frac{\partial X}{\partial u} &  \frac{\partial Y}{\partial u} & 0 \\
\frac{\partial X}{\partial v} &  \frac{\partial Y}{\partial v} & 0 \\
\end{vmatrix}
$$
```
```
| 标题1   | 标题2 |
| -------| ----- |
| Cell1  | Cell3 |
| Cell2  | Cell4 |
```
```
| 左对齐  | 中心对齐 | 右对齐 |
| :----- |:-------:| -----:|
| c1     | 这一列   | $16 |
| c2     | 是中心   | $120 |
| c3     | 对齐     | $11 |
```
```
你可以像这样添加脚注[^footnote]。

[^footnote]: 这是一段脚注文字
```
```
[这个链接](https://baidu.com)会跳转到百度
```
```
[这个链接][id]会跳转到百度

[id]: https://baidu.com
```
```
<https://baidu.com>

<xxx@163.com>
```
```
![说明文字](图片路径.jpg)
![说明文字](图片路径.png)

例如：
![](https://www.baidu.com/img/dong_96c3c31cae66e61ed02644d732fcd5f8.gif)
```
```
*使用星号*

_使用下划线_
```
```
**使用2个星号**

__使用2个下划线__
```
```
~~这是一段被删除线标记的文字~~
```
```
<u>这段文字会被下划线标记</u>
```
```
H~2~O

X^2^
```
```
`x = y = 3`
```
```
$y = a \times x + b$
```
```python
import numpy as np
import matplotlib.pyplot as plt
from scipy.io import wavfile
```
```python
rate_h, hstrain= wavfile.read(r"H1_Strain.wav","rb")
rate_l, lstrain= wavfile.read(r"L1_Strain.wav","rb")
reftime, ref_H1 = np.genfromtxt('wf_template.txt').transpose()

# 这里我们使用频率的倒数来确定波的周期
htime_interval = 1/rate_h
ltime_interval = 1/rate_l
```
```python
# 使用 print() 函数对各项输入的数据进行简单的查看
print(rate_h, hstrain)
print(rate_l, lstrain)
print(reftime, ref_H1)
```
```python
# 设定在 Notebook 中使用绘图
%matplotlib inline
```
```python
htime_len = hstrain.shape[0]/rate_h
htime = np.arange(-htime_len/2, htime_len/2 , htime_interval)
plt.subplot(2,2,1)
plt.plot(htime, hstrain, 'y')
plt.xlabel('Time (seconds)')
plt.ylabel('H1 Strain')
plt.title('H1 Strain')

ltime_len = lstrain.shape[0]/rate_l
ltime = np.arange(-ltime_len/2, ltime_len/2 , ltime_interval)
plt.subplot(2,2,2)
plt.plot(ltime, lstrain, 'g')
plt.xlabel('Time (seconds)')
plt.ylabel('L1 Strain')
plt.title('L1 Strain')

plt.subplot(2, 1, 2)
plt.plot(reftime, ref_H1)
plt.xlabel('Time (seconds)')
plt.ylabel('Template Strain')
plt.title('Template')
plt.tight_layout()
```
