```
Python 3.7.0 (default, Jun 28 2018, 07:39:16)
[Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>>
```
```
Python 3.7.0 (default, Jun 28 2018, 07:39:16)
Type 'copyright', 'credits' or 'license' for more information
IPython 6.5.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]:
```
```python
print('你好啊，世界！)
print('你好啊，世界')!
```
```python
3 + 2             # 加法
3 / 2             # 浮点数除法
3 // 2            # 整除
3 * 2             # 乘法
3 ** 2            # 指数（幂）
3 % 2             # 求余
abs(a)            # 绝对值
```
```python
In [3]: 1 + 1
Out[3]: 2

In [4]: 1 - 1
Out[4]: 0

In [5]: 1 * 1
Out[5]: 1

In [6]: 1 / 1
Out[6]: 1.0
```
```python
In [11]: 70 / 1.82 ** 2
Out[11]: 21.132713440405748
```
```python
In [12]: 70 / 1.82 ** 2  # 计算我的 BMI
Out[12]: 21.132713440405748
```
```python
In [13]: # 计算我的 BMI
In [14]: 70 / 1.82 ** 2
Out[14]: 21.132713440405748
In [15]: # 计算我的 BMI  70 / 1.82 ** 2
```
```python
In [16]: 计算我的 BMI 指数 70 / 1.82 ** 2
  File "<ipython-input-16-b7d966d13e1f>", line 1
    计算我的 BMI 指数 70 / 1.82 ** 2
                 ^
SyntaxError: invalid syntax
```
```python
In [9]: # 与朋友比较 BMI 指数
In [10]: 70 / 1.82 ** 2
Out[10]: 21.132713440405748

In [11]:  48 / 1.64 ** 2
Out[11]: 17.846519928613922

In [12]: 70 / 1.82 ** 2 - 48 / 1.64 ** 2
Out[12]: 3.2861935117918257
```
```python
In [13]: height = 1.82

In [14]: weight = 70
```
```python
In [15]: print(height)
Out[15]: 1.82

In [16]: print(weight)
Out[16]: 70

In [17]: height
Out[17]: 1.82

In [18]: weight
Out[18]: 70
```
```python
In [19]: myBMI = 70 / 1.82 ** 2      # 我的 BMI
In [20]: friendBMI = 48 / 1.64 ** 2  # 朋友的 BMI
In [21]: myBMI - friendBMI           # 我与朋友的 BMI 值的差异
Out[21]: 3.2861935117918257
```
```python
In [22]: __myName = "ShixiangWang"

In [23]: my-name = "ShixiangWang"
  File "<ipython-input-23-1b106abe1308>", line 1
    my-name = "ShixiangWang"
                            ^
SyntaxError: can't assign to operator
```
    ```python
    '''This is a multi-line string. This is the first line.
    This is the second line.
    "What's your name?," I asked.
    He said "Bond, James Bond."
    '''
    ```
```python
In [26]: 'What's your name?'  # 错误的表示方法
  File "<ipython-input-26-dff8324f3597>", line 1
    'What's your name?'  # 错误的表示方法
          ^
SyntaxError: invalid syntax

In [27]: 'What\'s your name?'  # 使用转义\对字符串中的英文单引号进行转义
Out[27]: "What's your name?"
In [28]: "What\'s your name?"  # 将英文单引号嵌入英文双引号中
Out[28]: "What's your name?"
```
```python
"This is the first sentence.\
This is the second sentence."
```
```python
In [35]: "Newlines are indicated by \n"
Out[35]: 'Newlines are indicated by \n'

In [36]: r"Newlines are indicated by \n"
Out[36]: 'Newlines are indicated by \\n'

In [37]: print(r"Newlines are indicated by \n")
Out[37]: Newlines are indicated by \n

In [38]: print("Newlines are indicated by \n")
Out[38]: Newlines are indicated by
# 此处输出一个空行
```
```python
In [45]: type1 = 1
In [46]: type2 = 1.0
In [47]: type3 = "1"
In [48]: type4 = True
```
```python
In [49]: type(type1)
Out[49]: int
In [50]: type(type2)
Out[50]: float
In [51]: type(type3)
Out[51]: str
In [52]: type(type4)
Out[52]: bool
```
```python
In [2]: '1' + '1'
Out[2]: '11'
```
```python
In [3]: '1' - '1'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-3-3f89fba82f3e> in <module>()
----> 1 '1' - '1'

TypeError: unsupported operand type(s) for -: 'str' and 'str'
```
```python
In [8]: type('1')
Out[8]: str

In [9]: type(int('1'))
Out[9]: int
```
```python
In [10]: "我的语文和数学成绩之和是 " + 199
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-10-17fa10d93550> in <module>()
----> 1 "我的语文和数学成绩之和是 " + 199

TypeError: must be str, not int

In [11]: "我的语文和数学成绩之和是 " + str(199)
Out[11]: '我的语文和数学成绩之和是 199'
```
```python
9 + 2 # 加
9 - 2 # 减
9 * 2 # 乘
9 / 2 # 除（浮点输出）
9 //2 # 整除
9 % 2 # 求余
9 **2 # 幂
```
```python
'这是一个' + '字符串' # 字符串连接
'这是一个字符串' * 5  # 字符串重复
```
```python
5 == 4  # 等于
5 > 4   # 大于
5 < 4   # 小于
5 != 4  # 不等于
5 >= 4  # 大于或等于
5 <= 4  # 小于或等于
```
```python
True and True   # 逻辑“与”
True or False   # 逻辑“或”
not False       # 逻辑“非”
```
